the generated formulas used by the solvers



-- iteration 1 --
(declare-fun f0 (Float64 Float16 Float64 Float64 Float64 Float128 Float128) Float16)
(declare-fun f1 (Float64 Float16 Float64 Float128 Float64 Float32 Float64 Float32 Float16 Float128) Float128)
(declare-fun f2 (Float128 Float64 Float32 Float16 Float32 Float32 Float16 Float32 Float32 Float32) Float64)
(declare-fun f3 (Float16 Float64 Float32 Float128 Float16 Float32) Float16)
(declare-fun f4 (Float32 Float32 Float64 Float16) Float128)
(declare-fun f5 (Float32 Float128) Float128)
(declare-fun f6 (Float16 Float32 Float16 Float128 Float64 Float32) Float32)
(declare-fun f7 (Float64 Float64 Float16 Float64 Float32 Float16 Float16 Float32 Float64) Float64)
(declare-fun f8 (Float128 Float64 Float64) Float16)
(declare-fun f9 (Float128 Float16 Float16 Float16 Float32 Float128) Float32)
(declare-fun f10 (Float64 Float128) Float32)
(declare-fun f11 (Float128 Float16 Float32 Float64 Float16 Float32) Float16)
(declare-fun f12 (Float16 Float16 Float64 Float64) Float64)
(declare-fun f13 (Float32 Float128 Float128 Float64 Float128 Float128 Float128 Float128) Float16)
(declare-fun f14 (Float16 Float32 Float16 Float16 Float64 Float32 Float128 Float128) Float16)
(declare-fun f15 (Float16 Float32 Float32 Float16 Float64 Float32 Float128 Float32 Float64) Float32)
(declare-fun f16 (Float128 Float32 Float64 Float16 Float128 Float128 Float32 Float128) Float16)
(declare-fun f17 (Float64 Float64) Float64)
(declare-fun f18 (Float32 Float32 Float64 Float64 Float32 Float128 Float16 Float128 Float64) Float32)
(declare-fun f19 (Float64 Float128 Float128 Float128 Float16) Float16)
(declare-fun f20 (Float16 Float128 Float128 Float32 Float16 Float64) Float128)
(declare-fun f21 (Float128 Float32) Float64)
(declare-fun f22 (Float32 Float32) Float16)
(declare-fun f23 (Float128 Float64 Float16 Float128 Float128 Float32) Float32)
(declare-fun f24 (Float16 Float128) Float32)
(declare-fun f25 (Float32 Float128 Float32) Float32)
(declare-fun f26 (Float32 Float16 Float128 Float128 Float64 Float64) Float64)
(declare-fun f27 (Float128 Float16 Float16 Float64 Float16 Float64 Float64 Float64) Float128)
(declare-fun f28 (Float16 Float16 Float64) Float32)
(declare-fun f29 (Float16 Float64 Float64 Float32 Float128 Float16 Float128 Float32 Float128) Float64)
(declare-fun f30 (Float32 Float128 Float64 Float16 Float16 Float128 Float16 Float128 Float16 Float64) Float16)
(declare-fun f31 (Float64 Float32 Float64 Float32 Float16 Float32 Float32) Float32)
(declare-fun f32 (Float16 Float128 Float32 Float128 Float16 Float128 Float64 Float128 Float128) Float32)
(declare-fun f33 (Float32 Float128 Float16 Float32 Float32 Float64 Float16 Float128 Float64 Float64) Float64)
(declare-fun f34 (Float16 Float128 Float128 Float32 Float16 Float16 Float64) Float64)
(declare-fun f35 (Float16 Float32 Float64) Float16)
(declare-fun f36 (Float64 Float16 Float128 Float32) Float32)
(declare-fun f37 (Float64 Float64 Float64 Float64 Float32 Float32 Float32) Float16)
(declare-fun f38 (Float128 Float64 Float64 Float64 Float128 Float16) Float64)
(declare-fun f39 (Float16 Float64 Float128 Float32 Float32 Float64 Float32 Float64 Float64) Float32)
(declare-fun f40 (Float128 Float16 Float32 Float128 Float32 Float128 Float64) Float32)
(declare-fun f41 (Float64 Float16 Float128 Float16 Float32 Float128 Float128 Float32 Float16) Float128)
(declare-fun f42 (Float64) Float32)
(declare-fun f43 (Float32 Float16 Float16 Float128 Float32 Float64) Float64)
(declare-fun f44 (Float16 Float32 Float32 Float128 Float128 Float16 Float64 Float32 Float128) Float32)
(declare-fun f45 (Float16 Float16 Float16 Float128 Float128 Float32) Float32)
(declare-fun f46 (Float64 Float128 Float64 Float64 Float32 Float16 Float64 Float16) Float32)
(declare-fun f47 (Float64 Float16 Float32 Float64 Float128 Float64 Float16 Float16 Float64) Float16)
(declare-fun f48 (Float32 Float16 Float64 Float64 Float64 Float64 Float128 Float64) Float64)
(declare-fun f49 (Float128 Float32 Float16 Float128 Float128 Float32 Float64) Float64)
(declare-fun p0 (Float32 Float32) Bool)
(declare-fun p1 (Float16 Float64 Float64 Float32 Float16 Float64 Float128 Float64 Float64) Bool)
(declare-fun p2 (Float32 Float32 Float16) Bool)
(declare-fun p3 (Float64 Float32 Float64 Float128 Float128 Float16) Bool)
(declare-fun p4 (Float64 Float64 Float32 Float32 Float64 Float128 Float64 Float128 Float64 Float128) Bool)
(declare-fun p5 (Float64 Float64 Float64 Float32 Float32 Float16 Float32 Float128 Float16 Float32) Bool)
(declare-fun p6 (Float16 Float64 Float128 Float16 Float128 Float64 Float32) Bool)
(declare-fun p7 (Float128 Float64 Float128 Float64 Float64 Float64) Bool)
(declare-fun p8 (Float64 Float32 Float64) Bool)
(declare-fun p9 (Float16 Float128 Float64 Float64 Float128 Float64 Float32 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float128)
(declare-const ?float62 Float16)
(declare-const ?float63 Float64)
(declare-const ?float64 Float16)
(declare-const ?float65 Float64)
(declare-const ?float66 Float64)
(declare-const ?float67 Float16)
(declare-const ?float68 Float128)
(declare-const ?float69 Float16)
(declare-const ?float70 Float128)
(declare-const ?float71 Float16)
(declare-const ?float72 Float16)
(declare-const ?float73 Float32)
(declare-const ?float74 Float16)
(declare-const ?float75 Float64)
(declare-const ?float76 Float64)
(declare-const ?float77 Float64)
(declare-const ?float78 Float128)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b1 #b11111001 #b00100111100011100000011)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float128)
(assert (= ?float84 (fp #b0 #b010101010011001 #b0110001110110000110010110011010011000111011100001010011011001001011001010011010100111011010001100001000100001000)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b0 #b100000110000010 #b0011001000010010011110000110101000101111100001100001111100010111101001100111011011100100011000010001000001001101)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float128)
(assert (= ?float90 (fp #b1 #b000001100011101 #b0011010100010001010010100111101001101110111000110110001001101100101001011110101110010011011011100001001101011100)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b1 #b00001 #b0000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.sqrt RTN ?float98)))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.sqrt RTZ ?float98)))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.roundToIntegral RTP ?float81)))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.max ?float93 ?float66)))
(declare-const ?float104 Float128)
(assert (= ?float104 (f1 ((_ to_fp 11 53) RTN ?float69) ?float67 ((_ to_fp 11 53) RNE ?float72) ((_ to_fp 15 113) RTP ?float91) ((_ to_fp 11 53) RTN ?float99) ((_ to_fp 8 24) RTP ?float82) ((_ to_fp 11 53) RTZ ?float94) ((_ to_fp 8 24) RTZ ?float76) ((_ to_fp 5 11) RTP ?float75) ((_ to_fp 15 113) RTZ ?float72))))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.sqrt RTZ ?float98)))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.sub RNE ?float89 ?float65)))
(declare-const ?float107 Float16)
(assert (= ?float107 (fp.sub RNE ?float62 ((_ to_fp 5 11) RTZ ?float91))))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.div RTP ?float90 ((_ to_fp 15 113) RTZ ?float75))))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.sqrt RTP ?float82)))
(declare-const ?float110 Float16)
(assert (= ?float110 (f35 ((_ to_fp 5 11) RTP ?float109) ((_ to_fp 8 24) RTN ?float68) ?float97)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.sub RTZ ?float62 ((_ to_fp 5 11) RNE ?float93))))
(declare-const ?float112 Float16)
(assert (= ?float112 (f0 ((_ to_fp 11 53) RNE ?float108) ((_ to_fp 5 11) RTZ ?float106) ((_ to_fp 11 53) RTN ?float102) ((_ to_fp 11 53) RTZ ?float80) ((_ to_fp 11 53) RTP ?float71) ((_ to_fp 15 113) RTN ?float75) ((_ to_fp 15 113) RNE ?float89))))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.mul RTP ((_ to_fp 11 53) RTN ?float84) ?float63)))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.abs ?float74)))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.neg ?float63)))
(declare-const ?float116 Float64)
(assert (= ?float116 (f26 ((_ to_fp 8 24) RTZ ?float109) ((_ to_fp 5 11) RNE ?float66) ((_ to_fp 15 113) RNE ?float110) ?float61 ?float66 ?float83)))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.sub RNE ((_ to_fp 15 113) RNE ?float76) ?float61)))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.neg ?float74)))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.sub RTP ((_ to_fp 5 11) RTN ?float117) ?float95)))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.add RTZ ?float102 ((_ to_fp 8 24) RTZ ?float99))))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.min ?float84 ((_ to_fp 15 113) RTP ?float75))))
(declare-const ?float122 Float64)
(assert (= ?float122 (fp.div RNE ((_ to_fp 11 53) RTZ ?float71) ?float76)))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.roundToIntegral RTN ?float75)))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.add RTZ ((_ to_fp 11 53) RTP ?float68) ?float116)))
(declare-const ?float125 Float16)
(assert (= ?float125 (fp.mul RTZ ?float111 ((_ to_fp 5 11) RTZ ?float77))))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.roundToIntegral RTN ?float105)))
(declare-const ?float127 Float64)
(assert (= ?float127 (f48 ((_ to_fp 8 24) RTZ ?float74) ?float95 ((_ to_fp 11 53) RNE ?float80) ((_ to_fp 11 53) RTN ?float121) ((_ to_fp 11 53) RNE ?float94) ((_ to_fp 11 53) RTZ ?float81) ?float86 ((_ to_fp 11 53) RTP ?float107))))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.max ?float96 ((_ to_fp 15 113) RNE ?float82))))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.add RTP ((_ to_fp 11 53) RTP ?float79) ?float123)))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.mul RTP ((_ to_fp 15 113) RTP ?float75) ?float84)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.min ?float124 ?float124)))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.min ?float92 ((_ to_fp 5 11) RTZ ?float79))))
(declare-const ?float133 Float64)
(assert (= ?float133 (f21 ?float70 ((_ to_fp 8 24) RNE ?float86))))
(declare-const ?float134 Float32)
(assert (= ?float134 (f18 ((_ to_fp 8 24) RNE ?float69) ((_ to_fp 8 24) RTZ ?float82) ?float75 ((_ to_fp 11 53) RTN ?float79) ((_ to_fp 8 24) RTN ?float66) ((_ to_fp 15 113) RTN ?float73) ((_ to_fp 5 11) RTP ?float87) ((_ to_fp 15 113) RTP ?float116) ((_ to_fp 11 53) RNE ?float132))))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.neg ?float98)))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.neg ?float115)))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.sub RTZ ?float99 ((_ to_fp 5 11) RTN ?float133))))
(declare-const ?float138 Float128)
(assert (= ?float138 (fp.mul RTN ?float104 ((_ to_fp 15 113) RTN ?float131))))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.abs ?float93)))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.sqrt RTP ?float98)))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.roundToIntegral RNE ?float110)))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.max ?float80 ((_ to_fp 5 11) RTP ?float60))))
(declare-const ?float143 Float32)
(assert (= ?float143 (f39 ?float118 ?float115 ((_ to_fp 15 113) RTZ ?float65) ((_ to_fp 8 24) RTN ?float71) ((_ to_fp 8 24) RTZ ?float118) ((_ to_fp 11 53) RTN ?float61) ?float102 ((_ to_fp 11 53) RTZ ?float78) ((_ to_fp 11 53) RTN ?float114))))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.div RTP ?float79 ((_ to_fp 8 24) RTP ?float123))))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.min ((_ to_fp 11 53) RTN ?float102) ?float139)))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.neg ?float143)))
(declare-const ?float147 Float64)
(assert (= ?float147 (fp.max ?float75 ((_ to_fp 11 53) RNE ?float104))))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.min ?float80 ((_ to_fp 5 11) RNE ?float126))))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.div RTZ ((_ to_fp 15 113) RNE ?float92) ?float138)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p4 ?float113 ((_ to_fp 11 53) RTP ?float62) ((_ to_fp 8 24) RTP ?float127) ((_ to_fp 8 24) RTN ?float66) ((_ to_fp 11 53) RTN ?float88) ((_ to_fp 15 113) RTN ?float116) ((_ to_fp 11 53) RTP ?float137) ((_ to_fp 15 113) RTN ?float141) ?float133 ((_ to_fp 15 113) RNE ?float87))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.lt ?float75 ?float145)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNormal ?float102)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (p9 ((_ to_fp 5 11) RTP ?float122) ((_ to_fp 15 113) RTN ?float109) ?float66 ((_ to_fp 11 53) RTP ?float99) ((_ to_fp 15 113) RTN ?float95) ((_ to_fp 11 53) RTP ?float144) ?float143 ((_ to_fp 8 24) RTN ?float94))))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p2 ((_ to_fp 8 24) RTN ?float128) ((_ to_fp 8 24) RTP ?float84) ((_ to_fp 5 11) RTN ?float140))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p1 ((_ to_fp 5 11) RTZ ?float89) ((_ to_fp 11 53) RTN ?float135) ((_ to_fp 11 53) RTN ?float72) ((_ to_fp 8 24) RNE ?float128) ((_ to_fp 5 11) RTZ ?float129) ((_ to_fp 11 53) RTN ?float71) ?float61 ((_ to_fp 11 53) RTP ?float119) ((_ to_fp 11 53) RTZ ?float135))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.gt ?float105 ((_ to_fp 8 24) RTP ?float83))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNaN ?float143)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.lt ?float94 ((_ to_fp 15 113) RTN ?float89))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.geq ?float105 ((_ to_fp 8 24) RTN ?float123))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.leq ?float80 ((_ to_fp 5 11) RTZ ?float128))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (p6 ((_ to_fp 5 11) RTZ ?float105) ((_ to_fp 11 53) RTN ?float61) ?float117 ((_ to_fp 5 11) RTZ ?float89) ((_ to_fp 15 113) RTN ?float145) ((_ to_fp 11 53) RTZ ?float101) ((_ to_fp 8 24) RTN ?float68))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.gt ?float141 ((_ to_fp 5 11) RTN ?float135))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.eq ?float126 ?float87)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isSubnormal ?float112)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p2 ((_ to_fp 8 24) RNE ?float83) ((_ to_fp 8 24) RTP ?float110) ((_ to_fp 5 11) RTZ ?float140))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.gt ?float66 ?float82)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p5 ?float77 ((_ to_fp 11 53) RTN ?float81) ((_ to_fp 11 53) RTN ?float64) ((_ to_fp 8 24) RTP ?float145) ((_ to_fp 8 24) RTZ ?float145) ?float141 ?float91 ((_ to_fp 15 113) RTN ?float66) ?float95 ((_ to_fp 8 24) RTZ ?float68))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (p4 ((_ to_fp 11 53) RTN ?float128) ?float123 ?float126 ((_ to_fp 8 24) RTZ ?float85) ((_ to_fp 11 53) RTZ ?float118) ((_ to_fp 15 113) RTZ ?float115) ((_ to_fp 11 53) RTP ?float87) ((_ to_fp 15 113) RTZ ?float100) ((_ to_fp 11 53) RTP ?float110) ?float61)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p4 ((_ to_fp 11 53) RTP ?float119) ?float133 ((_ to_fp 8 24) RNE ?float70) ?float144 ((_ to_fp 11 53) RTN ?float67) ((_ to_fp 15 113) RNE ?float79) ((_ to_fp 11 53) RTZ ?float140) ((_ to_fp 15 113) RTN ?float115) ?float89 ((_ to_fp 15 113) RTN ?float63))))
; FINAL ASSERT
(assert (and (or (and ?bool158 (or ?bool159 (and (or (and ?bool164)) (or ?bool152)))) (and ?bool154 (or (or (and ?bool158 (or ?bool162))))) (or ?bool162 (and (and ?bool162)))) ?bool154))
(check-sat)


-- iteration 2 --
(declare-fun f0 (Float64 Float128 Float64) Float16)
(declare-fun f1 (Float128 Float16 Float64 Float16 Float32 Float16) Float32)
(declare-fun f2 (Float32 Float32 Float16 Float32 Float32) Float128)
(declare-fun f3 (Float16 Float128 Float16 Float128 Float16 Float128) Float64)
(declare-fun f4 (Float128 Float64 Float16 Float16 Float128 Float128 Float32) Float128)
(declare-fun f5 (Float64 Float32 Float16 Float32 Float128 Float16 Float64) Float128)
(declare-fun f6 (Float32 Float128 Float16 Float128 Float64 Float32 Float128) Float64)
(declare-fun f7 (Float128 Float128 Float128 Float16) Float16)
(declare-fun f8 (Float64 Float64 Float128 Float64 Float64 Float64 Float16 Float32 Float32 Float64) Float128)
(declare-fun f9 (Float64 Float128 Float128 Float128 Float16 Float128 Float16 Float64 Float64) Float128)
(declare-fun f10 (Float128) Float16)
(declare-fun f11 (Float32 Float128) Float16)
(declare-fun f12 (Float128 Float16 Float64) Float32)
(declare-fun f13 (Float16 Float16 Float16) Float128)
(declare-fun f14 (Float32 Float64 Float16 Float16 Float32 Float16 Float16 Float64 Float64) Float32)
(declare-fun f15 (Float128 Float32 Float128) Float32)
(declare-fun f16 (Float16 Float128 Float32 Float16 Float16 Float32 Float32) Float128)
(declare-fun f17 (Float128 Float32 Float128 Float64 Float16 Float32 Float128 Float16 Float16) Float128)
(declare-fun f18 (Float128 Float16) Float16)
(declare-fun f19 (Float32 Float16 Float64) Float16)
(declare-fun f20 (Float64 Float64 Float32 Float32 Float128 Float32 Float64 Float64 Float64) Float128)
(declare-fun f21 (Float16 Float32 Float32 Float64 Float16 Float128 Float128 Float32 Float32 Float128) Float32)
(declare-fun f22 (Float16 Float32 Float32 Float64 Float128 Float32 Float128) Float32)
(declare-fun f23 (Float128 Float16 Float64 Float64 Float16 Float128 Float128 Float32 Float16) Float128)
(declare-fun f24 (Float128 Float128 Float16 Float128 Float32 Float16 Float32 Float32 Float32) Float64)
(declare-fun f25 (Float64 Float64 Float32 Float64 Float32 Float128 Float16 Float128 Float64) Float64)
(declare-fun f26 (Float128 Float32 Float16) Float32)
(declare-fun f27 (Float64 Float64 Float16 Float32 Float16) Float16)
(declare-fun f28 (Float128 Float64 Float16 Float64 Float16 Float32 Float32 Float128 Float128) Float64)
(declare-fun f29 (Float32 Float16) Float64)
(declare-fun f30 (Float16 Float32 Float16) Float16)
(declare-fun f31 (Float16 Float32 Float32 Float128 Float128 Float128 Float128 Float64 Float16) Float64)
(declare-fun f32 (Float64 Float16 Float128) Float128)
(declare-fun f33 (Float16 Float64) Float64)
(declare-fun f34 (Float16) Float16)
(declare-fun f35 (Float32 Float16) Float64)
(declare-fun f36 (Float16 Float32 Float32 Float128 Float128 Float32 Float16 Float128 Float64 Float64) Float128)
(declare-fun f37 (Float32 Float16) Float128)
(declare-fun f38 (Float32 Float64 Float128 Float16 Float32 Float16 Float128) Float16)
(declare-fun f39 (Float128 Float128 Float64 Float64 Float32 Float64) Float64)
(declare-fun f40 (Float64 Float32 Float16 Float64 Float64) Float16)
(declare-fun f41 (Float32 Float64 Float32 Float128 Float64 Float64 Float64 Float128 Float16) Float16)
(declare-fun f42 (Float64 Float64 Float16 Float32 Float16 Float64 Float64 Float32) Float32)
(declare-fun f43 (Float128 Float16 Float64 Float128 Float16 Float128 Float32 Float64 Float16) Float32)
(declare-fun f44 (Float16 Float64 Float16 Float16 Float32 Float64 Float16 Float32 Float128) Float16)
(declare-fun f45 (Float16 Float128) Float64)
(declare-fun f46 (Float64 Float128 Float64 Float32 Float32 Float128) Float16)
(declare-fun f47 (Float16) Float16)
(declare-fun f48 (Float16) Float16)
(declare-fun f49 (Float64 Float16 Float16 Float32) Float64)
(declare-fun p0 (Float64 Float32 Float64) Bool)
(declare-fun p1 (Float16 Float32 Float32 Float32 Float16 Float64 Float128 Float64 Float128) Bool)
(declare-fun p2 (Float16) Bool)
(declare-fun p3 (Float64 Float16) Bool)
(declare-fun p4 (Float64 Float32 Float32 Float64 Float32 Float64 Float128) Bool)
(declare-fun p5 (Float16 Float16) Bool)
(declare-fun p6 (Float64 Float16 Float16 Float128) Bool)
(declare-fun p7 (Float64 Float32 Float32 Float128) Bool)
(declare-fun p8 (Float128 Float64 Float16 Float128 Float128 Float64 Float32 Float128) Bool)
(declare-fun p9 (Float16 Float64 Float16 Float64 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float16)
(declare-const ?float62 Float16)
(declare-const ?float63 Float64)
(declare-const ?float64 Float16)
(declare-const ?float65 Float32)
(declare-const ?float66 Float64)
(declare-const ?float67 Float16)
(declare-const ?float68 Float16)
(declare-const ?float69 Float16)
(declare-const ?float70 Float32)
(declare-const ?float71 Float16)
(declare-const ?float72 Float64)
(declare-const ?float73 Float64)
(declare-const ?float74 Float64)
(declare-const ?float75 Float64)
(declare-const ?float76 Float32)
(declare-const ?float77 Float32)
(declare-const ?float78 Float16)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b1 #b01110 #b0001111100)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b1 #b101011110010100 #b1100000100010011110110010011010100010110011000000100111110000111101011111111001000101110001000010110111011110100)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b1 #b10101 #b0010101011)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b1 #b00000000 #b00000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (f32 ?float66 ((_ to_fp 5 11) RTP ?float80) ((_ to_fp 15 113) RTZ ?float85))))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.roundToIntegral RNE ?float100)))
(declare-const ?float102 Float16)
(assert (= ?float102 (f41 ((_ to_fp 8 24) RTZ ?float73) ?float73 ((_ to_fp 8 24) RTP ?float66) ((_ to_fp 15 113) RTN ?float92) ?float95 ((_ to_fp 11 53) RTP ?float64) ((_ to_fp 11 53) RTP ?float86) ((_ to_fp 15 113) RNE ?float62) ?float96)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.sub RNE ?float78 ?float102)))
(declare-const ?float104 Float16)
(assert (= ?float104 (f41 ((_ to_fp 8 24) RTZ ?float89) ?float60 ?float99 ((_ to_fp 15 113) RTP ?float91) ((_ to_fp 11 53) RNE ?float100) ((_ to_fp 11 53) RTN ?float71) ((_ to_fp 11 53) RTP ?float62) ((_ to_fp 15 113) RTZ ?float71) ?float61)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.sub RNE ((_ to_fp 11 53) RTZ ?float102) ?float91)))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.neg ?float105)))
(declare-const ?float107 Float16)
(assert (= ?float107 (f40 ((_ to_fp 11 53) RTZ ?float96) ((_ to_fp 8 24) RTP ?float82) ?float71 ((_ to_fp 11 53) RTP ?float86) ?float95)))
(declare-const ?float108 Float16)
(assert (= ?float108 (fp.sub RTP ?float92 ?float98)))
(declare-const ?float109 Float128)
(assert (= ?float109 (f4 ((_ to_fp 15 113) RTP ?float71) ((_ to_fp 11 53) RTZ ?float88) ((_ to_fp 5 11) RTZ ?float90) ((_ to_fp 5 11) RTP ?float60) ((_ to_fp 15 113) RTN ?float72) ((_ to_fp 15 113) RTZ ?float69) ((_ to_fp 8 24) RNE ?float62))))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.sqrt RNE ?float78)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.min ?float64 ?float87)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.roundToIntegral RNE ?float73)))
(declare-const ?float113 Float128)
(assert (= ?float113 (fp.min ((_ to_fp 15 113) RTP ?float66) ?float79)))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.sub RNE ?float67 ((_ to_fp 5 11) RTN ?float70))))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.abs ?float94)))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.div RTZ ?float69 ((_ to_fp 5 11) RTP ?float63))))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.sub RTN ((_ to_fp 5 11) RNE ?float83) ?float86)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.add RTP ((_ to_fp 8 24) RNE ?float87) ?float76)))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.min ((_ to_fp 5 11) RTZ ?float75) ?float87)))
(declare-const ?float120 Float16)
(assert (= ?float120 (fp.max ?float92 ((_ to_fp 5 11) RTZ ?float82))))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.min ?float89 ((_ to_fp 15 113) RTP ?float95))))
(declare-const ?float122 Float128)
(assert (= ?float122 (f17 ((_ to_fp 15 113) RTZ ?float91) ?float97 ((_ to_fp 15 113) RTN ?float73) ((_ to_fp 11 53) RNE ?float61) ((_ to_fp 5 11) RTP ?float73) ((_ to_fp 8 24) RTZ ?float107) ((_ to_fp 15 113) RTZ ?float97) ?float62 ((_ to_fp 5 11) RTN ?float81))))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.add RTZ ?float83 ((_ to_fp 11 53) RNE ?float97))))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.neg ?float77)))
(declare-const ?float125 Float64)
(assert (= ?float125 (f35 ((_ to_fp 8 24) RTZ ?float101) ?float111)))
(declare-const ?float126 Float16)
(assert (= ?float126 (fp.roundToIntegral RTP ?float107)))
(declare-const ?float127 Float128)
(assert (= ?float127 (fp.add RTP ?float89 ((_ to_fp 15 113) RTN ?float104))))
(declare-const ?float128 Float128)
(assert (= ?float128 (f16 ((_ to_fp 5 11) RTZ ?float79) ((_ to_fp 15 113) RTZ ?float104) ((_ to_fp 8 24) RTN ?float69) ?float114 ?float111 ((_ to_fp 8 24) RTP ?float92) ((_ to_fp 8 24) RTN ?float117))))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.add RTN ((_ to_fp 8 24) RNE ?float108) ?float97)))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.abs ?float67)))
(declare-const ?float131 Float128)
(assert (= ?float131 (fp.mul RTP ?float89 ?float82)))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.sub RNE ?float71 ((_ to_fp 5 11) RTN ?float63))))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.min ?float78 ((_ to_fp 5 11) RNE ?float115))))
(declare-const ?float134 Float64)
(assert (= ?float134 (fp.sqrt RNE ?float72)))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.sqrt RTP ?float82)))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.add RNE ((_ to_fp 15 113) RTZ ?float76) ?float79)))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.neg ?float74)))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.min ?float120 ((_ to_fp 5 11) RTP ?float131))))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.neg ?float85)))
(declare-const ?float140 Float16)
(assert (= ?float140 (f30 ?float130 ((_ to_fp 8 24) RTZ ?float101) ((_ to_fp 5 11) RTN ?float112))))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.sub RTP ?float113 ((_ to_fp 15 113) RNE ?float118))))
(declare-const ?float142 Float16)
(assert (= ?float142 (f27 ((_ to_fp 11 53) RNE ?float120) ((_ to_fp 11 53) RTP ?float69) ((_ to_fp 5 11) RTN ?float124) ((_ to_fp 8 24) RNE ?float106) ?float117)))
(declare-const ?float143 Float128)
(assert (= ?float143 (fp.neg ?float127)))
(declare-const ?float144 Float128)
(assert (= ?float144 (f2 ((_ to_fp 8 24) RTP ?float74) ((_ to_fp 8 24) RTZ ?float139) ?float102 ?float99 ((_ to_fp 8 24) RTP ?float94))))
(declare-const ?float145 Float16)
(assert (= ?float145 (fp.sqrt RTZ ?float107)))
(declare-const ?float146 Float16)
(assert (= ?float146 (f18 ((_ to_fp 15 113) RTN ?float71) ((_ to_fp 5 11) RTN ?float77))))
(declare-const ?float147 Float16)
(assert (= ?float147 (fp.mul RTP ?float104 ((_ to_fp 5 11) RTZ ?float99))))
(declare-const ?float148 Float128)
(assert (= ?float148 (fp.mul RTN ((_ to_fp 15 113) RNE ?float114) ?float94)))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.mul RTN ((_ to_fp 5 11) RNE ?float141) ?float147)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isNaN ?float115)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p0 ?float95 ((_ to_fp 8 24) RNE ?float93) ((_ to_fp 11 53) RTP ?float107))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isInfinite ?float111)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isPositive ?float126)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.leq ((_ to_fp 5 11) RTP ?float75) ?float111)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p2 ((_ to_fp 5 11) RTZ ?float136))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isPositive ?float85)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isSubnormal ?float114)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p4 ((_ to_fp 11 53) RTZ ?float100) ((_ to_fp 8 24) RTZ ?float147) ((_ to_fp 8 24) RTZ ?float111) ((_ to_fp 11 53) RTN ?float88) ((_ to_fp 8 24) RTN ?float105) ((_ to_fp 11 53) RTP ?float86) ((_ to_fp 15 113) RTN ?float103))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isPositive ?float85)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isInfinite ?float88)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNaN ?float106)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.lt ?float80 ((_ to_fp 11 53) RTN ?float100))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isSubnormal ?float135)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isNegative ?float107)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isNormal ?float143)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNormal ?float96)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNormal ?float142)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isSubnormal ?float71)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p0 ((_ to_fp 11 53) RTP ?float138) ((_ to_fp 8 24) RTP ?float109) ((_ to_fp 11 53) RTN ?float140))))
; FINAL ASSERT
(assert (or (and ?bool155 ?bool169 ?bool156) (and ?bool168) ?bool167))
(check-sat)


-- iteration 3 --
(declare-fun f0 (Float128 Float128 Float64 Float64 Float64 Float64 Float64 Float16) Float32)
(declare-fun f1 (Float128 Float32 Float32 Float16 Float32 Float64 Float32 Float16 Float64 Float64) Float64)
(declare-fun f2 (Float32 Float64 Float32 Float32 Float128 Float64 Float16) Float32)
(declare-fun f3 (Float16 Float128) Float64)
(declare-fun f4 (Float128 Float16 Float64 Float32) Float16)
(declare-fun f5 (Float128 Float32 Float128 Float64 Float128) Float64)
(declare-fun f6 (Float32 Float16) Float16)
(declare-fun f7 (Float64 Float32 Float128 Float64 Float16 Float64 Float32 Float16 Float32 Float64) Float128)
(declare-fun f8 (Float16 Float32 Float64 Float128 Float64) Float32)
(declare-fun f9 (Float64 Float16 Float32) Float64)
(declare-fun f10 (Float64 Float16 Float16 Float64 Float16 Float128) Float128)
(declare-fun f11 (Float128 Float16 Float64 Float16 Float16 Float16) Float64)
(declare-fun f12 (Float32 Float32 Float32 Float64 Float16 Float64 Float64 Float32) Float128)
(declare-fun f13 (Float64 Float128 Float64 Float128 Float32 Float64 Float64 Float128 Float128 Float128) Float128)
(declare-fun f14 (Float16 Float128) Float16)
(declare-fun f15 (Float16 Float64 Float128) Float16)
(declare-fun f16 (Float128) Float128)
(declare-fun f17 (Float32) Float64)
(declare-fun f18 (Float32 Float32 Float32 Float128 Float32 Float64 Float128 Float64 Float128 Float128) Float128)
(declare-fun f19 (Float16 Float128 Float64 Float128 Float128 Float64) Float64)
(declare-fun f20 (Float128 Float64 Float32 Float16 Float32) Float128)
(declare-fun f21 (Float64 Float16 Float128) Float32)
(declare-fun f22 (Float16 Float32) Float16)
(declare-fun f23 (Float64 Float128 Float32 Float32 Float64 Float16 Float128 Float128 Float32 Float64) Float64)
(declare-fun f24 (Float128 Float128 Float32) Float16)
(declare-fun f25 (Float128 Float64 Float16 Float32 Float16 Float128) Float32)
(declare-fun f26 (Float16 Float128 Float16 Float128 Float64 Float64 Float128 Float32 Float128) Float64)
(declare-fun f27 (Float16 Float128 Float32 Float128) Float16)
(declare-fun f28 (Float32 Float128 Float16 Float128 Float64) Float64)
(declare-fun f29 (Float16 Float64 Float16 Float128 Float32 Float64 Float16 Float32 Float64) Float32)
(declare-fun f30 (Float32 Float16 Float16 Float32 Float16 Float64) Float32)
(declare-fun f31 (Float128 Float32) Float16)
(declare-fun f32 (Float128 Float32 Float128 Float128 Float32) Float32)
(declare-fun f33 (Float32 Float32) Float128)
(declare-fun f34 (Float32 Float16 Float128 Float64 Float128) Float128)
(declare-fun f35 (Float64 Float32 Float32 Float32 Float128 Float128) Float128)
(declare-fun f36 (Float32 Float128 Float16 Float16 Float16 Float32 Float16 Float64 Float64 Float32) Float64)
(declare-fun f37 (Float64 Float32 Float16) Float32)
(declare-fun f38 (Float128 Float16 Float128 Float16 Float32 Float32 Float128 Float64) Float128)
(declare-fun f39 (Float32 Float128 Float128 Float128 Float128 Float32) Float128)
(declare-fun f40 (Float128 Float128 Float128 Float16 Float128 Float32 Float16 Float16 Float128 Float64) Float128)
(declare-fun f41 (Float32 Float32 Float64 Float32 Float16 Float128) Float128)
(declare-fun f42 (Float32 Float128 Float32 Float128 Float64 Float128 Float32 Float16) Float64)
(declare-fun f43 (Float128 Float32 Float64 Float128 Float64 Float64 Float16 Float128 Float128 Float128) Float16)
(declare-fun f44 (Float32 Float16 Float16 Float32 Float128 Float128 Float32 Float128 Float32) Float64)
(declare-fun f45 (Float32 Float32) Float32)
(declare-fun f46 (Float32 Float64 Float128) Float128)
(declare-fun f47 (Float128 Float64 Float128) Float64)
(declare-fun f48 (Float128 Float16 Float32 Float128 Float64 Float32 Float64 Float64 Float128 Float128) Float64)
(declare-fun f49 (Float128 Float128 Float64 Float128 Float64 Float64 Float128) Float32)
(declare-fun p0 (Float16 Float32 Float16 Float64 Float32) Bool)
(declare-fun p1 (Float64 Float128 Float128 Float64 Float128 Float64 Float32) Bool)
(declare-fun p2 (Float128 Float32 Float16 Float16 Float32) Bool)
(declare-fun p3 (Float128 Float16) Bool)
(declare-fun p4 (Float128 Float32 Float32 Float128 Float32 Float64) Bool)
(declare-fun p5 (Float32 Float64 Float16 Float64 Float32 Float32) Bool)
(declare-fun p6 (Float32 Float16 Float16) Bool)
(declare-fun p7 (Float16 Float16 Float16 Float16 Float16 Float128 Float128 Float128 Float32 Float16) Bool)
(declare-fun p8 (Float16) Bool)
(declare-fun p9 (Float16 Float128 Float128 Float32 Float16 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float16)
(declare-const ?float62 Float16)
(declare-const ?float63 Float64)
(declare-const ?float64 Float16)
(declare-const ?float65 Float64)
(declare-const ?float66 Float128)
(declare-const ?float67 Float128)
(declare-const ?float68 Float16)
(declare-const ?float69 Float16)
(declare-const ?float70 Float128)
(declare-const ?float71 Float64)
(declare-const ?float72 Float32)
(declare-const ?float73 Float64)
(declare-const ?float74 Float32)
(declare-const ?float75 Float128)
(declare-const ?float76 Float64)
(declare-const ?float77 Float16)
(declare-const ?float78 Float32)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b0 #b000101110110010 #b0010001100100111111100010100101010111100111110110001101111100111010110001010110100110111110011000111010100001101)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b1 #b10010100101 #b0011010100011001111100011110110111010111011010010111)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b1 #b00111011 #b00010110101011001001101)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b0 #b01001 #b1000101010)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.neg ?float99)))
(declare-const ?float101 Float64)
(assert (= ?float101 (fp.sub RTN ?float63 ?float81)))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.max ((_ to_fp 15 113) RTZ ?float65) ?float67)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.roundToIntegral RTN ?float100)))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.mul RTP ?float102 ?float66)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.abs ?float81)))
(declare-const ?float106 Float128)
(assert (= ?float106 (f41 ((_ to_fp 8 24) RTN ?float97) ((_ to_fp 8 24) RTN ?float84) ?float73 ((_ to_fp 8 24) RTZ ?float67) ((_ to_fp 5 11) RNE ?float84) ((_ to_fp 15 113) RTP ?float97))))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.sub RTZ ((_ to_fp 8 24) RTN ?float81) ?float85)))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.min ((_ to_fp 11 53) RTN ?float87) ?float71)))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.neg ?float82)))
(declare-const ?float110 Float64)
(assert (= ?float110 (f17 ((_ to_fp 8 24) RNE ?float102))))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.mul RTP ?float62 ?float100)))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.roundToIntegral RTN ?float92)))
(declare-const ?float113 Float128)
(assert (= ?float113 (f34 ((_ to_fp 8 24) RTN ?float81) ?float112 ((_ to_fp 15 113) RNE ?float101) ((_ to_fp 11 53) RTP ?float60) ?float80)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.sqrt RNE ?float109)))
(declare-const ?float115 Float16)
(assert (= ?float115 (fp.div RTN ?float64 ?float94)))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.sub RTZ ((_ to_fp 5 11) RNE ?float84) ?float100)))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.sqrt RTN ?float68)))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.min ?float66 ?float102)))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.min ?float78 ((_ to_fp 8 24) RTN ?float71))))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.sqrt RTN ?float85)))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.min ((_ to_fp 11 53) RTN ?float99) ?float110)))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.div RNE ?float106 ((_ to_fp 15 113) RTZ ?float74))))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.max ?float119 ((_ to_fp 8 24) RTZ ?float92))))
(declare-const ?float124 Float32)
(assert (= ?float124 (f37 ?float105 ?float119 ((_ to_fp 5 11) RTZ ?float66))))
(declare-const ?float125 Float128)
(assert (= ?float125 (f38 ((_ to_fp 15 113) RNE ?float87) ?float94 ?float80 ((_ to_fp 5 11) RTP ?float81) ((_ to_fp 8 24) RTZ ?float69) ?float72 ((_ to_fp 15 113) RTN ?float62) ((_ to_fp 11 53) RTN ?float96))))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.abs ?float72)))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.sqrt RTZ ?float69)))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.div RTZ ((_ to_fp 15 113) RTN ?float89) ?float118)))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.mul RTZ ((_ to_fp 5 11) RTP ?float75) ?float111)))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.abs ?float98)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.min ?float82 ((_ to_fp 11 53) RTZ ?float74))))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.abs ?float70)))
(declare-const ?float133 Float16)
(assert (= ?float133 (f22 ((_ to_fp 5 11) RNE ?float131) ((_ to_fp 8 24) RNE ?float125))))
(declare-const ?float134 Float32)
(assert (= ?float134 (fp.sub RTZ ((_ to_fp 8 24) RNE ?float109) ?float98)))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.mul RTP ?float90 ((_ to_fp 5 11) RTZ ?float81))))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.neg ?float70)))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.add RNE ?float76 ((_ to_fp 11 53) RNE ?float67))))
(declare-const ?float138 Float128)
(assert (= ?float138 (f20 ?float96 ((_ to_fp 11 53) RNE ?float123) ?float83 ((_ to_fp 5 11) RTZ ?float118) ?float89)))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.div RTP ((_ to_fp 5 11) RNE ?float126) ?float116)))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.div RTN ?float123 ((_ to_fp 8 24) RTP ?float122))))
(declare-const ?float141 Float64)
(assert (= ?float141 (f28 ((_ to_fp 8 24) RNE ?float133) ((_ to_fp 15 113) RTP ?float115) ?float87 ?float75 ((_ to_fp 11 53) RTZ ?float78))))
(declare-const ?float142 Float128)
(assert (= ?float142 (f10 ((_ to_fp 11 53) RTN ?float87) ((_ to_fp 5 11) RTZ ?float134) ((_ to_fp 5 11) RNE ?float70) ((_ to_fp 11 53) RNE ?float90) ((_ to_fp 5 11) RNE ?float102) ((_ to_fp 15 113) RTZ ?float93))))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.roundToIntegral RTN ?float88)))
(declare-const ?float144 Float128)
(assert (= ?float144 (f18 ((_ to_fp 8 24) RTP ?float97) ((_ to_fp 8 24) RTZ ?float113) ((_ to_fp 8 24) RNE ?float106) ((_ to_fp 15 113) RTP ?float71) ((_ to_fp 8 24) RTZ ?float136) ?float101 ((_ to_fp 15 113) RNE ?float111) ((_ to_fp 11 53) RNE ?float87) ((_ to_fp 15 113) RNE ?float126) ((_ to_fp 15 113) RNE ?float134))))
(declare-const ?float145 Float32)
(assert (= ?float145 (f30 ((_ to_fp 8 24) RNE ?float128) ((_ to_fp 5 11) RTN ?float80) ((_ to_fp 5 11) RNE ?float78) ?float124 ((_ to_fp 5 11) RTZ ?float134) ((_ to_fp 11 53) RTP ?float142))))
(declare-const ?float146 Float64)
(assert (= ?float146 (fp.sqrt RTN ?float108)))
(declare-const ?float147 Float16)
(assert (= ?float147 (fp.min ((_ to_fp 5 11) RNE ?float143) ?float115)))
(declare-const ?float148 Float16)
(assert (= ?float148 (f22 ?float68 ((_ to_fp 8 24) RTZ ?float113))))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.abs ?float65)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isPositive ?float146)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p6 ?float124 ((_ to_fp 5 11) RTZ ?float122) ((_ to_fp 5 11) RNE ?float114))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isPositive ?float117)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isPositive ?float69)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isInfinite ?float104)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.eq ?float120 ((_ to_fp 8 24) RNE ?float65))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isZero ?float148)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p3 ?float66 ?float112)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p4 ((_ to_fp 15 113) RTZ ?float60) ((_ to_fp 8 24) RTZ ?float142) ((_ to_fp 8 24) RTN ?float121) ?float86 ((_ to_fp 8 24) RTP ?float80) ?float88)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isZero ?float74)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.eq ((_ to_fp 5 11) RTP ?float72) ?float100)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.eq ?float115 ((_ to_fp 5 11) RTN ?float122))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNaN ?float145)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.lt ?float71 ((_ to_fp 11 53) RTZ ?float127))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.leq ?float89 ((_ to_fp 8 24) RTN ?float99))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.leq ?float129 ((_ to_fp 5 11) RNE ?float78))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isInfinite ?float140)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p2 ((_ to_fp 15 113) RNE ?float98) ((_ to_fp 8 24) RTN ?float80) ((_ to_fp 5 11) RTZ ?float126) ((_ to_fp 5 11) RTN ?float63) ((_ to_fp 8 24) RTP ?float127))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.gt ?float143 ?float105)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p3 ((_ to_fp 15 113) RNE ?float62) ((_ to_fp 5 11) RTP ?float75))))
; FINAL ASSERT
(assert (or ?bool165 ?bool161))
(check-sat)


-- iteration 4 --
(declare-fun f0 (Float16 Float16 Float64 Float32 Float128 Float16) Float128)
(declare-fun f1 (Float128 Float64) Float128)
(declare-fun f2 (Float64 Float16 Float32) Float32)
(declare-fun f3 (Float16 Float16 Float16 Float128 Float64 Float128 Float128 Float32 Float16) Float64)
(declare-fun f4 (Float16) Float128)
(declare-fun f5 (Float128 Float32 Float32) Float64)
(declare-fun f6 (Float64 Float128 Float16 Float64 Float128 Float128 Float128 Float16 Float64 Float64) Float32)
(declare-fun f7 (Float64 Float32 Float64 Float32 Float128 Float64 Float16 Float64) Float16)
(declare-fun f8 (Float32 Float128 Float64 Float16 Float128) Float32)
(declare-fun f9 (Float32 Float64 Float128 Float128 Float64) Float16)
(declare-fun f10 (Float64 Float32 Float128 Float32 Float64 Float64) Float32)
(declare-fun f11 (Float32) Float32)
(declare-fun f12 (Float16 Float64 Float64) Float32)
(declare-fun f13 (Float64 Float128) Float32)
(declare-fun f14 (Float32) Float16)
(declare-fun f15 (Float128 Float32 Float64 Float64 Float32 Float32 Float16) Float64)
(declare-fun f16 (Float32 Float64 Float32 Float64 Float16) Float32)
(declare-fun f17 (Float16 Float16 Float32 Float128 Float16 Float16 Float32) Float32)
(declare-fun f18 (Float128 Float32 Float16 Float32 Float64 Float16 Float32 Float32) Float128)
(declare-fun f19 (Float32 Float32 Float16 Float32 Float16) Float32)
(declare-fun f20 (Float128 Float32) Float32)
(declare-fun f21 (Float16) Float32)
(declare-fun f22 (Float64 Float16 Float64 Float128 Float16 Float128 Float64 Float16) Float128)
(declare-fun f23 (Float64 Float16 Float16 Float32) Float64)
(declare-fun f24 (Float16 Float128 Float128 Float128 Float128 Float64 Float32) Float32)
(declare-fun f25 (Float64 Float64 Float32 Float128 Float16) Float128)
(declare-fun f26 (Float64 Float128 Float128 Float128 Float64 Float16 Float64 Float16) Float16)
(declare-fun f27 (Float128 Float64 Float16) Float16)
(declare-fun f28 (Float64 Float64 Float16 Float16 Float16 Float128 Float128 Float16 Float16 Float16) Float128)
(declare-fun f29 (Float32 Float32 Float64 Float16 Float64 Float64 Float16) Float32)
(declare-fun f30 (Float64 Float16 Float64) Float64)
(declare-fun f31 (Float32 Float64 Float16) Float128)
(declare-fun f32 (Float32 Float128 Float16 Float16 Float128 Float16 Float64 Float32 Float128) Float32)
(declare-fun f33 (Float16 Float64 Float128 Float16 Float64 Float32 Float16) Float16)
(declare-fun f34 (Float32) Float16)
(declare-fun f35 (Float32) Float32)
(declare-fun f36 (Float64 Float128) Float16)
(declare-fun f37 (Float128 Float32 Float128) Float32)
(declare-fun f38 (Float32 Float64 Float128) Float64)
(declare-fun f39 (Float16 Float64 Float128 Float16 Float32) Float16)
(declare-fun f40 (Float128 Float32 Float32) Float16)
(declare-fun f41 (Float16 Float128 Float16 Float64 Float16) Float128)
(declare-fun f42 (Float64 Float128 Float128 Float16 Float16 Float16 Float128) Float16)
(declare-fun f43 (Float16 Float128 Float64 Float64 Float16) Float64)
(declare-fun f44 (Float32 Float64) Float32)
(declare-fun f45 (Float32 Float64 Float64 Float32 Float128 Float32 Float16 Float32 Float64 Float16) Float16)
(declare-fun f46 (Float64 Float16 Float64) Float128)
(declare-fun f47 (Float64 Float64 Float16 Float32 Float16 Float16 Float16 Float128 Float128) Float16)
(declare-fun f48 (Float16 Float128 Float64 Float16 Float32 Float16 Float32 Float32 Float128) Float128)
(declare-fun f49 (Float128 Float16 Float64 Float128 Float128 Float64) Float16)
(declare-fun p0 (Float16 Float32 Float64 Float64 Float128 Float128 Float128) Bool)
(declare-fun p1 (Float16 Float16 Float32 Float16 Float64 Float128 Float64 Float64) Bool)
(declare-fun p2 (Float128 Float64 Float16 Float128 Float16 Float32 Float128) Bool)
(declare-fun p3 (Float128) Bool)
(declare-fun p4 (Float64 Float32 Float128 Float32 Float32 Float128 Float128 Float16 Float64 Float64) Bool)
(declare-fun p5 (Float128) Bool)
(declare-fun p6 (Float16 Float16 Float128 Float128 Float64 Float128 Float32) Bool)
(declare-fun p7 (Float32 Float128 Float16 Float64 Float128) Bool)
(declare-fun p8 (Float32 Float128 Float128 Float128 Float16 Float128) Bool)
(declare-fun p9 (Float32 Float16 Float32 Float32 Float16 Float128 Float16 Float16 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float64)
(declare-const ?float62 Float128)
(declare-const ?float63 Float128)
(declare-const ?float64 Float128)
(declare-const ?float65 Float64)
(declare-const ?float66 Float16)
(declare-const ?float67 Float128)
(declare-const ?float68 Float32)
(declare-const ?float69 Float128)
(declare-const ?float70 Float16)
(declare-const ?float71 Float128)
(declare-const ?float72 Float16)
(declare-const ?float73 Float16)
(declare-const ?float74 Float128)
(declare-const ?float75 Float128)
(declare-const ?float76 Float16)
(declare-const ?float77 Float128)
(declare-const ?float78 Float128)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b1 #b01000110011 #b1100000011010111101100010010001111110111111110101101)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b0 #b01100000 #b00111101010100001001101)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b0 #b10101111 #b11010101101101001100110)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b0 #b00110001101 #b0100110000100000011100101011011101110010100111010100)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b0 #b00000 #b0000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.neg ?float73)))
(declare-const ?float101 Float128)
(assert (= ?float101 (f31 ((_ to_fp 8 24) RTN ?float97) ((_ to_fp 11 53) RNE ?float74) ?float66)))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.sqrt RNE ?float89)))
(declare-const ?float103 Float32)
(assert (= ?float103 (fp.min ?float92 ((_ to_fp 8 24) RTP ?float95))))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.div RTP ((_ to_fp 8 24) RTZ ?float101) ?float68)))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.min ((_ to_fp 5 11) RTN ?float61) ?float81)))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.min ((_ to_fp 11 53) RNE ?float64) ?float88)))
(declare-const ?float107 Float128)
(assert (= ?float107 (fp.mul RTP ?float102 ((_ to_fp 15 113) RTZ ?float73))))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.add RTN ?float85 ?float60)))
(declare-const ?float109 Float32)
(assert (= ?float109 (fp.sqrt RTZ ?float60)))
(declare-const ?float110 Float16)
(assert (= ?float110 (f27 ((_ to_fp 15 113) RTZ ?float90) ((_ to_fp 11 53) RNE ?float87) ((_ to_fp 5 11) RTZ ?float74))))
(declare-const ?float111 Float32)
(assert (= ?float111 (f21 ((_ to_fp 5 11) RTP ?float80))))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.neg ?float70)))
(declare-const ?float113 Float32)
(assert (= ?float113 (f37 ?float78 ((_ to_fp 8 24) RNE ?float110) ?float62)))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.neg ?float70)))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.sqrt RNE ?float96)))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.mul RNE ((_ to_fp 8 24) RTP ?float105) ?float111)))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.min ((_ to_fp 11 53) RTZ ?float103) ?float94)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.max ((_ to_fp 8 24) RTP ?float107) ?float92)))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.roundToIntegral RTN ?float60)))
(declare-const ?float120 Float16)
(assert (= ?float120 (f49 ?float63 ((_ to_fp 5 11) RTN ?float63) ((_ to_fp 11 53) RTP ?float60) ?float77 ?float62 ((_ to_fp 11 53) RNE ?float67))))
(declare-const ?float121 Float16)
(assert (= ?float121 (f39 ?float105 ((_ to_fp 11 53) RTZ ?float111) ((_ to_fp 15 113) RNE ?float65) ((_ to_fp 5 11) RTP ?float101) ((_ to_fp 8 24) RTZ ?float110))))
(declare-const ?float122 Float64)
(assert (= ?float122 (fp.max ?float90 ((_ to_fp 11 53) RNE ?float63))))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.neg ?float103)))
(declare-const ?float124 Float128)
(assert (= ?float124 (f31 ?float123 ((_ to_fp 11 53) RNE ?float89) ((_ to_fp 5 11) RNE ?float65))))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.roundToIntegral RNE ?float80)))
(declare-const ?float126 Float64)
(assert (= ?float126 (fp.sub RTP ((_ to_fp 11 53) RTN ?float78) ?float115)))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.sub RTN ((_ to_fp 5 11) RNE ?float106) ?float72)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.roundToIntegral RTZ ?float91)))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.neg ?float81)))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.max ?float77 ?float69)))
(declare-const ?float131 Float32)
(assert (= ?float131 (fp.abs ?float85)))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.div RNE ((_ to_fp 5 11) RTP ?float117) ?float66)))
(declare-const ?float133 Float32)
(assert (= ?float133 (f21 ((_ to_fp 5 11) RTN ?float89))))
(declare-const ?float134 Float16)
(assert (= ?float134 (f27 ((_ to_fp 15 113) RTN ?float99) ((_ to_fp 11 53) RNE ?float110) ?float127)))
(declare-const ?float135 Float64)
(assert (= ?float135 (f43 ((_ to_fp 5 11) RTZ ?float111) ((_ to_fp 15 113) RTZ ?float119) ((_ to_fp 11 53) RTN ?float110) ((_ to_fp 11 53) RTZ ?float85) ?float112)))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.sqrt RTN ?float79)))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.div RTP ?float117 ?float88)))
(declare-const ?float138 Float32)
(assert (= ?float138 (fp.sqrt RTZ ?float133)))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.max ((_ to_fp 5 11) RNE ?float60) ?float87)))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.roundToIntegral RTN ?float110)))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.min ?float88 ((_ to_fp 11 53) RTP ?float129))))
(declare-const ?float142 Float32)
(assert (= ?float142 (fp.sub RTZ ?float119 ((_ to_fp 8 24) RTN ?float69))))
(declare-const ?float143 Float32)
(assert (= ?float143 (f6 ((_ to_fp 11 53) RTP ?float71) ?float77 ((_ to_fp 5 11) RTZ ?float137) ((_ to_fp 11 53) RTP ?float92) ?float69 ((_ to_fp 15 113) RNE ?float86) ((_ to_fp 15 113) RTP ?float90) ((_ to_fp 5 11) RTN ?float75) ((_ to_fp 11 53) RTP ?float91) ((_ to_fp 11 53) RTZ ?float107))))
(declare-const ?float144 Float64)
(assert (= ?float144 (f38 ?float68 ((_ to_fp 11 53) RTP ?float128) ?float101)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.roundToIntegral RTN ?float115)))
(declare-const ?float146 Float128)
(assert (= ?float146 (f18 ?float67 ((_ to_fp 8 24) RTP ?float101) ((_ to_fp 5 11) RNE ?float123) ((_ to_fp 8 24) RNE ?float96) ((_ to_fp 11 53) RTN ?float123) ((_ to_fp 5 11) RTN ?float133) ((_ to_fp 8 24) RTP ?float122) ((_ to_fp 8 24) RTZ ?float66))))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.max ?float71 ((_ to_fp 15 113) RTN ?float100))))
(declare-const ?float148 Float32)
(assert (= ?float148 (f20 ?float147 ((_ to_fp 8 24) RTP ?float73))))
(declare-const ?float149 Float128)
(assert (= ?float149 (f46 ((_ to_fp 11 53) RTP ?float105) ((_ to_fp 5 11) RNE ?float103) ?float145)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.lt ?float80 ((_ to_fp 11 53) RTN ?float100))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.leq ?float144 ((_ to_fp 11 53) RTP ?float142))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.geq ?float113 ((_ to_fp 8 24) RTP ?float79))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.gt ((_ to_fp 5 11) RNE ?float86) ?float81)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNaN ?float66)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isSubnormal ?float65)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isSubnormal ?float67)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isSubnormal ?float80)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.gt ?float68 ((_ to_fp 8 24) RNE ?float114))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p6 ((_ to_fp 5 11) RTP ?float122) ((_ to_fp 5 11) RTN ?float113) ((_ to_fp 15 113) RNE ?float108) ((_ to_fp 15 113) RNE ?float148) ((_ to_fp 11 53) RTP ?float85) ((_ to_fp 15 113) RNE ?float112) ((_ to_fp 8 24) RNE ?float125))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p9 ((_ to_fp 8 24) RTZ ?float81) ?float110 ((_ to_fp 8 24) RTZ ?float75) ((_ to_fp 8 24) RTN ?float99) ((_ to_fp 5 11) RNE ?float128) ?float107 ((_ to_fp 5 11) RTP ?float91) ((_ to_fp 5 11) RTZ ?float106) ((_ to_fp 11 53) RTN ?float76))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isPositive ?float99)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNormal ?float134)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (p4 ((_ to_fp 11 53) RTP ?float101) ((_ to_fp 8 24) RTZ ?float84) ((_ to_fp 15 113) RTP ?float65) ((_ to_fp 8 24) RTP ?float139) ?float142 ((_ to_fp 15 113) RTN ?float120) ?float130 ((_ to_fp 5 11) RNE ?float92) ((_ to_fp 11 53) RTZ ?float60) ((_ to_fp 11 53) RNE ?float67))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isNaN ?float93)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.gt ((_ to_fp 15 113) RTP ?float65) ?float98)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNegative ?float81)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.gt ((_ to_fp 5 11) RTP ?float69) ?float99)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (p2 ((_ to_fp 15 113) RTZ ?float79) ((_ to_fp 11 53) RTZ ?float62) ((_ to_fp 5 11) RTP ?float79) ?float89 ?float99 ((_ to_fp 8 24) RTP ?float130) ((_ to_fp 15 113) RTN ?float103))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p9 ((_ to_fp 8 24) RTZ ?float129) ((_ to_fp 5 11) RTP ?float92) ((_ to_fp 8 24) RTZ ?float78) ((_ to_fp 8 24) RNE ?float61) ((_ to_fp 5 11) RNE ?float88) ((_ to_fp 15 113) RNE ?float97) ((_ to_fp 5 11) RTN ?float109) ((_ to_fp 5 11) RNE ?float78) ((_ to_fp 11 53) RTP ?float73))))
; FINAL ASSERT
(assert (and (or ?bool153 (and ?bool165 ?bool160) ?bool167) (or ?bool165)))
(check-sat)


-- iteration 5 --
(declare-fun f0 (Float16 Float64 Float64 Float128 Float128) Float64)
(declare-fun f1 (Float128 Float32 Float16 Float16 Float16 Float64 Float64 Float32 Float32) Float64)
(declare-fun f2 (Float64 Float128 Float128 Float32 Float16 Float16 Float64 Float64 Float128 Float32) Float64)
(declare-fun f3 (Float128 Float64 Float32 Float64 Float16 Float64) Float128)
(declare-fun f4 (Float64 Float32 Float32 Float64 Float64 Float32) Float64)
(declare-fun f5 (Float64 Float32 Float128 Float64) Float128)
(declare-fun f6 (Float16) Float128)
(declare-fun f7 (Float16 Float32 Float32 Float128 Float32 Float32 Float64 Float128 Float16) Float64)
(declare-fun f8 (Float64 Float128 Float16 Float32 Float128 Float64 Float128 Float128 Float16) Float16)
(declare-fun f9 (Float64) Float128)
(declare-fun f10 (Float64 Float16 Float128 Float64) Float128)
(declare-fun f11 (Float16 Float128) Float16)
(declare-fun f12 (Float128 Float16 Float32 Float32 Float64) Float32)
(declare-fun f13 (Float128 Float32 Float16 Float16) Float16)
(declare-fun f14 (Float16 Float128 Float128 Float64 Float128 Float32 Float32) Float16)
(declare-fun f15 (Float32 Float64 Float64 Float64 Float64 Float64 Float64 Float16 Float128 Float64) Float16)
(declare-fun f16 (Float32 Float128 Float16 Float32 Float64 Float16 Float128) Float16)
(declare-fun f17 (Float32 Float128 Float128 Float128 Float64) Float64)
(declare-fun f18 (Float128 Float16 Float16 Float64 Float32) Float64)
(declare-fun f19 (Float16 Float32 Float64 Float64 Float16 Float16 Float16 Float64 Float32) Float64)
(declare-fun f20 (Float32 Float32 Float64 Float64 Float64 Float64 Float64) Float128)
(declare-fun f21 (Float128 Float128 Float64 Float16 Float128 Float128 Float16 Float16) Float64)
(declare-fun f22 (Float128 Float128 Float128 Float32 Float16 Float32 Float16) Float64)
(declare-fun f23 (Float128 Float64 Float16 Float128 Float64 Float16 Float64) Float16)
(declare-fun f24 (Float64) Float128)
(declare-fun f25 (Float128 Float16 Float128 Float16 Float32 Float64) Float32)
(declare-fun f26 (Float32 Float16 Float16) Float16)
(declare-fun f27 (Float32 Float16 Float128 Float32 Float32 Float128 Float64 Float16) Float128)
(declare-fun f28 (Float32 Float16 Float128) Float128)
(declare-fun f29 (Float128) Float16)
(declare-fun f30 (Float16 Float64 Float128 Float64) Float32)
(declare-fun f31 (Float128 Float32 Float64 Float128 Float32 Float32 Float128 Float32) Float128)
(declare-fun f32 (Float16 Float64 Float16 Float64 Float128 Float32) Float128)
(declare-fun f33 (Float64 Float64 Float64 Float64 Float32 Float32 Float16 Float32 Float16) Float128)
(declare-fun f34 (Float128 Float64) Float64)
(declare-fun f35 (Float128 Float16 Float32 Float128 Float128 Float64 Float128) Float64)
(declare-fun f36 (Float128 Float64 Float32 Float16) Float128)
(declare-fun f37 (Float64 Float32 Float32 Float64 Float16) Float32)
(declare-fun f38 (Float64) Float16)
(declare-fun f39 (Float128 Float64 Float16 Float128 Float32) Float32)
(declare-fun f40 (Float128 Float128) Float64)
(declare-fun f41 (Float128 Float128 Float32 Float16 Float64 Float64 Float128 Float32) Float16)
(declare-fun f42 (Float128 Float128 Float32 Float64 Float16 Float64 Float32 Float32 Float32) Float64)
(declare-fun f43 (Float128 Float64 Float128 Float128 Float64 Float64 Float64 Float32 Float128 Float16) Float128)
(declare-fun f44 (Float128 Float64 Float16) Float32)
(declare-fun f45 (Float16) Float128)
(declare-fun f46 (Float16 Float16 Float16 Float16) Float64)
(declare-fun f47 (Float128 Float32 Float32 Float16 Float64 Float64 Float32) Float16)
(declare-fun f48 (Float32) Float32)
(declare-fun f49 (Float32 Float16 Float64 Float16 Float128 Float16 Float128) Float16)
(declare-fun p0 (Float64 Float128 Float64) Bool)
(declare-fun p1 (Float32) Bool)
(declare-fun p2 (Float64 Float64 Float32) Bool)
(declare-fun p3 (Float16 Float64 Float64) Bool)
(declare-fun p4 (Float32 Float32) Bool)
(declare-fun p5 (Float64 Float64 Float16 Float64 Float128 Float16) Bool)
(declare-fun p6 (Float64 Float32 Float32 Float128 Float64 Float64 Float32 Float128 Float128) Bool)
(declare-fun p7 (Float32 Float32 Float64 Float128 Float32 Float128) Bool)
(declare-fun p8 (Float128 Float32) Bool)
(declare-fun p9 (Float32 Float64 Float128 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float16)
(declare-const ?float62 Float64)
(declare-const ?float63 Float64)
(declare-const ?float64 Float32)
(declare-const ?float65 Float32)
(declare-const ?float66 Float128)
(declare-const ?float67 Float32)
(declare-const ?float68 Float64)
(declare-const ?float69 Float128)
(declare-const ?float70 Float64)
(declare-const ?float71 Float32)
(declare-const ?float72 Float16)
(declare-const ?float73 Float128)
(declare-const ?float74 Float32)
(declare-const ?float75 Float128)
(declare-const ?float76 Float16)
(declare-const ?float77 Float128)
(declare-const ?float78 Float32)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b00111001 #b01011011110111110011111)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b0 #b00100 #b0110010011)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b0 #b00110000 #b10100111110011000111110)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b1 #b00000 #b1000111100)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b1 #b10100011 #b00100111100000001011000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b0 #b10101101100 #b0110000000011011100111111110101101010100100001011011)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b0 #b11101010000 #b0011110001001011001010000000011100010000010000100100)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (f25 ?float69 ((_ to_fp 5 11) RTP ?float85) ((_ to_fp 15 113) RTP ?float90) ((_ to_fp 5 11) RNE ?float87) ?float65 ((_ to_fp 11 53) RTZ ?float69))))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.neg ?float61)))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.mul RNE ?float74 ((_ to_fp 8 24) RNE ?float61))))
(declare-const ?float103 Float128)
(assert (= ?float103 (fp.roundToIntegral RNE ?float80)))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.roundToIntegral RTN ?float71)))
(declare-const ?float105 Float64)
(assert (= ?float105 (f46 ((_ to_fp 5 11) RTZ ?float89) ((_ to_fp 5 11) RTZ ?float70) ?float92 ((_ to_fp 5 11) RNE ?float89))))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.mul RNE ?float64 ?float65)))
(declare-const ?float107 Float16)
(assert (= ?float107 (fp.neg ?float84)))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.sqrt RNE ?float65)))
(declare-const ?float109 Float32)
(assert (= ?float109 (fp.neg ?float71)))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.div RTN ?float75 ((_ to_fp 15 113) RTP ?float67))))
(declare-const ?float111 Float16)
(assert (= ?float111 (f23 ((_ to_fp 15 113) RTZ ?float71) ((_ to_fp 11 53) RTZ ?float75) ((_ to_fp 5 11) RTN ?float85) ((_ to_fp 15 113) RNE ?float108) ((_ to_fp 11 53) RTZ ?float81) ?float96 ((_ to_fp 11 53) RNE ?float74))))
(declare-const ?float112 Float16)
(assert (= ?float112 (f16 ((_ to_fp 8 24) RTP ?float101) ?float66 ((_ to_fp 5 11) RTP ?float77) ((_ to_fp 8 24) RNE ?float76) ((_ to_fp 11 53) RTP ?float107) ((_ to_fp 5 11) RTN ?float83) ((_ to_fp 15 113) RTN ?float68))))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.roundToIntegral RTP ?float87)))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.neg ?float104)))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.roundToIntegral RTP ?float110)))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.neg ?float113)))
(declare-const ?float117 Float32)
(assert (= ?float117 (fp.sqrt RNE ?float91)))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.add RTZ ?float81 ((_ to_fp 15 113) RNE ?float64))))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.min ((_ to_fp 8 24) RNE ?float92) ?float104)))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.mul RTZ ?float81 ?float115)))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.sub RTP ((_ to_fp 8 24) RNE ?float81) ?float100)))
(declare-const ?float122 Float32)
(assert (= ?float122 (fp.add RTP ?float78 ((_ to_fp 8 24) RTN ?float88))))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.roundToIntegral RTZ ?float65)))
(declare-const ?float124 Float128)
(assert (= ?float124 (fp.div RTN ?float98 ((_ to_fp 15 113) RTZ ?float70))))
(declare-const ?float125 Float128)
(assert (= ?float125 (fp.abs ?float77)))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.add RTZ ?float75 ?float120)))
(declare-const ?float127 Float16)
(assert (= ?float127 (f41 ((_ to_fp 15 113) RTP ?float71) ((_ to_fp 15 113) RTN ?float72) ?float71 ((_ to_fp 5 11) RNE ?float73) ((_ to_fp 11 53) RNE ?float72) ((_ to_fp 11 53) RNE ?float124) ?float126 ((_ to_fp 8 24) RTN ?float72))))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.sqrt RTP ?float65)))
(declare-const ?float129 Float128)
(assert (= ?float129 (fp.add RTZ ?float98 ((_ to_fp 15 113) RTZ ?float84))))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.mul RNE ?float67 ?float89)))
(declare-const ?float131 Float128)
(assert (= ?float131 (fp.add RTZ ?float75 ?float88)))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.min ((_ to_fp 15 113) RTP ?float89) ?float118)))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.max ?float91 ?float67)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.max ?float131 ((_ to_fp 15 113) RTZ ?float76))))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.roundToIntegral RNE ?float124)))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.div RTZ ((_ to_fp 15 113) RTP ?float68) ?float98)))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.sqrt RTZ ?float65)))
(declare-const ?float138 Float32)
(assert (= ?float138 (fp.abs ?float119)))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.add RTP ?float110 ?float136)))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.min ?float133 ?float116)))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.roundToIntegral RNE ?float86)))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.sub RNE ?float125 ?float126)))
(declare-const ?float143 Float64)
(assert (= ?float143 (f34 ((_ to_fp 15 113) RTP ?float122) ?float93)))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.sqrt RTP ?float94)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.div RNE ((_ to_fp 8 24) RNE ?float97) ?float65)))
(declare-const ?float146 Float64)
(assert (= ?float146 (fp.max ?float94 ?float62)))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.sqrt RNE ?float139)))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.sub RNE ?float96 ((_ to_fp 5 11) RNE ?float83))))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.div RTZ ((_ to_fp 11 53) RNE ?float102) ?float93)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.eq ((_ to_fp 15 113) RTN ?float106) ?float147)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNegative ?float138)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNormal ?float135)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNormal ?float120)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p4 ?float74 ((_ to_fp 8 24) RNE ?float80))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isPositive ?float90)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (p0 ?float93 ((_ to_fp 15 113) RTP ?float93) ((_ to_fp 11 53) RTP ?float116))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.gt ((_ to_fp 8 24) RTZ ?float112) ?float113)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p0 ((_ to_fp 11 53) RTN ?float132) ((_ to_fp 15 113) RTZ ?float123) ((_ to_fp 11 53) RTZ ?float106))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.eq ?float93 ((_ to_fp 11 53) RNE ?float74))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isPositive ?float66)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isZero ?float127)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isPositive ?float137)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.eq ?float101 ?float127)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (p4 ?float119 ?float114)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isPositive ?float135)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.leq ((_ to_fp 5 11) RNE ?float121) ?float92)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p2 ((_ to_fp 11 53) RTZ ?float115) ((_ to_fp 11 53) RTN ?float130) ((_ to_fp 8 24) RNE ?float81))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNaN ?float61)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.lt ?float91 ((_ to_fp 8 24) RTZ ?float124))))
; FINAL ASSERT
(assert (and (and ?bool155 (or (or ?bool162 ?bool156))) ?bool165 ?bool150))
(check-sat)


-- iteration 6 --
(declare-fun f0 (Float128 Float16) Float16)
(declare-fun f1 (Float128 Float128 Float64 Float32 Float32) Float16)
(declare-fun f2 (Float128 Float64 Float128 Float64 Float32 Float16) Float16)
(declare-fun f3 (Float16 Float128) Float16)
(declare-fun f4 (Float128 Float16 Float64 Float16 Float64 Float32 Float128 Float16 Float16 Float32) Float64)
(declare-fun f5 (Float16 Float64 Float16) Float32)
(declare-fun f6 (Float16 Float16 Float128 Float128 Float64) Float128)
(declare-fun f7 (Float16 Float32 Float64 Float64 Float128 Float128 Float64) Float128)
(declare-fun f8 (Float128 Float64 Float32 Float32 Float16 Float128 Float128 Float16 Float128 Float128) Float16)
(declare-fun f9 (Float16 Float32 Float32 Float128) Float64)
(declare-fun f10 (Float64 Float64 Float64 Float16 Float64 Float16 Float32) Float128)
(declare-fun f11 (Float64 Float16 Float16 Float16 Float64 Float64 Float128 Float16) Float32)
(declare-fun f12 (Float32 Float16 Float32 Float128) Float128)
(declare-fun f13 (Float64 Float16 Float32 Float128 Float128 Float64 Float32 Float16 Float16) Float128)
(declare-fun f14 (Float64 Float128 Float64 Float64 Float32 Float16) Float16)
(declare-fun f15 (Float64 Float64 Float128 Float64 Float16 Float16 Float128 Float16 Float16) Float16)
(declare-fun f16 (Float128 Float64 Float32) Float32)
(declare-fun f17 (Float32 Float128 Float32 Float16 Float128 Float64 Float64 Float32 Float16 Float128) Float64)
(declare-fun f18 (Float32) Float16)
(declare-fun f19 (Float16) Float64)
(declare-fun f20 (Float64 Float128 Float16 Float64 Float128 Float16) Float128)
(declare-fun f21 (Float128 Float32 Float128 Float16 Float128 Float32 Float16 Float128 Float16 Float32) Float32)
(declare-fun f22 (Float128 Float16 Float16 Float128 Float64) Float128)
(declare-fun f23 (Float32 Float128 Float16 Float64 Float16 Float128 Float32) Float32)
(declare-fun f24 (Float64 Float32 Float32 Float16 Float16) Float128)
(declare-fun f25 (Float64 Float64 Float64 Float16) Float32)
(declare-fun f26 (Float16 Float64 Float32 Float64 Float128 Float64 Float32) Float32)
(declare-fun f27 (Float32) Float128)
(declare-fun f28 (Float64 Float32 Float64 Float64 Float16 Float32 Float128 Float128 Float64) Float64)
(declare-fun f29 (Float16 Float32 Float16 Float16 Float64 Float64 Float128 Float16 Float32) Float32)
(declare-fun f30 (Float128 Float64) Float32)
(declare-fun f31 (Float16 Float64 Float32 Float128) Float32)
(declare-fun f32 (Float128 Float16 Float64 Float64 Float32 Float16 Float128 Float64 Float32) Float32)
(declare-fun f33 (Float64 Float16 Float16 Float32 Float16 Float64) Float128)
(declare-fun f34 (Float64 Float64 Float64 Float128 Float32 Float128 Float16 Float64 Float16 Float32) Float64)
(declare-fun f35 (Float64 Float64 Float32) Float64)
(declare-fun f36 (Float64 Float64 Float64 Float64) Float128)
(declare-fun f37 (Float64 Float128 Float32) Float128)
(declare-fun f38 (Float128 Float16 Float128 Float64 Float64 Float128 Float64) Float32)
(declare-fun f39 (Float128 Float32 Float32) Float128)
(declare-fun f40 (Float16) Float128)
(declare-fun f41 (Float16 Float32 Float128) Float16)
(declare-fun f42 (Float64 Float64 Float64 Float128) Float16)
(declare-fun f43 (Float32 Float128 Float128 Float128 Float16 Float128 Float16 Float128 Float128 Float64) Float32)
(declare-fun f44 (Float32 Float128 Float64 Float64 Float16 Float64 Float16 Float128 Float64 Float32) Float64)
(declare-fun f45 (Float64 Float16 Float64 Float32) Float32)
(declare-fun f46 (Float64 Float128) Float32)
(declare-fun f47 (Float16 Float32) Float32)
(declare-fun f48 (Float16 Float128 Float16 Float16 Float128) Float32)
(declare-fun f49 (Float32 Float64) Float32)
(declare-fun p0 (Float128 Float128 Float128 Float128 Float16 Float32 Float32 Float64 Float128) Bool)
(declare-fun p1 (Float64 Float64 Float16 Float32 Float128 Float16 Float16 Float64 Float16) Bool)
(declare-fun p2 (Float64 Float64 Float64) Bool)
(declare-fun p3 (Float64 Float128) Bool)
(declare-fun p4 (Float128 Float32 Float16) Bool)
(declare-fun p5 (Float32 Float16 Float32 Float128) Bool)
(declare-fun p6 (Float32 Float16 Float64 Float32 Float32 Float32 Float64) Bool)
(declare-fun p7 (Float128 Float16 Float64 Float128 Float128 Float16 Float128 Float32 Float64 Float64) Bool)
(declare-fun p8 (Float128 Float128 Float64 Float64 Float64 Float64 Float128 Float128) Bool)
(declare-fun p9 (Float64 Float32 Float16 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float64)
(declare-const ?float62 Float64)
(declare-const ?float63 Float64)
(declare-const ?float64 Float128)
(declare-const ?float65 Float64)
(declare-const ?float66 Float128)
(declare-const ?float67 Float128)
(declare-const ?float68 Float64)
(declare-const ?float69 Float128)
(declare-const ?float70 Float128)
(declare-const ?float71 Float16)
(declare-const ?float72 Float64)
(declare-const ?float73 Float128)
(declare-const ?float74 Float16)
(declare-const ?float75 Float32)
(declare-const ?float76 Float64)
(declare-const ?float77 Float128)
(declare-const ?float78 Float16)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b0 #b00011010110 #b1010111100010101111001011100100000110111100000101011)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.add RTZ ?float87 ((_ to_fp 8 24) RTN ?float95))))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.neg ?float100)))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.neg ?float71)))
(declare-const ?float103 Float128)
(assert (= ?float103 (fp.sub RTP ((_ to_fp 15 113) RTN ?float82) ?float73)))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.min ((_ to_fp 11 53) RNE ?float101) ?float84)))
(declare-const ?float105 Float128)
(assert (= ?float105 (fp.neg ?float70)))
(declare-const ?float106 Float16)
(assert (= ?float106 (f14 ?float72 ((_ to_fp 15 113) RTZ ?float82) ((_ to_fp 11 53) RTZ ?float73) ((_ to_fp 11 53) RNE ?float86) ((_ to_fp 8 24) RTN ?float104) ((_ to_fp 5 11) RTN ?float76))))
(declare-const ?float107 Float16)
(assert (= ?float107 (fp.sub RTP ((_ to_fp 5 11) RTP ?float99) ?float97)))
(declare-const ?float108 Float16)
(assert (= ?float108 (fp.neg ?float82)))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.abs ?float74)))
(declare-const ?float110 Float32)
(assert (= ?float110 (fp.div RTZ ?float100 ((_ to_fp 8 24) RNE ?float69))))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.neg ?float83)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.min ((_ to_fp 11 53) RNE ?float73) ?float72)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.min ?float90 ?float91)))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.roundToIntegral RTZ ?float106)))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.max ((_ to_fp 8 24) RTN ?float73) ?float88)))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.sqrt RTN ?float112)))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.mul RTZ ?float96 ?float81)))
(declare-const ?float118 Float128)
(assert (= ?float118 (f24 ((_ to_fp 11 53) RTN ?float110) ((_ to_fp 8 24) RTZ ?float79) ((_ to_fp 8 24) RTZ ?float63) ((_ to_fp 5 11) RTN ?float65) ?float108)))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.add RNE ?float114 ((_ to_fp 5 11) RTZ ?float103))))
(declare-const ?float120 Float16)
(assert (= ?float120 (fp.add RTP ?float93 ((_ to_fp 5 11) RTP ?float81))))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.sub RTZ ((_ to_fp 15 113) RTZ ?float82) ?float73)))
(declare-const ?float122 Float64)
(assert (= ?float122 (fp.max ?float91 ((_ to_fp 11 53) RTZ ?float85))))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.sqrt RNE ?float61)))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.neg ?float122)))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.div RTZ ?float124 ((_ to_fp 11 53) RTZ ?float83))))
(declare-const ?float126 Float16)
(assert (= ?float126 (fp.roundToIntegral RNE ?float119)))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.neg ?float94)))
(declare-const ?float128 Float16)
(assert (= ?float128 (f15 ?float113 ?float61 ?float66 ?float116 ((_ to_fp 5 11) RTN ?float101) ((_ to_fp 5 11) RTP ?float67) ?float64 ?float111 ((_ to_fp 5 11) RTN ?float122))))
(declare-const ?float129 Float128)
(assert (= ?float129 (fp.div RTN ?float70 ((_ to_fp 15 113) RTZ ?float60))))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.min ((_ to_fp 15 113) RTP ?float82) ?float96)))
(declare-const ?float131 Float32)
(assert (= ?float131 (fp.min ?float92 ?float115)))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.sub RNE ?float131 ((_ to_fp 8 24) RTN ?float67))))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.roundToIntegral RTP ?float132)))
(declare-const ?float134 Float64)
(assert (= ?float134 (f44 ((_ to_fp 8 24) RTN ?float120) ((_ to_fp 15 113) RNE ?float97) ((_ to_fp 11 53) RTZ ?float128) ?float62 ((_ to_fp 5 11) RTZ ?float99) ((_ to_fp 11 53) RNE ?float103) ((_ to_fp 5 11) RTZ ?float89) ((_ to_fp 15 113) RTP ?float100) ((_ to_fp 11 53) RTP ?float73) ((_ to_fp 8 24) RTZ ?float118))))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.div RTP ((_ to_fp 5 11) RTN ?float61) ?float95)))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.min ?float67 ((_ to_fp 15 113) RNE ?float111))))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.neg ?float81)))
(declare-const ?float138 Float64)
(assert (= ?float138 (fp.abs ?float62)))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.neg ?float66)))
(declare-const ?float140 Float64)
(assert (= ?float140 (fp.max ((_ to_fp 11 53) RNE ?float94) ?float138)))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.neg ?float77)))
(declare-const ?float142 Float64)
(assert (= ?float142 (f17 ((_ to_fp 8 24) RTN ?float106) ((_ to_fp 15 113) RTZ ?float90) ((_ to_fp 8 24) RTN ?float71) ?float85 ?float66 ((_ to_fp 11 53) RNE ?float86) ((_ to_fp 11 53) RNE ?float87) ((_ to_fp 8 24) RTZ ?float99) ((_ to_fp 5 11) RTZ ?float68) ?float137)))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.min ?float124 ((_ to_fp 11 53) RTP ?float120))))
(declare-const ?float144 Float32)
(assert (= ?float144 (f5 ((_ to_fp 5 11) RTN ?float98) ((_ to_fp 11 53) RTZ ?float132) ((_ to_fp 5 11) RTP ?float60))))
(declare-const ?float145 Float16)
(assert (= ?float145 (fp.max ?float111 ((_ to_fp 5 11) RNE ?float65))))
(declare-const ?float146 Float64)
(assert (= ?float146 (f17 ((_ to_fp 8 24) RTN ?float118) ?float69 ?float110 ((_ to_fp 5 11) RTZ ?float121) ((_ to_fp 15 113) RNE ?float115) ((_ to_fp 11 53) RTZ ?float78) ((_ to_fp 11 53) RNE ?float118) ((_ to_fp 8 24) RTZ ?float64) ?float95 ((_ to_fp 15 113) RNE ?float134))))
(declare-const ?float147 Float64)
(assert (= ?float147 (fp.sqrt RNE ?float124)))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.div RTP ?float104 ((_ to_fp 11 53) RTZ ?float145))))
(declare-const ?float149 Float64)
(assert (= ?float149 (f19 ((_ to_fp 5 11) RTZ ?float101))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.geq ?float107 ?float78)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.eq ((_ to_fp 11 53) RTN ?float96) ?float148)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNegative ?float139)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.eq ((_ to_fp 11 53) RTP ?float88) ?float90)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.gt ?float97 ((_ to_fp 5 11) RTN ?float110))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isNormal ?float99)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNaN ?float62)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p7 ((_ to_fp 15 113) RTZ ?float94) ((_ to_fp 5 11) RTN ?float146) ?float134 ?float129 ((_ to_fp 15 113) RTZ ?float72) ((_ to_fp 5 11) RNE ?float147) ?float118 ((_ to_fp 8 24) RTZ ?float98) ((_ to_fp 11 53) RTP ?float82) ((_ to_fp 11 53) RNE ?float101))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.leq ?float98 ((_ to_fp 15 113) RTN ?float87))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p8 ((_ to_fp 15 113) RNE ?float104) ?float129 ((_ to_fp 11 53) RTZ ?float67) ?float138 ((_ to_fp 11 53) RNE ?float133) ((_ to_fp 11 53) RTN ?float94) ?float105 ((_ to_fp 15 113) RTN ?float74))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isInfinite ?float80)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.gt ?float63 ((_ to_fp 11 53) RTZ ?float139))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (p0 ?float70 ((_ to_fp 15 113) RNE ?float148) ((_ to_fp 15 113) RTP ?float107) ?float136 ?float78 ?float133 ((_ to_fp 8 24) RNE ?float99) ?float63 ((_ to_fp 15 113) RTP ?float124))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (p3 ((_ to_fp 11 53) RNE ?float141) ?float66)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.geq ?float69 ((_ to_fp 15 113) RNE ?float82))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isNaN ?float100)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.leq ?float137 ((_ to_fp 15 113) RTN ?float116))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNegative ?float142)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.lt ((_ to_fp 8 24) RTN ?float134) ?float144)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNormal ?float133)))
; FINAL ASSERT
(assert (and ?bool168))
(check-sat)


-- iteration 7 --
(declare-fun f0 (Float16 Float64 Float16 Float16 Float64 Float32) Float128)
(declare-fun f1 (Float16 Float32 Float128 Float128) Float64)
(declare-fun f2 (Float16 Float128 Float64 Float128 Float16 Float128 Float64 Float128 Float16) Float32)
(declare-fun f3 (Float128 Float32 Float64 Float32 Float32 Float32 Float64 Float64 Float32 Float16) Float128)
(declare-fun f4 (Float64 Float32 Float32 Float16 Float32) Float32)
(declare-fun f5 (Float16 Float16 Float16 Float32 Float64 Float128 Float32 Float64) Float64)
(declare-fun f6 (Float32 Float128 Float64 Float64 Float64 Float32 Float128) Float128)
(declare-fun f7 (Float16 Float64 Float128 Float16 Float16 Float64 Float16 Float32 Float32 Float64) Float64)
(declare-fun f8 (Float64 Float128 Float64 Float32 Float16 Float128 Float16 Float64) Float16)
(declare-fun f9 (Float64 Float64 Float64 Float128) Float32)
(declare-fun f10 (Float128 Float128 Float128 Float128 Float32 Float64 Float32 Float32) Float64)
(declare-fun f11 (Float32 Float128 Float64 Float16) Float64)
(declare-fun f12 (Float32 Float128 Float16 Float32) Float64)
(declare-fun f13 (Float64 Float128 Float64 Float64 Float128 Float64) Float32)
(declare-fun f14 (Float32 Float32 Float16 Float128) Float32)
(declare-fun f15 (Float16 Float128 Float128 Float64 Float32 Float32 Float128 Float16 Float64 Float64) Float32)
(declare-fun f16 (Float32 Float64 Float16 Float128 Float128 Float16 Float64) Float32)
(declare-fun f17 (Float32 Float64 Float64 Float64) Float64)
(declare-fun f18 (Float64) Float32)
(declare-fun f19 (Float64) Float128)
(declare-fun f20 (Float16) Float16)
(declare-fun f21 (Float16 Float128 Float16 Float16 Float128 Float64 Float64 Float16 Float16) Float128)
(declare-fun f22 (Float64 Float128 Float32 Float128) Float32)
(declare-fun f23 (Float128 Float16 Float64 Float128 Float16 Float16 Float32 Float64 Float64) Float16)
(declare-fun f24 (Float128 Float16 Float32 Float16 Float16 Float64 Float32) Float128)
(declare-fun f25 (Float128) Float16)
(declare-fun f26 (Float128 Float64 Float16 Float32 Float16 Float128) Float32)
(declare-fun f27 (Float64) Float128)
(declare-fun f28 (Float32 Float32 Float64 Float32 Float16 Float16 Float32 Float32) Float64)
(declare-fun f29 (Float32 Float128 Float32) Float32)
(declare-fun f30 (Float16 Float64) Float32)
(declare-fun f31 (Float64 Float64) Float16)
(declare-fun f32 (Float32 Float16 Float32 Float128 Float64 Float64 Float64) Float64)
(declare-fun f33 (Float16) Float64)
(declare-fun f34 (Float32 Float64 Float32 Float128 Float16) Float16)
(declare-fun f35 (Float32) Float32)
(declare-fun f36 (Float128 Float128 Float64 Float16 Float64 Float32 Float128 Float16 Float64 Float64) Float128)
(declare-fun f37 (Float16 Float32 Float128 Float32) Float32)
(declare-fun f38 (Float16 Float64) Float128)
(declare-fun f39 (Float64) Float64)
(declare-fun f40 (Float128) Float16)
(declare-fun f41 (Float128) Float128)
(declare-fun f42 (Float16 Float128 Float16 Float32) Float64)
(declare-fun f43 (Float32 Float128 Float16 Float64 Float128 Float128) Float32)
(declare-fun f44 (Float128 Float128 Float128 Float128) Float32)
(declare-fun f45 (Float16 Float64 Float64 Float64 Float128 Float32 Float16 Float16) Float64)
(declare-fun f46 (Float16) Float16)
(declare-fun f47 (Float128 Float16 Float128 Float16 Float64 Float128 Float32 Float64) Float16)
(declare-fun f48 (Float128 Float128 Float32 Float64 Float32 Float16 Float32 Float16 Float16) Float128)
(declare-fun f49 (Float128) Float16)
(declare-fun p0 (Float64 Float128 Float16) Bool)
(declare-fun p1 (Float64 Float128 Float32 Float16 Float16 Float16 Float32) Bool)
(declare-fun p2 (Float16 Float32 Float64) Bool)
(declare-fun p3 (Float32 Float32 Float128) Bool)
(declare-fun p4 (Float64 Float16 Float128 Float32 Float64 Float128 Float128 Float16 Float16) Bool)
(declare-fun p5 (Float64 Float16) Bool)
(declare-fun p6 (Float16) Bool)
(declare-fun p7 (Float32) Bool)
(declare-fun p8 (Float64 Float32 Float16) Bool)
(declare-fun p9 (Float128 Float16 Float16 Float16 Float64 Float32 Float64 Float32 Float64 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float64)
(declare-const ?float62 Float32)
(declare-const ?float63 Float16)
(declare-const ?float64 Float16)
(declare-const ?float65 Float32)
(declare-const ?float66 Float128)
(declare-const ?float67 Float16)
(declare-const ?float68 Float128)
(declare-const ?float69 Float16)
(declare-const ?float70 Float128)
(declare-const ?float71 Float32)
(declare-const ?float72 Float128)
(declare-const ?float73 Float128)
(declare-const ?float74 Float16)
(declare-const ?float75 Float128)
(declare-const ?float76 Float64)
(declare-const ?float77 Float32)
(declare-const ?float78 Float64)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float83 Float128)
(assert (= ?float83 (fp #b1 #b111000101011100 #b0010111000000101101110011100001010110011111010101010011000010100001001100011000000100000011010010001110100010110)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b0 #b11100001 #b01101011000000001110110)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b0 #b10101 #b1011100011)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b1 #b00000000 #b00000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.div RNE ?float82 ((_ to_fp 8 24) RTN ?float91))))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.roundToIntegral RTN ?float67)))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.min ((_ to_fp 5 11) RNE ?float82) ?float101)))
(declare-const ?float103 Float32)
(assert (= ?float103 (fp.div RTP ?float85 ((_ to_fp 8 24) RNE ?float83))))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.min ?float75 ((_ to_fp 15 113) RTP ?float101))))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.roundToIntegral RNE ?float62)))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.sub RTZ ((_ to_fp 8 24) RTP ?float61) ?float65)))
(declare-const ?float107 Float128)
(assert (= ?float107 (f36 ((_ to_fp 15 113) RNE ?float99) ?float86 ((_ to_fp 11 53) RTP ?float88) ?float67 ((_ to_fp 11 53) RNE ?float68) ((_ to_fp 8 24) RNE ?float80) ((_ to_fp 15 113) RNE ?float74) ((_ to_fp 5 11) RTP ?float75) ((_ to_fp 11 53) RTZ ?float84) ((_ to_fp 11 53) RNE ?float95))))
(declare-const ?float108 Float64)
(assert (= ?float108 (f45 ?float84 ((_ to_fp 11 53) RTN ?float79) ((_ to_fp 11 53) RTN ?float83) ((_ to_fp 11 53) RNE ?float103) ((_ to_fp 15 113) RTN ?float97) ((_ to_fp 8 24) RNE ?float98) ((_ to_fp 5 11) RTZ ?float92) ((_ to_fp 5 11) RTP ?float81))))
(declare-const ?float109 Float32)
(assert (= ?float109 (fp.neg ?float93)))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.max ((_ to_fp 5 11) RTZ ?float85) ?float96)))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.max ((_ to_fp 8 24) RTP ?float67) ?float85)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.roundToIntegral RTP ?float89)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.div RTZ ?float78 ((_ to_fp 11 53) RTN ?float104))))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.max ?float77 ?float111)))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.div RTZ ?float70 ?float66)))
(declare-const ?float116 Float128)
(assert (= ?float116 (fp.add RTZ ?float75 ((_ to_fp 15 113) RTP ?float103))))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.max ((_ to_fp 11 53) RNE ?float100) ?float94)))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.min ((_ to_fp 15 113) RTP ?float81) ?float116)))
(declare-const ?float119 Float128)
(assert (= ?float119 (fp.div RNE ?float115 ?float72)))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.abs ?float62)))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.max ?float76 ((_ to_fp 11 53) RTP ?float101))))
(declare-const ?float122 Float64)
(assert (= ?float122 (fp.max ?float61 ((_ to_fp 11 53) RTN ?float87))))
(declare-const ?float123 Float128)
(assert (= ?float123 (fp.roundToIntegral RNE ?float104)))
(declare-const ?float124 Float32)
(assert (= ?float124 (f35 ((_ to_fp 8 24) RTN ?float97))))
(declare-const ?float125 Float128)
(assert (= ?float125 (fp.abs ?float104)))
(declare-const ?float126 Float16)
(assert (= ?float126 (fp.sqrt RTN ?float79)))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.add RTZ ?float85 ((_ to_fp 8 24) RTZ ?float94))))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.div RNE ((_ to_fp 11 53) RTZ ?float109) ?float76)))
(declare-const ?float129 Float128)
(assert (= ?float129 (fp.max ?float116 ((_ to_fp 15 113) RTZ ?float91))))
(declare-const ?float130 Float64)
(assert (= ?float130 (fp.sqrt RTP ?float128)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.mul RTP ?float117 ((_ to_fp 11 53) RNE ?float63))))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.abs ?float86)))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.sqrt RTZ ?float120)))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.roundToIntegral RTZ ?float79)))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.sub RTP ?float133 ((_ to_fp 8 24) RTP ?float89))))
(declare-const ?float136 Float32)
(assert (= ?float136 (fp.neg ?float93)))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.mul RTZ ?float135 ((_ to_fp 8 24) RTN ?float87))))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.sub RTN ?float69 ?float96)))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.min ?float104 ?float72)))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.roundToIntegral RTP ?float134)))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.abs ?float64)))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.add RTP ((_ to_fp 15 113) RTN ?float81) ?float139)))
(declare-const ?float143 Float32)
(assert (= ?float143 (fp.sub RTN ?float77 ((_ to_fp 8 24) RNE ?float118))))
(declare-const ?float144 Float32)
(assert (= ?float144 (f4 ?float130 ?float99 ?float82 ((_ to_fp 5 11) RTN ?float115) ((_ to_fp 8 24) RTN ?float132))))
(declare-const ?float145 Float32)
(assert (= ?float145 (f35 ?float65)))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.div RTP ?float111 ?float106)))
(declare-const ?float147 Float32)
(assert (= ?float147 (f22 ((_ to_fp 11 53) RTN ?float136) ((_ to_fp 15 113) RTN ?float82) ?float100 ?float107)))
(declare-const ?float148 Float16)
(assert (= ?float148 (f49 ((_ to_fp 15 113) RTN ?float61))))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.sqrt RTP ?float83)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p2 ((_ to_fp 5 11) RTP ?float99) ((_ to_fp 8 24) RTP ?float134) ((_ to_fp 11 53) RTZ ?float63))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isPositive ?float146)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isSubnormal ?float76)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.geq ?float107 ?float139)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNegative ?float62)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p8 ((_ to_fp 11 53) RTP ?float73) ?float106 ?float138)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.lt ?float81 ?float76)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isPositive ?float81)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNormal ?float76)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p4 ((_ to_fp 11 53) RTP ?float90) ((_ to_fp 5 11) RNE ?float112) ((_ to_fp 15 113) RNE ?float63) ((_ to_fp 8 24) RTN ?float97) ((_ to_fp 11 53) RTZ ?float140) ((_ to_fp 15 113) RNE ?float145) ((_ to_fp 15 113) RNE ?float111) ((_ to_fp 5 11) RTN ?float68) ((_ to_fp 5 11) RNE ?float107))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isInfinite ?float63)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.leq ?float75 ((_ to_fp 15 113) RTN ?float111))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNegative ?float128)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isZero ?float71)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isZero ?float100)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p2 ((_ to_fp 5 11) RTZ ?float109) ?float100 ((_ to_fp 11 53) RNE ?float145))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p3 ?float136 ?float111 ?float123)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNegative ?float84)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.leq ?float143 ?float136)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p1 ((_ to_fp 11 53) RTN ?float86) ?float129 ((_ to_fp 8 24) RTP ?float142) ((_ to_fp 5 11) RTP ?float118) ?float79 ((_ to_fp 5 11) RTN ?float108) ((_ to_fp 8 24) RTN ?float132))))
; FINAL ASSERT
(assert (and (or ?bool163 (and (and ?bool158 ?bool158))) ?bool158 ?bool156))
(check-sat)


-- iteration 8 --
(declare-fun f0 (Float128 Float64 Float16 Float128 Float64 Float64 Float32) Float16)
(declare-fun f1 (Float16 Float32 Float64 Float16 Float128 Float128 Float32 Float128 Float64) Float16)
(declare-fun f2 (Float32) Float128)
(declare-fun f3 (Float64 Float16 Float32 Float128 Float64) Float16)
(declare-fun f4 (Float128 Float32 Float64 Float64 Float64 Float64 Float16 Float16) Float128)
(declare-fun f5 (Float128) Float128)
(declare-fun f6 (Float64 Float128 Float16 Float16 Float32 Float64 Float64 Float32) Float64)
(declare-fun f7 (Float16 Float32 Float16 Float128 Float128 Float16 Float128 Float64 Float64 Float32) Float64)
(declare-fun f8 (Float32 Float32 Float16 Float128 Float64 Float64) Float128)
(declare-fun f9 (Float64 Float16 Float16 Float128 Float64 Float64 Float128) Float16)
(declare-fun f10 (Float128 Float16 Float16 Float32 Float64 Float32 Float16) Float128)
(declare-fun f11 (Float16 Float128 Float128 Float128 Float32 Float64 Float128) Float64)
(declare-fun f12 (Float128 Float32) Float128)
(declare-fun f13 (Float16 Float32 Float64 Float64) Float128)
(declare-fun f14 (Float128 Float128 Float128 Float64 Float16) Float128)
(declare-fun f15 (Float32 Float128 Float16 Float32 Float32 Float16 Float64 Float128 Float64 Float32) Float64)
(declare-fun f16 (Float32 Float128 Float128 Float32 Float64 Float16 Float64 Float64) Float32)
(declare-fun f17 (Float32 Float64 Float64 Float64 Float16) Float16)
(declare-fun f18 (Float16 Float128 Float64 Float128 Float64 Float128 Float64 Float64 Float64) Float64)
(declare-fun f19 (Float64 Float32 Float32) Float128)
(declare-fun f20 (Float16 Float64 Float16 Float16 Float16 Float64 Float128) Float64)
(declare-fun f21 (Float64 Float16 Float64) Float128)
(declare-fun f22 (Float32 Float32 Float64 Float128 Float16 Float128 Float128 Float128) Float16)
(declare-fun f23 (Float128 Float128) Float64)
(declare-fun f24 (Float64 Float128 Float16 Float64 Float128 Float128 Float64 Float32 Float64 Float16) Float128)
(declare-fun f25 (Float128 Float32 Float64 Float16 Float128 Float32 Float64 Float128) Float16)
(declare-fun f26 (Float32 Float32) Float32)
(declare-fun f27 (Float32 Float16 Float128 Float128) Float64)
(declare-fun f28 (Float128 Float16 Float128 Float16 Float32 Float32) Float16)
(declare-fun f29 (Float32 Float16 Float128 Float16 Float32 Float16 Float32) Float128)
(declare-fun f30 (Float32 Float64) Float16)
(declare-fun f31 (Float32 Float32) Float16)
(declare-fun f32 (Float32 Float16) Float16)
(declare-fun f33 (Float128 Float128 Float64 Float64 Float128 Float128 Float128) Float64)
(declare-fun f34 (Float16 Float16 Float16) Float128)
(declare-fun f35 (Float128 Float64 Float16 Float64) Float16)
(declare-fun f36 (Float16 Float32 Float16) Float128)
(declare-fun f37 (Float128 Float128 Float32 Float32 Float32) Float32)
(declare-fun f38 (Float32 Float64 Float64 Float32 Float16 Float32 Float64 Float128 Float32) Float128)
(declare-fun f39 (Float16 Float16 Float64 Float32 Float128 Float64 Float16) Float64)
(declare-fun f40 (Float128 Float32 Float16 Float32 Float128 Float16) Float128)
(declare-fun f41 (Float32 Float128 Float16 Float16 Float32 Float16 Float128) Float32)
(declare-fun f42 (Float16 Float64 Float64 Float16) Float32)
(declare-fun f43 (Float32 Float32 Float16 Float64 Float16 Float32 Float128 Float128) Float64)
(declare-fun f44 (Float128 Float16 Float32 Float32) Float32)
(declare-fun f45 (Float32 Float16 Float32 Float16 Float32) Float32)
(declare-fun f46 (Float128 Float128 Float64 Float64 Float32 Float16 Float64 Float32) Float16)
(declare-fun f47 (Float16) Float64)
(declare-fun f48 (Float32) Float128)
(declare-fun f49 (Float32 Float16 Float32 Float16 Float16 Float32 Float128) Float16)
(declare-fun p0 (Float64 Float16) Bool)
(declare-fun p1 (Float16 Float16 Float32 Float128 Float128 Float32 Float32) Bool)
(declare-fun p2 (Float32) Bool)
(declare-fun p3 (Float128 Float64 Float64 Float128 Float128 Float128 Float32 Float32) Bool)
(declare-fun p4 (Float128 Float32) Bool)
(declare-fun p5 (Float16) Bool)
(declare-fun p6 (Float16) Bool)
(declare-fun p7 (Float16 Float128 Float64 Float128 Float64 Float16 Float64 Float64 Float128 Float128) Bool)
(declare-fun p8 (Float64 Float32 Float32 Float128 Float64 Float32 Float64) Bool)
(declare-fun p9 (Float128 Float16 Float64 Float64 Float64 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float16)
(declare-const ?float62 Float64)
(declare-const ?float63 Float64)
(declare-const ?float64 Float32)
(declare-const ?float65 Float32)
(declare-const ?float66 Float32)
(declare-const ?float67 Float32)
(declare-const ?float68 Float16)
(declare-const ?float69 Float64)
(declare-const ?float70 Float128)
(declare-const ?float71 Float16)
(declare-const ?float72 Float128)
(declare-const ?float73 Float32)
(declare-const ?float74 Float64)
(declare-const ?float75 Float32)
(declare-const ?float76 Float32)
(declare-const ?float77 Float32)
(declare-const ?float78 Float16)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float84 Float128)
(assert (= ?float84 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b0 #b11011000101 #b0100000101000111010000110110110101001001000110001101)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b1 #b10110001001 #b1111101011001001000010100100111101010011011001011110)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b1 #b00101001 #b01011111011000010000100)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b1 #b11000 #b0101100010)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b0 #b10111001110 #b1100011000000001100101011011111101010100011001011011)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b1 #b00001 #b0000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (fp.div RNE ?float74 ?float62)))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.div RNE ?float67 ?float85)))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.sub RNE ?float99 ?float82)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.max ((_ to_fp 5 11) RTN ?float95) ?float78)))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.sub RTZ ((_ to_fp 8 24) RTN ?float84) ?float81)))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.sub RNE ((_ to_fp 8 24) RTN ?float71) ?float90)))
(declare-const ?float106 Float64)
(assert (= ?float106 (f6 ((_ to_fp 11 53) RTN ?float70) ((_ to_fp 15 113) RNE ?float74) ((_ to_fp 5 11) RTP ?float67) ((_ to_fp 5 11) RTP ?float62) ((_ to_fp 8 24) RNE ?float79) ((_ to_fp 11 53) RTZ ?float71) ((_ to_fp 11 53) RTN ?float70) ?float94)))
(declare-const ?float107 Float64)
(assert (= ?float107 (f7 ?float78 ?float67 ((_ to_fp 5 11) RTP ?float96) ((_ to_fp 15 113) RTN ?float81) ((_ to_fp 15 113) RTZ ?float91) ((_ to_fp 5 11) RNE ?float100) ((_ to_fp 15 113) RTZ ?float98) ((_ to_fp 11 53) RTZ ?float66) ?float69 ((_ to_fp 8 24) RTN ?float70))))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.roundToIntegral RTP ?float87)))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.add RTZ ((_ to_fp 11 53) RTN ?float70) ?float63)))
(declare-const ?float110 Float128)
(assert (= ?float110 (f19 ?float87 ((_ to_fp 8 24) RTN ?float69) ((_ to_fp 8 24) RTP ?float92))))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.sub RNE ?float93 ((_ to_fp 5 11) RTZ ?float81))))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.neg ?float67)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.sqrt RNE ?float100)))
(declare-const ?float114 Float128)
(assert (= ?float114 (f29 ((_ to_fp 8 24) RTZ ?float78) ((_ to_fp 5 11) RTN ?float63) ((_ to_fp 15 113) RTZ ?float61) ((_ to_fp 5 11) RNE ?float83) ((_ to_fp 8 24) RTZ ?float108) ?float79 ((_ to_fp 8 24) RNE ?float99))))
(declare-const ?float115 Float32)
(assert (= ?float115 (f45 ((_ to_fp 8 24) RTN ?float107) ((_ to_fp 5 11) RTZ ?float95) ((_ to_fp 8 24) RNE ?float96) ((_ to_fp 5 11) RTZ ?float65) ?float80)))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.sqrt RNE ?float83)))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.add RTZ ?float100 ((_ to_fp 11 53) RTP ?float82))))
(declare-const ?float118 Float16)
(assert (= ?float118 (f17 ?float88 ?float62 ((_ to_fp 11 53) RNE ?float70) ((_ to_fp 11 53) RNE ?float85) ((_ to_fp 5 11) RTZ ?float83))))
(declare-const ?float119 Float128)
(assert (= ?float119 (f29 ((_ to_fp 8 24) RNE ?float61) ((_ to_fp 5 11) RTZ ?float106) ((_ to_fp 15 113) RNE ?float91) ((_ to_fp 5 11) RTZ ?float98) ((_ to_fp 8 24) RTP ?float79) ((_ to_fp 5 11) RNE ?float83) ?float104)))
(declare-const ?float120 Float16)
(assert (= ?float120 (fp.roundToIntegral RTN ?float111)))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.max ?float103 ((_ to_fp 5 11) RTN ?float96))))
(declare-const ?float122 Float16)
(assert (= ?float122 (f31 ((_ to_fp 8 24) RTP ?float96) ((_ to_fp 8 24) RTP ?float93))))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.max ((_ to_fp 8 24) RTP ?float96) ?float90)))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.mul RTP ((_ to_fp 11 53) RNE ?float65) ?float87)))
(declare-const ?float125 Float16)
(assert (= ?float125 (f35 ((_ to_fp 15 113) RTZ ?float104) ((_ to_fp 11 53) RNE ?float92) ?float111 ((_ to_fp 11 53) RTN ?float112))))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.sqrt RNE ?float70)))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.max ?float92 ((_ to_fp 5 11) RTZ ?float119))))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.abs ?float87)))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.roundToIntegral RTP ?float88)))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.max ?float112 ((_ to_fp 8 24) RNE ?float126))))
(declare-const ?float131 Float16)
(assert (= ?float131 (f1 ((_ to_fp 5 11) RTP ?float84) ((_ to_fp 8 24) RTZ ?float68) ((_ to_fp 11 53) RTZ ?float119) ((_ to_fp 5 11) RNE ?float72) ((_ to_fp 15 113) RTZ ?float109) ((_ to_fp 15 113) RTP ?float61) ((_ to_fp 8 24) RTN ?float62) ((_ to_fp 15 113) RNE ?float94) ((_ to_fp 11 53) RNE ?float110))))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.abs ?float72)))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.div RTP ?float120 ?float68)))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.div RTP ?float122 ((_ to_fp 5 11) RTP ?float98))))
(declare-const ?float135 Float64)
(assert (= ?float135 (fp.add RTP ((_ to_fp 11 53) RTZ ?float114) ?float100)))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.min ((_ to_fp 11 53) RTP ?float134) ?float117)))
(declare-const ?float137 Float32)
(assert (= ?float137 (f37 ?float72 ((_ to_fp 15 113) RTP ?float74) ((_ to_fp 8 24) RTZ ?float97) ?float66 ?float130)))
(declare-const ?float138 Float128)
(assert (= ?float138 (fp.div RTN ((_ to_fp 15 113) RTP ?float94) ?float70)))
(declare-const ?float139 Float128)
(assert (= ?float139 (f5 ((_ to_fp 15 113) RNE ?float68))))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.sqrt RTN ?float123)))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.sqrt RTZ ?float122)))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.abs ?float86)))
(declare-const ?float143 Float128)
(assert (= ?float143 (fp.abs ?float97)))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.neg ?float108)))
(declare-const ?float145 Float128)
(assert (= ?float145 (fp.roundToIntegral RTP ?float119)))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.min ?float112 ?float76)))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.sub RTZ ((_ to_fp 15 113) RTP ?float67) ?float126)))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.min ?float100 ?float124)))
(declare-const ?float149 Float16)
(assert (= ?float149 (f9 ((_ to_fp 11 53) RTP ?float70) ((_ to_fp 5 11) RNE ?float108) ?float131 ?float72 ((_ to_fp 11 53) RTP ?float92) ((_ to_fp 11 53) RTN ?float111) ((_ to_fp 15 113) RTN ?float131))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isPositive ?float131)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isSubnormal ?float122)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.eq ?float89 ?float69)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.eq ((_ to_fp 11 53) RTN ?float85) ?float136)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isInfinite ?float106)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isZero ?float126)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.gt ((_ to_fp 15 113) RNE ?float75) ?float86)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isPositive ?float113)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.eq ((_ to_fp 5 11) RTZ ?float129) ?float131)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p9 ((_ to_fp 15 113) RTZ ?float92) ((_ to_fp 5 11) RTP ?float95) ((_ to_fp 11 53) RTP ?float139) ((_ to_fp 11 53) RTZ ?float86) ((_ to_fp 11 53) RTP ?float67) ((_ to_fp 15 113) RTN ?float96))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isPositive ?float114)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isPositive ?float86)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isPositive ?float76)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.lt ?float94 ((_ to_fp 8 24) RTZ ?float136))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.lt ((_ to_fp 5 11) RTN ?float65) ?float125)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isPositive ?float70)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p7 ((_ to_fp 5 11) RTP ?float94) ((_ to_fp 15 113) RTP ?float113) ((_ to_fp 11 53) RTN ?float119) ((_ to_fp 15 113) RTZ ?float104) ((_ to_fp 11 53) RTZ ?float104) ((_ to_fp 5 11) RTP ?float119) ((_ to_fp 11 53) RTZ ?float103) ((_ to_fp 11 53) RTZ ?float129) ((_ to_fp 15 113) RTZ ?float148) ((_ to_fp 15 113) RNE ?float71))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.eq ?float97 ((_ to_fp 15 113) RNE ?float130))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (p1 ((_ to_fp 5 11) RTZ ?float66) ((_ to_fp 5 11) RTZ ?float142) ?float75 ((_ to_fp 15 113) RNE ?float102) ((_ to_fp 15 113) RTZ ?float108) ?float105 ((_ to_fp 8 24) RNE ?float124))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.geq ((_ to_fp 5 11) RNE ?float90) ?float125)))
; FINAL ASSERT
(assert (and (and ?bool163) ?bool168 (and ?bool159 ?bool150 ?bool152)))
(check-sat)


-- iteration 9 --
(declare-fun f0 (Float16 Float16 Float16 Float64 Float128 Float128 Float16 Float64) Float128)
(declare-fun f1 (Float32 Float128 Float32 Float32 Float32 Float64 Float128 Float16 Float128) Float128)
(declare-fun f2 (Float16 Float32 Float16 Float128 Float32 Float64) Float128)
(declare-fun f3 (Float128 Float32) Float128)
(declare-fun f4 (Float32 Float32 Float16 Float16) Float64)
(declare-fun f5 (Float16 Float64 Float16 Float16 Float64 Float32 Float128 Float128 Float32) Float64)
(declare-fun f6 (Float128 Float64 Float16 Float16) Float32)
(declare-fun f7 (Float32 Float64 Float128 Float128 Float128) Float64)
(declare-fun f8 (Float128 Float128 Float128 Float64 Float32 Float32 Float32) Float128)
(declare-fun f9 (Float32 Float64 Float128 Float64 Float128 Float64 Float64) Float64)
(declare-fun f10 (Float128 Float32 Float64 Float32) Float64)
(declare-fun f11 (Float16 Float128 Float32 Float128) Float128)
(declare-fun f12 (Float128 Float32 Float32 Float32 Float128 Float16) Float32)
(declare-fun f13 (Float16 Float64 Float64 Float16 Float128 Float16 Float64 Float64) Float64)
(declare-fun f14 (Float128 Float16 Float16 Float32 Float16) Float16)
(declare-fun f15 (Float16 Float128 Float128 Float128 Float64 Float128 Float16 Float64 Float16) Float16)
(declare-fun f16 (Float128 Float32 Float16 Float16 Float32 Float32 Float16) Float128)
(declare-fun f17 (Float32 Float32 Float32 Float64) Float64)
(declare-fun f18 (Float64 Float128) Float128)
(declare-fun f19 (Float64 Float32 Float16 Float64 Float16 Float128) Float64)
(declare-fun f20 (Float128 Float16 Float64 Float16) Float64)
(declare-fun f21 (Float16 Float16 Float32 Float128 Float128 Float16 Float128 Float16 Float32) Float16)
(declare-fun f22 (Float16 Float16 Float32 Float16 Float32 Float64 Float128 Float16 Float32) Float64)
(declare-fun f23 (Float64 Float64 Float128 Float16 Float128 Float16) Float32)
(declare-fun f24 (Float32 Float128 Float64 Float128 Float128 Float64 Float128 Float32) Float128)
(declare-fun f25 (Float16) Float32)
(declare-fun f26 (Float128 Float32 Float16 Float32 Float16 Float16 Float128 Float128 Float32 Float32) Float128)
(declare-fun f27 (Float128 Float64 Float64) Float64)
(declare-fun f28 (Float32 Float32 Float64 Float128 Float32) Float32)
(declare-fun f29 (Float128 Float64 Float128 Float128 Float16 Float16 Float32 Float128) Float128)
(declare-fun f30 (Float128 Float16 Float32 Float32 Float32 Float128 Float128) Float64)
(declare-fun f31 (Float32 Float32 Float128 Float64 Float16 Float64 Float16 Float16 Float16 Float32) Float32)
(declare-fun f32 (Float128 Float32) Float128)
(declare-fun f33 (Float16 Float32) Float32)
(declare-fun f34 (Float64 Float16 Float128 Float16 Float128) Float128)
(declare-fun f35 (Float16 Float16 Float32 Float32 Float128 Float128) Float32)
(declare-fun f36 (Float16 Float32 Float16 Float64 Float32 Float128) Float32)
(declare-fun f37 (Float128 Float64 Float128 Float32 Float32 Float128 Float32 Float32 Float128 Float64) Float64)
(declare-fun f38 (Float16 Float64 Float16 Float128 Float64 Float16 Float64 Float64) Float16)
(declare-fun f39 (Float32 Float64 Float128 Float32 Float16 Float32) Float64)
(declare-fun f40 (Float16 Float32 Float128 Float16 Float16 Float64 Float128 Float64 Float32) Float64)
(declare-fun f41 (Float128 Float128 Float64 Float16 Float16 Float16 Float16 Float128 Float32) Float64)
(declare-fun f42 (Float64 Float64 Float16) Float64)
(declare-fun f43 (Float32 Float32 Float64 Float32) Float128)
(declare-fun f44 (Float128 Float16 Float16) Float32)
(declare-fun f45 (Float64 Float128 Float64 Float64 Float32 Float16 Float64 Float16) Float64)
(declare-fun f46 (Float128 Float32 Float32 Float32 Float32 Float32 Float32 Float64 Float64) Float64)
(declare-fun f47 (Float32 Float64 Float64 Float32 Float128 Float64 Float64) Float128)
(declare-fun f48 (Float64 Float64 Float128 Float32 Float16) Float16)
(declare-fun f49 (Float64 Float16 Float64 Float16 Float16 Float16 Float32) Float128)
(declare-fun p0 (Float32 Float16 Float128 Float64 Float16) Bool)
(declare-fun p1 (Float16 Float32 Float16 Float32 Float16 Float128 Float16 Float64) Bool)
(declare-fun p2 (Float64 Float128) Bool)
(declare-fun p3 (Float32 Float32 Float64 Float16 Float64 Float16 Float16 Float32) Bool)
(declare-fun p4 (Float32 Float16 Float32 Float128 Float32 Float16 Float64 Float16 Float128 Float64) Bool)
(declare-fun p5 (Float64 Float128 Float64 Float32) Bool)
(declare-fun p6 (Float64) Bool)
(declare-fun p7 (Float64 Float64 Float16 Float32 Float64 Float64 Float32 Float64) Bool)
(declare-fun p8 (Float16 Float32 Float64 Float32 Float16 Float16) Bool)
(declare-fun p9 (Float32 Float16 Float16 Float128 Float16 Float128 Float32 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float64)
(declare-const ?float62 Float64)
(declare-const ?float63 Float64)
(declare-const ?float64 Float64)
(declare-const ?float65 Float64)
(declare-const ?float66 Float128)
(declare-const ?float67 Float16)
(declare-const ?float68 Float32)
(declare-const ?float69 Float32)
(declare-const ?float70 Float64)
(declare-const ?float71 Float16)
(declare-const ?float72 Float32)
(declare-const ?float73 Float16)
(declare-const ?float74 Float64)
(declare-const ?float75 Float32)
(declare-const ?float76 Float32)
(declare-const ?float77 Float64)
(declare-const ?float78 Float32)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b0 #b010110000011100 #b1110101100001110010000101011010011011001011011100010011010001010010000001111111111110010001010011010010011001011)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b1 #b111011001110110 #b0100101100000111110011010000011101110100000110000010100001010000010100111011111100000110001001010101111011101000)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b1 #b00001 #b0000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.neg ?float71)))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.abs ?float89)))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.sub RNE ?float72 ((_ to_fp 8 24) RTP ?float99))))
(declare-const ?float103 Float32)
(assert (= ?float103 (fp.add RTN ?float72 ((_ to_fp 8 24) RNE ?float101))))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.sqrt RTN ?float63)))
(declare-const ?float105 Float32)
(assert (= ?float105 (f12 ((_ to_fp 15 113) RTZ ?float61) ((_ to_fp 8 24) RTZ ?float70) ((_ to_fp 8 24) RTP ?float90) ((_ to_fp 8 24) RTP ?float89) ((_ to_fp 15 113) RNE ?float102) ((_ to_fp 5 11) RTN ?float81))))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.neg ?float66)))
(declare-const ?float107 Float128)
(assert (= ?float107 (fp.roundToIntegral RNE ?float92)))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.add RNE ?float68 ((_ to_fp 8 24) RTZ ?float88))))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.max ?float85 ((_ to_fp 15 113) RTP ?float61))))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.min ?float98 ((_ to_fp 5 11) RNE ?float84))))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.min ((_ to_fp 8 24) RNE ?float96) ?float72)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.abs ?float84)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.sqrt RTZ ?float84)))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.neg ?float71)))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.max ?float81 ?float109)))
(declare-const ?float116 Float128)
(assert (= ?float116 (f49 ((_ to_fp 11 53) RTN ?float95) ((_ to_fp 5 11) RTN ?float83) ((_ to_fp 11 53) RTN ?float114) ((_ to_fp 5 11) RNE ?float65) ((_ to_fp 5 11) RTN ?float81) ((_ to_fp 5 11) RTP ?float83) ?float79)))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.add RTN ?float99 ((_ to_fp 5 11) RNE ?float84))))
(declare-const ?float118 Float64)
(assert (= ?float118 (fp.abs ?float112)))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.neg ?float61)))
(declare-const ?float120 Float16)
(assert (= ?float120 (f14 ?float94 ((_ to_fp 5 11) RTZ ?float94) ((_ to_fp 5 11) RTZ ?float69) ((_ to_fp 8 24) RTN ?float104) ((_ to_fp 5 11) RTN ?float70))))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.sub RTP ?float79 ?float82)))
(declare-const ?float122 Float32)
(assert (= ?float122 (fp.sub RTZ ?float69 ((_ to_fp 8 24) RTP ?float83))))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.min ?float111 ?float105)))
(declare-const ?float124 Float16)
(assert (= ?float124 (fp.max ((_ to_fp 5 11) RTZ ?float95) ?float117)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.mul RTP ?float72 ((_ to_fp 8 24) RTP ?float109))))
(declare-const ?float126 Float32)
(assert (= ?float126 (f44 ((_ to_fp 15 113) RTZ ?float114) ((_ to_fp 5 11) RTZ ?float83) ((_ to_fp 5 11) RNE ?float87))))
(declare-const ?float127 Float64)
(assert (= ?float127 (f20 ((_ to_fp 15 113) RTZ ?float64) ((_ to_fp 5 11) RTN ?float76) ?float64 ((_ to_fp 5 11) RTP ?float91))))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.div RTP ((_ to_fp 15 113) RTP ?float74) ?float107)))
(declare-const ?float129 Float128)
(assert (= ?float129 (fp.sqrt RNE ?float115)))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.sub RTN ((_ to_fp 5 11) RTZ ?float92) ?float71)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.add RTZ ?float86 ((_ to_fp 11 53) RTP ?float75))))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.div RTP ((_ to_fp 8 24) RTN ?float119) ?float97)))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.add RTZ ?float98 ?float110)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.sqrt RTZ ?float107)))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.sub RTP ?float121 ((_ to_fp 8 24) RTP ?float77))))
(declare-const ?float136 Float16)
(assert (= ?float136 (f21 ((_ to_fp 5 11) RTN ?float75) ((_ to_fp 5 11) RTP ?float109) ((_ to_fp 8 24) RTP ?float128) ?float95 ((_ to_fp 15 113) RNE ?float86) ?float98 ?float95 ?float71 ((_ to_fp 8 24) RTP ?float66))))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.mul RTZ ((_ to_fp 8 24) RNE ?float91) ?float111)))
(declare-const ?float138 Float64)
(assert (= ?float138 (fp.mul RTZ ((_ to_fp 11 53) RTP ?float101) ?float86)))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.sqrt RNE ?float114)))
(declare-const ?float140 Float64)
(assert (= ?float140 (fp.abs ?float70)))
(declare-const ?float141 Float32)
(assert (= ?float141 (fp.abs ?float137)))
(declare-const ?float142 Float32)
(assert (= ?float142 (fp.abs ?float111)))
(declare-const ?float143 Float64)
(assert (= ?float143 (f10 ((_ to_fp 15 113) RTZ ?float111) ?float97 ((_ to_fp 11 53) RTN ?float89) ((_ to_fp 8 24) RTP ?float99))))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.add RTP ?float77 ?float63)))
(declare-const ?float145 Float64)
(assert (= ?float145 (f27 ((_ to_fp 15 113) RTP ?float105) ((_ to_fp 11 53) RTZ ?float124) ((_ to_fp 11 53) RTZ ?float130))))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.add RTN ?float79 ?float72)))
(declare-const ?float147 Float16)
(assert (= ?float147 (fp.roundToIntegral RNE ?float117)))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.sub RTP ((_ to_fp 11 53) RTP ?float132) ?float86)))
(declare-const ?float149 Float32)
(assert (= ?float149 (f44 ((_ to_fp 15 113) RTN ?float82) ((_ to_fp 5 11) RTP ?float127) ((_ to_fp 5 11) RTP ?float70))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isNaN ?float140)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p7 ((_ to_fp 11 53) RTN ?float115) ?float84 ((_ to_fp 5 11) RTN ?float129) ?float75 ((_ to_fp 11 53) RTP ?float89) ?float143 ((_ to_fp 8 24) RTN ?float131) ?float127)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.gt ((_ to_fp 11 53) RTN ?float146) ?float83)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isPositive ?float95)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isPositive ?float139)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isNormal ?float99)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNormal ?float122)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNegative ?float63)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isZero ?float113)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.gt ?float90 ?float144)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNegative ?float128)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.leq ((_ to_fp 11 53) RTZ ?float96) ?float62)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNormal ?float136)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.leq ((_ to_fp 15 113) RNE ?float137) ?float94)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (p8 ((_ to_fp 5 11) RNE ?float65) ((_ to_fp 8 24) RTZ ?float83) ((_ to_fp 11 53) RTZ ?float101) ((_ to_fp 8 24) RTP ?float117) ((_ to_fp 5 11) RTP ?float132) ((_ to_fp 5 11) RNE ?float82))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isNaN ?float114)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p8 ((_ to_fp 5 11) RTN ?float92) ((_ to_fp 8 24) RTP ?float144) ((_ to_fp 11 53) RTN ?float122) ((_ to_fp 8 24) RTP ?float133) ((_ to_fp 5 11) RTN ?float91) ((_ to_fp 5 11) RNE ?float127))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNormal ?float88)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (p6 ((_ to_fp 11 53) RTP ?float125))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNaN ?float147)))
; FINAL ASSERT
(assert (or (or (and ?bool163 (or (or (or (and ?bool162) (or ?bool164))) (or (and ?bool153 (and ?bool166) (and ?bool150 ?bool151))) (and ?bool159 (and (and ?bool151 ?bool154) ?bool161 ?bool165) ?bool165))) (or ?bool152))))
(check-sat)


-- iteration 10 --
(declare-fun f0 (Float32 Float128 Float64 Float128) Float128)
(declare-fun f1 (Float32) Float16)
(declare-fun f2 (Float32 Float16 Float64 Float128 Float64 Float32 Float16 Float32 Float16 Float32) Float128)
(declare-fun f3 (Float16) Float128)
(declare-fun f4 (Float64 Float16 Float64 Float128 Float32) Float128)
(declare-fun f5 (Float128 Float128) Float16)
(declare-fun f6 (Float32 Float32 Float64 Float16 Float16 Float32 Float32 Float128) Float16)
(declare-fun f7 (Float64 Float64 Float16 Float32 Float128 Float16 Float128) Float32)
(declare-fun f8 (Float64) Float128)
(declare-fun f9 (Float16 Float128 Float64 Float128 Float128 Float128 Float32 Float32 Float64) Float16)
(declare-fun f10 (Float64 Float128 Float64 Float128 Float16) Float128)
(declare-fun f11 (Float128 Float16 Float32 Float16 Float128 Float64 Float32 Float128 Float128) Float32)
(declare-fun f12 (Float16 Float64 Float64) Float16)
(declare-fun f13 (Float128 Float64 Float64 Float64 Float16) Float16)
(declare-fun f14 (Float32 Float128 Float16 Float128 Float16 Float128 Float128 Float64 Float128) Float32)
(declare-fun f15 (Float32 Float64 Float16 Float128 Float128) Float16)
(declare-fun f16 (Float32 Float32 Float128 Float128 Float32 Float16 Float32) Float64)
(declare-fun f17 (Float16 Float128 Float64 Float32 Float64 Float32) Float64)
(declare-fun f18 (Float64 Float64 Float16 Float16 Float16 Float64 Float64) Float32)
(declare-fun f19 (Float32) Float128)
(declare-fun f20 (Float64 Float32 Float32 Float16 Float128 Float128 Float16) Float128)
(declare-fun f21 (Float16 Float32 Float128 Float128 Float128 Float16 Float128) Float128)
(declare-fun f22 (Float16 Float128 Float32 Float64 Float16 Float64) Float16)
(declare-fun f23 (Float16 Float128 Float32 Float16 Float16) Float32)
(declare-fun f24 (Float64 Float128 Float128) Float16)
(declare-fun f25 (Float128 Float128 Float32) Float128)
(declare-fun f26 (Float16 Float64 Float16 Float16 Float64 Float128 Float64 Float16 Float32) Float32)
(declare-fun f27 (Float128 Float16 Float16) Float128)
(declare-fun f28 (Float16 Float64) Float16)
(declare-fun f29 (Float128 Float16) Float32)
(declare-fun f30 (Float16 Float32 Float32) Float128)
(declare-fun f31 (Float128 Float64 Float32 Float32 Float128 Float16) Float128)
(declare-fun f32 (Float64 Float16 Float16 Float16 Float128 Float128 Float16 Float16) Float64)
(declare-fun f33 (Float16 Float16 Float64 Float16 Float16 Float16 Float16) Float128)
(declare-fun f34 (Float16 Float32 Float32) Float32)
(declare-fun f35 (Float64 Float64 Float16 Float32 Float32 Float64 Float16 Float64) Float32)
(declare-fun f36 (Float32 Float16) Float16)
(declare-fun f37 (Float128 Float32 Float64 Float32 Float32 Float128 Float32 Float16) Float16)
(declare-fun f38 (Float32 Float64 Float16) Float16)
(declare-fun f39 (Float64 Float16 Float64 Float16 Float64 Float16) Float16)
(declare-fun f40 (Float64 Float128 Float128 Float16 Float32 Float128) Float16)
(declare-fun f41 (Float16 Float128 Float32 Float16 Float16 Float64 Float128 Float128 Float16 Float128) Float16)
(declare-fun f42 (Float64 Float128 Float64 Float64 Float128 Float128 Float64 Float16 Float32 Float16) Float128)
(declare-fun f43 (Float16 Float64 Float128 Float32 Float64 Float128) Float128)
(declare-fun f44 (Float16 Float128 Float64 Float16 Float128 Float16 Float64 Float128 Float32) Float64)
(declare-fun f45 (Float16 Float16 Float64 Float32 Float64 Float16) Float16)
(declare-fun f46 (Float16 Float32) Float64)
(declare-fun f47 (Float64 Float32 Float128 Float64 Float128) Float32)
(declare-fun f48 (Float16 Float64 Float64 Float32 Float32 Float32) Float32)
(declare-fun f49 (Float64 Float32 Float32 Float64) Float128)
(declare-fun p0 (Float128 Float16 Float64 Float128 Float128 Float128 Float128 Float64 Float128 Float128) Bool)
(declare-fun p1 (Float16 Float16 Float128 Float64 Float128 Float32) Bool)
(declare-fun p2 (Float16 Float128 Float64) Bool)
(declare-fun p3 (Float16 Float128 Float64 Float64 Float128) Bool)
(declare-fun p4 (Float16 Float128 Float32) Bool)
(declare-fun p5 (Float128 Float16) Bool)
(declare-fun p6 (Float32) Bool)
(declare-fun p7 (Float128) Bool)
(declare-fun p8 (Float32 Float64 Float32 Float32 Float32 Float64 Float64 Float64 Float64) Bool)
(declare-fun p9 (Float128 Float128 Float64 Float64 Float32 Float32 Float16 Float16 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float64)
(declare-const ?float62 Float16)
(declare-const ?float63 Float32)
(declare-const ?float64 Float32)
(declare-const ?float65 Float16)
(declare-const ?float66 Float128)
(declare-const ?float67 Float32)
(declare-const ?float68 Float128)
(declare-const ?float69 Float128)
(declare-const ?float70 Float16)
(declare-const ?float71 Float64)
(declare-const ?float72 Float16)
(declare-const ?float73 Float128)
(declare-const ?float74 Float16)
(declare-const ?float75 Float16)
(declare-const ?float76 Float128)
(declare-const ?float77 Float128)
(declare-const ?float78 Float128)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float84 Float128)
(assert (= ?float84 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b0 #b11010011100 #b0111110011011100100110010010011111111110110001011001)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b1 #b001111000100011 #b0000100110101110011101110001000011100101110011011010011111101011010011000110011111110010111011111101111100000011)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b0 #b01101001 #b10001101100110110011110)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.neg ?float75)))
(declare-const ?float101 Float64)
(assert (= ?float101 (fp.add RTZ ((_ to_fp 11 53) RTZ ?float94) ?float81)))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.add RTZ ?float88 ((_ to_fp 15 113) RTZ ?float61))))
(declare-const ?float103 Float128)
(assert (= ?float103 (fp.sub RTP ?float88 ?float69)))
(declare-const ?float104 Float16)
(assert (= ?float104 (f1 ?float89)))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.div RTP ?float72 ?float70)))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.neg ?float61)))
(declare-const ?float107 Float64)
(assert (= ?float107 (fp.div RNE ?float95 ((_ to_fp 11 53) RTN ?float67))))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.add RTP ?float102 ((_ to_fp 15 113) RTN ?float71))))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.mul RTN ?float86 ((_ to_fp 11 53) RTP ?float105))))
(declare-const ?float110 Float32)
(assert (= ?float110 (fp.mul RNE ?float63 ?float67)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.min ?float90 ((_ to_fp 5 11) RTZ ?float95))))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.mul RNE ((_ to_fp 8 24) RTZ ?float74) ?float89)))
(declare-const ?float113 Float128)
(assert (= ?float113 (fp.abs ?float84)))
(declare-const ?float114 Float128)
(assert (= ?float114 (fp.max ?float102 ((_ to_fp 15 113) RTN ?float81))))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.sub RTP ?float108 ((_ to_fp 15 113) RTZ ?float100))))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.div RTZ ?float104 ?float111)))
(declare-const ?float117 Float32)
(assert (= ?float117 (f47 ?float80 ((_ to_fp 8 24) RTP ?float71) ((_ to_fp 15 113) RTN ?float97) ((_ to_fp 11 53) RNE ?float70) ((_ to_fp 15 113) RTZ ?float104))))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.div RTP ?float100 ?float116)))
(declare-const ?float119 Float128)
(assert (= ?float119 (f8 ((_ to_fp 11 53) RNE ?float94))))
(declare-const ?float120 Float16)
(assert (= ?float120 (fp.div RTZ ((_ to_fp 5 11) RTZ ?float119) ?float62)))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.div RNE ?float114 ((_ to_fp 15 113) RTN ?float91))))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.add RTP ?float65 ((_ to_fp 5 11) RNE ?float88))))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.abs ?float80)))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.max ((_ to_fp 8 24) RTP ?float100) ?float64)))
(declare-const ?float125 Float16)
(assert (= ?float125 (fp.add RTN ((_ to_fp 5 11) RTN ?float102) ?float104)))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.div RNE ?float103 ?float103)))
(declare-const ?float127 Float16)
(assert (= ?float127 (f9 ((_ to_fp 5 11) RNE ?float73) ?float108 ?float107 ?float78 ((_ to_fp 15 113) RTN ?float107) ((_ to_fp 15 113) RTN ?float72) ((_ to_fp 8 24) RTN ?float70) ((_ to_fp 8 24) RTN ?float93) ?float86)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.sub RNE ((_ to_fp 8 24) RNE ?float84) ?float89)))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.abs ?float128)))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.mul RTP ((_ to_fp 8 24) RTP ?float127) ?float124)))
(declare-const ?float131 Float128)
(assert (= ?float131 (f3 ((_ to_fp 5 11) RTN ?float121))))
(declare-const ?float132 Float64)
(assert (= ?float132 (f46 ((_ to_fp 5 11) RNE ?float117) ((_ to_fp 8 24) RNE ?float120))))
(declare-const ?float133 Float128)
(assert (= ?float133 (fp.add RTP ?float114 ((_ to_fp 15 113) RTZ ?float74))))
(declare-const ?float134 Float16)
(assert (= ?float134 (f22 ((_ to_fp 5 11) RTZ ?float102) ((_ to_fp 15 113) RTP ?float117) ((_ to_fp 8 24) RTZ ?float73) ((_ to_fp 11 53) RNE ?float99) ?float75 ?float61)))
(declare-const ?float135 Float64)
(assert (= ?float135 (fp.roundToIntegral RTP ?float86)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.max ?float75 ((_ to_fp 5 11) RTZ ?float84))))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.sub RTN ((_ to_fp 8 24) RTZ ?float60) ?float89)))
(declare-const ?float138 Float128)
(assert (= ?float138 (fp.mul RTN ?float114 ((_ to_fp 15 113) RTZ ?float130))))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.roundToIntegral RTP ?float61)))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.min ((_ to_fp 15 113) RTN ?float74) ?float78)))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.max ?float69 ?float77)))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.neg ?float90)))
(declare-const ?float143 Float128)
(assert (= ?float143 (f10 ((_ to_fp 11 53) RTN ?float108) ?float103 ((_ to_fp 11 53) RTP ?float70) ((_ to_fp 15 113) RTN ?float97) ((_ to_fp 5 11) RTZ ?float130))))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.sub RNE ?float104 ?float90)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.div RTZ ((_ to_fp 11 53) RTN ?float98) ?float139)))
(declare-const ?float146 Float32)
(assert (= ?float146 (f23 ((_ to_fp 5 11) RTN ?float60) ?float126 ((_ to_fp 8 24) RNE ?float83) ?float118 ((_ to_fp 5 11) RTP ?float137))))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.roundToIntegral RTN ?float66)))
(declare-const ?float148 Float64)
(assert (= ?float148 (f44 ?float83 ((_ to_fp 15 113) RTN ?float90) ((_ to_fp 11 53) RTZ ?float128) ?float134 ?float84 ?float118 ((_ to_fp 11 53) RNE ?float84) ?float114 ((_ to_fp 8 24) RNE ?float85))))
(declare-const ?float149 Float32)
(assert (= ?float149 (f34 ((_ to_fp 5 11) RTP ?float146) ((_ to_fp 8 24) RTZ ?float125) ?float96)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.leq ((_ to_fp 5 11) RNE ?float84) ?float85)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNormal ?float69)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.geq ((_ to_fp 15 113) RTN ?float128) ?float76)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNormal ?float128)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isZero ?float60)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isNaN ?float149)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.leq ((_ to_fp 8 24) RTN ?float78) ?float64)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.gt ?float129 ?float96)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNaN ?float65)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isPositive ?float105)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p0 ?float103 ((_ to_fp 5 11) RTZ ?float140) ?float135 ?float76 ?float60 ((_ to_fp 15 113) RTN ?float120) ?float66 ((_ to_fp 11 53) RNE ?float111) ((_ to_fp 15 113) RTN ?float112) ((_ to_fp 15 113) RTN ?float98))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNaN ?float132)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.gt ?float85 ?float65)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.gt ?float105 ((_ to_fp 5 11) RTP ?float95))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (p4 ((_ to_fp 5 11) RTZ ?float137) ((_ to_fp 15 113) RNE ?float101) ((_ to_fp 8 24) RTP ?float134))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isNormal ?float103)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNormal ?float146)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isSubnormal ?float103)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isPositive ?float60)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p1 ((_ to_fp 5 11) RTP ?float73) ((_ to_fp 5 11) RTZ ?float112) ?float82 ((_ to_fp 11 53) RTZ ?float73) ((_ to_fp 15 113) RTN ?float135) ((_ to_fp 8 24) RNE ?float133))))
; FINAL ASSERT
(assert (or ?bool164 ?bool153))
(check-sat)


-- iteration 11 --
(declare-fun f0 (Float128 Float16 Float128 Float128 Float128) Float32)
(declare-fun f1 (Float128 Float16 Float32) Float64)
(declare-fun f2 (Float32 Float64 Float16) Float16)
(declare-fun f3 (Float64 Float16 Float64 Float128 Float128) Float32)
(declare-fun f4 (Float32 Float16 Float32 Float16 Float128) Float128)
(declare-fun f5 (Float32 Float32 Float64) Float128)
(declare-fun f6 (Float16 Float32 Float64 Float16 Float128 Float64) Float16)
(declare-fun f7 (Float16 Float32 Float32 Float128 Float128 Float128 Float32 Float128 Float64 Float32) Float16)
(declare-fun f8 (Float32 Float16 Float128 Float64 Float128 Float16 Float128 Float128) Float16)
(declare-fun f9 (Float16 Float128 Float32) Float16)
(declare-fun f10 (Float64) Float32)
(declare-fun f11 (Float64 Float64 Float32 Float16 Float64) Float128)
(declare-fun f12 (Float32 Float128) Float64)
(declare-fun f13 (Float32) Float64)
(declare-fun f14 (Float16 Float32 Float64 Float32 Float128 Float32) Float32)
(declare-fun f15 (Float32 Float64 Float16 Float32 Float128) Float64)
(declare-fun f16 (Float16 Float64 Float32 Float128 Float64 Float16 Float128 Float64 Float64) Float64)
(declare-fun f17 (Float16 Float32 Float64 Float32 Float16) Float32)
(declare-fun f18 (Float32 Float128 Float16 Float32 Float128 Float64 Float16 Float64 Float32 Float16) Float128)
(declare-fun f19 (Float32) Float64)
(declare-fun f20 (Float16 Float64 Float64 Float32 Float64 Float64 Float64 Float32 Float128) Float32)
(declare-fun f21 (Float64 Float32 Float16 Float64 Float16 Float128 Float128) Float128)
(declare-fun f22 (Float64 Float64 Float64 Float32 Float32 Float64 Float128) Float128)
(declare-fun f23 (Float128 Float16 Float64 Float64 Float32) Float16)
(declare-fun f24 (Float64 Float64 Float16 Float32 Float128 Float64 Float64 Float32) Float128)
(declare-fun f25 (Float16 Float64 Float32 Float64) Float128)
(declare-fun f26 (Float16 Float128 Float32 Float128 Float16 Float64 Float32 Float16 Float32 Float64) Float64)
(declare-fun f27 (Float128 Float64 Float128 Float32 Float32 Float128 Float32 Float64 Float64 Float128) Float64)
(declare-fun f28 (Float16 Float32 Float16 Float64 Float128 Float128) Float32)
(declare-fun f29 (Float64 Float16) Float16)
(declare-fun f30 (Float64 Float64 Float16 Float16) Float64)
(declare-fun f31 (Float64 Float32 Float32) Float128)
(declare-fun f32 (Float128 Float32) Float16)
(declare-fun f33 (Float64 Float16) Float16)
(declare-fun f34 (Float128 Float16 Float16) Float32)
(declare-fun f35 (Float16 Float128 Float64 Float16 Float128 Float16 Float32 Float16 Float16 Float64) Float64)
(declare-fun f36 (Float128 Float64 Float128 Float64 Float64 Float32 Float32 Float128 Float16 Float128) Float64)
(declare-fun f37 (Float32 Float128 Float16) Float128)
(declare-fun f38 (Float64 Float16) Float16)
(declare-fun f39 (Float16 Float64 Float128 Float128 Float128 Float16 Float64 Float128) Float16)
(declare-fun f40 (Float64 Float64 Float128 Float64 Float64) Float16)
(declare-fun f41 (Float16 Float64 Float16 Float32) Float32)
(declare-fun f42 (Float128 Float64 Float32 Float16 Float64) Float128)
(declare-fun f43 (Float64 Float64 Float16 Float32 Float128 Float16) Float64)
(declare-fun f44 (Float128 Float128 Float128 Float64) Float128)
(declare-fun f45 (Float64 Float32 Float16) Float128)
(declare-fun f46 (Float32 Float128 Float16 Float32 Float32 Float32 Float128 Float128) Float64)
(declare-fun f47 (Float32 Float16 Float32 Float16 Float32) Float16)
(declare-fun f48 (Float32 Float16 Float64 Float128 Float64 Float16 Float16 Float16 Float32 Float128) Float32)
(declare-fun f49 (Float32 Float16 Float32 Float64 Float16 Float128) Float32)
(declare-fun p0 (Float64 Float32 Float128 Float128 Float64 Float64 Float32) Bool)
(declare-fun p1 (Float16 Float16 Float16 Float128 Float128 Float16 Float16 Float128) Bool)
(declare-fun p2 (Float128 Float16 Float32 Float128 Float16 Float128 Float16 Float32 Float128) Bool)
(declare-fun p3 (Float32 Float128 Float16 Float32) Bool)
(declare-fun p4 (Float64 Float16 Float16 Float16 Float32 Float16 Float64 Float128 Float64 Float64) Bool)
(declare-fun p5 (Float32 Float16 Float128) Bool)
(declare-fun p6 (Float16) Bool)
(declare-fun p7 (Float64 Float32 Float128 Float16 Float16 Float64 Float32 Float32) Bool)
(declare-fun p8 (Float16 Float16 Float32 Float128 Float16 Float128 Float16 Float32 Float128 Float32) Bool)
(declare-fun p9 (Float32 Float32 Float64 Float128 Float32 Float16 Float16 Float64 Float64 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float32)
(declare-const ?float62 Float64)
(declare-const ?float63 Float64)
(declare-const ?float64 Float16)
(declare-const ?float65 Float64)
(declare-const ?float66 Float32)
(declare-const ?float67 Float16)
(declare-const ?float68 Float64)
(declare-const ?float69 Float16)
(declare-const ?float70 Float128)
(declare-const ?float71 Float64)
(declare-const ?float72 Float64)
(declare-const ?float73 Float128)
(declare-const ?float74 Float128)
(declare-const ?float75 Float16)
(declare-const ?float76 Float64)
(declare-const ?float77 Float64)
(declare-const ?float78 Float32)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b0 #b11010 #b0101011100)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b1 #b01011011010 #b0101110101000001111000000101101001010011101001110111)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b0 #b101011000101000 #b0011100010000111010110001010100101110110011100000011000101011000011010011010010110110011011110001010011110111010)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b0 #b00100001 #b01111101100100100100100)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float92 Float64)
(assert (= ?float92 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b0 #b100111000110111 #b1101110011010101111010101011011101111110001010010011111010011010000011001010000000101000011100011001011111111110)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b0 #b01001011001 #b1010110100000010110111101010110110111000101100011111)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b0 #b00010010 #b01100111110110001000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.sqrt RTP ?float60)))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.abs ?float93)))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.max ((_ to_fp 8 24) RTN ?float85) ?float99)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.roundToIntegral RTN ?float69)))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.sub RTZ ?float103 ?float69)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.div RNE ?float62 ?float95)))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.roundToIntegral RTN ?float74)))
(declare-const ?float107 Float128)
(assert (= ?float107 (fp.min ((_ to_fp 15 113) RTZ ?float87) ?float94)))
(declare-const ?float108 Float128)
(assert (= ?float108 (f31 ((_ to_fp 11 53) RTN ?float97) ((_ to_fp 8 24) RNE ?float67) ((_ to_fp 8 24) RTN ?float100))))
(declare-const ?float109 Float32)
(assert (= ?float109 (fp.min ?float66 ((_ to_fp 8 24) RTP ?float67))))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.max ?float100 ((_ to_fp 5 11) RNE ?float62))))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.min ((_ to_fp 11 53) RNE ?float82) ?float95)))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.div RTZ ((_ to_fp 8 24) RTP ?float74) ?float99)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.abs ?float65)))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.add RTP ((_ to_fp 5 11) RTZ ?float97) ?float98)))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.neg ?float106)))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.abs ?float76)))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.div RTN ?float106 ?float93)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.add RNE ((_ to_fp 8 24) RTZ ?float60) ?float112)))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.max ((_ to_fp 5 11) RTN ?float73) ?float79)))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.mul RTP ?float76 ((_ to_fp 11 53) RTN ?float70))))
(declare-const ?float121 Float64)
(assert (= ?float121 (f16 ((_ to_fp 5 11) RTN ?float107) ((_ to_fp 11 53) RTP ?float89) ?float102 ((_ to_fp 15 113) RNE ?float92) ?float96 ?float91 ((_ to_fp 15 113) RNE ?float103) ((_ to_fp 11 53) RTP ?float89) ?float105)))
(declare-const ?float122 Float64)
(assert (= ?float122 (fp.sqrt RTN ?float92)))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.mul RNE ?float119 ((_ to_fp 5 11) RNE ?float117))))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.neg ?float96)))
(declare-const ?float125 Float128)
(assert (= ?float125 (fp.abs ?float74)))
(declare-const ?float126 Float64)
(assert (= ?float126 (f43 ((_ to_fp 11 53) RTN ?float98) ?float83 ?float75 ?float80 ?float115 ((_ to_fp 5 11) RTN ?float120))))
(declare-const ?float127 Float32)
(assert (= ?float127 (f28 ?float103 ((_ to_fp 8 24) RTN ?float67) ((_ to_fp 5 11) RTP ?float96) ((_ to_fp 11 53) RTZ ?float102) ((_ to_fp 15 113) RTN ?float122) ((_ to_fp 15 113) RTP ?float65))))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.sub RTN ?float76 ((_ to_fp 11 53) RTZ ?float86))))
(declare-const ?float129 Float16)
(assert (= ?float129 (f38 ?float95 ((_ to_fp 5 11) RNE ?float106))))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.div RTP ((_ to_fp 5 11) RNE ?float111) ?float75)))
(declare-const ?float131 Float32)
(assert (= ?float131 (fp.neg ?float118)))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.mul RTN ((_ to_fp 15 113) RTZ ?float80) ?float117)))
(declare-const ?float133 Float64)
(assert (= ?float133 (f19 ((_ to_fp 8 24) RNE ?float64))))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.min ((_ to_fp 15 113) RTZ ?float87) ?float73)))
(declare-const ?float135 Float16)
(assert (= ?float135 (f8 ((_ to_fp 8 24) RTN ?float92) ?float64 ?float70 ((_ to_fp 11 53) RTZ ?float106) ((_ to_fp 15 113) RTP ?float131) ((_ to_fp 5 11) RTP ?float83) ((_ to_fp 15 113) RTN ?float91) ?float115)))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.mul RTP ((_ to_fp 11 53) RTZ ?float97) ?float124)))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.neg ?float134)))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.neg ?float69)))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.roundToIntegral RNE ?float127)))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.roundToIntegral RTZ ?float106)))
(declare-const ?float141 Float64)
(assert (= ?float141 (f30 ((_ to_fp 11 53) RTN ?float125) ((_ to_fp 11 53) RNE ?float94) ((_ to_fp 5 11) RTN ?float115) ((_ to_fp 5 11) RTP ?float86))))
(declare-const ?float142 Float128)
(assert (= ?float142 (f42 ?float86 ((_ to_fp 11 53) RTP ?float89) ((_ to_fp 8 24) RTP ?float128) ((_ to_fp 5 11) RTZ ?float134) ?float122)))
(declare-const ?float143 Float128)
(assert (= ?float143 (f42 ((_ to_fp 15 113) RTZ ?float127) ?float126 ((_ to_fp 8 24) RTN ?float97) ((_ to_fp 5 11) RTN ?float101) ?float120)))
(declare-const ?float144 Float128)
(assert (= ?float144 (fp.roundToIntegral RTN ?float106)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.roundToIntegral RTZ ?float102)))
(declare-const ?float146 Float64)
(assert (= ?float146 (fp.sub RTZ ((_ to_fp 11 53) RTN ?float123) ?float63)))
(declare-const ?float147 Float16)
(assert (= ?float147 (fp.div RTZ ?float100 ((_ to_fp 5 11) RTZ ?float94))))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.div RTP ?float77 ?float68)))
(declare-const ?float149 Float64)
(assert (= ?float149 (f1 ((_ to_fp 15 113) RTN ?float113) ((_ to_fp 5 11) RNE ?float145) ((_ to_fp 8 24) RTN ?float93))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isSubnormal ?float102)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isSubnormal ?float146)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isPositive ?float70)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.geq ((_ to_fp 8 24) RTN ?float134) ?float89)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNegative ?float81)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.lt ?float70 ?float107)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (p3 ?float99 ((_ to_fp 15 113) RTN ?float88) ((_ to_fp 5 11) RTN ?float99) ((_ to_fp 8 24) RTN ?float86))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p4 ((_ to_fp 11 53) RTZ ?float75) ((_ to_fp 5 11) RTZ ?float89) ((_ to_fp 5 11) RNE ?float94) ((_ to_fp 5 11) RTP ?float95) ?float112 ?float103 ((_ to_fp 11 53) RNE ?float88) ((_ to_fp 15 113) RTN ?float88) ((_ to_fp 11 53) RTN ?float147) ((_ to_fp 11 53) RTP ?float145))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isZero ?float83)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p5 ((_ to_fp 8 24) RTN ?float104) ((_ to_fp 5 11) RTZ ?float137) ((_ to_fp 15 113) RTN ?float67))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p9 ?float99 ((_ to_fp 8 24) RTZ ?float133) ?float121 ((_ to_fp 15 113) RNE ?float116) ((_ to_fp 8 24) RTN ?float98) ((_ to_fp 5 11) RTN ?float111) ((_ to_fp 5 11) RTN ?float141) ((_ to_fp 11 53) RNE ?float103) ?float92 ((_ to_fp 8 24) RTP ?float100))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.leq ((_ to_fp 11 53) RTP ?float78) ?float124)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.eq ((_ to_fp 8 24) RTP ?float108) ?float112)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNaN ?float66)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.gt ?float87 ((_ to_fp 5 11) RTZ ?float121))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.leq ?float61 ((_ to_fp 8 24) RTZ ?float79))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isInfinite ?float105)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isInfinite ?float84)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.lt ?float73 ((_ to_fp 15 113) RNE ?float136))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isInfinite ?float136)))
; FINAL ASSERT
(assert (and (and ?bool161 (or (and (or ?bool164) ?bool168 ?bool153) (or (and ?bool154 ?bool162 (and (or ?bool169) ?bool161))) (or ?bool166)) (and ?bool168)) ?bool160 ?bool167))
(check-sat)


-- iteration 12 --
(declare-fun f0 (Float32 Float16 Float64 Float128 Float32 Float16 Float32 Float128 Float16 Float16) Float16)
(declare-fun f1 (Float128 Float32 Float64 Float32 Float64 Float128 Float32 Float128 Float32 Float128) Float32)
(declare-fun f2 (Float16 Float16 Float16 Float64 Float64 Float32) Float16)
(declare-fun f3 (Float16 Float128 Float128 Float16 Float128 Float16) Float128)
(declare-fun f4 (Float16 Float32 Float32 Float64) Float128)
(declare-fun f5 (Float64 Float64 Float64 Float16 Float32 Float32 Float64) Float32)
(declare-fun f6 (Float32 Float32 Float16 Float128 Float16 Float16 Float64 Float64) Float128)
(declare-fun f7 (Float64 Float128 Float16 Float64) Float128)
(declare-fun f8 (Float32 Float32 Float32 Float64 Float16 Float64) Float32)
(declare-fun f9 (Float64 Float128 Float16 Float16 Float32) Float32)
(declare-fun f10 (Float64 Float64 Float32 Float64 Float128 Float32 Float16 Float16 Float16 Float16) Float64)
(declare-fun f11 (Float128 Float32 Float32) Float16)
(declare-fun f12 (Float64 Float32 Float64 Float128 Float32 Float16 Float32 Float128) Float128)
(declare-fun f13 (Float32 Float32 Float32 Float32 Float64 Float64 Float128 Float128 Float32 Float16) Float32)
(declare-fun f14 (Float64) Float64)
(declare-fun f15 (Float16) Float16)
(declare-fun f16 (Float16 Float64 Float128 Float128 Float128) Float16)
(declare-fun f17 (Float16 Float64 Float16 Float64) Float32)
(declare-fun f18 (Float64 Float64 Float32 Float32) Float128)
(declare-fun f19 (Float32 Float32 Float32 Float128 Float32 Float16 Float32 Float128 Float128) Float128)
(declare-fun f20 (Float16 Float128 Float32 Float128 Float32 Float128 Float64) Float16)
(declare-fun f21 (Float32 Float64) Float32)
(declare-fun f22 (Float16 Float64 Float128 Float128 Float32 Float64 Float64 Float16) Float128)
(declare-fun f23 (Float32 Float16 Float128 Float16 Float64 Float128 Float128 Float128 Float64 Float128) Float16)
(declare-fun f24 (Float128 Float32 Float128 Float64 Float16 Float32 Float128 Float128) Float64)
(declare-fun f25 (Float32) Float16)
(declare-fun f26 (Float64 Float16 Float64 Float128 Float128) Float64)
(declare-fun f27 (Float16 Float16 Float16 Float32) Float16)
(declare-fun f28 (Float16 Float16) Float128)
(declare-fun f29 (Float128) Float128)
(declare-fun f30 (Float16 Float128 Float128 Float32 Float128) Float16)
(declare-fun f31 (Float16 Float16 Float16 Float32) Float32)
(declare-fun f32 (Float128 Float64 Float128 Float64 Float32) Float16)
(declare-fun f33 (Float128) Float128)
(declare-fun f34 (Float128 Float16 Float16 Float16 Float16 Float16 Float32 Float32 Float32 Float128) Float64)
(declare-fun f35 (Float32 Float128 Float64 Float16 Float32 Float32 Float128 Float64 Float64) Float32)
(declare-fun f36 (Float32 Float64 Float16 Float64 Float32 Float32 Float128 Float128) Float128)
(declare-fun f37 (Float128 Float64 Float32 Float16 Float64 Float64 Float128) Float16)
(declare-fun f38 (Float128) Float16)
(declare-fun f39 (Float64 Float64) Float64)
(declare-fun f40 (Float64 Float32 Float16 Float32 Float16 Float64) Float128)
(declare-fun f41 (Float64 Float32 Float16 Float64 Float128 Float64 Float32) Float128)
(declare-fun f42 (Float128 Float16 Float16) Float16)
(declare-fun f43 (Float128 Float32 Float64 Float64) Float16)
(declare-fun f44 (Float16 Float64 Float128) Float32)
(declare-fun f45 (Float16 Float128 Float64 Float64) Float64)
(declare-fun f46 (Float64 Float128 Float32 Float16 Float16) Float16)
(declare-fun f47 (Float32) Float16)
(declare-fun f48 (Float16 Float16 Float64 Float64 Float128 Float16 Float64) Float16)
(declare-fun f49 (Float64) Float128)
(declare-fun p0 (Float128 Float64 Float32) Bool)
(declare-fun p1 (Float128 Float16 Float32 Float16 Float128 Float16 Float128 Float128) Bool)
(declare-fun p2 (Float32) Bool)
(declare-fun p3 (Float128 Float16 Float128 Float32 Float16) Bool)
(declare-fun p4 (Float128 Float128 Float64 Float64 Float16 Float32 Float128 Float64 Float16) Bool)
(declare-fun p5 (Float64 Float128) Bool)
(declare-fun p6 (Float64 Float128 Float128 Float16 Float64 Float16 Float32 Float16 Float128 Float16) Bool)
(declare-fun p7 (Float128 Float128 Float64 Float128 Float128 Float16 Float128 Float64 Float32 Float128) Bool)
(declare-fun p8 (Float64 Float64 Float32 Float32) Bool)
(declare-fun p9 (Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float64)
(declare-const ?float62 Float64)
(declare-const ?float63 Float64)
(declare-const ?float64 Float32)
(declare-const ?float65 Float32)
(declare-const ?float66 Float16)
(declare-const ?float67 Float64)
(declare-const ?float68 Float16)
(declare-const ?float69 Float32)
(declare-const ?float70 Float16)
(declare-const ?float71 Float16)
(declare-const ?float72 Float16)
(declare-const ?float73 Float128)
(declare-const ?float74 Float128)
(declare-const ?float75 Float128)
(declare-const ?float76 Float128)
(declare-const ?float77 Float64)
(declare-const ?float78 Float128)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b01000100 #b01000001110000110110010)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b01001100011 #b0110011001010101010000000000000001111011001110110010)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b0 #b01000 #b0000000011)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b1 #b01111111 #b01010101011001011101110)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b0 #b00000000 #b00000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (f39 ?float77 ((_ to_fp 11 53) RNE ?float94))))
(declare-const ?float101 Float64)
(assert (= ?float101 (fp.mul RTZ ?float77 ?float61)))
(declare-const ?float102 Float64)
(assert (= ?float102 (fp.min ((_ to_fp 11 53) RNE ?float78) ?float67)))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.div RTZ ((_ to_fp 11 53) RTP ?float85) ?float63)))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.neg ?float73)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.min ((_ to_fp 11 53) RTZ ?float78) ?float101)))
(declare-const ?float106 Float128)
(assert (= ?float106 (f40 ((_ to_fp 11 53) RTP ?float82) ?float87 ((_ to_fp 5 11) RTN ?float73) ((_ to_fp 8 24) RTZ ?float68) ((_ to_fp 5 11) RTZ ?float69) ((_ to_fp 11 53) RTP ?float104))))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.neg ?float97)))
(declare-const ?float108 Float16)
(assert (= ?float108 (fp.min ((_ to_fp 5 11) RTN ?float86) ?float71)))
(declare-const ?float109 Float32)
(assert (= ?float109 (fp.roundToIntegral RTZ ?float86)))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.sub RTP ((_ to_fp 5 11) RTP ?float85) ?float89)))
(declare-const ?float111 Float128)
(assert (= ?float111 (fp.sqrt RTN ?float104)))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.mul RTZ ((_ to_fp 8 24) RTZ ?float101) ?float94)))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.abs ?float85)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.sub RTZ ?float90 ((_ to_fp 11 53) RTZ ?float113))))
(declare-const ?float115 Float16)
(assert (= ?float115 (fp.div RNE ?float93 ?float68)))
(declare-const ?float116 Float16)
(assert (= ?float116 (f43 ?float60 ((_ to_fp 8 24) RNE ?float70) ((_ to_fp 11 53) RTP ?float89) ((_ to_fp 11 53) RNE ?float86))))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.max ((_ to_fp 11 53) RNE ?float92) ?float61)))
(declare-const ?float118 Float64)
(assert (= ?float118 (fp.neg ?float103)))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.sqrt RTN ?float85)))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.abs ?float112)))
(declare-const ?float121 Float64)
(assert (= ?float121 (f10 ((_ to_fp 11 53) RTP ?float85) ((_ to_fp 11 53) RNE ?float107) ((_ to_fp 8 24) RTP ?float105) ((_ to_fp 11 53) RTP ?float71) ((_ to_fp 15 113) RTN ?float64) ?float64 ((_ to_fp 5 11) RNE ?float60) ((_ to_fp 5 11) RTN ?float94) ((_ to_fp 5 11) RTZ ?float119) ?float89)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.sqrt RTP ?float89)))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.div RTP ?float65 ((_ to_fp 8 24) RTN ?float75))))
(declare-const ?float124 Float128)
(assert (= ?float124 (fp.abs ?float104)))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.neg ?float61)))
(declare-const ?float126 Float16)
(assert (= ?float126 (fp.abs ?float89)))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.div RTP ?float123 ?float85)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.roundToIntegral RNE ?float81)))
(declare-const ?float129 Float16)
(assert (= ?float129 (f2 ((_ to_fp 5 11) RTZ ?float85) ?float108 ?float108 ((_ to_fp 11 53) RTN ?float60) ((_ to_fp 11 53) RTN ?float98) ((_ to_fp 8 24) RTP ?float98))))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.mul RTN ?float65 ((_ to_fp 8 24) RNE ?float103))))
(declare-const ?float131 Float16)
(assert (= ?float131 (f42 ((_ to_fp 15 113) RTN ?float89) ((_ to_fp 5 11) RNE ?float99) ((_ to_fp 5 11) RTP ?float114))))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.mul RNE ?float91 ((_ to_fp 11 53) RTN ?float81))))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.min ((_ to_fp 11 53) RTN ?float64) ?float90)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.mul RTN ((_ to_fp 15 113) RTZ ?float66) ?float60)))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.min ?float116 ((_ to_fp 5 11) RTN ?float111))))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.min ((_ to_fp 11 53) RTP ?float126) ?float105)))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.roundToIntegral RTZ ?float123)))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.mul RTP ?float93 ((_ to_fp 5 11) RTN ?float136))))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.max ((_ to_fp 11 53) RTZ ?float113) ?float63)))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.neg ?float79)))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.add RTN ?float88 ?float77)))
(declare-const ?float142 Float128)
(assert (= ?float142 (f4 ?float138 ?float112 ?float128 ?float88)))
(declare-const ?float143 Float16)
(assert (= ?float143 (fp.neg ?float110)))
(declare-const ?float144 Float32)
(assert (= ?float144 (f9 ((_ to_fp 11 53) RTN ?float89) ((_ to_fp 15 113) RNE ?float125) ?float93 ((_ to_fp 5 11) RNE ?float100) ((_ to_fp 8 24) RTP ?float70))))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.mul RNE ?float137 ((_ to_fp 8 24) RTN ?float74))))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.add RTN ?float106 ((_ to_fp 15 113) RTZ ?float94))))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.min ?float69 ((_ to_fp 8 24) RTN ?float122))))
(declare-const ?float148 Float32)
(assert (= ?float148 (fp.neg ?float79)))
(declare-const ?float149 Float32)
(assert (= ?float149 (f9 ?float103 ((_ to_fp 15 113) RTN ?float110) ((_ to_fp 5 11) RNE ?float86) ((_ to_fp 5 11) RNE ?float127) ((_ to_fp 8 24) RNE ?float73))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p2 ?float95)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.leq ?float65 ?float65)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isInfinite ?float82)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (p5 ((_ to_fp 11 53) RNE ?float89) ((_ to_fp 15 113) RTN ?float110))))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.eq ((_ to_fp 5 11) RTZ ?float127) ?float129)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.geq ?float72 ((_ to_fp 5 11) RTP ?float99))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (p0 ((_ to_fp 15 113) RNE ?float70) ?float132 ((_ to_fp 8 24) RTZ ?float77))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p1 ((_ to_fp 15 113) RTZ ?float77) ((_ to_fp 5 11) RTP ?float128) ((_ to_fp 8 24) RNE ?float100) ((_ to_fp 5 11) RTZ ?float142) ((_ to_fp 15 113) RTN ?float116) ((_ to_fp 5 11) RTP ?float74) ?float142 ((_ to_fp 15 113) RTZ ?float85))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNaN ?float73)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isPositive ?float145)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isSubnormal ?float110)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isInfinite ?float81)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.gt ((_ to_fp 11 53) RTN ?float134) ?float90)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (p1 ((_ to_fp 15 113) RNE ?float71) ((_ to_fp 5 11) RTN ?float95) ((_ to_fp 8 24) RNE ?float110) ((_ to_fp 5 11) RNE ?float79) ((_ to_fp 15 113) RTN ?float65) ((_ to_fp 5 11) RTZ ?float139) ((_ to_fp 15 113) RNE ?float143) ((_ to_fp 15 113) RTP ?float95))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isInfinite ?float65)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isZero ?float103)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isInfinite ?float100)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p7 ((_ to_fp 15 113) RTZ ?float128) ((_ to_fp 15 113) RTZ ?float109) ((_ to_fp 11 53) RTN ?float74) ((_ to_fp 15 113) RTP ?float103) ((_ to_fp 15 113) RNE ?float149) ((_ to_fp 5 11) RNE ?float147) ((_ to_fp 15 113) RTN ?float87) ?float63 ((_ to_fp 8 24) RTP ?float89) ((_ to_fp 15 113) RTP ?float103))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isInfinite ?float106)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p4 ((_ to_fp 15 113) RNE ?float102) ((_ to_fp 15 113) RTN ?float67) ((_ to_fp 11 53) RTZ ?float112) ((_ to_fp 11 53) RTP ?float83) ((_ to_fp 5 11) RNE ?float141) ?float127 ((_ to_fp 15 113) RNE ?float87) ((_ to_fp 11 53) RTP ?float94) ((_ to_fp 5 11) RTN ?float142))))
; FINAL ASSERT
(assert (and ?bool169))
(check-sat)


-- iteration 13 --
(declare-fun f0 (Float128) Float64)
(declare-fun f1 (Float64 Float64 Float64) Float128)
(declare-fun f2 (Float16 Float32 Float128 Float128 Float32 Float64 Float32) Float128)
(declare-fun f3 (Float128 Float64 Float64 Float64 Float128 Float16 Float32 Float64) Float16)
(declare-fun f4 (Float64 Float32 Float128 Float128 Float64 Float16 Float64) Float32)
(declare-fun f5 (Float32) Float16)
(declare-fun f6 (Float16 Float128 Float16 Float16 Float64 Float16) Float128)
(declare-fun f7 (Float16 Float16 Float128 Float32 Float16 Float128 Float16 Float16 Float32) Float16)
(declare-fun f8 (Float32 Float128 Float16 Float16) Float64)
(declare-fun f9 (Float32 Float32 Float32 Float32 Float128 Float16) Float128)
(declare-fun f10 (Float32 Float64 Float64) Float16)
(declare-fun f11 (Float128 Float16 Float64 Float16 Float32) Float32)
(declare-fun f12 (Float64 Float64 Float16 Float128 Float64) Float128)
(declare-fun f13 (Float32 Float128 Float32 Float64 Float32 Float128) Float64)
(declare-fun f14 (Float32 Float128) Float128)
(declare-fun f15 (Float64 Float16 Float64 Float16 Float64 Float128 Float16 Float32 Float16 Float16) Float64)
(declare-fun f16 (Float16 Float128 Float32 Float128 Float16 Float16 Float32 Float64 Float64 Float32) Float16)
(declare-fun f17 (Float128) Float128)
(declare-fun f18 (Float128 Float64 Float128 Float64 Float64) Float32)
(declare-fun f19 (Float64 Float16 Float32 Float32 Float16 Float64 Float32 Float16 Float16) Float16)
(declare-fun f20 (Float16 Float16 Float128 Float128 Float128 Float128 Float64 Float16) Float32)
(declare-fun f21 (Float128 Float128 Float128 Float128 Float16 Float16 Float128 Float128) Float64)
(declare-fun f22 (Float64) Float128)
(declare-fun f23 (Float16 Float32 Float128 Float16 Float32 Float64 Float16 Float128) Float64)
(declare-fun f24 (Float64 Float32 Float128 Float128 Float32 Float32) Float64)
(declare-fun f25 (Float32 Float16 Float128 Float128 Float64) Float128)
(declare-fun f26 (Float32 Float128 Float64) Float16)
(declare-fun f27 (Float16 Float64 Float16 Float64 Float64) Float32)
(declare-fun f28 (Float16 Float64 Float32 Float16 Float32 Float128 Float64 Float128 Float128 Float16) Float16)
(declare-fun f29 (Float16 Float32 Float16 Float128 Float128 Float128 Float16 Float16 Float16 Float128) Float16)
(declare-fun f30 (Float128 Float32 Float32 Float128) Float128)
(declare-fun f31 (Float64 Float32 Float64) Float16)
(declare-fun f32 (Float128 Float64) Float128)
(declare-fun f33 (Float16 Float64) Float32)
(declare-fun f34 (Float128 Float32 Float16) Float32)
(declare-fun f35 (Float128 Float16 Float128 Float16 Float64 Float64 Float32 Float64 Float32) Float128)
(declare-fun f36 (Float64 Float128 Float64 Float32) Float64)
(declare-fun f37 (Float64) Float32)
(declare-fun f38 (Float128 Float128 Float64 Float64 Float16 Float64 Float32 Float128) Float64)
(declare-fun f39 (Float16 Float64 Float16 Float16) Float128)
(declare-fun f40 (Float16 Float16 Float64 Float32 Float16 Float16) Float32)
(declare-fun f41 (Float64 Float16 Float16 Float128 Float16 Float64 Float128 Float128) Float128)
(declare-fun f42 (Float16 Float16 Float128) Float128)
(declare-fun f43 (Float16) Float32)
(declare-fun f44 (Float32 Float32 Float16 Float64 Float64 Float32 Float32) Float16)
(declare-fun f45 (Float16 Float32 Float128 Float128 Float64) Float64)
(declare-fun f46 (Float16 Float32) Float32)
(declare-fun f47 (Float128 Float64 Float128 Float64 Float16 Float32) Float128)
(declare-fun f48 (Float64 Float32 Float128 Float128 Float32 Float16 Float16 Float16 Float32) Float64)
(declare-fun f49 (Float128) Float16)
(declare-fun p0 (Float32 Float64 Float64) Bool)
(declare-fun p1 (Float64 Float128 Float64 Float32 Float64 Float32 Float16 Float32 Float128) Bool)
(declare-fun p2 (Float64 Float16 Float16 Float64 Float64 Float16) Bool)
(declare-fun p3 (Float128 Float64 Float32 Float16 Float64 Float32 Float64) Bool)
(declare-fun p4 (Float64 Float128 Float64 Float16 Float64 Float64 Float128) Bool)
(declare-fun p5 (Float16 Float16 Float32 Float64 Float32 Float16 Float32 Float64 Float128 Float32) Bool)
(declare-fun p6 (Float64 Float64 Float16 Float64 Float128 Float32) Bool)
(declare-fun p7 (Float32 Float64 Float16) Bool)
(declare-fun p8 (Float64 Float128 Float16 Float16 Float64 Float64 Float64 Float64) Bool)
(declare-fun p9 (Float64 Float32 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float16)
(declare-const ?float62 Float64)
(declare-const ?float63 Float16)
(declare-const ?float64 Float64)
(declare-const ?float65 Float64)
(declare-const ?float66 Float32)
(declare-const ?float67 Float64)
(declare-const ?float68 Float128)
(declare-const ?float69 Float128)
(declare-const ?float70 Float64)
(declare-const ?float71 Float32)
(declare-const ?float72 Float32)
(declare-const ?float73 Float64)
(declare-const ?float74 Float64)
(declare-const ?float75 Float64)
(declare-const ?float76 Float32)
(declare-const ?float77 Float32)
(declare-const ?float78 Float128)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b0 #b11101 #b1001011010)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float128)
(assert (= ?float83 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b1 #b01100100011 #b1101011001110010010111100101011101001010001010100001)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b10111111010 #b1001100011111110001000011010000011001010000111101011)))
(declare-const ?float92 Float64)
(assert (= ?float92 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b0 #b011001111101110 #b0001000000100111110111011000010010000010101101010100101110010001011011000000101101101100000011100011011100100101)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b1 #b10111010010 #b1100011000000011010011001001110101101100110000100001)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b0 #b00101110111 #b1000000001001010110100010100011000010001101000101000)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (fp.sub RTZ ?float62 ((_ to_fp 11 53) RTP ?float61))))
(declare-const ?float101 Float64)
(assert (= ?float101 (fp.add RTP ?float74 ?float97)))
(declare-const ?float102 Float64)
(assert (= ?float102 (fp.min ?float62 ((_ to_fp 11 53) RNE ?float88))))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.mul RTP ((_ to_fp 11 53) RTN ?float82) ?float91)))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.div RTP ?float79 ((_ to_fp 15 113) RTP ?float81))))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.div RTP ?float60 ((_ to_fp 11 53) RNE ?float94))))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.sqrt RNE ?float83)))
(declare-const ?float107 Float64)
(assert (= ?float107 (fp.abs ?float100)))
(declare-const ?float108 Float64)
(assert (= ?float108 (f0 ((_ to_fp 15 113) RNE ?float63))))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.div RNE ((_ to_fp 5 11) RNE ?float94) ?float61)))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.sqrt RNE ?float107)))
(declare-const ?float111 Float128)
(assert (= ?float111 (fp.max ?float79 ((_ to_fp 15 113) RTP ?float102))))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.mul RTN ?float96 ((_ to_fp 11 53) RNE ?float88))))
(declare-const ?float113 Float128)
(assert (= ?float113 (f17 ?float78)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.neg ?float67)))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.mul RTN ?float76 ?float77)))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.add RTN ((_ to_fp 8 24) RNE ?float92) ?float66)))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.sqrt RNE ?float103)))
(declare-const ?float118 Float16)
(assert (= ?float118 (f28 ((_ to_fp 5 11) RTZ ?float83) ?float75 ((_ to_fp 8 24) RTZ ?float85) ((_ to_fp 5 11) RTZ ?float101) ((_ to_fp 8 24) RNE ?float65) ((_ to_fp 15 113) RNE ?float71) ((_ to_fp 11 53) RTZ ?float66) ((_ to_fp 15 113) RTN ?float67) ((_ to_fp 15 113) RTP ?float60) ((_ to_fp 5 11) RTZ ?float65))))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.sub RNE ?float110 ?float67)))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.abs ?float93)))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.abs ?float66)))
(declare-const ?float122 Float64)
(assert (= ?float122 (fp.sub RTP ?float108 ?float60)))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.sqrt RTP ?float116)))
(declare-const ?float124 Float16)
(assert (= ?float124 (fp.add RNE ((_ to_fp 5 11) RTN ?float110) ?float118)))
(declare-const ?float125 Float32)
(assert (= ?float125 (f43 ((_ to_fp 5 11) RTP ?float66))))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.sub RTN ((_ to_fp 15 113) RTP ?float62) ?float104)))
(declare-const ?float127 Float128)
(assert (= ?float127 (f32 ?float82 ((_ to_fp 11 53) RTP ?float116))))
(declare-const ?float128 Float128)
(assert (= ?float128 (f32 ?float93 ((_ to_fp 11 53) RNE ?float126))))
(declare-const ?float129 Float128)
(assert (= ?float129 (f47 ?float111 ?float91 ((_ to_fp 15 113) RTP ?float122) ((_ to_fp 11 53) RNE ?float61) ((_ to_fp 5 11) RTZ ?float102) ((_ to_fp 8 24) RTN ?float67))))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.sub RTN ((_ to_fp 15 113) RTZ ?float116) ?float129)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.div RNE ?float102 ((_ to_fp 11 53) RTZ ?float78))))
(declare-const ?float132 Float64)
(assert (= ?float132 (f8 ((_ to_fp 8 24) RTN ?float111) ((_ to_fp 15 113) RTZ ?float66) ((_ to_fp 5 11) RTN ?float92) ((_ to_fp 5 11) RTZ ?float75))))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.min ((_ to_fp 8 24) RTN ?float79) ?float84)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.neg ?float130)))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.sub RTZ ((_ to_fp 15 113) RTN ?float103) ?float127)))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.add RTZ ?float100 ?float85)))
(declare-const ?float137 Float64)
(assert (= ?float137 (f24 ((_ to_fp 11 53) RTZ ?float68) ((_ to_fp 8 24) RTZ ?float113) ((_ to_fp 15 113) RTN ?float70) ((_ to_fp 15 113) RTZ ?float89) ?float123 ((_ to_fp 8 24) RTN ?float131))))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.add RTP ?float124 ((_ to_fp 5 11) RTP ?float64))))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.abs ?float86)))
(declare-const ?float140 Float64)
(assert (= ?float140 (fp.sqrt RTZ ?float96)))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.abs ?float105)))
(declare-const ?float142 Float64)
(assert (= ?float142 (f23 ((_ to_fp 5 11) RTP ?float117) ((_ to_fp 8 24) RTP ?float69) ((_ to_fp 15 113) RNE ?float70) ((_ to_fp 5 11) RTZ ?float75) ((_ to_fp 8 24) RTN ?float113) ((_ to_fp 11 53) RTP ?float129) ((_ to_fp 5 11) RTN ?float137) ((_ to_fp 15 113) RTZ ?float77))))
(declare-const ?float143 Float32)
(assert (= ?float143 (fp.sub RTP ?float121 ?float72)))
(declare-const ?float144 Float16)
(assert (= ?float144 (f16 ((_ to_fp 5 11) RTN ?float96) ((_ to_fp 15 113) RTN ?float110) ((_ to_fp 8 24) RTN ?float140) ?float128 ((_ to_fp 5 11) RTN ?float112) ?float124 ((_ to_fp 8 24) RTN ?float99) ((_ to_fp 11 53) RTZ ?float87) ((_ to_fp 11 53) RTZ ?float138) ((_ to_fp 8 24) RTZ ?float114))))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.add RTN ?float72 ((_ to_fp 8 24) RTZ ?float89))))
(declare-const ?float146 Float32)
(assert (= ?float146 (f37 ?float141)))
(declare-const ?float147 Float64)
(assert (= ?float147 (f48 ?float75 ((_ to_fp 8 24) RTN ?float136) ?float82 ((_ to_fp 15 113) RNE ?float89) ((_ to_fp 8 24) RTZ ?float122) ((_ to_fp 5 11) RTP ?float72) ((_ to_fp 5 11) RTZ ?float83) ((_ to_fp 5 11) RTZ ?float132) ((_ to_fp 8 24) RTN ?float91))))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.abs ?float103)))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.sub RTP ?float108 ?float89)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.eq ?float98 ((_ to_fp 8 24) RTZ ?float82))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p9 ((_ to_fp 11 53) RNE ?float116) ((_ to_fp 8 24) RTZ ?float79) ((_ to_fp 11 53) RNE ?float126))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isPositive ?float99)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNormal ?float73)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.leq ?float76 ((_ to_fp 8 24) RTZ ?float64))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p0 ((_ to_fp 8 24) RNE ?float69) ?float122 ((_ to_fp 11 53) RTZ ?float106))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (p4 ((_ to_fp 11 53) RNE ?float69) ((_ to_fp 15 113) RNE ?float107) ?float136 ((_ to_fp 5 11) RNE ?float74) ?float122 ((_ to_fp 11 53) RTZ ?float94) ((_ to_fp 15 113) RTZ ?float77))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p9 ?float67 ((_ to_fp 8 24) RNE ?float108) ((_ to_fp 11 53) RTZ ?float144))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isZero ?float97)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isSubnormal ?float80)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNaN ?float105)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (p1 ?float105 ((_ to_fp 15 113) RNE ?float101) ((_ to_fp 11 53) RTZ ?float78) ?float123 ((_ to_fp 11 53) RTZ ?float104) ((_ to_fp 8 24) RTN ?float109) ?float109 ((_ to_fp 8 24) RTP ?float130) ?float104)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isSubnormal ?float132)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNaN ?float61)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (p7 ?float72 ?float91 ?float81)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isNaN ?float115)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.lt ((_ to_fp 15 113) RTP ?float137) ?float127)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.gt ((_ to_fp 8 24) RTZ ?float130) ?float77)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (p9 ((_ to_fp 11 53) RNE ?float146) ((_ to_fp 8 24) RTN ?float106) ((_ to_fp 11 53) RTN ?float86))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isPositive ?float75)))
; FINAL ASSERT
(assert (or ?bool155 (and ?bool168 (and ?bool158 ?bool155))))
(check-sat)


-- iteration 14 --
(declare-fun f0 (Float16 Float64 Float32 Float128 Float32 Float128 Float128 Float128 Float128 Float32) Float128)
(declare-fun f1 (Float128 Float32 Float16 Float16) Float16)
(declare-fun f2 (Float128 Float32 Float128 Float32 Float128) Float32)
(declare-fun f3 (Float16 Float16 Float64 Float128 Float64 Float16 Float64 Float32 Float64 Float128) Float32)
(declare-fun f4 (Float32 Float64 Float32) Float16)
(declare-fun f5 (Float128 Float16 Float128 Float128 Float32 Float16 Float64) Float128)
(declare-fun f6 (Float128 Float32 Float64 Float128 Float32 Float128) Float32)
(declare-fun f7 (Float16 Float128 Float16 Float16 Float128) Float64)
(declare-fun f8 (Float32 Float64 Float64 Float32) Float16)
(declare-fun f9 (Float16) Float128)
(declare-fun f10 (Float128 Float16) Float128)
(declare-fun f11 (Float128 Float32 Float32 Float64 Float64 Float32 Float64 Float128 Float128) Float16)
(declare-fun f12 (Float64 Float16) Float16)
(declare-fun f13 (Float64 Float128 Float16 Float64 Float16 Float128 Float64 Float64 Float32 Float16) Float16)
(declare-fun f14 (Float128 Float32 Float32 Float64 Float128 Float16 Float128 Float128 Float16) Float32)
(declare-fun f15 (Float128 Float32 Float128 Float64 Float128 Float64 Float64 Float64) Float16)
(declare-fun f16 (Float64 Float128 Float128 Float16 Float16 Float64 Float128 Float16 Float32 Float32) Float32)
(declare-fun f17 (Float16) Float64)
(declare-fun f18 (Float128 Float32 Float64 Float32 Float32) Float32)
(declare-fun f19 (Float16 Float16 Float32 Float32 Float32 Float16 Float128 Float128) Float32)
(declare-fun f20 (Float128) Float128)
(declare-fun f21 (Float64 Float64 Float64 Float64 Float64 Float64 Float128) Float128)
(declare-fun f22 (Float32) Float128)
(declare-fun f23 (Float64 Float128) Float16)
(declare-fun f24 (Float64 Float16 Float128 Float16 Float32) Float64)
(declare-fun f25 (Float64 Float128 Float128 Float32 Float128 Float16 Float32 Float128 Float128 Float128) Float16)
(declare-fun f26 (Float32 Float128 Float32 Float32 Float128 Float16 Float64 Float128 Float32 Float128) Float16)
(declare-fun f27 (Float64 Float32 Float16 Float64 Float16 Float16 Float128 Float16 Float32) Float64)
(declare-fun f28 (Float16 Float128 Float16 Float128 Float32 Float128 Float32 Float16 Float16 Float64) Float64)
(declare-fun f29 (Float64 Float32 Float64 Float32 Float16 Float16 Float64 Float128) Float32)
(declare-fun f30 (Float16 Float128 Float32 Float64 Float128 Float64 Float16 Float128 Float32 Float16) Float16)
(declare-fun f31 (Float32 Float64 Float128 Float128 Float16 Float16 Float16 Float32 Float32 Float16) Float16)
(declare-fun f32 (Float32 Float16 Float32) Float16)
(declare-fun f33 (Float16 Float128 Float64 Float32 Float64 Float16 Float128) Float32)
(declare-fun f34 (Float32) Float64)
(declare-fun f35 (Float128 Float16 Float16 Float16 Float64 Float32 Float32 Float32 Float16) Float64)
(declare-fun f36 (Float64 Float32 Float16 Float128 Float16 Float16 Float32) Float32)
(declare-fun f37 (Float32 Float32 Float64 Float128 Float64) Float32)
(declare-fun f38 (Float128 Float32 Float128 Float64 Float16 Float128) Float128)
(declare-fun f39 (Float64 Float64 Float32 Float64) Float16)
(declare-fun f40 (Float64 Float128 Float16 Float16) Float32)
(declare-fun f41 (Float128 Float128) Float16)
(declare-fun f42 (Float128 Float32) Float64)
(declare-fun f43 (Float32 Float16) Float128)
(declare-fun f44 (Float16 Float32 Float16) Float16)
(declare-fun f45 (Float128 Float64 Float16 Float128 Float16 Float32 Float128 Float128) Float32)
(declare-fun f46 (Float64 Float32 Float16 Float64 Float128 Float128 Float64) Float16)
(declare-fun f47 (Float64 Float32 Float16 Float128 Float32 Float16) Float16)
(declare-fun f48 (Float128 Float16 Float128 Float16 Float32 Float32 Float64) Float32)
(declare-fun f49 (Float128 Float128 Float128 Float64 Float64 Float128 Float64 Float16 Float64) Float64)
(declare-fun p0 (Float16 Float16 Float16 Float32 Float16 Float16 Float32 Float32) Bool)
(declare-fun p1 (Float16 Float128 Float32) Bool)
(declare-fun p2 (Float64 Float32 Float128 Float64 Float128 Float16 Float128 Float16 Float32) Bool)
(declare-fun p3 (Float128 Float64 Float16) Bool)
(declare-fun p4 (Float32 Float32 Float128 Float32 Float128 Float16 Float64 Float64 Float128 Float16) Bool)
(declare-fun p5 (Float16 Float16 Float16 Float32 Float16 Float32 Float16 Float16) Bool)
(declare-fun p6 (Float16 Float64 Float16 Float32 Float64 Float128 Float64 Float16 Float16 Float16) Bool)
(declare-fun p7 (Float16 Float16 Float128 Float128 Float16 Float16 Float16 Float128 Float64 Float128) Bool)
(declare-fun p8 (Float16) Bool)
(declare-fun p9 (Float16 Float64 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float128)
(declare-const ?float62 Float128)
(declare-const ?float63 Float64)
(declare-const ?float64 Float128)
(declare-const ?float65 Float32)
(declare-const ?float66 Float32)
(declare-const ?float67 Float16)
(declare-const ?float68 Float32)
(declare-const ?float69 Float128)
(declare-const ?float70 Float16)
(declare-const ?float71 Float16)
(declare-const ?float72 Float32)
(declare-const ?float73 Float64)
(declare-const ?float74 Float32)
(declare-const ?float75 Float32)
(declare-const ?float76 Float128)
(declare-const ?float77 Float128)
(declare-const ?float78 Float64)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b1 #b11000101 #b01101001100101110011000)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b1 #b11010 #b1001100100)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b1 #b01111110 #b00101100011010000111110)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b0 #b01011 #b0010111010)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b1 #b00001 #b0000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.roundToIntegral RTZ ?float86)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.roundToIntegral RTZ ?float71)))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.div RTP ?float67 ?float70)))
(declare-const ?float103 Float128)
(assert (= ?float103 (f22 ((_ to_fp 8 24) RTP ?float60))))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.div RTP ?float95 ((_ to_fp 8 24) RNE ?float64))))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.roundToIntegral RTZ ?float68)))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.sqrt RNE ?float68)))
(declare-const ?float107 Float16)
(assert (= ?float107 (f30 ((_ to_fp 5 11) RTN ?float104) ((_ to_fp 15 113) RTN ?float74) ((_ to_fp 8 24) RTN ?float64) ((_ to_fp 11 53) RTN ?float89) ((_ to_fp 15 113) RTN ?float71) ((_ to_fp 11 53) RTP ?float72) ((_ to_fp 5 11) RNE ?float73) ((_ to_fp 15 113) RTZ ?float101) ?float82 ((_ to_fp 5 11) RTP ?float93))))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.add RTZ ((_ to_fp 15 113) RTZ ?float104) ?float76)))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.min ((_ to_fp 15 113) RNE ?float88) ?float60)))
(declare-const ?float110 Float32)
(assert (= ?float110 (fp.abs ?float87)))
(declare-const ?float111 Float64)
(assert (= ?float111 (f34 ((_ to_fp 8 24) RTP ?float98))))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.neg ?float106)))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.abs ?float99)))
(declare-const ?float114 Float128)
(assert (= ?float114 (fp.add RTZ ?float61 ((_ to_fp 15 113) RNE ?float82))))
(declare-const ?float115 Float16)
(assert (= ?float115 (f23 ((_ to_fp 11 53) RTN ?float100) ((_ to_fp 15 113) RTP ?float78))))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.mul RNE ?float113 ((_ to_fp 5 11) RNE ?float105))))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.mul RNE ((_ to_fp 11 53) RTN ?float65) ?float111)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.add RTN ((_ to_fp 8 24) RNE ?float107) ?float80)))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.abs ?float80)))
(declare-const ?float120 Float128)
(assert (= ?float120 (f20 ((_ to_fp 15 113) RTP ?float105))))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.neg ?float106)))
(declare-const ?float122 Float16)
(assert (= ?float122 (f25 ((_ to_fp 11 53) RTP ?float89) ?float61 ((_ to_fp 15 113) RTZ ?float104) ((_ to_fp 8 24) RTZ ?float116) ((_ to_fp 15 113) RNE ?float92) ((_ to_fp 5 11) RNE ?float75) ?float74 ((_ to_fp 15 113) RNE ?float95) ((_ to_fp 15 113) RTP ?float99) ((_ to_fp 15 113) RNE ?float92))))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.div RTZ ?float119 ?float95)))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.sub RTN ?float89 ?float87)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.sqrt RTZ ?float80)))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.sub RTZ ((_ to_fp 8 24) RTN ?float61) ?float74)))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.neg ?float95)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.min ?float74 ?float118)))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.min ((_ to_fp 11 53) RTP ?float99) ?float117)))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.abs ?float74)))
(declare-const ?float131 Float128)
(assert (= ?float131 (fp.max ((_ to_fp 15 113) RNE ?float112) ?float109)))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.sub RTZ ?float101 ((_ to_fp 5 11) RTN ?float124))))
(declare-const ?float133 Float128)
(assert (= ?float133 (fp.roundToIntegral RTP ?float131)))
(declare-const ?float134 Float32)
(assert (= ?float134 (fp.sub RTZ ?float84 ?float82)))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.max ?float100 ((_ to_fp 5 11) RTZ ?float93))))
(declare-const ?float136 Float32)
(assert (= ?float136 (fp.max ?float68 ((_ to_fp 8 24) RTN ?float99))))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.sub RTZ ?float125 ?float125)))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.roundToIntegral RNE ?float98)))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.div RNE ?float81 ((_ to_fp 5 11) RNE ?float108))))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.min ?float125 ?float66)))
(declare-const ?float141 Float32)
(assert (= ?float141 (fp.mul RTN ((_ to_fp 8 24) RTP ?float101) ?float106)))
(declare-const ?float142 Float32)
(assert (= ?float142 (fp.sqrt RTP ?float112)))
(declare-const ?float143 Float32)
(assert (= ?float143 (f29 ((_ to_fp 11 53) RNE ?float90) ((_ to_fp 8 24) RNE ?float132) ((_ to_fp 11 53) RTZ ?float110) ?float82 ((_ to_fp 5 11) RTN ?float127) ((_ to_fp 5 11) RTZ ?float114) ((_ to_fp 11 53) RNE ?float88) ((_ to_fp 15 113) RTN ?float123))))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.min ?float115 ((_ to_fp 5 11) RTN ?float128))))
(declare-const ?float145 Float128)
(assert (= ?float145 (fp.roundToIntegral RNE ?float62)))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.roundToIntegral RNE ?float112)))
(declare-const ?float147 Float16)
(assert (= ?float147 (fp.div RTP ?float85 ((_ to_fp 5 11) RTP ?float112))))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.sub RTP ((_ to_fp 5 11) RTN ?float60) ?float97)))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.abs ?float109)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p2 ((_ to_fp 11 53) RTN ?float120) ?float124 ?float149 ((_ to_fp 11 53) RTP ?float139) ((_ to_fp 15 113) RTN ?float115) ((_ to_fp 5 11) RTN ?float60) ((_ to_fp 15 113) RNE ?float125) ((_ to_fp 5 11) RNE ?float72) ?float66)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNegative ?float111)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNormal ?float127)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isZero ?float107)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.gt ?float115 ((_ to_fp 5 11) RTN ?float145))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p5 ?float90 ((_ to_fp 5 11) RTN ?float128) ((_ to_fp 5 11) RTZ ?float140) ?float72 ((_ to_fp 5 11) RNE ?float73) ?float110 ((_ to_fp 5 11) RTP ?float96) ?float99)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNegative ?float89)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p4 ?float118 ((_ to_fp 8 24) RTN ?float117) ((_ to_fp 15 113) RTZ ?float130) ?float126 ((_ to_fp 15 113) RTP ?float75) ?float132 ((_ to_fp 11 53) RTZ ?float80) ((_ to_fp 11 53) RNE ?float64) ((_ to_fp 15 113) RTN ?float117) ((_ to_fp 5 11) RTN ?float69))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p5 ((_ to_fp 5 11) RTP ?float110) ((_ to_fp 5 11) RTN ?float92) ?float71 ?float118 ((_ to_fp 5 11) RTZ ?float143) ((_ to_fp 8 24) RTP ?float79) ?float115 ((_ to_fp 5 11) RTN ?float142))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isNormal ?float116)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.leq ?float135 ((_ to_fp 5 11) RNE ?float89))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isInfinite ?float130)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.eq ((_ to_fp 8 24) RTN ?float62) ?float127)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNaN ?float129)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isPositive ?float148)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p7 ((_ to_fp 5 11) RTZ ?float110) ?float113 ((_ to_fp 15 113) RNE ?float126) ((_ to_fp 15 113) RTN ?float126) ?float99 ((_ to_fp 5 11) RTN ?float105) ((_ to_fp 5 11) RTN ?float142) ((_ to_fp 15 113) RTN ?float111) ((_ to_fp 11 53) RTP ?float113) ((_ to_fp 15 113) RTP ?float65))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p8 ((_ to_fp 5 11) RTZ ?float65))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.geq ?float118 ((_ to_fp 8 24) RTN ?float114))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNormal ?float142)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.lt ((_ to_fp 8 24) RTP ?float79) ?float137)))
; FINAL ASSERT
(assert (and ?bool153 (or ?bool157 (or (or (and (or (or ?bool156) (or ?bool158) (or ?bool158 ?bool160)) (or (and ?bool154 ?bool162)) (and (or ?bool164))) (or ?bool159 (or (and ?bool167 ?bool161)) ?bool167))) (or (or (or ?bool169 (and (or ?bool152)) (or (or ?bool150)))) ?bool162 ?bool166))))
(check-sat)


-- iteration 15 --
(declare-fun f0 (Float16 Float16 Float64 Float128 Float128) Float16)
(declare-fun f1 (Float128 Float64 Float16 Float32 Float128 Float128 Float64 Float32 Float128) Float64)
(declare-fun f2 (Float16 Float128 Float16 Float64 Float128 Float128 Float64 Float16 Float64) Float32)
(declare-fun f3 (Float16 Float16 Float32 Float32 Float64 Float32) Float16)
(declare-fun f4 (Float32 Float32 Float32 Float32 Float16 Float16 Float16 Float32 Float32 Float32) Float32)
(declare-fun f5 (Float128 Float128 Float16 Float64) Float16)
(declare-fun f6 (Float32 Float128 Float16 Float32 Float32 Float128) Float16)
(declare-fun f7 (Float64 Float64) Float32)
(declare-fun f8 (Float16 Float32 Float16 Float128 Float64 Float32 Float16 Float16 Float128 Float128) Float128)
(declare-fun f9 (Float64 Float64 Float64 Float128 Float128 Float64) Float64)
(declare-fun f10 (Float32 Float16 Float16 Float128 Float128) Float64)
(declare-fun f11 (Float64 Float128 Float32 Float16 Float128 Float32) Float128)
(declare-fun f12 (Float64 Float128 Float32 Float16 Float64 Float32 Float32 Float16) Float16)
(declare-fun f13 (Float32 Float64 Float16 Float32 Float64 Float64) Float128)
(declare-fun f14 (Float128 Float64 Float64 Float128 Float16 Float16) Float16)
(declare-fun f15 (Float16 Float64 Float32 Float64) Float128)
(declare-fun f16 (Float64 Float128 Float64 Float64 Float32 Float128 Float32 Float128 Float128 Float16) Float16)
(declare-fun f17 (Float32 Float32 Float32 Float64 Float128 Float32) Float16)
(declare-fun f18 (Float64 Float128 Float32 Float32 Float128 Float32 Float64 Float128 Float128) Float16)
(declare-fun f19 (Float64 Float32 Float32 Float64) Float16)
(declare-fun f20 (Float128 Float16) Float128)
(declare-fun f21 (Float16 Float64 Float64 Float64 Float64) Float64)
(declare-fun f22 (Float16 Float16 Float32 Float64 Float128 Float32 Float16 Float64 Float32 Float128) Float128)
(declare-fun f23 (Float32 Float16 Float128 Float128 Float16 Float64 Float128) Float64)
(declare-fun f24 (Float64 Float32 Float128 Float64 Float16 Float64 Float32) Float16)
(declare-fun f25 (Float128 Float128 Float64) Float64)
(declare-fun f26 (Float128 Float128 Float64 Float16 Float16 Float64) Float64)
(declare-fun f27 (Float64 Float16 Float32 Float32 Float64) Float32)
(declare-fun f28 (Float16 Float64 Float64 Float128 Float64 Float64 Float64) Float64)
(declare-fun f29 (Float64 Float32 Float128 Float32 Float128 Float128 Float64 Float128 Float128) Float32)
(declare-fun f30 (Float64 Float128 Float64 Float128 Float16) Float64)
(declare-fun f31 (Float128 Float16 Float128 Float64 Float16 Float16) Float32)
(declare-fun f32 (Float32 Float64 Float32 Float64 Float128 Float64 Float64 Float16 Float16 Float16) Float32)
(declare-fun f33 (Float32 Float16 Float64 Float32 Float32 Float16 Float128 Float64 Float64) Float64)
(declare-fun f34 (Float128 Float64 Float16) Float64)
(declare-fun f35 (Float64) Float16)
(declare-fun f36 (Float32 Float128 Float64 Float32 Float64 Float32 Float64 Float64 Float16) Float32)
(declare-fun f37 (Float16 Float64 Float128) Float64)
(declare-fun f38 (Float32) Float128)
(declare-fun f39 (Float64 Float32 Float16 Float16 Float64 Float64 Float128 Float16 Float16 Float32) Float16)
(declare-fun f40 (Float32 Float16 Float32 Float32 Float128 Float128) Float128)
(declare-fun f41 (Float128 Float128 Float16 Float64) Float16)
(declare-fun f42 (Float128 Float32 Float128 Float64 Float32 Float128 Float64 Float128 Float32 Float32) Float16)
(declare-fun f43 (Float32 Float128 Float32 Float64 Float64 Float128 Float128 Float32 Float128 Float128) Float64)
(declare-fun f44 (Float128 Float64 Float64 Float32) Float128)
(declare-fun f45 (Float64 Float16 Float128 Float128 Float16 Float128) Float128)
(declare-fun f46 (Float64 Float128 Float32 Float64 Float16 Float16 Float128 Float16 Float64 Float16) Float128)
(declare-fun f47 (Float64 Float16 Float16 Float128 Float16 Float16 Float32 Float64) Float32)
(declare-fun f48 (Float64 Float32 Float16 Float16 Float32 Float64 Float32 Float32) Float16)
(declare-fun f49 (Float16 Float16) Float64)
(declare-fun p0 (Float64 Float64 Float128 Float64 Float64 Float16 Float32 Float32 Float16) Bool)
(declare-fun p1 (Float16 Float32 Float16 Float16 Float16 Float16 Float64) Bool)
(declare-fun p2 (Float64 Float64 Float16 Float16 Float64 Float16 Float32 Float16) Bool)
(declare-fun p3 (Float32 Float128) Bool)
(declare-fun p4 (Float64 Float128 Float128 Float16) Bool)
(declare-fun p5 (Float64 Float128 Float64 Float128 Float128 Float32 Float64) Bool)
(declare-fun p6 (Float128 Float32 Float16 Float64 Float32 Float64 Float64 Float32 Float16) Bool)
(declare-fun p7 (Float128 Float128 Float32 Float32 Float64 Float64) Bool)
(declare-fun p8 (Float64 Float16 Float128 Float16 Float32 Float64 Float128 Float32 Float128 Float128) Bool)
(declare-fun p9 (Float16 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float128)
(declare-const ?float62 Float16)
(declare-const ?float63 Float32)
(declare-const ?float64 Float128)
(declare-const ?float65 Float16)
(declare-const ?float66 Float16)
(declare-const ?float67 Float16)
(declare-const ?float68 Float64)
(declare-const ?float69 Float128)
(declare-const ?float70 Float64)
(declare-const ?float71 Float32)
(declare-const ?float72 Float32)
(declare-const ?float73 Float64)
(declare-const ?float74 Float64)
(declare-const ?float75 Float32)
(declare-const ?float76 Float128)
(declare-const ?float77 Float16)
(declare-const ?float78 Float32)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float128)
(assert (= ?float90 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b0 #b100000101100101 #b0011001011100000001111000010101111000011110101100010110110011011010010100000100010001010011110000111000001000101)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b0 #b11000111000 #b1110011111110000110110000110010110110111000111111101)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b0 #b10110 #b1000100110)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b1 #b00000000 #b00000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (fp.max ?float88 ?float61)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.roundToIntegral RNE ?float65)))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.min ?float78 ?float84)))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.neg ?float73)))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.roundToIntegral RTZ ?float96)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.abs ?float81)))
(declare-const ?float106 Float16)
(assert (= ?float106 (f6 ((_ to_fp 8 24) RTP ?float69) ?float64 ((_ to_fp 5 11) RTP ?float95) ?float72 ?float99 ((_ to_fp 15 113) RTP ?float60))))
(declare-const ?float107 Float128)
(assert (= ?float107 (fp.roundToIntegral RTN ?float76)))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.roundToIntegral RTN ?float85)))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.roundToIntegral RNE ?float91)))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.sub RTN ?float108 ?float76)))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.add RTZ ((_ to_fp 11 53) RTN ?float99) ?float109)))
(declare-const ?float112 Float128)
(assert (= ?float112 (fp.abs ?float86)))
(declare-const ?float113 Float128)
(assert (= ?float113 (fp.sqrt RTN ?float86)))
(declare-const ?float114 Float64)
(assert (= ?float114 (f21 ((_ to_fp 5 11) RTN ?float93) ((_ to_fp 11 53) RTZ ?float76) ((_ to_fp 11 53) RTP ?float86) ((_ to_fp 11 53) RTN ?float96) ((_ to_fp 11 53) RTP ?float92))))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.neg ?float93)))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.max ((_ to_fp 8 24) RTN ?float86) ?float72)))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.mul RNE ?float112 ?float90)))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.sub RTZ ((_ to_fp 5 11) RTN ?float76) ?float101)))
(declare-const ?float119 Float16)
(assert (= ?float119 (f41 ((_ to_fp 15 113) RTZ ?float95) ?float96 ((_ to_fp 5 11) RTN ?float74) ?float114)))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.abs ?float108)))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.div RNE ((_ to_fp 11 53) RTZ ?float110) ?float95)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.add RNE ?float65 ?float119)))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.neg ?float109)))
(declare-const ?float124 Float128)
(assert (= ?float124 (fp.add RTN ?float115 ((_ to_fp 15 113) RTP ?float72))))
(declare-const ?float125 Float16)
(assert (= ?float125 (fp.mul RTN ?float94 ((_ to_fp 5 11) RTZ ?float98))))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.max ?float75 ?float71)))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.neg ?float63)))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.max ((_ to_fp 15 113) RTP ?float92) ?float110)))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.roundToIntegral RTZ ?float121)))
(declare-const ?float130 Float64)
(assert (= ?float130 (f49 ?float80 ((_ to_fp 5 11) RTZ ?float71))))
(declare-const ?float131 Float128)
(assert (= ?float131 (f8 ((_ to_fp 5 11) RTZ ?float72) ?float72 ((_ to_fp 5 11) RTZ ?float100) ?float93 ((_ to_fp 11 53) RTP ?float102) ((_ to_fp 8 24) RTZ ?float66) ?float94 ((_ to_fp 5 11) RNE ?float108) ?float76 ((_ to_fp 15 113) RNE ?float67))))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.mul RTZ ?float79 ((_ to_fp 8 24) RTP ?float70))))
(declare-const ?float133 Float16)
(assert (= ?float133 (f42 ((_ to_fp 15 113) RTZ ?float67) ((_ to_fp 8 24) RTN ?float121) ((_ to_fp 15 113) RTN ?float65) ((_ to_fp 11 53) RNE ?float128) ((_ to_fp 8 24) RTZ ?float107) ((_ to_fp 15 113) RTZ ?float106) ?float81 ((_ to_fp 15 113) RTZ ?float121) ((_ to_fp 8 24) RTZ ?float69) ((_ to_fp 8 24) RTZ ?float107))))
(declare-const ?float134 Float32)
(assert (= ?float134 (fp.neg ?float71)))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.max ((_ to_fp 5 11) RTZ ?float108) ?float125)))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.roundToIntegral RTZ ?float111)))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.add RTP ?float104 ?float107)))
(declare-const ?float138 Float32)
(assert (= ?float138 (fp.sub RTP ?float126 ((_ to_fp 8 24) RTP ?float91))))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.abs ?float114)))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.abs ?float138)))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.max ?float96 ?float61)))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.sqrt RTP ?float88)))
(declare-const ?float143 Float32)
(assert (= ?float143 (fp.abs ?float126)))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.neg ?float75)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.sub RTP ((_ to_fp 11 53) RNE ?float104) ?float60)))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.max ((_ to_fp 5 11) RTZ ?float89) ?float97)))
(declare-const ?float147 Float32)
(assert (= ?float147 (f2 ((_ to_fp 5 11) RNE ?float70) ((_ to_fp 15 113) RTZ ?float79) ((_ to_fp 5 11) RTP ?float85) ((_ to_fp 11 53) RTN ?float92) ?float110 ((_ to_fp 15 113) RTP ?float118) ((_ to_fp 11 53) RNE ?float128) ((_ to_fp 5 11) RTZ ?float103) ((_ to_fp 11 53) RTP ?float127))))
(declare-const ?float148 Float128)
(assert (= ?float148 (f8 ((_ to_fp 5 11) RTN ?float138) ((_ to_fp 8 24) RTZ ?float77) ?float106 ((_ to_fp 15 113) RTP ?float138) ((_ to_fp 11 53) RTN ?float61) ((_ to_fp 8 24) RTZ ?float95) ((_ to_fp 5 11) RTP ?float71) ((_ to_fp 5 11) RTZ ?float89) ((_ to_fp 15 113) RTN ?float78) ((_ to_fp 15 113) RNE ?float123))))
(declare-const ?float149 Float32)
(assert (= ?float149 (f32 ((_ to_fp 8 24) RNE ?float122) ((_ to_fp 11 53) RTP ?float140) ((_ to_fp 8 24) RNE ?float94) ((_ to_fp 11 53) RTZ ?float128) ((_ to_fp 15 113) RNE ?float135) ?float123 ((_ to_fp 11 53) RTZ ?float135) ((_ to_fp 5 11) RTZ ?float95) ?float118 ((_ to_fp 5 11) RTZ ?float105))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.gt ?float84 ((_ to_fp 8 24) RTN ?float60))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isInfinite ?float106)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.leq ?float112 ?float69)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.lt ?float116 ?float75)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isZero ?float74)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.geq ((_ to_fp 8 24) RTN ?float85) ?float102)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.geq ?float108 ?float61)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isPositive ?float139)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNormal ?float87)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isNegative ?float76)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isInfinite ?float92)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNegative ?float116)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.leq ?float62 ((_ to_fp 5 11) RTZ ?float121))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNormal ?float124)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isNormal ?float96)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.eq ?float111 ?float130)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.leq ?float142 ((_ to_fp 15 113) RNE ?float145))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNaN ?float146)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (p2 ((_ to_fp 11 53) RNE ?float80) ?float95 ((_ to_fp 5 11) RTP ?float116) ((_ to_fp 5 11) RNE ?float79) ((_ to_fp 11 53) RTZ ?float94) ((_ to_fp 5 11) RTZ ?float73) ((_ to_fp 8 24) RTN ?float65) ((_ to_fp 5 11) RTN ?float74))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.geq ((_ to_fp 5 11) RTN ?float149) ?float66)))
; FINAL ASSERT
(assert (or ?bool152 (and ?bool164 (or (and (or ?bool154 (or ?bool163) ?bool159)) (and (or ?bool156 ?bool166 (and (and ?bool168 ?bool155 ?bool166) ?bool166 (or ?bool158)))) ?bool150))))
(check-sat)


-- iteration 16 --
(declare-fun f0 (Float64 Float16 Float32 Float16 Float64 Float128 Float64 Float128 Float16 Float128) Float32)
(declare-fun f1 (Float32 Float32 Float16 Float64) Float64)
(declare-fun f2 (Float16 Float64 Float64) Float16)
(declare-fun f3 (Float128 Float16 Float32 Float64 Float128 Float128) Float16)
(declare-fun f4 (Float128 Float128 Float64 Float32 Float64 Float32 Float128 Float64 Float32 Float32) Float64)
(declare-fun f5 (Float128 Float16 Float128 Float64 Float16 Float128) Float64)
(declare-fun f6 (Float32 Float64 Float64 Float64 Float128 Float16 Float32 Float64 Float32) Float16)
(declare-fun f7 (Float32 Float64 Float64 Float64 Float16 Float16 Float16 Float32 Float16) Float128)
(declare-fun f8 (Float16) Float64)
(declare-fun f9 (Float32 Float16 Float32) Float32)
(declare-fun f10 (Float128 Float64 Float64 Float128 Float32 Float16 Float128) Float64)
(declare-fun f11 (Float128 Float64 Float32 Float16 Float32 Float64 Float32 Float16) Float32)
(declare-fun f12 (Float64 Float16) Float32)
(declare-fun f13 (Float128 Float128 Float32 Float64 Float16) Float16)
(declare-fun f14 (Float32 Float64) Float16)
(declare-fun f15 (Float32 Float16 Float32) Float64)
(declare-fun f16 (Float64 Float16) Float64)
(declare-fun f17 (Float16) Float128)
(declare-fun f18 (Float16 Float16) Float64)
(declare-fun f19 (Float128 Float64 Float64 Float32) Float64)
(declare-fun f20 (Float32 Float128 Float16 Float64 Float16 Float16 Float128 Float128 Float32) Float64)
(declare-fun f21 (Float32 Float16 Float128 Float64 Float32 Float32) Float16)
(declare-fun f22 (Float64 Float64 Float16 Float16 Float16 Float16 Float32 Float32) Float32)
(declare-fun f23 (Float32 Float64 Float16 Float64 Float32 Float128 Float128 Float64) Float32)
(declare-fun f24 (Float16 Float128 Float32 Float128 Float16 Float16 Float16) Float32)
(declare-fun f25 (Float64) Float64)
(declare-fun f26 (Float32 Float64 Float128 Float128 Float128 Float16 Float16 Float16 Float16 Float32) Float64)
(declare-fun f27 (Float32 Float64 Float64 Float16 Float32 Float16 Float32 Float16) Float128)
(declare-fun f28 (Float64 Float16) Float64)
(declare-fun f29 (Float32 Float32 Float128 Float64 Float32 Float32 Float128) Float128)
(declare-fun f30 (Float128 Float16 Float32 Float64 Float16 Float32 Float64 Float16 Float16 Float64) Float64)
(declare-fun f31 (Float32 Float128 Float64 Float128 Float32 Float32) Float16)
(declare-fun f32 (Float128 Float16 Float32 Float128 Float32 Float64 Float16) Float32)
(declare-fun f33 (Float16 Float32) Float16)
(declare-fun f34 (Float16 Float16 Float16 Float16 Float32 Float128 Float128 Float128 Float64) Float32)
(declare-fun f35 (Float128 Float64 Float64 Float64) Float128)
(declare-fun f36 (Float128 Float32 Float64 Float128 Float64 Float16 Float64 Float32 Float128) Float16)
(declare-fun f37 (Float16 Float128 Float64 Float64) Float16)
(declare-fun f38 (Float64 Float16 Float128 Float128 Float64 Float128 Float64) Float32)
(declare-fun f39 (Float128 Float128 Float64) Float64)
(declare-fun f40 (Float32 Float16 Float64) Float128)
(declare-fun f41 (Float128 Float32 Float16 Float16 Float16 Float32 Float128 Float32 Float16 Float64) Float64)
(declare-fun f42 (Float128 Float64 Float32) Float64)
(declare-fun f43 (Float128 Float64 Float64 Float16 Float64 Float128 Float64) Float16)
(declare-fun f44 (Float64 Float64 Float128) Float16)
(declare-fun f45 (Float128 Float64 Float128 Float64 Float64 Float32) Float64)
(declare-fun f46 (Float128 Float64 Float64 Float64 Float64 Float16 Float64 Float128 Float16) Float128)
(declare-fun f47 (Float16 Float128) Float128)
(declare-fun f48 (Float32 Float32 Float128 Float64 Float64 Float128 Float64 Float32) Float64)
(declare-fun f49 (Float16 Float32 Float64 Float128 Float128 Float128) Float128)
(declare-fun p0 (Float64 Float32 Float128 Float16 Float16 Float128 Float64 Float32 Float32) Bool)
(declare-fun p1 (Float128 Float32 Float64 Float128) Bool)
(declare-fun p2 (Float64 Float128 Float128 Float64 Float32 Float16 Float128 Float16) Bool)
(declare-fun p3 (Float16 Float16 Float128 Float64 Float16 Float16 Float64 Float128 Float16) Bool)
(declare-fun p4 (Float32 Float16 Float128 Float32 Float128 Float128 Float16) Bool)
(declare-fun p5 (Float64 Float32) Bool)
(declare-fun p6 (Float32 Float32) Bool)
(declare-fun p7 (Float64 Float64 Float16) Bool)
(declare-fun p8 (Float64 Float16 Float128 Float16 Float16 Float32) Bool)
(declare-fun p9 (Float16 Float128 Float16 Float64 Float16 Float64 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float32)
(declare-const ?float62 Float128)
(declare-const ?float63 Float16)
(declare-const ?float64 Float32)
(declare-const ?float65 Float64)
(declare-const ?float66 Float32)
(declare-const ?float67 Float32)
(declare-const ?float68 Float128)
(declare-const ?float69 Float128)
(declare-const ?float70 Float32)
(declare-const ?float71 Float64)
(declare-const ?float72 Float16)
(declare-const ?float73 Float128)
(declare-const ?float74 Float16)
(declare-const ?float75 Float128)
(declare-const ?float76 Float64)
(declare-const ?float77 Float32)
(declare-const ?float78 Float32)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b0 #b01001 #b0100011101)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b0 #b11110111 #b10101101101000010100011)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float64)
(assert (= ?float98 (fp #b0 #b11011101000 #b0011011111000010010111011111011011100010100101110000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.add RNE ?float64 ?float64)))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.sub RTN ((_ to_fp 15 113) RTP ?float85) ?float62)))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.sub RTN ?float96 ?float77)))
(declare-const ?float103 Float64)
(assert (= ?float103 (f4 ((_ to_fp 15 113) RNE ?float71) ((_ to_fp 15 113) RTP ?float88) ?float97 ((_ to_fp 8 24) RTZ ?float76) ((_ to_fp 11 53) RTZ ?float70) ((_ to_fp 8 24) RNE ?float74) ((_ to_fp 15 113) RTP ?float70) ((_ to_fp 11 53) RTP ?float75) ((_ to_fp 8 24) RTZ ?float94) ((_ to_fp 8 24) RNE ?float72))))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.roundToIntegral RTZ ?float99)))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.neg ?float67)))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.abs ?float98)))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.max ?float79 ((_ to_fp 8 24) RTZ ?float90))))
(declare-const ?float108 Float16)
(assert (= ?float108 (fp.add RNE ((_ to_fp 5 11) RTN ?float65) ?float89)))
(declare-const ?float109 Float32)
(assert (= ?float109 (f34 ((_ to_fp 5 11) RTZ ?float83) ((_ to_fp 5 11) RTZ ?float102) ((_ to_fp 5 11) RTN ?float98) ((_ to_fp 5 11) RNE ?float85) ?float88 ?float101 ((_ to_fp 15 113) RNE ?float74) ((_ to_fp 15 113) RTP ?float63) ((_ to_fp 11 53) RTP ?float89))))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.add RNE ?float97 ?float65)))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.abs ?float99)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.roundToIntegral RNE ?float90)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.min ?float106 ?float65)))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.mul RTZ ((_ to_fp 5 11) RTP ?float61) ?float95)))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.div RTZ ?float69 ((_ to_fp 15 113) RTP ?float85))))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.max ?float104 ((_ to_fp 11 53) RTN ?float87))))
(declare-const ?float117 Float16)
(assert (= ?float117 (f14 ((_ to_fp 8 24) RTN ?float104) ((_ to_fp 11 53) RTZ ?float91))))
(declare-const ?float118 Float128)
(assert (= ?float118 (f40 ((_ to_fp 8 24) RTP ?float98) ((_ to_fp 5 11) RTN ?float88) ?float90)))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.div RTP ((_ to_fp 5 11) RTN ?float75) ?float82)))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.add RTP ?float80 ((_ to_fp 15 113) RTZ ?float83))))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.abs ?float88)))
(declare-const ?float122 Float64)
(assert (= ?float122 (f30 ((_ to_fp 15 113) RTP ?float66) ((_ to_fp 5 11) RTZ ?float62) ?float93 ((_ to_fp 11 53) RTN ?float109) ((_ to_fp 5 11) RNE ?float80) ((_ to_fp 8 24) RTN ?float80) ((_ to_fp 11 53) RTP ?float64) ((_ to_fp 5 11) RTN ?float102) ((_ to_fp 5 11) RNE ?float104) ((_ to_fp 11 53) RNE ?float81))))
(declare-const ?float123 Float128)
(assert (= ?float123 (fp.abs ?float86)))
(declare-const ?float124 Float128)
(assert (= ?float124 (fp.max ?float75 ((_ to_fp 15 113) RNE ?float111))))
(declare-const ?float125 Float32)
(assert (= ?float125 (f32 ((_ to_fp 15 113) RNE ?float89) ((_ to_fp 5 11) RTP ?float104) ((_ to_fp 8 24) RTN ?float124) ((_ to_fp 15 113) RTP ?float72) ?float85 ((_ to_fp 11 53) RTN ?float82) ((_ to_fp 5 11) RTZ ?float85))))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.sqrt RNE ?float67)))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.sqrt RTP ?float114)))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.min ?float123 ?float118)))
(declare-const ?float129 Float16)
(assert (= ?float129 (f43 ?float128 ((_ to_fp 11 53) RTN ?float60) ((_ to_fp 11 53) RNE ?float73) ?float94 ?float99 ((_ to_fp 15 113) RTZ ?float122) ((_ to_fp 11 53) RTP ?float109))))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.sqrt RTZ ?float118)))
(declare-const ?float131 Float32)
(assert (= ?float131 (fp.sub RTZ ?float105 ((_ to_fp 8 24) RTZ ?float76))))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.add RTN ?float111 ((_ to_fp 11 53) RNE ?float77))))
(declare-const ?float133 Float128)
(assert (= ?float133 (fp.min ((_ to_fp 15 113) RTN ?float61) ?float80)))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.abs ?float94)))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.add RNE ((_ to_fp 8 24) RTZ ?float108) ?float107)))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.sub RTN ?float115 ((_ to_fp 15 113) RTZ ?float64))))
(declare-const ?float137 Float32)
(assert (= ?float137 (f9 ?float131 ((_ to_fp 5 11) RNE ?float104) ((_ to_fp 8 24) RNE ?float65))))
(declare-const ?float138 Float64)
(assert (= ?float138 (fp.max ?float76 ((_ to_fp 11 53) RNE ?float64))))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.max ((_ to_fp 8 24) RNE ?float98) ?float60)))
(declare-const ?float140 Float64)
(assert (= ?float140 (f26 ((_ to_fp 8 24) RTZ ?float65) ((_ to_fp 11 53) RTP ?float92) ?float120 ?float73 ((_ to_fp 15 113) RTP ?float139) ((_ to_fp 5 11) RTN ?float130) ((_ to_fp 5 11) RTZ ?float71) ((_ to_fp 5 11) RTZ ?float138) ((_ to_fp 5 11) RTN ?float105) ((_ to_fp 8 24) RTP ?float112))))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.sub RTP ?float80 ((_ to_fp 15 113) RTN ?float60))))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.neg ?float76)))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.roundToIntegral RNE ?float111)))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.roundToIntegral RTP ?float113)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.sub RTN ?float91 ?float125)))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.max ?float102 ?float137)))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.min ((_ to_fp 8 24) RTP ?float133) ?float145)))
(declare-const ?float148 Float128)
(assert (= ?float148 (f17 ((_ to_fp 5 11) RTN ?float93))))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.add RTZ ?float74 ((_ to_fp 5 11) RTN ?float109))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isPositive ?float140)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p7 ?float71 ((_ to_fp 11 53) RTN ?float64) ((_ to_fp 5 11) RTZ ?float80))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.gt ((_ to_fp 8 24) RTZ ?float114) ?float145)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNormal ?float132)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p2 ((_ to_fp 11 53) RNE ?float129) ((_ to_fp 15 113) RTN ?float105) ((_ to_fp 15 113) RTP ?float116) ((_ to_fp 11 53) RTN ?float136) ((_ to_fp 8 24) RTP ?float98) ((_ to_fp 5 11) RTP ?float103) ((_ to_fp 15 113) RNE ?float96) ((_ to_fp 5 11) RTN ?float145))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.eq ((_ to_fp 8 24) RTN ?float127) ?float105)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.lt ?float131 ?float107)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNegative ?float147)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.geq ((_ to_fp 11 53) RNE ?float96) ?float143)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isInfinite ?float76)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.geq ?float80 ?float123)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (p4 ((_ to_fp 8 24) RTN ?float73) ?float114 ?float136 ((_ to_fp 8 24) RTZ ?float127) ((_ to_fp 15 113) RTZ ?float89) ((_ to_fp 15 113) RTZ ?float129) ((_ to_fp 5 11) RTN ?float86))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isZero ?float143)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.lt ?float143 ((_ to_fp 11 53) RNE ?float118))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isSubnormal ?float68)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p7 ((_ to_fp 11 53) RTN ?float89) ((_ to_fp 11 53) RTN ?float105) ((_ to_fp 5 11) RTP ?float96))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNaN ?float123)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p5 ((_ to_fp 11 53) RTN ?float123) ?float88)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isPositive ?float108)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isSubnormal ?float69)))
; FINAL ASSERT
(assert (or (or ?bool162)))
(check-sat)


-- iteration 17 --
(declare-fun f0 (Float128 Float32) Float16)
(declare-fun f1 (Float16 Float32 Float32 Float16 Float128 Float128 Float128 Float128) Float128)
(declare-fun f2 (Float16 Float16 Float128 Float128) Float32)
(declare-fun f3 (Float32 Float64 Float32 Float32 Float16 Float128 Float64 Float32 Float32 Float128) Float128)
(declare-fun f4 (Float128 Float128) Float128)
(declare-fun f5 (Float16 Float128 Float128 Float64 Float64 Float64 Float32 Float32 Float128) Float128)
(declare-fun f6 (Float128 Float128 Float64 Float128 Float64) Float16)
(declare-fun f7 (Float128) Float64)
(declare-fun f8 (Float128 Float16) Float32)
(declare-fun f9 (Float128 Float128 Float128 Float32 Float64 Float32 Float16) Float16)
(declare-fun f10 (Float64 Float16 Float64 Float16 Float32 Float128) Float32)
(declare-fun f11 (Float128 Float32 Float128 Float32 Float64) Float128)
(declare-fun f12 (Float64 Float32 Float128 Float64 Float32) Float64)
(declare-fun f13 (Float128 Float32 Float32) Float32)
(declare-fun f14 (Float32 Float64 Float32 Float64 Float64 Float32 Float128) Float16)
(declare-fun f15 (Float32 Float32 Float64 Float128 Float128 Float16) Float64)
(declare-fun f16 (Float128 Float16 Float128 Float128 Float64 Float16 Float128 Float128 Float64) Float64)
(declare-fun f17 (Float16 Float128 Float32) Float128)
(declare-fun f18 (Float16 Float64 Float64 Float64 Float64 Float64 Float32) Float16)
(declare-fun f19 (Float32 Float64 Float32) Float32)
(declare-fun f20 (Float64 Float128 Float16 Float64 Float128 Float64 Float16 Float128) Float64)
(declare-fun f21 (Float64 Float32) Float128)
(declare-fun f22 (Float32 Float64 Float16 Float16 Float128 Float32 Float128) Float32)
(declare-fun f23 (Float64 Float16) Float16)
(declare-fun f24 (Float32 Float128 Float32 Float32 Float128 Float16 Float16) Float128)
(declare-fun f25 (Float128 Float64 Float64) Float64)
(declare-fun f26 (Float64 Float128 Float32 Float32 Float128 Float64) Float32)
(declare-fun f27 (Float64 Float128 Float16 Float16 Float128 Float32 Float64 Float64 Float128 Float16) Float128)
(declare-fun f28 (Float64 Float16 Float128 Float16 Float16 Float32 Float64 Float32 Float128 Float16) Float32)
(declare-fun f29 (Float128 Float128 Float64 Float16 Float16 Float32 Float128 Float64 Float128) Float128)
(declare-fun f30 (Float128 Float32 Float32 Float32 Float128) Float32)
(declare-fun f31 (Float32 Float64 Float32 Float32 Float64 Float64) Float32)
(declare-fun f32 (Float16 Float64 Float64 Float64 Float64) Float64)
(declare-fun f33 (Float128 Float128 Float16) Float16)
(declare-fun f34 (Float128 Float16 Float128 Float128 Float32) Float128)
(declare-fun f35 (Float16 Float64 Float32 Float64 Float16 Float64 Float64) Float32)
(declare-fun f36 (Float32 Float128 Float64 Float16 Float128 Float64) Float64)
(declare-fun f37 (Float128 Float128 Float16 Float16) Float32)
(declare-fun f38 (Float128 Float128) Float128)
(declare-fun f39 (Float32 Float128 Float32 Float16 Float32 Float64) Float128)
(declare-fun f40 (Float128 Float128 Float64 Float32 Float128) Float32)
(declare-fun f41 (Float128 Float128 Float128 Float128 Float32 Float16 Float64) Float16)
(declare-fun f42 (Float64 Float128 Float128 Float32 Float16 Float128 Float32 Float64 Float64 Float16) Float32)
(declare-fun f43 (Float16) Float64)
(declare-fun f44 (Float64 Float16 Float128 Float16) Float16)
(declare-fun f45 (Float32 Float32 Float64 Float32 Float16 Float32 Float128) Float64)
(declare-fun f46 (Float128 Float64 Float64 Float64 Float128 Float32 Float64 Float64 Float32) Float64)
(declare-fun f47 (Float128 Float32) Float16)
(declare-fun f48 (Float64 Float16 Float32 Float32 Float64 Float32) Float32)
(declare-fun f49 (Float64 Float128 Float64 Float64 Float32 Float32 Float32 Float128) Float32)
(declare-fun p0 (Float128 Float16 Float16 Float64 Float32 Float32 Float64 Float64) Bool)
(declare-fun p1 (Float16 Float16 Float32 Float128 Float64 Float64) Bool)
(declare-fun p2 (Float128 Float128 Float128 Float64 Float64 Float128 Float128 Float128) Bool)
(declare-fun p3 (Float16) Bool)
(declare-fun p4 (Float128 Float32 Float128 Float64) Bool)
(declare-fun p5 (Float64 Float128) Bool)
(declare-fun p6 (Float64 Float64) Bool)
(declare-fun p7 (Float64) Bool)
(declare-fun p8 (Float128 Float32) Bool)
(declare-fun p9 (Float64 Float128 Float32 Float16 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float32)
(declare-const ?float62 Float32)
(declare-const ?float63 Float64)
(declare-const ?float64 Float128)
(declare-const ?float65 Float32)
(declare-const ?float66 Float128)
(declare-const ?float67 Float32)
(declare-const ?float68 Float16)
(declare-const ?float69 Float16)
(declare-const ?float70 Float16)
(declare-const ?float71 Float16)
(declare-const ?float72 Float16)
(declare-const ?float73 Float16)
(declare-const ?float74 Float128)
(declare-const ?float75 Float32)
(declare-const ?float76 Float64)
(declare-const ?float77 Float64)
(declare-const ?float78 Float64)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b1 #b000010011011011 #b0010000011110110110110000100001010111111000110010010111100110101100110000100010000101111001000101000000000001011)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (fp.sqrt RNE ?float89)))
(declare-const ?float101 Float64)
(assert (= ?float101 (fp.mul RNE ((_ to_fp 11 53) RTZ ?float65) ?float63)))
(declare-const ?float102 Float64)
(assert (= ?float102 (f36 ((_ to_fp 8 24) RTN ?float73) ((_ to_fp 15 113) RTZ ?float93) ?float60 ((_ to_fp 5 11) RNE ?float75) ((_ to_fp 15 113) RTP ?float63) ((_ to_fp 11 53) RTP ?float67))))
(declare-const ?float103 Float32)
(assert (= ?float103 (f35 ?float73 ((_ to_fp 11 53) RTZ ?float95) ((_ to_fp 8 24) RTP ?float70) ((_ to_fp 11 53) RTP ?float80) ((_ to_fp 5 11) RTZ ?float99) ?float60 ?float86)))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.abs ?float74)))
(declare-const ?float105 Float128)
(assert (= ?float105 (fp.max ?float64 ?float92)))
(declare-const ?float106 Float16)
(assert (= ?float106 (fp.max ((_ to_fp 5 11) RTP ?float64) ?float84)))
(declare-const ?float107 Float64)
(assert (= ?float107 (fp.neg ?float86)))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.neg ?float66)))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.min ?float70 ((_ to_fp 5 11) RTN ?float66))))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.div RTN ((_ to_fp 15 113) RTP ?float103) ?float96)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.add RNE ?float70 ?float106)))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.min ((_ to_fp 5 11) RNE ?float103) ?float72)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.sub RTN ?float76 ((_ to_fp 11 53) RTP ?float105))))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.mul RTN ?float73 ((_ to_fp 5 11) RTN ?float62))))
(declare-const ?float115 Float16)
(assert (= ?float115 (f0 ((_ to_fp 15 113) RTZ ?float82) ((_ to_fp 8 24) RTZ ?float71))))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.div RTN ((_ to_fp 8 24) RNE ?float105) ?float67)))
(declare-const ?float117 Float16)
(assert (= ?float117 (f0 ((_ to_fp 15 113) RTZ ?float67) ((_ to_fp 8 24) RNE ?float109))))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.add RTP ?float64 ?float98)))
(declare-const ?float119 Float128)
(assert (= ?float119 (fp.div RTP ?float108 ((_ to_fp 15 113) RNE ?float80))))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.neg ?float76)))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.neg ?float103)))
(declare-const ?float122 Float32)
(assert (= ?float122 (f22 ((_ to_fp 8 24) RTP ?float77) ((_ to_fp 11 53) RTZ ?float116) ?float73 ((_ to_fp 5 11) RTN ?float104) ?float74 ((_ to_fp 8 24) RNE ?float73) ((_ to_fp 15 113) RNE ?float88))))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.neg ?float85)))
(declare-const ?float124 Float16)
(assert (= ?float124 (f41 ((_ to_fp 15 113) RNE ?float85) ((_ to_fp 15 113) RNE ?float67) ?float74 ((_ to_fp 15 113) RNE ?float63) ((_ to_fp 8 24) RTN ?float79) ((_ to_fp 5 11) RNE ?float64) ?float97)))
(declare-const ?float125 Float32)
(assert (= ?float125 (f31 ?float81 ?float97 ((_ to_fp 8 24) RTZ ?float99) ((_ to_fp 8 24) RTP ?float109) ((_ to_fp 11 53) RTN ?float96) ?float100)))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.sub RTP ((_ to_fp 8 24) RTZ ?float69) ?float91)))
(declare-const ?float127 Float128)
(assert (= ?float127 (fp.abs ?float74)))
(declare-const ?float128 Float16)
(assert (= ?float128 (fp.div RTZ ?float68 ?float117)))
(declare-const ?float129 Float128)
(assert (= ?float129 (fp.div RTN ?float99 ?float66)))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.div RTN ?float66 ((_ to_fp 15 113) RNE ?float121))))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.max ?float73 ((_ to_fp 5 11) RTZ ?float130))))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.sqrt RTN ?float74)))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.neg ?float89)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.mul RNE ((_ to_fp 15 113) RTP ?float80) ?float132)))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.sub RTP ?float98 ((_ to_fp 15 113) RTN ?float78))))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.add RTZ ((_ to_fp 5 11) RNE ?float133) ?float69)))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.max ((_ to_fp 15 113) RTZ ?float82) ?float110)))
(declare-const ?float138 Float32)
(assert (= ?float138 (fp.min ?float121 ((_ to_fp 8 24) RTP ?float98))))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.div RNE ((_ to_fp 5 11) RTZ ?float78) ?float68)))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.div RTZ ?float130 ((_ to_fp 15 113) RTZ ?float88))))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.sub RTN ?float99 ((_ to_fp 15 113) RTP ?float72))))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.sqrt RTP ?float130)))
(declare-const ?float143 Float128)
(assert (= ?float143 (fp.div RTP ?float92 ?float134)))
(declare-const ?float144 Float32)
(assert (= ?float144 (f26 ?float100 ((_ to_fp 15 113) RTN ?float101) ?float91 ((_ to_fp 8 24) RTZ ?float104) ((_ to_fp 15 113) RTZ ?float123) ((_ to_fp 11 53) RTP ?float125))))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.abs ?float122)))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.min ?float118 ?float127)))
(declare-const ?float147 Float64)
(assert (= ?float147 (fp.roundToIntegral RTN ?float76)))
(declare-const ?float148 Float128)
(assert (= ?float148 (fp.roundToIntegral RTP ?float143)))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.add RTZ ?float130 ?float105)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.geq ?float124 ?float73)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p9 ((_ to_fp 11 53) RNE ?float70) ((_ to_fp 15 113) RTN ?float115) ((_ to_fp 8 24) RTN ?float85) ?float68 ((_ to_fp 8 24) RTN ?float113))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isPositive ?float90)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isZero ?float139)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNaN ?float128)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isInfinite ?float129)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isSubnormal ?float126)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNegative ?float79)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p9 ?float89 ?float140 ((_ to_fp 8 24) RTP ?float112) ((_ to_fp 5 11) RNE ?float134) ((_ to_fp 8 24) RTP ?float107))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.gt ?float117 ((_ to_fp 5 11) RNE ?float81))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNegative ?float106)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNaN ?float130)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.leq ?float105 ?float149)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (p5 ((_ to_fp 11 53) RNE ?float148) ((_ to_fp 15 113) RNE ?float145))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.leq ((_ to_fp 5 11) RTN ?float96) ?float112)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isNormal ?float77)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isSubnormal ?float121)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p0 ((_ to_fp 15 113) RTN ?float69) ((_ to_fp 5 11) RTP ?float133) ?float124 ((_ to_fp 11 53) RNE ?float95) ((_ to_fp 8 24) RTZ ?float86) ((_ to_fp 8 24) RTN ?float96) ((_ to_fp 11 53) RTP ?float130) ((_ to_fp 11 53) RTP ?float94))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNormal ?float118)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isZero ?float100)))
; FINAL ASSERT
(assert (and ?bool167 (and ?bool163 (and ?bool162 ?bool161 (and ?bool159)) (or ?bool166 ?bool165 ?bool169)) (and ?bool150)))
(check-sat)


-- iteration 18 --
(declare-fun f0 (Float32) Float128)
(declare-fun f1 (Float128 Float64 Float32 Float32 Float64 Float16) Float16)
(declare-fun f2 (Float32) Float128)
(declare-fun f3 (Float128 Float128 Float32 Float32 Float16 Float128 Float32 Float64 Float32) Float32)
(declare-fun f4 (Float128 Float16 Float16 Float16 Float32 Float32 Float16 Float16 Float64) Float32)
(declare-fun f5 (Float32 Float32 Float64 Float32 Float64 Float64) Float16)
(declare-fun f6 (Float64 Float32 Float64) Float16)
(declare-fun f7 (Float16 Float64 Float64) Float64)
(declare-fun f8 (Float32 Float128 Float16 Float16 Float128 Float64) Float128)
(declare-fun f9 (Float16 Float32 Float128 Float128 Float16 Float64 Float16) Float32)
(declare-fun f10 (Float128) Float128)
(declare-fun f11 (Float64 Float16 Float16 Float128 Float32 Float32) Float128)
(declare-fun f12 (Float128 Float64 Float32 Float64 Float64 Float32) Float64)
(declare-fun f13 (Float16 Float64 Float16 Float128 Float16 Float32 Float16 Float16 Float32) Float32)
(declare-fun f14 (Float32 Float32 Float128 Float64 Float16) Float32)
(declare-fun f15 (Float128 Float128 Float64 Float16 Float32 Float128 Float16 Float16 Float128) Float128)
(declare-fun f16 (Float64 Float16 Float16 Float128 Float128 Float16 Float128 Float32 Float16) Float16)
(declare-fun f17 (Float16 Float32 Float32 Float32 Float64) Float16)
(declare-fun f18 (Float32 Float16 Float128 Float128 Float64 Float16 Float32 Float64 Float128) Float64)
(declare-fun f19 (Float32 Float16 Float128 Float32 Float16 Float16) Float16)
(declare-fun f20 (Float64 Float16 Float128 Float32 Float128 Float16) Float64)
(declare-fun f21 (Float128 Float16 Float64 Float64 Float64 Float128 Float16 Float16) Float32)
(declare-fun f22 (Float128) Float32)
(declare-fun f23 (Float128 Float64 Float16 Float64 Float16 Float16 Float16 Float16 Float128) Float32)
(declare-fun f24 (Float128 Float128 Float64 Float128) Float128)
(declare-fun f25 (Float128 Float64 Float32 Float128 Float64 Float64 Float16 Float16) Float128)
(declare-fun f26 (Float16 Float128 Float32 Float32 Float32 Float32 Float16) Float64)
(declare-fun f27 (Float16 Float64 Float32) Float64)
(declare-fun f28 (Float128 Float128 Float64 Float16 Float16 Float16 Float16 Float64 Float16 Float128) Float128)
(declare-fun f29 (Float16 Float16 Float64 Float64 Float64 Float16 Float128 Float32) Float16)
(declare-fun f30 (Float16 Float64 Float32 Float32) Float64)
(declare-fun f31 (Float64 Float32 Float64) Float128)
(declare-fun f32 (Float64 Float16 Float64 Float64 Float128 Float32 Float32 Float128 Float64 Float64) Float16)
(declare-fun f33 (Float32 Float64 Float16) Float32)
(declare-fun f34 (Float16 Float16 Float16 Float32) Float128)
(declare-fun f35 (Float128 Float16 Float128 Float128 Float32 Float16 Float16) Float16)
(declare-fun f36 (Float128 Float32) Float32)
(declare-fun f37 (Float16 Float64 Float16 Float32 Float128 Float64) Float16)
(declare-fun f38 (Float32 Float128 Float128 Float32 Float128 Float16 Float64 Float64 Float16) Float32)
(declare-fun f39 (Float16 Float64 Float64 Float16 Float16 Float64 Float64) Float16)
(declare-fun f40 (Float64 Float16 Float64 Float128 Float32 Float64 Float128 Float128 Float16) Float32)
(declare-fun f41 (Float128 Float16 Float32 Float64 Float128 Float32 Float64 Float32) Float128)
(declare-fun f42 (Float16 Float128 Float128 Float32 Float16 Float16 Float16 Float128 Float32 Float32) Float16)
(declare-fun f43 (Float64 Float16 Float64 Float32) Float128)
(declare-fun f44 (Float64 Float128 Float16 Float128 Float16 Float64 Float32 Float16 Float64) Float128)
(declare-fun f45 (Float64 Float128 Float32) Float128)
(declare-fun f46 (Float64 Float64 Float16) Float128)
(declare-fun f47 (Float16 Float64 Float64 Float16 Float32 Float32 Float16 Float32) Float64)
(declare-fun f48 (Float128 Float128 Float64 Float16 Float64 Float16 Float32) Float128)
(declare-fun f49 (Float64 Float16 Float32 Float32 Float64 Float128 Float32) Float64)
(declare-fun p0 (Float64 Float64 Float128) Bool)
(declare-fun p1 (Float128 Float64 Float128 Float64 Float64 Float16 Float16 Float64 Float16 Float32) Bool)
(declare-fun p2 (Float16) Bool)
(declare-fun p3 (Float64 Float32 Float16 Float16 Float16 Float16 Float128 Float16 Float128 Float16) Bool)
(declare-fun p4 (Float32 Float64 Float64) Bool)
(declare-fun p5 (Float32 Float32 Float64) Bool)
(declare-fun p6 (Float64 Float64 Float128 Float64 Float64 Float64) Bool)
(declare-fun p7 (Float32 Float128 Float32 Float16 Float16 Float64 Float128 Float16) Bool)
(declare-fun p8 (Float128 Float64 Float128 Float64) Bool)
(declare-fun p9 (Float64 Float16 Float128 Float128 Float32 Float128 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float128)
(declare-const ?float62 Float128)
(declare-const ?float63 Float32)
(declare-const ?float64 Float128)
(declare-const ?float65 Float64)
(declare-const ?float66 Float16)
(declare-const ?float67 Float16)
(declare-const ?float68 Float64)
(declare-const ?float69 Float16)
(declare-const ?float70 Float16)
(declare-const ?float71 Float32)
(declare-const ?float72 Float64)
(declare-const ?float73 Float128)
(declare-const ?float74 Float64)
(declare-const ?float75 Float32)
(declare-const ?float76 Float32)
(declare-const ?float77 Float16)
(declare-const ?float78 Float64)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float83 Float128)
(assert (= ?float83 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b1 #b11111111 #b11000010111001110100011)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b1 #b01110011 #b10011100011100100000010)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (fp.neg ?float73)))
(declare-const ?float101 Float64)
(assert (= ?float101 (fp.mul RTZ ?float72 ((_ to_fp 11 53) RNE ?float99))))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.div RTP ?float66 ((_ to_fp 5 11) RTZ ?float63))))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.max ?float77 ((_ to_fp 5 11) RTZ ?float61))))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.max ((_ to_fp 5 11) RTZ ?float61) ?float70)))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.min ?float96 ?float76)))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.add RTP ((_ to_fp 15 113) RNE ?float91) ?float73)))
(declare-const ?float107 Float128)
(assert (= ?float107 (f25 ((_ to_fp 15 113) RTN ?float101) ((_ to_fp 11 53) RNE ?float64) ?float105 ((_ to_fp 15 113) RTN ?float103) ((_ to_fp 11 53) RNE ?float105) ((_ to_fp 11 53) RTN ?float64) ?float77 ((_ to_fp 5 11) RTN ?float82))))
(declare-const ?float108 Float128)
(assert (= ?float108 (f44 ?float78 ?float83 ?float86 ((_ to_fp 15 113) RTP ?float93) ?float66 ?float60 ?float85 ?float98 ((_ to_fp 11 53) RTN ?float102))))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.div RTP ((_ to_fp 15 113) RNE ?float72) ?float81)))
(declare-const ?float110 Float32)
(assert (= ?float110 (fp.max ((_ to_fp 8 24) RTP ?float101) ?float71)))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.sub RTN ?float92 ((_ to_fp 8 24) RTZ ?float87))))
(declare-const ?float112 Float16)
(assert (= ?float112 (f6 ((_ to_fp 11 53) RTP ?float86) ((_ to_fp 8 24) RTN ?float99) ((_ to_fp 11 53) RNE ?float77))))
(declare-const ?float113 Float128)
(assert (= ?float113 (fp.mul RNE ?float61 ?float83)))
(declare-const ?float114 Float32)
(assert (= ?float114 (f21 ?float108 ((_ to_fp 5 11) RTP ?float62) ((_ to_fp 11 53) RTN ?float69) ((_ to_fp 11 53) RTN ?float84) ((_ to_fp 11 53) RTZ ?float81) ((_ to_fp 15 113) RNE ?float102) ?float77 ((_ to_fp 5 11) RNE ?float80))))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.mul RNE ?float83 ?float100)))
(declare-const ?float116 Float128)
(assert (= ?float116 (fp.abs ?float113)))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.max ?float83 ?float64)))
(declare-const ?float118 Float128)
(assert (= ?float118 (f15 ?float73 ?float64 ((_ to_fp 11 53) RNE ?float67) ((_ to_fp 5 11) RNE ?float92) ((_ to_fp 8 24) RTP ?float101) ((_ to_fp 15 113) RNE ?float92) ?float66 ((_ to_fp 5 11) RNE ?float72) ?float87)))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.neg ?float95)))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.add RNE ((_ to_fp 11 53) RTN ?float114) ?float101)))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.mul RTZ ((_ to_fp 11 53) RNE ?float73) ?float101)))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.abs ?float106)))
(declare-const ?float123 Float16)
(assert (= ?float123 (f32 ((_ to_fp 11 53) RTP ?float92) ?float70 ((_ to_fp 11 53) RTZ ?float117) ((_ to_fp 11 53) RNE ?float81) ((_ to_fp 15 113) RTN ?float97) ((_ to_fp 8 24) RTN ?float102) ((_ to_fp 8 24) RTN ?float97) ?float115 ((_ to_fp 11 53) RNE ?float102) ((_ to_fp 11 53) RTP ?float87))))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.sub RTP ((_ to_fp 11 53) RTP ?float105) ?float88)))
(declare-const ?float125 Float128)
(assert (= ?float125 (f15 ?float113 ((_ to_fp 15 113) RNE ?float104) ?float94 ((_ to_fp 5 11) RNE ?float120) ((_ to_fp 8 24) RTZ ?float93) ((_ to_fp 15 113) RTP ?float110) ((_ to_fp 5 11) RTZ ?float61) ((_ to_fp 5 11) RTP ?float116) ((_ to_fp 15 113) RTN ?float60))))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.sqrt RTP ?float62)))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.div RTN ?float95 ((_ to_fp 8 24) RTZ ?float69))))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.add RTN ((_ to_fp 15 113) RTP ?float79) ?float87)))
(declare-const ?float129 Float128)
(assert (= ?float129 (f15 ((_ to_fp 15 113) RTN ?float88) ((_ to_fp 15 113) RTP ?float67) ((_ to_fp 11 53) RTN ?float63) ((_ to_fp 5 11) RNE ?float107) ?float75 ?float107 ((_ to_fp 5 11) RTN ?float99) ((_ to_fp 5 11) RNE ?float90) ((_ to_fp 15 113) RNE ?float91))))
(declare-const ?float130 Float32)
(assert (= ?float130 (f21 ((_ to_fp 15 113) RTZ ?float63) ((_ to_fp 5 11) RTP ?float60) ?float72 ((_ to_fp 11 53) RTZ ?float104) ?float93 ?float113 ((_ to_fp 5 11) RTZ ?float85) ((_ to_fp 5 11) RTN ?float120))))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.mul RTZ ?float77 ((_ to_fp 5 11) RTZ ?float68))))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.sqrt RTN ?float116)))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.add RTN ((_ to_fp 11 53) RNE ?float79) ?float88)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.mul RNE ?float73 ((_ to_fp 15 113) RNE ?float77))))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.mul RNE ?float115 ((_ to_fp 15 113) RTP ?float92))))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.sub RTZ ?float120 ?float90)))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.mul RTP ?float118 ?float125)))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.sqrt RTN ?float77)))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.abs ?float136)))
(declare-const ?float140 Float64)
(assert (= ?float140 (fp.roundToIntegral RNE ?float133)))
(declare-const ?float141 Float32)
(assert (= ?float141 (f33 ((_ to_fp 8 24) RTP ?float60) ((_ to_fp 11 53) RTP ?float77) ((_ to_fp 5 11) RTZ ?float136))))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.abs ?float87)))
(declare-const ?float143 Float16)
(assert (= ?float143 (fp.max ((_ to_fp 5 11) RTP ?float92) ?float131)))
(declare-const ?float144 Float16)
(assert (= ?float144 (f42 ?float102 ?float99 ((_ to_fp 15 113) RTZ ?float133) ((_ to_fp 8 24) RTN ?float143) ((_ to_fp 5 11) RNE ?float91) ((_ to_fp 5 11) RTP ?float101) ((_ to_fp 5 11) RTP ?float111) ((_ to_fp 15 113) RTZ ?float82) ((_ to_fp 8 24) RTZ ?float104) ((_ to_fp 8 24) RNE ?float115))))
(declare-const ?float145 Float128)
(assert (= ?float145 (f10 ?float118)))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.abs ?float141)))
(declare-const ?float147 Float64)
(assert (= ?float147 (fp.max ?float101 ((_ to_fp 11 53) RTP ?float144))))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.add RTZ ?float60 ((_ to_fp 11 53) RNE ?float125))))
(declare-const ?float149 Float32)
(assert (= ?float149 (fp.sub RTZ ?float89 ?float89)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p0 ((_ to_fp 11 53) RNE ?float102) ((_ to_fp 11 53) RTZ ?float129) ?float137)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.leq ?float82 ((_ to_fp 8 24) RNE ?float124))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (p6 ((_ to_fp 11 53) RTN ?float99) ((_ to_fp 11 53) RNE ?float66) ((_ to_fp 15 113) RTP ?float63) ((_ to_fp 11 53) RTP ?float87) ((_ to_fp 11 53) RNE ?float117) ((_ to_fp 11 53) RNE ?float71))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isZero ?float119)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNegative ?float109)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isSubnormal ?float121)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.gt ?float109 ((_ to_fp 15 113) RTP ?float133))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.geq ((_ to_fp 5 11) RNE ?float64) ?float98)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.gt ?float112 ((_ to_fp 5 11) RTZ ?float100))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p3 ((_ to_fp 11 53) RTZ ?float80) ?float149 ((_ to_fp 5 11) RTP ?float129) ((_ to_fp 5 11) RTZ ?float95) ((_ to_fp 5 11) RTP ?float132) ?float79 ?float81 ((_ to_fp 5 11) RTZ ?float109) ((_ to_fp 15 113) RTN ?float77) ((_ to_fp 5 11) RTP ?float65))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNormal ?float70)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNormal ?float118)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (p3 ((_ to_fp 11 53) RTN ?float105) ?float63 ?float77 ((_ to_fp 5 11) RNE ?float128) ((_ to_fp 5 11) RNE ?float119) ((_ to_fp 5 11) RTP ?float72) ((_ to_fp 15 113) RTN ?float66) ((_ to_fp 5 11) RTP ?float129) ((_ to_fp 15 113) RTP ?float123) ((_ to_fp 5 11) RTP ?float88))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNormal ?float82)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.eq ((_ to_fp 11 53) RNE ?float81) ?float124)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isNormal ?float106)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p6 ?float72 ((_ to_fp 11 53) RNE ?float75) ((_ to_fp 15 113) RTP ?float101) ?float101 ((_ to_fp 11 53) RTZ ?float118) ((_ to_fp 11 53) RTN ?float108))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.geq ((_ to_fp 11 53) RNE ?float102) ?float148)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.gt ?float75 ((_ to_fp 8 24) RTP ?float78))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.lt ?float62 ?float117)))
; FINAL ASSERT
(assert (or (and ?bool165) (and (and (and (and (and ?bool167 (or ?bool152 ?bool152) ?bool157)) (and (and ?bool154) ?bool169 (and (and ?bool169) ?bool153 (and ?bool158))) (or (and (and ?bool158 ?bool165 ?bool158) ?bool166 ?bool162) ?bool164)) (and (and (or (or ?bool151) ?bool160 ?bool164) (and ?bool154 ?bool155 (and ?bool168 ?bool162 ?bool169)) ?bool162) (or ?bool157 ?bool167)) (and ?bool151 ?bool160)) ?bool152)))
(check-sat)


-- iteration 19 --
(declare-fun f0 (Float16 Float128 Float32 Float64 Float16 Float64 Float64) Float64)
(declare-fun f1 (Float64 Float128 Float64 Float32 Float64 Float16 Float64) Float32)
(declare-fun f2 (Float64 Float32) Float64)
(declare-fun f3 (Float64 Float128 Float16 Float32 Float32 Float16) Float32)
(declare-fun f4 (Float128 Float64 Float16 Float128 Float16 Float16 Float128 Float16 Float32 Float16) Float32)
(declare-fun f5 (Float128 Float64 Float128 Float128 Float128 Float64 Float128 Float128 Float32) Float16)
(declare-fun f6 (Float64 Float128 Float16 Float64 Float32 Float16 Float64 Float16 Float64 Float64) Float64)
(declare-fun f7 (Float32 Float128 Float16 Float32 Float64 Float128) Float128)
(declare-fun f8 (Float128 Float128 Float32 Float64 Float32 Float16 Float128) Float32)
(declare-fun f9 (Float128 Float128 Float16 Float32 Float16 Float64 Float32 Float128 Float128) Float64)
(declare-fun f10 (Float128) Float128)
(declare-fun f11 (Float16 Float16 Float64 Float128 Float16 Float16) Float32)
(declare-fun f12 (Float16 Float32 Float64 Float16 Float32 Float64) Float32)
(declare-fun f13 (Float32 Float16 Float16 Float128) Float128)
(declare-fun f14 (Float16 Float64) Float64)
(declare-fun f15 (Float128 Float32 Float32) Float32)
(declare-fun f16 (Float128 Float32 Float128 Float16) Float32)
(declare-fun f17 (Float16 Float64 Float128 Float64 Float64 Float16 Float128 Float16 Float32 Float64) Float16)
(declare-fun f18 (Float64 Float16 Float64 Float32 Float128) Float64)
(declare-fun f19 (Float128 Float64) Float64)
(declare-fun f20 (Float128 Float16 Float128 Float128 Float16 Float16 Float128 Float16) Float16)
(declare-fun f21 (Float64 Float32 Float64 Float32 Float32) Float64)
(declare-fun f22 (Float16 Float64 Float16 Float32 Float128) Float128)
(declare-fun f23 (Float64 Float64 Float128 Float32 Float32 Float32 Float128) Float32)
(declare-fun f24 (Float128 Float32 Float32) Float128)
(declare-fun f25 (Float16 Float16 Float16 Float32 Float32 Float128) Float128)
(declare-fun f26 (Float64 Float32 Float32 Float64) Float16)
(declare-fun f27 (Float64 Float32 Float32 Float32 Float128) Float64)
(declare-fun f28 (Float128 Float16 Float16 Float128 Float32 Float16 Float128 Float32 Float32 Float32) Float16)
(declare-fun f29 (Float16 Float128 Float32 Float32 Float16) Float64)
(declare-fun f30 (Float16 Float128 Float64 Float128 Float32 Float32 Float16 Float64 Float128) Float16)
(declare-fun f31 (Float32 Float32 Float64 Float64) Float128)
(declare-fun f32 (Float64 Float128 Float64 Float32 Float128 Float32 Float128) Float128)
(declare-fun f33 (Float32 Float64 Float64 Float16 Float128) Float128)
(declare-fun f34 (Float64 Float128 Float64 Float32 Float64 Float32 Float128 Float128 Float128 Float128) Float16)
(declare-fun f35 (Float32 Float16 Float32 Float32 Float32 Float32) Float32)
(declare-fun f36 (Float64 Float128 Float16 Float64 Float64 Float128) Float32)
(declare-fun f37 (Float32 Float128 Float16 Float64 Float16 Float64 Float32 Float64) Float128)
(declare-fun f38 (Float16 Float64 Float64) Float64)
(declare-fun f39 (Float16 Float128 Float128) Float32)
(declare-fun f40 (Float16 Float128 Float128) Float16)
(declare-fun f41 (Float64) Float128)
(declare-fun f42 (Float64 Float16 Float64 Float64 Float64 Float64 Float16 Float64 Float16) Float32)
(declare-fun f43 (Float16 Float32 Float128 Float16 Float128) Float16)
(declare-fun f44 (Float16 Float16 Float32 Float64 Float16 Float32 Float64 Float16) Float128)
(declare-fun f45 (Float16) Float16)
(declare-fun f46 (Float64 Float128) Float16)
(declare-fun f47 (Float32 Float128 Float64) Float64)
(declare-fun f48 (Float16 Float16 Float128 Float16 Float128) Float128)
(declare-fun f49 (Float32 Float16 Float32 Float16 Float32 Float64 Float16 Float32 Float64 Float32) Float64)
(declare-fun p0 (Float64 Float128 Float128 Float16) Bool)
(declare-fun p1 (Float32 Float128 Float64) Bool)
(declare-fun p2 (Float64 Float128 Float64 Float64 Float16) Bool)
(declare-fun p3 (Float32) Bool)
(declare-fun p4 (Float128 Float16 Float16) Bool)
(declare-fun p5 (Float32 Float64 Float128 Float32 Float16 Float16 Float64 Float32) Bool)
(declare-fun p6 (Float128 Float64 Float16 Float16 Float16 Float128 Float128 Float16 Float32 Float128) Bool)
(declare-fun p7 (Float128 Float128 Float128 Float32 Float128 Float128 Float32 Float128 Float128) Bool)
(declare-fun p8 (Float16 Float128 Float128) Bool)
(declare-fun p9 (Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float64)
(declare-const ?float62 Float64)
(declare-const ?float63 Float32)
(declare-const ?float64 Float64)
(declare-const ?float65 Float64)
(declare-const ?float66 Float64)
(declare-const ?float67 Float64)
(declare-const ?float68 Float16)
(declare-const ?float69 Float128)
(declare-const ?float70 Float64)
(declare-const ?float71 Float128)
(declare-const ?float72 Float128)
(declare-const ?float73 Float128)
(declare-const ?float74 Float64)
(declare-const ?float75 Float64)
(declare-const ?float76 Float16)
(declare-const ?float77 Float32)
(declare-const ?float78 Float128)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b0 #b110110101001000 #b1010100010101001101010101001111111011101101111101101100100100101101001111101001111110011011001101011101001011011)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b1 #b00001011 #b10000110100010000111110)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b1 #b11111 #b0100001101)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b0 #b00000000 #b00000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (fp.max ?float84 ?float65)))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.div RTZ ((_ to_fp 8 24) RTZ ?float66) ?float85)))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.mul RTN ?float63 ?float86)))
(declare-const ?float103 Float128)
(assert (= ?float103 (fp.add RTZ ?float91 ((_ to_fp 15 113) RTP ?float82))))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.mul RNE ?float100 ?float66)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.mul RTZ ?float94 ?float60)))
(declare-const ?float106 Float16)
(assert (= ?float106 (fp.max ((_ to_fp 5 11) RTZ ?float101) ?float76)))
(declare-const ?float107 Float32)
(assert (= ?float107 (f36 ?float80 ((_ to_fp 15 113) RTP ?float86) ((_ to_fp 5 11) RTP ?float62) ((_ to_fp 11 53) RTN ?float79) ((_ to_fp 11 53) RTP ?float106) ((_ to_fp 15 113) RTN ?float86))))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.sqrt RTZ ?float72)))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.neg ?float106)))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.add RNE ((_ to_fp 11 53) RTN ?float69) ?float74)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.div RTZ ((_ to_fp 5 11) RTZ ?float97) ?float106)))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.neg ?float90)))
(declare-const ?float113 Float128)
(assert (= ?float113 (fp.div RTZ ((_ to_fp 15 113) RTP ?float105) ?float108)))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.mul RTP ?float106 ((_ to_fp 5 11) RTZ ?float71))))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.div RTN ?float77 ((_ to_fp 8 24) RTP ?float83))))
(declare-const ?float116 Float128)
(assert (= ?float116 (fp.div RNE ?float81 ?float69)))
(declare-const ?float117 Float32)
(assert (= ?float117 (f23 ((_ to_fp 11 53) RTP ?float88) ((_ to_fp 11 53) RTP ?float79) ?float108 ((_ to_fp 8 24) RTZ ?float68) ((_ to_fp 8 24) RNE ?float66) ((_ to_fp 8 24) RTP ?float100) ((_ to_fp 15 113) RTN ?float75))))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.max ((_ to_fp 8 24) RTZ ?float60) ?float107)))
(declare-const ?float119 Float32)
(assert (= ?float119 (f15 ((_ to_fp 15 113) RNE ?float95) ?float115 ((_ to_fp 8 24) RTN ?float78))))
(declare-const ?float120 Float16)
(assert (= ?float120 (fp.abs ?float90)))
(declare-const ?float121 Float128)
(assert (= ?float121 (f24 ((_ to_fp 15 113) RTN ?float68) ((_ to_fp 8 24) RNE ?float94) ((_ to_fp 8 24) RTN ?float114))))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.abs ?float111)))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.sqrt RNE ?float106)))
(declare-const ?float124 Float16)
(assert (= ?float124 (fp.sub RTN ((_ to_fp 5 11) RTZ ?float99) ?float109)))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.max ?float64 ((_ to_fp 11 53) RTN ?float63))))
(declare-const ?float126 Float128)
(assert (= ?float126 (f7 ((_ to_fp 8 24) RTP ?float120) ?float72 ((_ to_fp 5 11) RTZ ?float74) ((_ to_fp 8 24) RTZ ?float69) ((_ to_fp 11 53) RTN ?float119) ?float113)))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.add RTN ?float98 ((_ to_fp 5 11) RNE ?float87))))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.max ?float121 ((_ to_fp 15 113) RNE ?float117))))
(declare-const ?float129 Float128)
(assert (= ?float129 (fp.abs ?float69)))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.min ?float68 ((_ to_fp 5 11) RTN ?float117))))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.min ((_ to_fp 5 11) RTP ?float74) ?float127)))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.sub RTN ?float117 ?float117)))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.div RTP ?float131 ((_ to_fp 5 11) RTP ?float96))))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.sub RNE ?float133 ((_ to_fp 5 11) RNE ?float113))))
(declare-const ?float135 Float32)
(assert (= ?float135 (f42 ?float61 ?float88 ((_ to_fp 11 53) RTP ?float113) ((_ to_fp 11 53) RNE ?float71) ((_ to_fp 11 53) RTN ?float111) ?float83 ?float76 ?float82 ?float134)))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.neg ?float69)))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.add RNE ?float108 ((_ to_fp 15 113) RTP ?float127))))
(declare-const ?float138 Float64)
(assert (= ?float138 (fp.abs ?float80)))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.min ((_ to_fp 5 11) RTZ ?float83) ?float106)))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.min ((_ to_fp 5 11) RTP ?float118) ?float88)))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.sqrt RTN ?float87)))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.div RTP ((_ to_fp 15 113) RTZ ?float111) ?float73)))
(declare-const ?float143 Float128)
(assert (= ?float143 (fp.div RTN ((_ to_fp 15 113) RTN ?float95) ?float142)))
(declare-const ?float144 Float16)
(assert (= ?float144 (f43 ((_ to_fp 5 11) RTZ ?float60) ((_ to_fp 8 24) RTN ?float134) ((_ to_fp 15 113) RTN ?float112) ((_ to_fp 5 11) RTZ ?float102) ?float81)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.mul RTP ((_ to_fp 8 24) RTP ?float116) ?float102)))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.abs ?float121)))
(declare-const ?float147 Float32)
(assert (= ?float147 (f4 ((_ to_fp 15 113) RTP ?float111) ((_ to_fp 11 53) RTZ ?float87) ((_ to_fp 5 11) RTN ?float71) ?float142 ((_ to_fp 5 11) RTZ ?float65) ((_ to_fp 5 11) RTZ ?float61) ((_ to_fp 15 113) RNE ?float115) ((_ to_fp 5 11) RNE ?float91) ?float118 ((_ to_fp 5 11) RTP ?float92))))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.max ?float64 ((_ to_fp 11 53) RNE ?float78))))
(declare-const ?float149 Float64)
(assert (= ?float149 (f18 ?float138 ((_ to_fp 5 11) RTP ?float103) ((_ to_fp 11 53) RTP ?float126) ?float99 ((_ to_fp 15 113) RTZ ?float107))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isNormal ?float98)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNaN ?float110)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.geq ?float80 ((_ to_fp 11 53) RTN ?float111))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isPositive ?float133)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isSubnormal ?float64)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isNormal ?float146)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.geq ?float63 ?float99)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isPositive ?float77)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isInfinite ?float98)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p3 ((_ to_fp 8 24) RTZ ?float67))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.geq ((_ to_fp 5 11) RTZ ?float147) ?float140)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isPositive ?float121)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.leq ((_ to_fp 8 24) RTN ?float83) ?float132)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNaN ?float139)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isPositive ?float124)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isInfinite ?float134)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p4 ?float126 ?float106 ((_ to_fp 5 11) RTN ?float146))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isSubnormal ?float144)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (p8 ((_ to_fp 5 11) RTN ?float93) ?float79 ((_ to_fp 15 113) RTN ?float67))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p9 ((_ to_fp 15 113) RTP ?float145))))
; FINAL ASSERT
(assert (or (or ?bool157 ?bool167 ?bool156)))
(check-sat)


-- iteration 20 --
(declare-fun f0 (Float32 Float32 Float16 Float16 Float128 Float128 Float32 Float16 Float16 Float16) Float64)
(declare-fun f1 (Float128 Float128 Float64 Float128 Float32 Float64) Float16)
(declare-fun f2 (Float16) Float16)
(declare-fun f3 (Float32) Float128)
(declare-fun f4 (Float32 Float128 Float32 Float16 Float32 Float64 Float128 Float128 Float32) Float128)
(declare-fun f5 (Float64 Float64 Float16 Float128 Float32) Float64)
(declare-fun f6 (Float64 Float16) Float16)
(declare-fun f7 (Float32 Float32 Float64 Float32 Float32 Float16 Float128 Float128) Float16)
(declare-fun f8 (Float32 Float64 Float64) Float64)
(declare-fun f9 (Float32 Float16) Float128)
(declare-fun f10 (Float64) Float64)
(declare-fun f11 (Float16) Float16)
(declare-fun f12 (Float16 Float32 Float64 Float16 Float64 Float64) Float32)
(declare-fun f13 (Float128 Float128 Float128 Float64 Float16 Float128 Float128 Float32) Float32)
(declare-fun f14 (Float32 Float128 Float128 Float32) Float32)
(declare-fun f15 (Float64 Float128 Float16) Float64)
(declare-fun f16 (Float16 Float128 Float16 Float16 Float32 Float128 Float128 Float16) Float128)
(declare-fun f17 (Float128 Float32 Float16 Float128 Float32 Float32) Float32)
(declare-fun f18 (Float128 Float64 Float16 Float128 Float32 Float16 Float128 Float16 Float64 Float64) Float64)
(declare-fun f19 (Float128 Float64 Float16 Float32 Float32) Float64)
(declare-fun f20 (Float32 Float16 Float16 Float128 Float16) Float64)
(declare-fun f21 (Float64 Float64 Float32) Float64)
(declare-fun f22 (Float64 Float64 Float128) Float32)
(declare-fun f23 (Float128 Float16 Float32 Float128 Float16 Float64 Float16 Float64 Float64 Float128) Float16)
(declare-fun f24 (Float32 Float16 Float128 Float16 Float128 Float128 Float16 Float16) Float32)
(declare-fun f25 (Float64 Float32 Float64 Float32 Float64 Float64 Float32) Float32)
(declare-fun f26 (Float128 Float64 Float64 Float128 Float32) Float64)
(declare-fun f27 (Float64 Float16 Float128 Float64) Float32)
(declare-fun f28 (Float128) Float128)
(declare-fun f29 (Float16 Float64 Float64 Float64 Float16 Float16 Float32 Float64 Float128 Float64) Float64)
(declare-fun f30 (Float128 Float32 Float128 Float32 Float64 Float64 Float64) Float16)
(declare-fun f31 (Float16 Float32 Float64 Float16 Float16 Float16) Float128)
(declare-fun f32 (Float16 Float128 Float32 Float32 Float64 Float128 Float64 Float16) Float32)
(declare-fun f33 (Float16 Float32) Float32)
(declare-fun f34 (Float64 Float128 Float128 Float16 Float32 Float16 Float64 Float32) Float128)
(declare-fun f35 (Float128 Float32) Float32)
(declare-fun f36 (Float128) Float64)
(declare-fun f37 (Float64 Float32 Float32 Float128 Float128 Float16) Float64)
(declare-fun f38 (Float16 Float128 Float64 Float16 Float128 Float32 Float16 Float128 Float128) Float32)
(declare-fun f39 (Float32 Float16 Float16) Float32)
(declare-fun f40 (Float16 Float128 Float128 Float128 Float16 Float16 Float16) Float128)
(declare-fun f41 (Float32 Float16 Float16 Float16 Float32 Float64 Float128 Float128 Float128) Float128)
(declare-fun f42 (Float16 Float128 Float16) Float64)
(declare-fun f43 (Float64 Float32 Float32 Float128 Float64 Float64 Float32 Float128 Float16 Float16) Float16)
(declare-fun f44 (Float16 Float16 Float16 Float16 Float64 Float128) Float64)
(declare-fun f45 (Float64 Float64 Float32 Float16) Float64)
(declare-fun f46 (Float32 Float32 Float32 Float32 Float64 Float64 Float64 Float64 Float32) Float16)
(declare-fun f47 (Float64 Float64 Float64) Float64)
(declare-fun f48 (Float32 Float64) Float64)
(declare-fun f49 (Float128) Float16)
(declare-fun p0 (Float16 Float16 Float16) Bool)
(declare-fun p1 (Float64 Float16 Float16 Float128 Float32 Float64 Float32) Bool)
(declare-fun p2 (Float16 Float64 Float32 Float16 Float64 Float16 Float32 Float64 Float16) Bool)
(declare-fun p3 (Float64 Float64 Float128 Float128 Float128 Float32 Float64 Float16 Float64) Bool)
(declare-fun p4 (Float32 Float128 Float128 Float64 Float32 Float16 Float16 Float32) Bool)
(declare-fun p5 (Float64 Float16 Float128 Float32 Float32 Float128) Bool)
(declare-fun p6 (Float64 Float128 Float128 Float32) Bool)
(declare-fun p7 (Float16 Float64 Float128 Float128 Float128 Float64 Float128) Bool)
(declare-fun p8 (Float128 Float128) Bool)
(declare-fun p9 (Float32 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float128)
(declare-const ?float62 Float16)
(declare-const ?float63 Float128)
(declare-const ?float64 Float16)
(declare-const ?float65 Float64)
(declare-const ?float66 Float32)
(declare-const ?float67 Float128)
(declare-const ?float68 Float32)
(declare-const ?float69 Float16)
(declare-const ?float70 Float32)
(declare-const ?float71 Float32)
(declare-const ?float72 Float16)
(declare-const ?float73 Float32)
(declare-const ?float74 Float16)
(declare-const ?float75 Float128)
(declare-const ?float76 Float16)
(declare-const ?float77 Float128)
(declare-const ?float78 Float32)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b1 #b11101011011 #b1010111010111011011101010001010111001100001001111001)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b0 #b11110 #b1010110111)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float64)
(assert (= ?float98 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (f3 ((_ to_fp 8 24) RNE ?float98))))
(declare-const ?float101 Float32)
(assert (= ?float101 (f12 ?float72 ?float66 ((_ to_fp 11 53) RNE ?float76) ?float64 ?float85 ((_ to_fp 11 53) RTZ ?float71))))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.abs ?float75)))
(declare-const ?float103 Float16)
(assert (= ?float103 (f23 ((_ to_fp 15 113) RTN ?float83) ((_ to_fp 5 11) RTN ?float68) ((_ to_fp 8 24) RTZ ?float95) ((_ to_fp 15 113) RNE ?float69) ?float72 ((_ to_fp 11 53) RTZ ?float92) ?float84 ((_ to_fp 11 53) RTN ?float71) ((_ to_fp 11 53) RTN ?float70) ?float67)))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.abs ?float67)))
(declare-const ?float105 Float128)
(assert (= ?float105 (fp.min ((_ to_fp 15 113) RTZ ?float73) ?float75)))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.sub RTN ((_ to_fp 8 24) RTZ ?float92) ?float70)))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.min ((_ to_fp 8 24) RTP ?float65) ?float73)))
(declare-const ?float108 Float16)
(assert (= ?float108 (fp.sqrt RNE ?float72)))
(declare-const ?float109 Float64)
(assert (= ?float109 (f37 ((_ to_fp 11 53) RNE ?float99) ((_ to_fp 8 24) RNE ?float77) ((_ to_fp 8 24) RNE ?float65) ((_ to_fp 15 113) RNE ?float68) ((_ to_fp 15 113) RNE ?float106) ((_ to_fp 5 11) RTP ?float78))))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.sub RTP ((_ to_fp 5 11) RTZ ?float97) ?float88)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.mul RNE ?float95 ?float82)))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.sub RTZ ?float79 ?float101)))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.roundToIntegral RTZ ?float93)))
(declare-const ?float114 Float16)
(assert (= ?float114 (f11 ?float89)))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.max ?float73 ?float80)))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.roundToIntegral RTN ?float76)))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.add RTN ?float109 ((_ to_fp 11 53) RTN ?float99))))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.div RTN ((_ to_fp 8 24) RTP ?float86) ?float66)))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.sub RTP ?float66 ?float118)))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.sqrt RTZ ?float105)))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.sqrt RTZ ?float81)))
(declare-const ?float122 Float128)
(assert (= ?float122 (f3 ((_ to_fp 8 24) RTN ?float88))))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.neg ?float108)))
(declare-const ?float124 Float128)
(assert (= ?float124 (f41 ((_ to_fp 8 24) RTZ ?float96) ?float96 ((_ to_fp 5 11) RTN ?float117) ((_ to_fp 5 11) RTN ?float101) ?float78 ((_ to_fp 11 53) RNE ?float110) ((_ to_fp 15 113) RTN ?float112) ?float102 ((_ to_fp 15 113) RTN ?float87))))
(declare-const ?float125 Float16)
(assert (= ?float125 (fp.add RTN ?float76 ?float90)))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.max ?float73 ((_ to_fp 8 24) RTN ?float108))))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.add RTZ ((_ to_fp 5 11) RTP ?float121) ?float86)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.min ?float112 ?float80)))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.neg ?float89)))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.min ?float60 ((_ to_fp 8 24) RTN ?float69))))
(declare-const ?float131 Float64)
(assert (= ?float131 (f10 ((_ to_fp 11 53) RTP ?float118))))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.abs ?float66)))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.max ?float117 ((_ to_fp 11 53) RTZ ?float88))))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.div RNE ?float62 ?float123)))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.sqrt RNE ?float107)))
(declare-const ?float136 Float128)
(assert (= ?float136 (f3 ?float71)))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.sqrt RTP ?float135)))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.mul RNE ((_ to_fp 5 11) RTP ?float91) ?float96)))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.abs ?float130)))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.sub RTP ?float66 ?float135)))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.min ?float127 ((_ to_fp 5 11) RTP ?float61))))
(declare-const ?float142 Float32)
(assert (= ?float142 (fp.roundToIntegral RTZ ?float137)))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.abs ?float117)))
(declare-const ?float144 Float128)
(assert (= ?float144 (fp.sub RNE ?float67 ?float120)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.roundToIntegral RTZ ?float70)))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.neg ?float102)))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.roundToIntegral RTP ?float93)))
(declare-const ?float148 Float128)
(assert (= ?float148 (fp.div RTP ((_ to_fp 15 113) RTP ?float73) ?float67)))
(declare-const ?float149 Float128)
(assert (= ?float149 (f4 ((_ to_fp 8 24) RNE ?float138) ((_ to_fp 15 113) RTP ?float119) ((_ to_fp 8 24) RTZ ?float105) ?float69 ((_ to_fp 8 24) RTZ ?float84) ((_ to_fp 11 53) RTZ ?float82) ((_ to_fp 15 113) RTN ?float137) ((_ to_fp 15 113) RTZ ?float87) ((_ to_fp 8 24) RTZ ?float127))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.lt ?float63 ((_ to_fp 15 113) RTZ ?float121))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.gt ?float66 ((_ to_fp 8 24) RTN ?float84))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.leq ((_ to_fp 15 113) RTN ?float82) ?float136)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (p7 ((_ to_fp 5 11) RTP ?float147) ((_ to_fp 11 53) RTZ ?float70) ((_ to_fp 15 113) RTN ?float97) ((_ to_fp 15 113) RTZ ?float141) ((_ to_fp 15 113) RTZ ?float127) ((_ to_fp 11 53) RTP ?float132) ((_ to_fp 15 113) RTP ?float128))))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isPositive ?float108)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p9 ((_ to_fp 8 24) RTN ?float136) ?float127)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.gt ?float118 ((_ to_fp 8 24) RNE ?float104))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p0 ?float82 ?float108 ((_ to_fp 5 11) RNE ?float101))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.eq ?float124 ((_ to_fp 15 113) RTP ?float64))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isInfinite ?float141)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p9 ((_ to_fp 8 24) RNE ?float138) ((_ to_fp 5 11) RTZ ?float73))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (p0 ((_ to_fp 5 11) RNE ?float73) ((_ to_fp 5 11) RTP ?float97) ((_ to_fp 5 11) RTN ?float91))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isSubnormal ?float107)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNormal ?float74)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isSubnormal ?float92)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isSubnormal ?float80)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.leq ((_ to_fp 5 11) RTP ?float97) ?float123)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isPositive ?float100)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.lt ?float70 ?float119)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isPositive ?float67)))
; FINAL ASSERT
(assert (or ?bool158))
(check-sat)


-- iteration 21 --
(declare-fun f0 (Float64 Float128 Float128 Float128 Float128 Float64 Float32 Float32) Float128)
(declare-fun f1 (Float64 Float32 Float32 Float16) Float32)
(declare-fun f2 (Float128 Float64 Float16 Float16 Float64) Float16)
(declare-fun f3 (Float128 Float32 Float32 Float32 Float128 Float64 Float64 Float64 Float32 Float64) Float16)
(declare-fun f4 (Float16 Float64 Float32 Float128 Float16 Float32 Float64 Float16) Float64)
(declare-fun f5 (Float32 Float16 Float16 Float128 Float128 Float16 Float16 Float64) Float32)
(declare-fun f6 (Float16 Float64 Float64 Float32) Float64)
(declare-fun f7 (Float16 Float32 Float32 Float16 Float64 Float32) Float32)
(declare-fun f8 (Float64 Float128 Float32 Float64 Float64 Float128 Float32) Float128)
(declare-fun f9 (Float64 Float32 Float32 Float32) Float128)
(declare-fun f10 (Float16 Float64 Float16 Float16 Float16 Float32 Float16 Float16 Float64 Float128) Float32)
(declare-fun f11 (Float64 Float64 Float64 Float128 Float16 Float128 Float128) Float64)
(declare-fun f12 (Float32 Float128 Float32 Float128 Float128 Float128 Float64 Float64 Float128) Float128)
(declare-fun f13 (Float16 Float32 Float16) Float64)
(declare-fun f14 (Float32) Float32)
(declare-fun f15 (Float64 Float128 Float128 Float16 Float64 Float64 Float32 Float128 Float32 Float64) Float16)
(declare-fun f16 (Float64 Float16 Float16 Float64 Float32) Float64)
(declare-fun f17 (Float16 Float128 Float16 Float32 Float128 Float16 Float128 Float64 Float64 Float128) Float16)
(declare-fun f18 (Float64 Float32 Float32 Float32 Float64 Float16 Float32 Float16) Float64)
(declare-fun f19 (Float64 Float32) Float128)
(declare-fun f20 (Float64 Float32 Float128 Float128 Float32 Float16 Float64 Float32 Float32) Float16)
(declare-fun f21 (Float128 Float128 Float64 Float128 Float32 Float64 Float32 Float32 Float16) Float32)
(declare-fun f22 (Float128 Float32 Float64 Float128 Float64 Float128) Float32)
(declare-fun f23 (Float64 Float128 Float128 Float32 Float32) Float32)
(declare-fun f24 (Float64 Float16 Float128 Float64) Float64)
(declare-fun f25 (Float128 Float32 Float64 Float128 Float128 Float128 Float64 Float16 Float32) Float64)
(declare-fun f26 (Float32 Float128 Float32 Float64 Float16 Float16 Float16 Float32 Float32) Float32)
(declare-fun f27 (Float16 Float64 Float64 Float32 Float128 Float16) Float64)
(declare-fun f28 (Float32) Float16)
(declare-fun f29 (Float128 Float64 Float128 Float64 Float128 Float64 Float16) Float16)
(declare-fun f30 (Float16 Float64) Float32)
(declare-fun f31 (Float64 Float64 Float64 Float128 Float128 Float16 Float16 Float32 Float64 Float64) Float32)
(declare-fun f32 (Float64 Float16 Float32 Float64) Float32)
(declare-fun f33 (Float32 Float128 Float128 Float32 Float32) Float16)
(declare-fun f34 (Float16 Float128) Float64)
(declare-fun f35 (Float64 Float128 Float16 Float128 Float128 Float32) Float32)
(declare-fun f36 (Float128 Float128 Float16 Float32 Float32 Float32 Float128 Float32 Float16 Float32) Float128)
(declare-fun f37 (Float64 Float128 Float64 Float128) Float128)
(declare-fun f38 (Float64 Float128 Float64 Float128 Float16) Float32)
(declare-fun f39 (Float32 Float16 Float128 Float128 Float64 Float64 Float16 Float64 Float128) Float32)
(declare-fun f40 (Float16 Float128 Float32 Float128 Float128 Float64 Float128) Float16)
(declare-fun f41 (Float32 Float64 Float128 Float128 Float32 Float32 Float64) Float128)
(declare-fun f42 (Float64 Float32 Float32 Float32 Float128 Float32 Float128 Float32 Float16 Float64) Float16)
(declare-fun f43 (Float16 Float32 Float32 Float32 Float32 Float128 Float128) Float16)
(declare-fun f44 (Float64 Float64 Float16 Float128 Float128 Float64 Float32) Float32)
(declare-fun f45 (Float32) Float32)
(declare-fun f46 (Float64 Float64 Float16 Float16 Float16 Float128 Float32) Float128)
(declare-fun f47 (Float32 Float128) Float32)
(declare-fun f48 (Float32 Float128 Float32 Float16 Float128 Float64 Float16 Float128) Float32)
(declare-fun f49 (Float32 Float128 Float128) Float16)
(declare-fun p0 (Float64 Float128 Float16 Float64 Float32 Float32 Float16 Float16 Float128 Float64) Bool)
(declare-fun p1 (Float64 Float64 Float32 Float32 Float64 Float16 Float16 Float64 Float128 Float64) Bool)
(declare-fun p2 (Float32 Float32) Bool)
(declare-fun p3 (Float128 Float128 Float64 Float32 Float32) Bool)
(declare-fun p4 (Float32 Float64 Float32 Float16 Float16 Float128) Bool)
(declare-fun p5 (Float128 Float16 Float128 Float128 Float16 Float128 Float128 Float32 Float128) Bool)
(declare-fun p6 (Float32) Bool)
(declare-fun p7 (Float64 Float16 Float16 Float16 Float128 Float32 Float16 Float128 Float16 Float16) Bool)
(declare-fun p8 (Float128 Float64 Float16 Float64 Float64 Float32 Float64 Float64 Float128 Float16) Bool)
(declare-fun p9 (Float64 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float128)
(declare-const ?float62 Float16)
(declare-const ?float63 Float128)
(declare-const ?float64 Float64)
(declare-const ?float65 Float16)
(declare-const ?float66 Float128)
(declare-const ?float67 Float32)
(declare-const ?float68 Float32)
(declare-const ?float69 Float32)
(declare-const ?float70 Float128)
(declare-const ?float71 Float128)
(declare-const ?float72 Float64)
(declare-const ?float73 Float32)
(declare-const ?float74 Float128)
(declare-const ?float75 Float16)
(declare-const ?float76 Float16)
(declare-const ?float77 Float64)
(declare-const ?float78 Float16)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b0 #b10010 #b0000010000)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b1 #b01110 #b1001101010)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float64)
(assert (= ?float92 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b0 #b110001001010010 #b0111100010010010001111110111110011011010001011001111001000101110000001000001011001100111101011000010011110011111)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b1 #b00000111 #b10111111101000101100011)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b1 #b011100010011011 #b0001000111001101000000010000011001000110000101000111010110000000001110011101111011011011111001101110101001010111)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (f22 ((_ to_fp 15 113) RNE ?float80) ((_ to_fp 8 24) RTN ?float92) ((_ to_fp 11 53) RTP ?float78) ((_ to_fp 15 113) RTP ?float79) ((_ to_fp 11 53) RTP ?float74) ?float98)))
(declare-const ?float101 Float64)
(assert (= ?float101 (fp.abs ?float77)))
(declare-const ?float102 Float64)
(assert (= ?float102 (f4 ?float96 ((_ to_fp 11 53) RTP ?float78) ((_ to_fp 8 24) RTZ ?float84) ((_ to_fp 15 113) RTZ ?float64) ((_ to_fp 5 11) RTP ?float72) ?float86 ?float101 ((_ to_fp 5 11) RTP ?float101))))
(declare-const ?float103 Float32)
(assert (= ?float103 (f32 ?float102 ((_ to_fp 5 11) RTP ?float90) ((_ to_fp 8 24) RNE ?float61) ((_ to_fp 11 53) RTN ?float75))))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.sub RTZ ?float85 ((_ to_fp 11 53) RTP ?float81))))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.div RTP ?float83 ((_ to_fp 11 53) RTN ?float63))))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.max ?float99 ?float70)))
(declare-const ?float107 Float16)
(assert (= ?float107 (fp.sub RNE ?float84 ((_ to_fp 5 11) RTN ?float66))))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.sqrt RNE ?float83)))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.min ?float91 ?float64)))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.roundToIntegral RNE ?float93)))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.div RNE ?float100 ((_ to_fp 8 24) RTP ?float91))))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.roundToIntegral RTN ?float67)))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.mul RTN ?float86 ((_ to_fp 8 24) RNE ?float91))))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.roundToIntegral RNE ?float79)))
(declare-const ?float115 Float64)
(assert (= ?float115 (f34 ((_ to_fp 5 11) RNE ?float74) ((_ to_fp 15 113) RNE ?float64))))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.sqrt RTN ?float80)))
(declare-const ?float117 Float32)
(assert (= ?float117 (fp.abs ?float69)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.add RTN ?float68 ?float103)))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.neg ?float92)))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.add RTP ?float87 ?float83)))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.sqrt RNE ?float62)))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.neg ?float99)))
(declare-const ?float123 Float32)
(assert (= ?float123 (f22 ?float110 ((_ to_fp 8 24) RTN ?float101) ((_ to_fp 11 53) RTP ?float69) ((_ to_fp 15 113) RTN ?float102) ?float104 ((_ to_fp 15 113) RTN ?float73))))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.roundToIntegral RTP ?float109)))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.neg ?float115)))
(declare-const ?float126 Float64)
(assert (= ?float126 (fp.mul RTZ ?float77 ((_ to_fp 11 53) RTZ ?float68))))
(declare-const ?float127 Float64)
(assert (= ?float127 (fp.neg ?float104)))
(declare-const ?float128 Float16)
(assert (= ?float128 (f15 ?float119 ((_ to_fp 15 113) RTP ?float68) ((_ to_fp 15 113) RTZ ?float123) ((_ to_fp 5 11) RTN ?float94) ((_ to_fp 11 53) RNE ?float70) ((_ to_fp 11 53) RTP ?float62) ?float100 ((_ to_fp 15 113) RNE ?float62) ((_ to_fp 8 24) RTP ?float75) ?float115)))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.div RTN ?float113 ?float81)))
(declare-const ?float130 Float16)
(assert (= ?float130 (f15 ((_ to_fp 11 53) RTP ?float63) ((_ to_fp 15 113) RTP ?float102) ?float99 ((_ to_fp 5 11) RTZ ?float74) ?float127 ((_ to_fp 11 53) RTN ?float62) ((_ to_fp 8 24) RTP ?float72) ((_ to_fp 15 113) RNE ?float83) ((_ to_fp 8 24) RTN ?float65) ((_ to_fp 11 53) RNE ?float81))))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.div RTP ?float108 ?float120)))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.max ?float88 ((_ to_fp 8 24) RTN ?float83))))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.mul RTZ ?float126 ?float102)))
(declare-const ?float134 Float32)
(assert (= ?float134 (fp.div RTZ ?float100 ((_ to_fp 8 24) RNE ?float107))))
(declare-const ?float135 Float128)
(assert (= ?float135 (f37 ?float120 ((_ to_fp 15 113) RNE ?float88) ?float92 ((_ to_fp 15 113) RNE ?float104))))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.sub RTP ?float63 ((_ to_fp 15 113) RTN ?float131))))
(declare-const ?float137 Float16)
(assert (= ?float137 (f33 ?float114 ((_ to_fp 15 113) RTN ?float100) ((_ to_fp 15 113) RTN ?float116) ((_ to_fp 8 24) RTP ?float135) ((_ to_fp 8 24) RNE ?float105))))
(declare-const ?float138 Float128)
(assert (= ?float138 (fp.div RTP ?float70 ?float110)))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.mul RTP ?float124 ((_ to_fp 11 53) RTZ ?float74))))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.mul RTP ?float66 ?float99)))
(declare-const ?float141 Float32)
(assert (= ?float141 (fp.mul RTZ ((_ to_fp 8 24) RTN ?float97) ?float118)))
(declare-const ?float142 Float32)
(assert (= ?float142 (fp.div RTN ?float113 ?float67)))
(declare-const ?float143 Float16)
(assert (= ?float143 (fp.abs ?float116)))
(declare-const ?float144 Float32)
(assert (= ?float144 (f22 ((_ to_fp 15 113) RTP ?float90) ?float141 ?float64 ((_ to_fp 15 113) RTN ?float82) ?float126 ((_ to_fp 15 113) RTZ ?float132))))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.min ?float105 ((_ to_fp 11 53) RNE ?float84))))
(declare-const ?float146 Float64)
(assert (= ?float146 (fp.div RNE ?float72 ((_ to_fp 11 53) RNE ?float82))))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.min ?float141 ?float69)))
(declare-const ?float148 Float32)
(assert (= ?float148 (fp.add RTZ ((_ to_fp 8 24) RNE ?float109) ?float68)))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.abs ?float138)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isPositive ?float144)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p3 ?float98 ((_ to_fp 15 113) RNE ?float91) ?float105 ?float94 ?float148)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNaN ?float112)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNormal ?float84)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p8 ?float95 ((_ to_fp 11 53) RNE ?float79) ((_ to_fp 5 11) RTZ ?float117) ((_ to_fp 11 53) RNE ?float78) ((_ to_fp 11 53) RTP ?float107) ((_ to_fp 8 24) RNE ?float128) ((_ to_fp 11 53) RTN ?float84) ((_ to_fp 11 53) RTP ?float71) ((_ to_fp 15 113) RNE ?float88) ((_ to_fp 5 11) RTP ?float89))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.eq ?float63 ((_ to_fp 15 113) RTN ?float88))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isPositive ?float86)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.eq ?float92 ((_ to_fp 11 53) RTN ?float130))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.eq ?float111 ((_ to_fp 8 24) RTN ?float121))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isPositive ?float65)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNaN ?float145)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.gt ?float142 ?float134)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isPositive ?float70)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.eq ?float140 ?float89)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (p4 ((_ to_fp 8 24) RTP ?float139) ((_ to_fp 11 53) RTP ?float66) ((_ to_fp 8 24) RTP ?float97) ((_ to_fp 5 11) RTZ ?float100) ((_ to_fp 5 11) RTN ?float98) ((_ to_fp 15 113) RTZ ?float101))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.gt ?float90 ?float68)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.eq ?float117 ?float86)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNormal ?float111)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isZero ?float146)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p4 ?float100 ((_ to_fp 11 53) RTZ ?float112) ?float86 ((_ to_fp 5 11) RTP ?float94) ?float96 ?float89)))
; FINAL ASSERT
(assert (and ?bool153 ?bool150 (or ?bool168 (or ?bool159 (and ?bool169 (or ?bool161) ?bool159) ?bool165) ?bool150)))
(check-sat)


-- iteration 22 --
(declare-fun f0 (Float64) Float64)
(declare-fun f1 (Float64) Float16)
(declare-fun f2 (Float16 Float64) Float16)
(declare-fun f3 (Float32 Float32 Float64 Float32 Float128 Float128 Float32) Float16)
(declare-fun f4 (Float128 Float64 Float32 Float64 Float128 Float32 Float64 Float32) Float64)
(declare-fun f5 (Float32 Float64 Float16) Float32)
(declare-fun f6 (Float16 Float16 Float128 Float128 Float128 Float16 Float32 Float128 Float64) Float128)
(declare-fun f7 (Float32) Float128)
(declare-fun f8 (Float128) Float64)
(declare-fun f9 (Float128 Float64 Float16 Float64 Float32 Float16 Float16 Float32 Float128) Float32)
(declare-fun f10 (Float32 Float64 Float128 Float128 Float32) Float32)
(declare-fun f11 (Float16 Float64 Float32 Float32 Float64 Float64 Float32 Float16 Float128 Float32) Float64)
(declare-fun f12 (Float64 Float128 Float32 Float64 Float16 Float64 Float32 Float16) Float64)
(declare-fun f13 (Float32 Float16 Float64 Float16 Float16 Float64 Float64 Float128 Float64 Float64) Float64)
(declare-fun f14 (Float64) Float128)
(declare-fun f15 (Float128 Float32 Float128 Float64) Float64)
(declare-fun f16 (Float128 Float32 Float16 Float32 Float32 Float32 Float128) Float16)
(declare-fun f17 (Float128 Float16 Float32 Float64) Float16)
(declare-fun f18 (Float16 Float64) Float128)
(declare-fun f19 (Float16 Float32) Float16)
(declare-fun f20 (Float128 Float32 Float128 Float64) Float16)
(declare-fun f21 (Float64) Float16)
(declare-fun f22 (Float64 Float16 Float16 Float32 Float128 Float64 Float128 Float128 Float32) Float128)
(declare-fun f23 (Float64 Float16 Float128 Float128) Float64)
(declare-fun f24 (Float128 Float128 Float16 Float16) Float32)
(declare-fun f25 (Float32 Float16 Float16 Float32 Float128 Float64 Float64 Float32 Float32) Float64)
(declare-fun f26 (Float32) Float16)
(declare-fun f27 (Float16 Float128 Float32 Float128 Float64 Float32 Float32 Float16) Float16)
(declare-fun f28 (Float16 Float128 Float16 Float64 Float128 Float32 Float16) Float64)
(declare-fun f29 (Float32 Float16 Float64) Float32)
(declare-fun f30 (Float16 Float32 Float32) Float16)
(declare-fun f31 (Float32 Float16 Float128 Float32 Float64 Float32) Float64)
(declare-fun f32 (Float16 Float16 Float128 Float128 Float32 Float64 Float16 Float16 Float32 Float32) Float64)
(declare-fun f33 (Float16 Float64 Float32 Float64 Float128 Float32 Float32 Float32) Float128)
(declare-fun f34 (Float16 Float32 Float32 Float32 Float16 Float64) Float32)
(declare-fun f35 (Float64 Float16 Float16 Float64 Float32 Float64 Float64) Float32)
(declare-fun f36 (Float16 Float64 Float32 Float64 Float16 Float32 Float128 Float32) Float64)
(declare-fun f37 (Float16 Float64 Float16 Float16 Float16 Float64 Float32 Float64) Float16)
(declare-fun f38 (Float64 Float128 Float64 Float32) Float64)
(declare-fun f39 (Float32 Float32 Float64 Float16 Float16) Float16)
(declare-fun f40 (Float128 Float32 Float16 Float16 Float128 Float16 Float32 Float16 Float16 Float32) Float32)
(declare-fun f41 (Float64 Float16 Float16 Float16 Float64 Float16) Float64)
(declare-fun f42 (Float16) Float64)
(declare-fun f43 (Float128 Float16 Float32 Float16) Float16)
(declare-fun f44 (Float32 Float64 Float32 Float64 Float32 Float16) Float64)
(declare-fun f45 (Float64) Float16)
(declare-fun f46 (Float64 Float64 Float64 Float128 Float128 Float16) Float64)
(declare-fun f47 (Float64 Float32 Float128 Float16 Float64 Float16 Float64 Float128 Float16) Float16)
(declare-fun f48 (Float64 Float32 Float16 Float64 Float64 Float128 Float128) Float16)
(declare-fun f49 (Float64 Float16 Float16 Float32 Float32 Float32 Float16 Float64 Float32 Float16) Float128)
(declare-fun p0 (Float16 Float128 Float128) Bool)
(declare-fun p1 (Float16 Float16) Bool)
(declare-fun p2 (Float64 Float128 Float128 Float64 Float64 Float128 Float64 Float16 Float64 Float128) Bool)
(declare-fun p3 (Float16) Bool)
(declare-fun p4 (Float32 Float16 Float128 Float128 Float128) Bool)
(declare-fun p5 (Float16 Float128 Float16 Float128 Float128 Float32 Float16 Float128) Bool)
(declare-fun p6 (Float16 Float32 Float32 Float16 Float32) Bool)
(declare-fun p7 (Float16) Bool)
(declare-fun p8 (Float16 Float16 Float32 Float32 Float128 Float128) Bool)
(declare-fun p9 (Float16 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float32)
(declare-const ?float62 Float128)
(declare-const ?float63 Float64)
(declare-const ?float64 Float128)
(declare-const ?float65 Float128)
(declare-const ?float66 Float128)
(declare-const ?float67 Float64)
(declare-const ?float68 Float16)
(declare-const ?float69 Float16)
(declare-const ?float70 Float16)
(declare-const ?float71 Float32)
(declare-const ?float72 Float16)
(declare-const ?float73 Float16)
(declare-const ?float74 Float64)
(declare-const ?float75 Float32)
(declare-const ?float76 Float128)
(declare-const ?float77 Float16)
(declare-const ?float78 Float64)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float90 Float128)
(assert (= ?float90 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b1 #b111010111100110 #b1111111110011001101000000001100001010111010001001001110101000000110111100001111101001010000001011001001001101000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (fp.mul RNE ?float94 ?float85)))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.min ?float91 ((_ to_fp 8 24) RTZ ?float97))))
(declare-const ?float102 Float32)
(assert (= ?float102 (f40 ((_ to_fp 15 113) RTP ?float96) ((_ to_fp 8 24) RNE ?float97) ?float60 ((_ to_fp 5 11) RNE ?float61) ((_ to_fp 15 113) RTZ ?float70) ?float77 ((_ to_fp 8 24) RTN ?float100) ((_ to_fp 5 11) RTP ?float62) ?float72 ((_ to_fp 8 24) RTN ?float82))))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.neg ?float79)))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.neg ?float85)))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.sqrt RNE ?float68)))
(declare-const ?float106 Float128)
(assert (= ?float106 (f14 ((_ to_fp 11 53) RNE ?float77))))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.roundToIntegral RNE ?float95)))
(declare-const ?float108 Float16)
(assert (= ?float108 (fp.add RTZ ((_ to_fp 5 11) RTP ?float78) ?float73)))
(declare-const ?float109 Float32)
(assert (= ?float109 (fp.add RTN ?float95 ?float75)))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.neg ?float64)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.max ?float68 ((_ to_fp 5 11) RTN ?float95))))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.min ?float78 ((_ to_fp 11 53) RTP ?float83))))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.roundToIntegral RTZ ?float109)))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.div RTP ?float89 ((_ to_fp 5 11) RTZ ?float101))))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.sqrt RTN ?float84)))
(declare-const ?float116 Float128)
(assert (= ?float116 (fp.min ?float97 ((_ to_fp 15 113) RNE ?float71))))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.mul RTP ((_ to_fp 11 53) RTZ ?float62) ?float63)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.min ?float107 ((_ to_fp 8 24) RTP ?float108))))
(declare-const ?float119 Float128)
(assert (= ?float119 (fp.sqrt RNE ?float104)))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.sub RTZ ?float107 ((_ to_fp 8 24) RTZ ?float114))))
(declare-const ?float121 Float16)
(assert (= ?float121 (f43 ((_ to_fp 15 113) RNE ?float117) ?float68 ((_ to_fp 8 24) RTZ ?float60) ((_ to_fp 5 11) RTN ?float80))))
(declare-const ?float122 Float32)
(assert (= ?float122 (fp.sqrt RTP ?float118)))
(declare-const ?float123 Float128)
(assert (= ?float123 (fp.max ?float62 ((_ to_fp 15 113) RTN ?float82))))
(declare-const ?float124 Float64)
(assert (= ?float124 (f12 ((_ to_fp 11 53) RTP ?float108) ((_ to_fp 15 113) RTP ?float108) ((_ to_fp 8 24) RNE ?float99) ((_ to_fp 11 53) RTP ?float90) ((_ to_fp 5 11) RTP ?float113) ((_ to_fp 11 53) RTN ?float116) ((_ to_fp 8 24) RTZ ?float97) ?float82)))
(declare-const ?float125 Float128)
(assert (= ?float125 (fp.abs ?float64)))
(declare-const ?float126 Float64)
(assert (= ?float126 (fp.sqrt RNE ?float115)))
(declare-const ?float127 Float16)
(assert (= ?float127 (f47 ((_ to_fp 11 53) RTN ?float109) ((_ to_fp 8 24) RTZ ?float86) ((_ to_fp 15 113) RNE ?float108) ((_ to_fp 5 11) RNE ?float113) ((_ to_fp 11 53) RTZ ?float106) ?float69 ?float78 ((_ to_fp 15 113) RTN ?float68) ((_ to_fp 5 11) RTN ?float84))))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.neg ?float122)))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.max ?float82 ?float111)))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.neg ?float65)))
(declare-const ?float131 Float32)
(assert (= ?float131 (fp.max ?float120 ((_ to_fp 8 24) RTP ?float90))))
(declare-const ?float132 Float16)
(assert (= ?float132 (f21 ((_ to_fp 11 53) RTP ?float87))))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.mul RTP ?float127 ?float77)))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.add RTN ?float105 ((_ to_fp 5 11) RNE ?float90))))
(declare-const ?float135 Float64)
(assert (= ?float135 (f4 ?float66 ((_ to_fp 11 53) RTP ?float105) ?float83 ((_ to_fp 11 53) RNE ?float127) ?float110 ((_ to_fp 8 24) RTN ?float116) ((_ to_fp 11 53) RNE ?float85) ((_ to_fp 8 24) RTN ?float111))))
(declare-const ?float136 Float16)
(assert (= ?float136 (f21 ((_ to_fp 11 53) RTP ?float80))))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.sqrt RTP ?float121)))
(declare-const ?float138 Float128)
(assert (= ?float138 (fp.roundToIntegral RNE ?float64)))
(declare-const ?float139 Float16)
(assert (= ?float139 (f2 ((_ to_fp 5 11) RTP ?float113) ((_ to_fp 11 53) RTN ?float88))))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.max ((_ to_fp 15 113) RTZ ?float102) ?float94)))
(declare-const ?float141 Float32)
(assert (= ?float141 (fp.mul RTN ((_ to_fp 8 24) RTZ ?float70) ?float61)))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.neg ?float85)))
(declare-const ?float143 Float16)
(assert (= ?float143 (f3 ((_ to_fp 8 24) RNE ?float100) ((_ to_fp 8 24) RTN ?float129) ?float126 ((_ to_fp 8 24) RNE ?float74) ?float66 ((_ to_fp 15 113) RTN ?float114) ((_ to_fp 8 24) RTZ ?float63))))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.max ?float134 ?float133)))
(declare-const ?float145 Float16)
(assert (= ?float145 (fp.neg ?float87)))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.add RTP ?float64 ((_ to_fp 15 113) RTP ?float139))))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.add RNE ?float118 ((_ to_fp 8 24) RNE ?float73))))
(declare-const ?float148 Float64)
(assert (= ?float148 (f15 ?float116 ((_ to_fp 8 24) RTP ?float127) ((_ to_fp 15 113) RTN ?float84) ((_ to_fp 11 53) RNE ?float133))))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.min ?float114 ((_ to_fp 5 11) RTP ?float61))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p3 ((_ to_fp 5 11) RNE ?float131))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.lt ?float108 ?float111)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.gt ((_ to_fp 15 113) RTZ ?float78) ?float106)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isSubnormal ?float100)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isInfinite ?float87)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.eq ?float125 ((_ to_fp 15 113) RTN ?float112))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNegative ?float98)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isZero ?float80)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isPositive ?float71)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isNormal ?float98)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.lt ?float95 ?float109)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isPositive ?float92)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isInfinite ?float110)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.eq ?float89 ((_ to_fp 5 11) RNE ?float81))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.leq ?float83 ?float88)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.gt ((_ to_fp 8 24) RTZ ?float142) ?float92)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.eq ?float123 ?float123)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isInfinite ?float98)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.lt ((_ to_fp 15 113) RTZ ?float88) ?float116)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p8 ((_ to_fp 5 11) RTP ?float71) ?float79 ((_ to_fp 8 24) RTN ?float106) ((_ to_fp 8 24) RTN ?float60) ?float90 ?float123)))
; FINAL ASSERT
(assert (and (and ?bool155 ?bool164) ?bool163))
(check-sat)


-- iteration 23 --
(declare-fun f0 (Float16) Float32)
(declare-fun f1 (Float16 Float64 Float32 Float64 Float128 Float64 Float16 Float32 Float16) Float128)
(declare-fun f2 (Float32 Float64 Float64 Float64 Float32 Float16 Float128) Float128)
(declare-fun f3 (Float64 Float128 Float128 Float64 Float128) Float16)
(declare-fun f4 (Float32 Float128 Float32 Float32 Float128 Float64 Float16 Float64 Float16 Float32) Float64)
(declare-fun f5 (Float32) Float64)
(declare-fun f6 (Float16 Float32 Float64 Float32 Float16 Float16 Float32) Float64)
(declare-fun f7 (Float32 Float32 Float64 Float64 Float64 Float16 Float16 Float32 Float128 Float64) Float64)
(declare-fun f8 (Float64 Float32 Float64 Float32 Float128 Float128) Float64)
(declare-fun f9 (Float128 Float32) Float128)
(declare-fun f10 (Float32 Float64 Float128 Float128 Float64 Float32) Float32)
(declare-fun f11 (Float32 Float64 Float16) Float128)
(declare-fun f12 (Float128 Float128 Float32) Float64)
(declare-fun f13 (Float32 Float16 Float16 Float64) Float128)
(declare-fun f14 (Float16 Float16 Float128 Float64 Float64 Float16 Float64 Float128 Float16) Float64)
(declare-fun f15 (Float64 Float32 Float32 Float16 Float64 Float16 Float32 Float16) Float64)
(declare-fun f16 (Float128) Float128)
(declare-fun f17 (Float64 Float64 Float128 Float128 Float16 Float32) Float64)
(declare-fun f18 (Float128 Float16 Float64 Float128 Float64) Float128)
(declare-fun f19 (Float16 Float32 Float128 Float32 Float16 Float16 Float128 Float32) Float16)
(declare-fun f20 (Float128 Float64 Float128 Float32 Float128 Float16 Float128 Float128) Float32)
(declare-fun f21 (Float32 Float16 Float32 Float128 Float32 Float128) Float64)
(declare-fun f22 (Float16 Float128 Float128) Float16)
(declare-fun f23 (Float64 Float32 Float64 Float64 Float128 Float128) Float128)
(declare-fun f24 (Float32 Float16) Float128)
(declare-fun f25 (Float32 Float128 Float32 Float32 Float16) Float128)
(declare-fun f26 (Float16 Float64 Float64 Float128) Float64)
(declare-fun f27 (Float32 Float16 Float16 Float128 Float32 Float32 Float16 Float16 Float128 Float128) Float16)
(declare-fun f28 (Float32 Float32 Float16 Float64 Float32 Float64 Float64 Float64) Float64)
(declare-fun f29 (Float64 Float128 Float64 Float128) Float32)
(declare-fun f30 (Float16 Float64 Float128 Float32 Float16 Float128 Float128 Float16 Float32 Float32) Float64)
(declare-fun f31 (Float32 Float64) Float128)
(declare-fun f32 (Float128 Float64) Float64)
(declare-fun f33 (Float32 Float16 Float64 Float32 Float32 Float16 Float128) Float64)
(declare-fun f34 (Float16 Float64 Float128 Float16 Float32) Float16)
(declare-fun f35 (Float128 Float128) Float32)
(declare-fun f36 (Float128 Float16 Float64 Float64 Float16 Float64 Float16 Float32 Float32) Float64)
(declare-fun f37 (Float16 Float128 Float16 Float32 Float32 Float32 Float128 Float32 Float32 Float32) Float32)
(declare-fun f38 (Float32 Float128) Float128)
(declare-fun f39 (Float16 Float64 Float128) Float32)
(declare-fun f40 (Float64 Float128 Float128 Float32 Float32 Float64 Float32 Float32 Float128 Float64) Float16)
(declare-fun f41 (Float128 Float16 Float128 Float16 Float64 Float128 Float16) Float32)
(declare-fun f42 (Float32 Float32 Float64 Float32 Float64 Float64) Float32)
(declare-fun f43 (Float32 Float16 Float64 Float16) Float128)
(declare-fun f44 (Float32 Float16 Float128 Float64 Float64 Float64 Float32 Float64 Float128) Float64)
(declare-fun f45 (Float128 Float64) Float32)
(declare-fun f46 (Float64 Float32 Float32 Float32) Float128)
(declare-fun f47 (Float64) Float32)
(declare-fun f48 (Float128 Float64 Float16 Float16) Float128)
(declare-fun f49 (Float32 Float16 Float128 Float16 Float128 Float64) Float64)
(declare-fun p0 (Float128 Float32 Float128) Bool)
(declare-fun p1 (Float64 Float16 Float128 Float32 Float32 Float128 Float128 Float32 Float16) Bool)
(declare-fun p2 (Float32 Float64 Float32 Float16 Float16 Float64 Float16 Float64 Float16) Bool)
(declare-fun p3 (Float64 Float64 Float16 Float32 Float16 Float32 Float64 Float16 Float128) Bool)
(declare-fun p4 (Float64 Float128 Float16 Float128 Float16 Float16) Bool)
(declare-fun p5 (Float128 Float16 Float16) Bool)
(declare-fun p6 (Float128 Float16 Float64 Float16 Float64 Float64) Bool)
(declare-fun p7 (Float64 Float128) Bool)
(declare-fun p8 (Float32 Float128 Float128 Float64 Float16 Float32) Bool)
(declare-fun p9 (Float64 Float128 Float16 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float128)
(declare-const ?float62 Float16)
(declare-const ?float63 Float16)
(declare-const ?float64 Float32)
(declare-const ?float65 Float64)
(declare-const ?float66 Float64)
(declare-const ?float67 Float64)
(declare-const ?float68 Float128)
(declare-const ?float69 Float32)
(declare-const ?float70 Float64)
(declare-const ?float71 Float32)
(declare-const ?float72 Float16)
(declare-const ?float73 Float16)
(declare-const ?float74 Float32)
(declare-const ?float75 Float64)
(declare-const ?float76 Float16)
(declare-const ?float77 Float16)
(declare-const ?float78 Float64)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b0 #b010011100101111 #b1001011110111011000011000000111111001101101110110010001010110111010101111000110101001100001010010110000001001110)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b1 #b01110111 #b10110010101011011101000)))
(declare-const ?float83 Float128)
(assert (= ?float83 (fp #b0 #b101001101011010 #b1100110100111010000110110110011010110100001110010111101110100000010000111001111010111000001101010101100000001011)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b0 #b10111100011 #b1010111001100110101011100010010111010101101110111000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b1 #b11100 #b1110001010)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b11010 #b0100001011)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b1 #b001000010000011 #b0111111000110101111111000101100110110001101100101000110101111110001010101000000111100110111110011100010100100001)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b0 #b00001 #b0000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.mul RNE ((_ to_fp 5 11) RNE ?float78) ?float77)))
(declare-const ?float101 Float32)
(assert (= ?float101 (f37 ((_ to_fp 5 11) RTZ ?float86) ?float98 ((_ to_fp 5 11) RTP ?float60) ((_ to_fp 8 24) RTP ?float80) ((_ to_fp 8 24) RTZ ?float85) ((_ to_fp 8 24) RTN ?float100) ((_ to_fp 15 113) RTP ?float71) ((_ to_fp 8 24) RTZ ?float93) ((_ to_fp 8 24) RNE ?float92) ((_ to_fp 8 24) RNE ?float93))))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.max ((_ to_fp 5 11) RNE ?float67) ?float91)))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.max ?float90 ?float75)))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.sqrt RTZ ?float96)))
(declare-const ?float105 Float128)
(assert (= ?float105 (fp.sub RTN ((_ to_fp 15 113) RTP ?float82) ?float79)))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.mul RTP ((_ to_fp 11 53) RTN ?float73) ?float86)))
(declare-const ?float107 Float128)
(assert (= ?float107 (f31 ((_ to_fp 8 24) RTZ ?float65) ((_ to_fp 11 53) RTZ ?float82))))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.abs ?float107)))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.sub RTP ((_ to_fp 15 113) RNE ?float76) ?float92)))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.sqrt RTN ?float107)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.neg ?float85)))
(declare-const ?float112 Float64)
(assert (= ?float112 (f12 ?float92 ?float60 ((_ to_fp 8 24) RTP ?float104))))
(declare-const ?float113 Float32)
(assert (= ?float113 (f29 ((_ to_fp 11 53) RTP ?float96) ((_ to_fp 15 113) RTP ?float86) ((_ to_fp 11 53) RTP ?float79) ?float68)))
(declare-const ?float114 Float128)
(assert (= ?float114 (f23 ((_ to_fp 11 53) RNE ?float92) ((_ to_fp 8 24) RNE ?float111) ?float67 ((_ to_fp 11 53) RNE ?float61) ((_ to_fp 15 113) RTZ ?float63) ((_ to_fp 15 113) RNE ?float95))))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.max ?float66 ?float90)))
(declare-const ?float116 Float64)
(assert (= ?float116 (f6 ((_ to_fp 5 11) RNE ?float94) ((_ to_fp 8 24) RTP ?float76) ((_ to_fp 11 53) RTN ?float97) ((_ to_fp 8 24) RTN ?float86) ?float96 ?float77 ((_ to_fp 8 24) RNE ?float86))))
(declare-const ?float117 Float32)
(assert (= ?float117 (f35 ((_ to_fp 15 113) RTN ?float91) ((_ to_fp 15 113) RTZ ?float106))))
(declare-const ?float118 Float128)
(assert (= ?float118 (f23 ((_ to_fp 11 53) RTZ ?float105) ((_ to_fp 8 24) RNE ?float98) ((_ to_fp 11 53) RTP ?float83) ((_ to_fp 11 53) RTZ ?float73) ((_ to_fp 15 113) RTZ ?float77) ?float108)))
(declare-const ?float119 Float128)
(assert (= ?float119 (fp.add RTN ?float92 ?float98)))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.mul RNE ((_ to_fp 11 53) RTZ ?float117) ?float95)))
(declare-const ?float121 Float64)
(assert (= ?float121 (f17 ((_ to_fp 11 53) RNE ?float118) ((_ to_fp 11 53) RTP ?float88) ((_ to_fp 15 113) RNE ?float117) ((_ to_fp 15 113) RTP ?float95) ?float85 ((_ to_fp 8 24) RNE ?float73))))
(declare-const ?float122 Float32)
(assert (= ?float122 (fp.add RNE ((_ to_fp 8 24) RTP ?float110) ?float117)))
(declare-const ?float123 Float64)
(assert (= ?float123 (f17 ((_ to_fp 11 53) RTP ?float109) ((_ to_fp 11 53) RNE ?float82) ?float110 ((_ to_fp 15 113) RTZ ?float96) ((_ to_fp 5 11) RTP ?float105) ((_ to_fp 8 24) RTP ?float118))))
(declare-const ?float124 Float128)
(assert (= ?float124 (fp.max ?float110 ?float119)))
(declare-const ?float125 Float128)
(assert (= ?float125 (fp.sub RTP ?float93 ?float110)))
(declare-const ?float126 Float16)
(assert (= ?float126 (fp.sqrt RNE ?float85)))
(declare-const ?float127 Float64)
(assert (= ?float127 (f30 ((_ to_fp 5 11) RTN ?float80) ?float86 ((_ to_fp 15 113) RTZ ?float87) ((_ to_fp 8 24) RNE ?float98) ?float63 ((_ to_fp 15 113) RNE ?float86) ((_ to_fp 15 113) RNE ?float65) ?float73 ((_ to_fp 8 24) RTZ ?float124) ((_ to_fp 8 24) RTZ ?float97))))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.sqrt RTZ ?float71)))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.div RTN ((_ to_fp 8 24) RTP ?float61) ?float82)))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.add RTP ?float125 ?float114)))
(declare-const ?float131 Float128)
(assert (= ?float131 (fp.neg ?float125)))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.abs ?float66)))
(declare-const ?float133 Float128)
(assert (= ?float133 (f46 ((_ to_fp 11 53) RTP ?float122) ((_ to_fp 8 24) RTP ?float110) ?float128 ((_ to_fp 8 24) RTZ ?float121))))
(declare-const ?float134 Float128)
(assert (= ?float134 (f23 ?float78 ((_ to_fp 8 24) RTZ ?float86) ((_ to_fp 11 53) RTN ?float92) ((_ to_fp 11 53) RTZ ?float119) ((_ to_fp 15 113) RNE ?float123) ((_ to_fp 15 113) RTP ?float77))))
(declare-const ?float135 Float64)
(assert (= ?float135 (f6 ?float91 ((_ to_fp 8 24) RTN ?float130) ((_ to_fp 11 53) RTN ?float134) ((_ to_fp 8 24) RTN ?float102) ((_ to_fp 5 11) RNE ?float127) ((_ to_fp 5 11) RTP ?float106) ((_ to_fp 8 24) RTZ ?float88))))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.mul RTP ((_ to_fp 5 11) RTZ ?float68) ?float81)))
(declare-const ?float137 Float32)
(assert (= ?float137 (f47 ((_ to_fp 11 53) RTN ?float83))))
(declare-const ?float138 Float128)
(assert (= ?float138 (fp.sqrt RTP ?float93)))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.roundToIntegral RTP ?float73)))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.sqrt RTP ?float104)))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.mul RNE ((_ to_fp 15 113) RTP ?float84) ?float109)))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.roundToIntegral RTP ?float85)))
(declare-const ?float143 Float128)
(assert (= ?float143 (fp.sub RNE ((_ to_fp 15 113) RTN ?float89) ?float118)))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.roundToIntegral RTP ?float74)))
(declare-const ?float145 Float16)
(assert (= ?float145 (fp.div RTZ ((_ to_fp 5 11) RTN ?float94) ?float76)))
(declare-const ?float146 Float128)
(assert (= ?float146 (f9 ((_ to_fp 15 113) RTN ?float71) ((_ to_fp 8 24) RTN ?float80))))
(declare-const ?float147 Float64)
(assert (= ?float147 (f12 ((_ to_fp 15 113) RTP ?float117) ?float130 ((_ to_fp 8 24) RTP ?float86))))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.sub RTN ?float67 ?float120)))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.sqrt RTZ ?float106)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isSubnormal ?float80)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p3 ((_ to_fp 11 53) RTZ ?float146) ((_ to_fp 11 53) RTP ?float69) ((_ to_fp 5 11) RTZ ?float137) ((_ to_fp 8 24) RTZ ?float85) ((_ to_fp 5 11) RTZ ?float60) ((_ to_fp 8 24) RNE ?float90) ((_ to_fp 11 53) RNE ?float124) ((_ to_fp 5 11) RTN ?float82) ?float80)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (p1 ((_ to_fp 11 53) RTN ?float136) ((_ to_fp 5 11) RTP ?float65) ((_ to_fp 15 113) RTP ?float72) ((_ to_fp 8 24) RNE ?float90) ((_ to_fp 8 24) RNE ?float149) ((_ to_fp 15 113) RNE ?float145) ?float130 ((_ to_fp 8 24) RTP ?float62) ((_ to_fp 5 11) RTZ ?float86))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.leq ?float63 ?float81)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.gt ((_ to_fp 5 11) RTZ ?float74) ?float87)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isInfinite ?float82)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNormal ?float119)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isPositive ?float73)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.lt ((_ to_fp 11 53) RTZ ?float63) ?float149)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isNormal ?float108)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNaN ?float101)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.eq ((_ to_fp 5 11) RTZ ?float117) ?float87)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (p1 ((_ to_fp 11 53) RTZ ?float107) ((_ to_fp 5 11) RTN ?float66) ((_ to_fp 15 113) RNE ?float73) ((_ to_fp 8 24) RTZ ?float132) ((_ to_fp 8 24) RTP ?float126) ?float80 ?float118 ((_ to_fp 8 24) RNE ?float79) ((_ to_fp 5 11) RTP ?float128))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (p3 ((_ to_fp 11 53) RTZ ?float133) ((_ to_fp 11 53) RTN ?float84) ?float63 ?float74 ((_ to_fp 5 11) RTZ ?float135) ((_ to_fp 8 24) RNE ?float126) ((_ to_fp 11 53) RNE ?float109) ((_ to_fp 5 11) RTN ?float97) ?float114)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isNegative ?float127)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isZero ?float95)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isPositive ?float120)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNormal ?float77)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (p6 ?float146 ((_ to_fp 5 11) RTP ?float132) ((_ to_fp 11 53) RNE ?float133) ?float63 ((_ to_fp 11 53) RTN ?float129) ?float121)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.eq ((_ to_fp 8 24) RTN ?float147) ?float137)))
; FINAL ASSERT
(assert (and (and (and (and (and (or (and ?bool154) (and ?bool151 ?bool156))) ?bool166) (or ?bool152 (or ?bool168))) (and ?bool160 ?bool165) ?bool164)))
(check-sat)


-- iteration 24 --
(declare-fun f0 (Float64 Float128 Float32) Float64)
(declare-fun f1 (Float128 Float128 Float16 Float32 Float16) Float128)
(declare-fun f2 (Float128 Float32 Float32) Float128)
(declare-fun f3 (Float16 Float128 Float128 Float16 Float64 Float16 Float64 Float64 Float32 Float32) Float16)
(declare-fun f4 (Float128 Float32 Float64 Float16 Float128 Float64 Float64) Float32)
(declare-fun f5 (Float32 Float64 Float128 Float16 Float128 Float128 Float32) Float64)
(declare-fun f6 (Float16 Float16) Float32)
(declare-fun f7 (Float16 Float32 Float32 Float16 Float64 Float16 Float128) Float128)
(declare-fun f8 (Float32 Float64 Float32 Float32 Float128 Float128 Float128 Float16) Float64)
(declare-fun f9 (Float32 Float128 Float128 Float64 Float64 Float64 Float16) Float64)
(declare-fun f10 (Float64 Float128 Float128 Float128 Float128 Float64) Float32)
(declare-fun f11 (Float16 Float128) Float64)
(declare-fun f12 (Float128 Float64 Float16 Float16 Float128 Float64) Float128)
(declare-fun f13 (Float16 Float16) Float128)
(declare-fun f14 (Float128 Float128) Float128)
(declare-fun f15 (Float128 Float32 Float32 Float32) Float16)
(declare-fun f16 (Float128 Float32 Float64 Float32 Float16 Float64 Float64 Float32) Float64)
(declare-fun f17 (Float128 Float64 Float64 Float16 Float32 Float32 Float32 Float32 Float32 Float128) Float16)
(declare-fun f18 (Float16 Float128 Float64 Float128 Float16 Float128 Float32 Float128) Float32)
(declare-fun f19 (Float32 Float16 Float32) Float64)
(declare-fun f20 (Float16) Float16)
(declare-fun f21 (Float64 Float32) Float16)
(declare-fun f22 (Float32 Float128 Float32) Float64)
(declare-fun f23 (Float32 Float128 Float64 Float64 Float16 Float64 Float128) Float128)
(declare-fun f24 (Float16 Float32 Float64 Float64 Float32 Float128 Float64 Float128) Float64)
(declare-fun f25 (Float32 Float16 Float128 Float64 Float128 Float32 Float64 Float16 Float128 Float32) Float32)
(declare-fun f26 (Float16) Float16)
(declare-fun f27 (Float128 Float16 Float128 Float32 Float128 Float128) Float16)
(declare-fun f28 (Float128 Float16 Float64 Float16) Float32)
(declare-fun f29 (Float32 Float128 Float64) Float64)
(declare-fun f30 (Float128 Float128 Float64 Float16 Float128 Float16 Float16 Float128 Float64 Float16) Float128)
(declare-fun f31 (Float64 Float128 Float16 Float128 Float128 Float128 Float32 Float64 Float64) Float128)
(declare-fun f32 (Float128 Float16 Float16 Float16 Float64) Float128)
(declare-fun f33 (Float16 Float128 Float64 Float32 Float16) Float32)
(declare-fun f34 (Float64 Float128 Float128 Float32 Float32) Float16)
(declare-fun f35 (Float16) Float32)
(declare-fun f36 (Float128 Float64 Float16 Float64 Float128 Float64 Float64 Float32 Float32) Float128)
(declare-fun f37 (Float64 Float128 Float64 Float64 Float128) Float128)
(declare-fun f38 (Float128 Float32 Float32 Float32 Float64 Float16 Float128 Float16 Float64 Float32) Float64)
(declare-fun f39 (Float16) Float64)
(declare-fun f40 (Float64 Float64 Float16 Float128 Float16) Float16)
(declare-fun f41 (Float64 Float128 Float16 Float16 Float128 Float64 Float16) Float16)
(declare-fun f42 (Float64) Float16)
(declare-fun f43 (Float128 Float128 Float16) Float64)
(declare-fun f44 (Float32 Float16 Float16 Float16 Float16 Float16 Float64) Float32)
(declare-fun f45 (Float32 Float128 Float16 Float16 Float32 Float32 Float128 Float32) Float32)
(declare-fun f46 (Float64 Float128 Float64 Float64 Float64 Float16 Float128 Float64 Float128 Float64) Float32)
(declare-fun f47 (Float16 Float32 Float128 Float32 Float16 Float64 Float16) Float32)
(declare-fun f48 (Float32 Float64 Float32) Float128)
(declare-fun f49 (Float16 Float128 Float32 Float128 Float16) Float64)
(declare-fun p0 (Float128 Float16 Float64 Float64 Float64) Bool)
(declare-fun p1 (Float16 Float128 Float64) Bool)
(declare-fun p2 (Float32 Float32 Float64 Float32 Float16 Float64 Float64 Float128) Bool)
(declare-fun p3 (Float128 Float32 Float32 Float128) Bool)
(declare-fun p4 (Float32) Bool)
(declare-fun p5 (Float64 Float64 Float32 Float16 Float64) Bool)
(declare-fun p6 (Float32 Float32 Float16 Float128 Float64 Float128) Bool)
(declare-fun p7 (Float16 Float128 Float16 Float16) Bool)
(declare-fun p8 (Float128 Float64) Bool)
(declare-fun p9 (Float32 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float128)
(declare-const ?float62 Float64)
(declare-const ?float63 Float128)
(declare-const ?float64 Float64)
(declare-const ?float65 Float32)
(declare-const ?float66 Float16)
(declare-const ?float67 Float32)
(declare-const ?float68 Float64)
(declare-const ?float69 Float32)
(declare-const ?float70 Float128)
(declare-const ?float71 Float32)
(declare-const ?float72 Float16)
(declare-const ?float73 Float64)
(declare-const ?float74 Float128)
(declare-const ?float75 Float64)
(declare-const ?float76 Float16)
(declare-const ?float77 Float64)
(declare-const ?float78 Float64)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b0 #b11001101100 #b0000011010101101111100110011011110111010110001111010)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b0 #b11001000001 #b0100100110000111011010000011111011101101101101000110)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b0 #b010101001101110 #b0111110010111100101000000001010100010101011001101101001011001000011111011001011000111000100010110000100111100011)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.abs ?float69)))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.sqrt RTZ ?float85)))
(declare-const ?float102 Float128)
(assert (= ?float102 (f31 ((_ to_fp 11 53) RTP ?float100) ((_ to_fp 15 113) RNE ?float84) ?float72 ((_ to_fp 15 113) RNE ?float82) ?float61 ((_ to_fp 15 113) RTP ?float72) ((_ to_fp 8 24) RTP ?float95) ?float64 ?float82)))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.roundToIntegral RTZ ?float75)))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.roundToIntegral RTZ ?float76)))
(declare-const ?float105 Float64)
(assert (= ?float105 (f39 ((_ to_fp 5 11) RTN ?float61))))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.abs ?float69)))
(declare-const ?float107 Float128)
(assert (= ?float107 (fp.abs ?float98)))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.mul RNE ((_ to_fp 11 53) RNE ?float69) ?float64)))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.sqrt RTP ?float99)))
(declare-const ?float110 Float32)
(assert (= ?float110 (fp.roundToIntegral RTZ ?float92)))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.sub RNE ((_ to_fp 11 53) RNE ?float90) ?float108)))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.div RTZ ?float84 ?float67)))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.roundToIntegral RTN ?float69)))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.abs ?float106)))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.max ((_ to_fp 11 53) RTP ?float98) ?float105)))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.mul RNE ?float76 ((_ to_fp 5 11) RTP ?float71))))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.max ((_ to_fp 15 113) RTN ?float73) ?float74)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.neg ?float100)))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.mul RNE ?float64 ((_ to_fp 11 53) RTN ?float113))))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.min ?float82 ((_ to_fp 11 53) RNE ?float100))))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.neg ?float73)))
(declare-const ?float122 Float32)
(assert (= ?float122 (f33 ?float87 ((_ to_fp 15 113) RTZ ?float100) ?float103 ?float65 ((_ to_fp 5 11) RTN ?float99))))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.div RTN ?float100 ?float71)))
(declare-const ?float124 Float32)
(assert (= ?float124 (f4 ((_ to_fp 15 113) RTP ?float112) ((_ to_fp 8 24) RTN ?float83) ((_ to_fp 11 53) RTZ ?float96) ((_ to_fp 5 11) RTZ ?float82) ((_ to_fp 15 113) RTZ ?float95) ?float103 ?float81)))
(declare-const ?float125 Float128)
(assert (= ?float125 (fp.mul RTZ ?float70 ?float99)))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.roundToIntegral RNE ?float63)))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.mul RTZ ?float91 ((_ to_fp 5 11) RTP ?float81))))
(declare-const ?float128 Float16)
(assert (= ?float128 (f17 ?float74 ((_ to_fp 11 53) RNE ?float112) ((_ to_fp 11 53) RTZ ?float98) ((_ to_fp 5 11) RTZ ?float112) ((_ to_fp 8 24) RNE ?float79) ((_ to_fp 8 24) RTN ?float97) ((_ to_fp 8 24) RNE ?float97) ((_ to_fp 8 24) RTN ?float70) ((_ to_fp 8 24) RNE ?float70) ((_ to_fp 15 113) RTZ ?float76))))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.roundToIntegral RNE ?float77)))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.max ((_ to_fp 15 113) RTP ?float72) ?float97)))
(declare-const ?float131 Float128)
(assert (= ?float131 (fp.sqrt RTN ?float117)))
(declare-const ?float132 Float16)
(assert (= ?float132 (f41 ((_ to_fp 11 53) RTZ ?float61) ?float117 ((_ to_fp 5 11) RTP ?float101) ((_ to_fp 5 11) RTZ ?float100) ?float86 ((_ to_fp 11 53) RTZ ?float124) ((_ to_fp 5 11) RTN ?float60))))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.abs ?float112)))
(declare-const ?float134 Float64)
(assert (= ?float134 (fp.min ((_ to_fp 11 53) RTN ?float133) ?float105)))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.abs ?float133)))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.neg ?float97)))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.sub RTZ ((_ to_fp 11 53) RTN ?float110) ?float60)))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.abs ?float104)))
(declare-const ?float139 Float128)
(assert (= ?float139 (f48 ((_ to_fp 8 24) RTP ?float62) ?float88 ((_ to_fp 8 24) RTN ?float99))))
(declare-const ?float140 Float128)
(assert (= ?float140 (f1 ((_ to_fp 15 113) RTN ?float128) ?float130 ((_ to_fp 5 11) RNE ?float123) ((_ to_fp 8 24) RTN ?float98) ((_ to_fp 5 11) RTP ?float75))))
(declare-const ?float141 Float16)
(assert (= ?float141 (f27 ?float79 ((_ to_fp 5 11) RTP ?float77) ((_ to_fp 15 113) RTZ ?float82) ?float123 ?float70 ((_ to_fp 15 113) RTP ?float115))))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.neg ?float128)))
(declare-const ?float143 Float128)
(assert (= ?float143 (fp.neg ?float126)))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.sqrt RNE ?float90)))
(declare-const ?float145 Float64)
(assert (= ?float145 (f5 ?float69 ((_ to_fp 11 53) RTP ?float79) ((_ to_fp 15 113) RTZ ?float108) ?float87 ?float74 ?float85 ?float69)))
(declare-const ?float146 Float32)
(assert (= ?float146 (f6 ((_ to_fp 5 11) RNE ?float97) ?float138)))
(declare-const ?float147 Float64)
(assert (= ?float147 (fp.add RTN ?float82 ?float73)))
(declare-const ?float148 Float32)
(assert (= ?float148 (fp.sub RTZ ?float114 ?float92)))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.max ?float76 ((_ to_fp 5 11) RTN ?float60))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isSubnormal ?float76)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.gt ?float138 ((_ to_fp 5 11) RTN ?float118))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isZero ?float79)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.eq ?float131 ?float74)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p4 ((_ to_fp 8 24) RNE ?float142))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.gt ((_ to_fp 11 53) RTZ ?float114) ?float73)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isInfinite ?float93)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isSubnormal ?float73)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.eq ?float74 ((_ to_fp 15 113) RTN ?float65))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isNegative ?float61)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNaN ?float130)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isPositive ?float101)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (p2 ((_ to_fp 8 24) RTP ?float74) ((_ to_fp 8 24) RTZ ?float77) ?float73 ((_ to_fp 8 24) RNE ?float141) ((_ to_fp 5 11) RTP ?float145) ((_ to_fp 11 53) RTP ?float139) ((_ to_fp 11 53) RTZ ?float102) ((_ to_fp 15 113) RTN ?float146))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.eq ?float126 ((_ to_fp 15 113) RTN ?float92))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isPositive ?float88)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isZero ?float130)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p7 ((_ to_fp 5 11) RTN ?float131) ((_ to_fp 15 113) RTP ?float64) ?float72 ((_ to_fp 5 11) RNE ?float119))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isSubnormal ?float65)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (p8 ((_ to_fp 15 113) RTN ?float64) ((_ to_fp 11 53) RNE ?float130))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNegative ?float148)))
; FINAL ASSERT
(assert (and (and (or ?bool167 (and (or ?bool158) (or ?bool163 (or (or ?bool164) ?bool150 (or ?bool167 ?bool154 ?bool169))) (and ?bool160))) ?bool156 (or ?bool169 (and ?bool158))) ?bool168 (or ?bool162 (and ?bool156 (and (or ?bool169 (and ?bool156 (and ?bool164)) ?bool156) ?bool153) ?bool155))))
(check-sat)


-- iteration 25 --
(declare-fun f0 (Float64 Float128 Float16 Float16 Float64 Float64 Float16 Float64 Float32) Float16)
(declare-fun f1 (Float32 Float32 Float64 Float16 Float16 Float128 Float32 Float32 Float64 Float32) Float64)
(declare-fun f2 (Float32 Float64 Float16 Float128 Float128) Float32)
(declare-fun f3 (Float64) Float64)
(declare-fun f4 (Float128 Float32 Float32) Float32)
(declare-fun f5 (Float128 Float32 Float128 Float64 Float64) Float64)
(declare-fun f6 (Float32 Float32) Float64)
(declare-fun f7 (Float16 Float16 Float16 Float32 Float128 Float32 Float64 Float16) Float32)
(declare-fun f8 (Float128 Float64 Float16) Float64)
(declare-fun f9 (Float32 Float128 Float32 Float16 Float128 Float32 Float128 Float64) Float128)
(declare-fun f10 (Float128 Float128) Float32)
(declare-fun f11 (Float64 Float16 Float64 Float64 Float32 Float16 Float32 Float64) Float16)
(declare-fun f12 (Float16 Float16 Float32 Float128 Float32 Float32 Float64 Float16 Float32 Float128) Float128)
(declare-fun f13 (Float16 Float64 Float16 Float32) Float16)
(declare-fun f14 (Float64 Float16) Float64)
(declare-fun f15 (Float128 Float128 Float128 Float16 Float16 Float32 Float16 Float64 Float64 Float32) Float128)
(declare-fun f16 (Float128 Float128 Float16 Float32 Float128 Float16 Float16 Float16) Float64)
(declare-fun f17 (Float128 Float32 Float32 Float16 Float32) Float32)
(declare-fun f18 (Float128 Float32 Float32 Float128 Float32 Float64 Float64 Float128) Float128)
(declare-fun f19 (Float64 Float128 Float128) Float64)
(declare-fun f20 (Float32) Float16)
(declare-fun f21 (Float16 Float16 Float128 Float64 Float32 Float128) Float128)
(declare-fun f22 (Float64 Float32 Float16 Float64 Float32 Float32 Float32) Float16)
(declare-fun f23 (Float16 Float16 Float128 Float128 Float128 Float32) Float16)
(declare-fun f24 (Float16 Float64 Float32 Float64) Float128)
(declare-fun f25 (Float64 Float16 Float128 Float128 Float64 Float32 Float64) Float128)
(declare-fun f26 (Float32 Float16 Float16 Float32 Float32 Float32 Float128 Float128 Float32) Float32)
(declare-fun f27 (Float64 Float64 Float32) Float64)
(declare-fun f28 (Float128 Float64 Float16) Float64)
(declare-fun f29 (Float16 Float64 Float16 Float32 Float32 Float16 Float64 Float128 Float128 Float128) Float16)
(declare-fun f30 (Float128 Float32 Float64) Float64)
(declare-fun f31 (Float128 Float128 Float64 Float32) Float128)
(declare-fun f32 (Float128 Float64 Float64 Float32 Float64 Float16) Float16)
(declare-fun f33 (Float16 Float32 Float32 Float16 Float16) Float64)
(declare-fun f34 (Float128 Float64 Float16 Float64 Float16 Float128 Float16 Float32) Float128)
(declare-fun f35 (Float128 Float16 Float64 Float64 Float128 Float16 Float32 Float32 Float128) Float64)
(declare-fun f36 (Float64 Float128 Float64 Float32 Float32 Float128) Float128)
(declare-fun f37 (Float16) Float64)
(declare-fun f38 (Float16 Float32 Float128 Float64 Float16) Float128)
(declare-fun f39 (Float128 Float32 Float16 Float64 Float16 Float128) Float16)
(declare-fun f40 (Float16 Float128 Float128 Float16 Float128 Float128 Float128) Float16)
(declare-fun f41 (Float32 Float16 Float16 Float16 Float32 Float64 Float32 Float128 Float64 Float16) Float128)
(declare-fun f42 (Float16 Float128 Float64 Float128 Float32 Float64 Float64 Float32 Float32 Float64) Float128)
(declare-fun f43 (Float128 Float64 Float32) Float64)
(declare-fun f44 (Float128 Float16 Float64 Float64 Float64 Float16 Float32 Float128) Float64)
(declare-fun f45 (Float64) Float32)
(declare-fun f46 (Float32 Float64 Float32 Float32 Float16) Float16)
(declare-fun f47 (Float16) Float16)
(declare-fun f48 (Float32 Float16 Float32 Float64 Float128 Float16) Float16)
(declare-fun f49 (Float128 Float128 Float16 Float128 Float64 Float128 Float128) Float64)
(declare-fun p0 (Float128 Float64 Float32 Float32 Float32 Float16 Float128) Bool)
(declare-fun p1 (Float128 Float128 Float16 Float64 Float32 Float16 Float32 Float16 Float16 Float16) Bool)
(declare-fun p2 (Float64 Float64 Float16 Float32 Float128 Float128 Float32 Float128 Float16) Bool)
(declare-fun p3 (Float64 Float128 Float16 Float16 Float16 Float16 Float64 Float32) Bool)
(declare-fun p4 (Float32 Float16 Float32 Float32 Float16) Bool)
(declare-fun p5 (Float32 Float16 Float16 Float64 Float128 Float64 Float32) Bool)
(declare-fun p6 (Float16 Float16 Float32 Float128) Bool)
(declare-fun p7 (Float64 Float128 Float64 Float64 Float32 Float128 Float128 Float64 Float128) Bool)
(declare-fun p8 (Float16 Float64 Float32 Float64 Float128 Float32) Bool)
(declare-fun p9 (Float64 Float32 Float16 Float16 Float16 Float32 Float64 Float32 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float128)
(declare-const ?float62 Float128)
(declare-const ?float63 Float32)
(declare-const ?float64 Float64)
(declare-const ?float65 Float32)
(declare-const ?float66 Float32)
(declare-const ?float67 Float32)
(declare-const ?float68 Float16)
(declare-const ?float69 Float64)
(declare-const ?float70 Float16)
(declare-const ?float71 Float128)
(declare-const ?float72 Float16)
(declare-const ?float73 Float64)
(declare-const ?float74 Float128)
(declare-const ?float75 Float128)
(declare-const ?float76 Float64)
(declare-const ?float77 Float32)
(declare-const ?float78 Float16)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b0 #b10111111 #b01011010000101011000001)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b1 #b00000001 #b00000000000000000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (f22 ((_ to_fp 11 53) RTZ ?float75) ((_ to_fp 8 24) RTN ?float97) ((_ to_fp 5 11) RNE ?float81) ((_ to_fp 11 53) RTN ?float63) ((_ to_fp 8 24) RTZ ?float73) ((_ to_fp 8 24) RTP ?float75) ((_ to_fp 8 24) RTN ?float72))))
(declare-const ?float101 Float128)
(assert (= ?float101 (f21 ((_ to_fp 5 11) RTZ ?float77) ((_ to_fp 5 11) RNE ?float99) ((_ to_fp 15 113) RNE ?float91) ((_ to_fp 11 53) RTN ?float99) ((_ to_fp 8 24) RNE ?float62) ((_ to_fp 15 113) RTN ?float97))))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.min ((_ to_fp 5 11) RTN ?float67) ?float85)))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.mul RNE ?float84 ?float69)))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.abs ?float79)))
(declare-const ?float105 Float64)
(assert (= ?float105 (f19 ((_ to_fp 11 53) RTZ ?float74) ((_ to_fp 15 113) RNE ?float73) ((_ to_fp 15 113) RTP ?float104))))
(declare-const ?float106 Float16)
(assert (= ?float106 (fp.roundToIntegral RNE ?float97)))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.min ?float77 ((_ to_fp 8 24) RTN ?float87))))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.max ?float77 ((_ to_fp 8 24) RTN ?float75))))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.min ?float73 ((_ to_fp 11 53) RTZ ?float98))))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.sqrt RNE ?float91)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.roundToIntegral RTN ?float78)))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.abs ?float65)))
(declare-const ?float113 Float128)
(assert (= ?float113 (fp.sqrt RNE ?float86)))
(declare-const ?float114 Float64)
(assert (= ?float114 (f49 ((_ to_fp 15 113) RTN ?float80) ((_ to_fp 15 113) RTP ?float97) ((_ to_fp 5 11) RTP ?float109) ((_ to_fp 15 113) RTN ?float69) ((_ to_fp 11 53) RTN ?float63) ((_ to_fp 15 113) RTN ?float84) ((_ to_fp 15 113) RNE ?float79))))
(declare-const ?float115 Float16)
(assert (= ?float115 (fp.add RTP ((_ to_fp 5 11) RTZ ?float81) ?float111)))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.mul RTZ ?float70 ?float72)))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.sqrt RNE ?float85)))
(declare-const ?float118 Float64)
(assert (= ?float118 (fp.roundToIntegral RNE ?float114)))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.sqrt RNE ?float98)))
(declare-const ?float120 Float64)
(assert (= ?float120 (f5 ((_ to_fp 15 113) RNE ?float78) ((_ to_fp 8 24) RNE ?float97) ((_ to_fp 15 113) RTN ?float66) ((_ to_fp 11 53) RNE ?float91) ((_ to_fp 11 53) RTP ?float81))))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.div RTP ?float81 ((_ to_fp 15 113) RTZ ?float118))))
(declare-const ?float122 Float128)
(assert (= ?float122 (f15 ?float86 ((_ to_fp 15 113) RTZ ?float99) ((_ to_fp 15 113) RTZ ?float88) ?float110 ((_ to_fp 5 11) RTZ ?float101) ((_ to_fp 8 24) RTN ?float118) ((_ to_fp 5 11) RTZ ?float65) ((_ to_fp 11 53) RTZ ?float119) ((_ to_fp 11 53) RTN ?float119) ((_ to_fp 8 24) RTZ ?float70))))
(declare-const ?float123 Float128)
(assert (= ?float123 (f38 ((_ to_fp 5 11) RTN ?float80) ((_ to_fp 8 24) RNE ?float84) ((_ to_fp 15 113) RNE ?float91) ?float76 ((_ to_fp 5 11) RTP ?float77))))
(declare-const ?float124 Float128)
(assert (= ?float124 (fp.div RTN ?float61 ((_ to_fp 15 113) RTN ?float70))))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.sqrt RTZ ?float119)))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.add RTP ((_ to_fp 8 24) RTZ ?float70) ?float63)))
(declare-const ?float127 Float128)
(assert (= ?float127 (f42 ((_ to_fp 5 11) RTZ ?float87) ((_ to_fp 15 113) RTP ?float70) ?float83 ((_ to_fp 15 113) RNE ?float72) ((_ to_fp 8 24) RTN ?float70) ((_ to_fp 11 53) RTZ ?float93) ((_ to_fp 11 53) RTN ?float85) ((_ to_fp 8 24) RTN ?float101) ((_ to_fp 8 24) RNE ?float64) ((_ to_fp 11 53) RTZ ?float94))))
(declare-const ?float128 Float16)
(assert (= ?float128 (fp.sqrt RTN ?float116)))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.add RTZ ?float128 ?float117)))
(declare-const ?float130 Float128)
(assert (= ?float130 (f36 ?float73 ((_ to_fp 15 113) RTN ?float93) ((_ to_fp 11 53) RTP ?float98) ((_ to_fp 8 24) RTZ ?float64) ?float65 ((_ to_fp 15 113) RNE ?float105))))
(declare-const ?float131 Float64)
(assert (= ?float131 (f1 ((_ to_fp 8 24) RTZ ?float123) ((_ to_fp 8 24) RTZ ?float110) ((_ to_fp 11 53) RNE ?float61) ?float110 ((_ to_fp 5 11) RNE ?float118) ?float71 ((_ to_fp 8 24) RTP ?float97) ?float99 ((_ to_fp 11 53) RTN ?float89) ?float99)))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.add RTZ ?float79 ((_ to_fp 8 24) RTZ ?float68))))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.min ?float64 ((_ to_fp 11 53) RTP ?float61))))
(declare-const ?float134 Float64)
(assert (= ?float134 (fp.abs ?float105)))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.neg ?float110)))
(declare-const ?float136 Float32)
(assert (= ?float136 (fp.min ((_ to_fp 8 24) RTN ?float74) ?float104)))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.sqrt RTZ ?float66)))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.min ?float102 ((_ to_fp 5 11) RTZ ?float62))))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.roundToIntegral RTZ ?float137)))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.roundToIntegral RTN ?float121)))
(declare-const ?float141 Float128)
(assert (= ?float141 (f36 ((_ to_fp 11 53) RTN ?float102) ((_ to_fp 15 113) RTZ ?float110) ?float133 ?float95 ((_ to_fp 8 24) RNE ?float113) ((_ to_fp 15 113) RTP ?float126))))
(declare-const ?float142 Float16)
(assert (= ?float142 (f48 ((_ to_fp 8 24) RTN ?float122) ?float92 ?float137 ((_ to_fp 11 53) RNE ?float99) ((_ to_fp 15 113) RTZ ?float99) ((_ to_fp 5 11) RTP ?float105))))
(declare-const ?float143 Float32)
(assert (= ?float143 (fp.div RTP ?float136 ((_ to_fp 8 24) RTZ ?float110))))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.sqrt RTP ?float93)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.max ?float64 ((_ to_fp 11 53) RTN ?float142))))
(declare-const ?float146 Float64)
(assert (= ?float146 (f16 ((_ to_fp 15 113) RNE ?float102) ((_ to_fp 15 113) RTN ?float135) ((_ to_fp 5 11) RTP ?float82) ((_ to_fp 8 24) RTP ?float141) ((_ to_fp 15 113) RTZ ?float125) ((_ to_fp 5 11) RTZ ?float67) ((_ to_fp 5 11) RTP ?float98) ((_ to_fp 5 11) RTN ?float112))))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.roundToIntegral RTP ?float143)))
(declare-const ?float148 Float64)
(assert (= ?float148 (f1 ((_ to_fp 8 24) RNE ?float146) ((_ to_fp 8 24) RTP ?float101) ((_ to_fp 11 53) RNE ?float66) ((_ to_fp 5 11) RTP ?float137) ((_ to_fp 5 11) RTP ?float132) ((_ to_fp 15 113) RTP ?float67) ((_ to_fp 8 24) RTZ ?float73) ((_ to_fp 8 24) RTZ ?float92) ?float83 ?float60)))
(declare-const ?float149 Float32)
(assert (= ?float149 (f7 ((_ to_fp 5 11) RTZ ?float146) ((_ to_fp 5 11) RTP ?float74) ?float72 ((_ to_fp 8 24) RTZ ?float127) ((_ to_fp 15 113) RTN ?float104) ?float60 ((_ to_fp 11 53) RTN ?float121) ?float100)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isPositive ?float80)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNaN ?float121)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.leq ?float63 ((_ to_fp 8 24) RTP ?float127))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNormal ?float99)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isInfinite ?float149)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.geq ?float70 ((_ to_fp 5 11) RNE ?float87))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNaN ?float74)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p9 ((_ to_fp 11 53) RTN ?float90) ?float67 ((_ to_fp 5 11) RTZ ?float143) ?float70 ?float117 ((_ to_fp 8 24) RNE ?float100) ((_ to_fp 11 53) RTN ?float67) ((_ to_fp 8 24) RTZ ?float102) ((_ to_fp 5 11) RNE ?float80))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p1 ((_ to_fp 15 113) RTN ?float102) ?float61 ((_ to_fp 5 11) RTP ?float89) ((_ to_fp 11 53) RTP ?float95) ((_ to_fp 8 24) RNE ?float75) ((_ to_fp 5 11) RTP ?float144) ((_ to_fp 8 24) RNE ?float123) ((_ to_fp 5 11) RNE ?float112) ?float110 ((_ to_fp 5 11) RTZ ?float69))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isInfinite ?float99)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNegative ?float88)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNegative ?float141)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNaN ?float136)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNormal ?float108)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.leq ?float84 ((_ to_fp 11 53) RTP ?float129))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isInfinite ?float91)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isPositive ?float127)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p8 ?float138 ((_ to_fp 11 53) RNE ?float68) ?float99 ?float105 ((_ to_fp 15 113) RTN ?float91) ((_ to_fp 8 24) RTZ ?float100))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNormal ?float138)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.eq ((_ to_fp 11 53) RTZ ?float141) ?float145)))
; FINAL ASSERT
(assert (or (or (or ?bool165 ?bool152))))
(check-sat)


-- iteration 26 --
(declare-fun f0 (Float32) Float128)
(declare-fun f1 (Float16 Float128) Float128)
(declare-fun f2 (Float32 Float32) Float64)
(declare-fun f3 (Float64 Float16 Float64 Float32 Float64) Float64)
(declare-fun f4 (Float16 Float64 Float16 Float16 Float128 Float128 Float16 Float32) Float16)
(declare-fun f5 (Float16 Float32 Float32 Float128 Float64 Float16 Float64 Float32 Float128 Float16) Float32)
(declare-fun f6 (Float16 Float64 Float64 Float128) Float128)
(declare-fun f7 (Float32 Float128 Float64 Float64 Float32 Float16) Float32)
(declare-fun f8 (Float64 Float16) Float32)
(declare-fun f9 (Float16 Float32 Float16 Float128) Float64)
(declare-fun f10 (Float64 Float32 Float64 Float128 Float16 Float16 Float64 Float64) Float128)
(declare-fun f11 (Float64 Float128 Float128 Float32 Float16 Float128) Float64)
(declare-fun f12 (Float16 Float64 Float64) Float32)
(declare-fun f13 (Float16 Float16 Float64 Float16 Float16 Float128 Float64 Float32 Float32 Float16) Float16)
(declare-fun f14 (Float32 Float32 Float16 Float32 Float32 Float128 Float64 Float32 Float16) Float32)
(declare-fun f15 (Float64 Float64 Float128 Float64 Float128 Float16 Float128 Float16) Float16)
(declare-fun f16 (Float128 Float128 Float128 Float64 Float64 Float16 Float64 Float64 Float16 Float128) Float64)
(declare-fun f17 (Float16 Float32) Float32)
(declare-fun f18 (Float32 Float32 Float16 Float128 Float64 Float16 Float64) Float16)
(declare-fun f19 (Float64 Float64 Float128 Float32 Float32 Float16 Float128) Float32)
(declare-fun f20 (Float64 Float16 Float16 Float16 Float128) Float128)
(declare-fun f21 (Float16 Float64 Float32 Float64 Float64 Float128 Float16 Float128 Float64) Float128)
(declare-fun f22 (Float16 Float128 Float32 Float128) Float128)
(declare-fun f23 (Float32 Float32 Float64 Float128 Float64 Float128 Float16 Float16 Float128) Float16)
(declare-fun f24 (Float32 Float64) Float64)
(declare-fun f25 (Float128 Float32 Float16 Float64 Float32) Float32)
(declare-fun f26 (Float64 Float64 Float64 Float128 Float16 Float128 Float64) Float32)
(declare-fun f27 (Float128 Float128 Float16 Float16) Float16)
(declare-fun f28 (Float16 Float128 Float16 Float64 Float64 Float64 Float64 Float16 Float64) Float64)
(declare-fun f29 (Float16 Float128 Float16 Float64 Float64 Float64 Float64 Float128) Float128)
(declare-fun f30 (Float64 Float32 Float128 Float64 Float16 Float64 Float128) Float32)
(declare-fun f31 (Float32 Float16) Float128)
(declare-fun f32 (Float128 Float16 Float32 Float16 Float64 Float32 Float128 Float32) Float32)
(declare-fun f33 (Float16 Float64 Float32) Float128)
(declare-fun f34 (Float16 Float32 Float64 Float32 Float64 Float16 Float128) Float128)
(declare-fun f35 (Float32 Float64 Float16 Float32) Float128)
(declare-fun f36 (Float128 Float64 Float16 Float64 Float128 Float32 Float64) Float16)
(declare-fun f37 (Float16 Float16 Float64 Float16 Float16 Float32 Float128) Float64)
(declare-fun f38 (Float128 Float64 Float128 Float128 Float32 Float16 Float32 Float128 Float64) Float128)
(declare-fun f39 (Float16 Float16 Float32 Float16 Float128 Float64 Float128 Float128 Float64 Float32) Float32)
(declare-fun f40 (Float16 Float16 Float128) Float64)
(declare-fun f41 (Float16 Float64 Float128 Float16 Float128 Float128 Float128 Float128 Float32 Float128) Float128)
(declare-fun f42 (Float128 Float32 Float128 Float16 Float128 Float16 Float128 Float64 Float64 Float16) Float128)
(declare-fun f43 (Float16 Float16 Float32 Float64 Float128 Float32 Float64 Float64 Float16 Float64) Float16)
(declare-fun f44 (Float16 Float64 Float32 Float32 Float16 Float32 Float128 Float64 Float64 Float64) Float64)
(declare-fun f45 (Float64 Float64 Float128 Float64 Float64 Float128 Float16 Float128 Float64 Float128) Float64)
(declare-fun f46 (Float32) Float128)
(declare-fun f47 (Float128 Float64 Float32 Float128 Float32 Float32 Float16 Float128 Float32) Float128)
(declare-fun f48 (Float128 Float128 Float64) Float32)
(declare-fun f49 (Float64 Float32 Float64 Float32 Float128 Float32 Float32 Float64 Float32 Float32) Float64)
(declare-fun p0 (Float128) Bool)
(declare-fun p1 (Float64 Float16 Float64) Bool)
(declare-fun p2 (Float32 Float32 Float32 Float64 Float64 Float32 Float128 Float128 Float32) Bool)
(declare-fun p3 (Float128 Float64 Float64 Float64 Float128 Float64 Float32) Bool)
(declare-fun p4 (Float16) Bool)
(declare-fun p5 (Float16) Bool)
(declare-fun p6 (Float16 Float64 Float16 Float32 Float128 Float128 Float16) Bool)
(declare-fun p7 (Float64 Float64 Float16) Bool)
(declare-fun p8 (Float32 Float64 Float32 Float128 Float32 Float16 Float128 Float16 Float16 Float32) Bool)
(declare-fun p9 (Float16 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float16)
(declare-const ?float62 Float128)
(declare-const ?float63 Float64)
(declare-const ?float64 Float16)
(declare-const ?float65 Float128)
(declare-const ?float66 Float64)
(declare-const ?float67 Float64)
(declare-const ?float68 Float32)
(declare-const ?float69 Float32)
(declare-const ?float70 Float16)
(declare-const ?float71 Float64)
(declare-const ?float72 Float32)
(declare-const ?float73 Float32)
(declare-const ?float74 Float64)
(declare-const ?float75 Float16)
(declare-const ?float76 Float32)
(declare-const ?float77 Float128)
(declare-const ?float78 Float16)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b1 #b01100 #b1101011011)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b1 #b01110000111 #b1111100011110100111100110011100000000101110001000010)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float128)
(assert (= ?float90 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b1 #b00101100 #b11111111100010001000001)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b1 #b11101110 #b01111100101101011001010)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b1 #b01101010 #b11110110111100111001010)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b11011 #b1100110111)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b0 #b00001 #b0000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.min ((_ to_fp 8 24) RTZ ?float94) ?float97)))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.div RTN ((_ to_fp 8 24) RTZ ?float88) ?float97)))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.min ((_ to_fp 15 113) RTZ ?float95) ?float82)))
(declare-const ?float103 Float128)
(assert (= ?float103 (fp.div RTP ((_ to_fp 15 113) RTP ?float68) ?float89)))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.neg ?float90)))
(declare-const ?float105 Float128)
(assert (= ?float105 (f21 ?float88 ((_ to_fp 11 53) RTN ?float61) ?float84 ((_ to_fp 11 53) RNE ?float76) ((_ to_fp 11 53) RTN ?float97) ((_ to_fp 15 113) RTZ ?float87) ((_ to_fp 5 11) RTP ?float89) ((_ to_fp 15 113) RNE ?float64) ((_ to_fp 11 53) RTP ?float65))))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.sqrt RTN ?float91)))
(declare-const ?float107 Float16)
(assert (= ?float107 (f36 ((_ to_fp 15 113) RTN ?float87) ((_ to_fp 11 53) RTN ?float61) ((_ to_fp 5 11) RNE ?float89) ?float87 ((_ to_fp 15 113) RTP ?float83) ((_ to_fp 8 24) RTN ?float104) ((_ to_fp 11 53) RTN ?float68))))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.abs ?float71)))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.roundToIntegral RNE ?float65)))
(declare-const ?float110 Float128)
(assert (= ?float110 (f21 ?float88 ((_ to_fp 11 53) RTN ?float94) ((_ to_fp 8 24) RTN ?float94) ((_ to_fp 11 53) RNE ?float95) ?float108 ((_ to_fp 15 113) RTZ ?float108) ((_ to_fp 5 11) RTZ ?float84) ?float60 ?float67)))
(declare-const ?float111 Float128)
(assert (= ?float111 (fp.div RTZ ?float77 ?float102)))
(declare-const ?float112 Float128)
(assert (= ?float112 (fp.div RTN ?float103 ?float102)))
(declare-const ?float113 Float128)
(assert (= ?float113 (fp.neg ?float90)))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.max ?float64 ((_ to_fp 5 11) RNE ?float89))))
(declare-const ?float115 Float16)
(assert (= ?float115 (fp.neg ?float64)))
(declare-const ?float116 Float128)
(assert (= ?float116 (fp.abs ?float62)))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.roundToIntegral RTN ?float78)))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.mul RTZ ?float113 ((_ to_fp 15 113) RTP ?float64))))
(declare-const ?float119 Float128)
(assert (= ?float119 (fp.sqrt RNE ?float77)))
(declare-const ?float120 Float64)
(assert (= ?float120 (f3 ((_ to_fp 11 53) RTZ ?float103) ((_ to_fp 5 11) RTP ?float63) ((_ to_fp 11 53) RTZ ?float103) ((_ to_fp 8 24) RTN ?float83) ((_ to_fp 11 53) RTZ ?float94))))
(declare-const ?float121 Float32)
(assert (= ?float121 (f48 ?float65 ((_ to_fp 15 113) RNE ?float61) ((_ to_fp 11 53) RTN ?float69))))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.sub RNE ?float94 ((_ to_fp 15 113) RTZ ?float91))))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.div RTN ((_ to_fp 5 11) RTZ ?float83) ?float78)))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.abs ?float95)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.sqrt RTP ?float100)))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.sqrt RTP ?float65)))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.mul RTN ((_ to_fp 5 11) RTP ?float85) ?float114)))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.mul RNE ?float89 ((_ to_fp 15 113) RNE ?float67))))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.abs ?float63)))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.div RTN ?float70 ?float99)))
(declare-const ?float131 Float64)
(assert (= ?float131 (f40 ((_ to_fp 5 11) RTN ?float112) ((_ to_fp 5 11) RTP ?float82) ((_ to_fp 15 113) RTZ ?float84))))
(declare-const ?float132 Float128)
(assert (= ?float132 (f10 ?float120 ((_ to_fp 8 24) RTP ?float122) ?float108 ?float111 ((_ to_fp 5 11) RTN ?float63) ((_ to_fp 5 11) RNE ?float106) ((_ to_fp 11 53) RTZ ?float104) ((_ to_fp 11 53) RNE ?float68))))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.sub RNE ?float120 ((_ to_fp 11 53) RTP ?float105))))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.roundToIntegral RTP ?float132)))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.roundToIntegral RNE ?float127)))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.abs ?float113)))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.neg ?float74)))
(declare-const ?float138 Float16)
(assert (= ?float138 (f4 ?float114 ?float91 ((_ to_fp 5 11) RTZ ?float112) ((_ to_fp 5 11) RTN ?float66) ((_ to_fp 15 113) RNE ?float83) ((_ to_fp 15 113) RTP ?float83) ((_ to_fp 5 11) RNE ?float131) ((_ to_fp 8 24) RTN ?float61))))
(declare-const ?float139 Float16)
(assert (= ?float139 (f43 ((_ to_fp 5 11) RTN ?float82) ((_ to_fp 5 11) RTN ?float91) ((_ to_fp 8 24) RTP ?float120) ?float120 ((_ to_fp 15 113) RNE ?float80) ((_ to_fp 8 24) RNE ?float85) ?float81 ((_ to_fp 11 53) RTZ ?float78) ((_ to_fp 5 11) RNE ?float120) ((_ to_fp 11 53) RTP ?float113))))
(declare-const ?float140 Float32)
(assert (= ?float140 (f14 ((_ to_fp 8 24) RTP ?float106) ((_ to_fp 8 24) RTN ?float89) ?float114 ?float124 ?float95 ((_ to_fp 15 113) RNE ?float108) ?float66 ((_ to_fp 8 24) RNE ?float102) ((_ to_fp 5 11) RTP ?float81))))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.sub RTP ?float99 ?float79)))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.sqrt RTZ ?float109)))
(declare-const ?float143 Float128)
(assert (= ?float143 (f31 ((_ to_fp 8 24) RTN ?float142) ((_ to_fp 5 11) RTP ?float71))))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.div RTZ ?float63 ((_ to_fp 11 53) RTZ ?float78))))
(declare-const ?float145 Float128)
(assert (= ?float145 (fp.mul RTP ?float113 ?float116)))
(declare-const ?float146 Float64)
(assert (= ?float146 (fp.add RNE ?float63 ?float129)))
(declare-const ?float147 Float128)
(assert (= ?float147 (f1 ?float135 ((_ to_fp 15 113) RTZ ?float72))))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.sub RNE ((_ to_fp 5 11) RTP ?float133) ?float123)))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.neg ?float116)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p3 ?float116 ((_ to_fp 11 53) RTZ ?float64) ((_ to_fp 11 53) RTP ?float118) ?float66 ?float105 ((_ to_fp 11 53) RTZ ?float114) ((_ to_fp 8 24) RTZ ?float108))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.eq ?float137 ((_ to_fp 11 53) RTN ?float112))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isInfinite ?float98)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNaN ?float133)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.geq ?float101 ?float93)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.leq ((_ to_fp 8 24) RTN ?float135) ?float121)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.geq ?float60 ((_ to_fp 15 113) RTZ ?float129))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isSubnormal ?float65)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p4 ((_ to_fp 5 11) RTN ?float110))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.gt ?float79 ((_ to_fp 5 11) RTZ ?float98))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNormal ?float142)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (p4 ((_ to_fp 5 11) RNE ?float125))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.gt ?float129 ((_ to_fp 11 53) RNE ?float72))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.geq ?float92 ((_ to_fp 8 24) RTN ?float116))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.geq ?float129 ?float87)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isInfinite ?float72)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isPositive ?float96)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isZero ?float137)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (p8 ?float84 ((_ to_fp 11 53) RTP ?float141) ?float68 ((_ to_fp 15 113) RTP ?float69) ((_ to_fp 8 24) RTN ?float120) ((_ to_fp 5 11) RTN ?float145) ?float77 ?float99 ((_ to_fp 5 11) RTZ ?float105) ?float92)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNaN ?float120)))
; FINAL ASSERT
(assert (and ?bool165 (and ?bool154 ?bool158)))
(check-sat)


-- iteration 27 --
(declare-fun f0 (Float32 Float16 Float32 Float64 Float16 Float64) Float64)
(declare-fun f1 (Float64 Float32 Float128 Float32 Float32) Float32)
(declare-fun f2 (Float16 Float16 Float64 Float64 Float32 Float32 Float32 Float32 Float64 Float128) Float32)
(declare-fun f3 (Float16 Float16 Float16 Float16) Float64)
(declare-fun f4 (Float32) Float128)
(declare-fun f5 (Float128 Float32 Float16 Float128 Float128 Float32) Float64)
(declare-fun f6 (Float32 Float32 Float16 Float128) Float64)
(declare-fun f7 (Float32 Float16 Float64 Float32 Float32 Float16 Float16) Float64)
(declare-fun f8 (Float16 Float64 Float64 Float64 Float128 Float32 Float32 Float64 Float64) Float16)
(declare-fun f9 (Float16) Float128)
(declare-fun f10 (Float64 Float128 Float128) Float128)
(declare-fun f11 (Float16 Float32 Float64 Float64 Float64 Float64) Float32)
(declare-fun f12 (Float64 Float32 Float128 Float16 Float128) Float128)
(declare-fun f13 (Float16 Float16 Float64 Float64 Float16 Float16 Float32) Float32)
(declare-fun f14 (Float128 Float128 Float16 Float128 Float32 Float32) Float64)
(declare-fun f15 (Float32 Float128 Float64 Float32 Float64 Float64) Float32)
(declare-fun f16 (Float128 Float32 Float32 Float16 Float16 Float32 Float32 Float128) Float64)
(declare-fun f17 (Float16 Float128 Float128 Float64 Float16 Float128 Float16) Float16)
(declare-fun f18 (Float128 Float32 Float32 Float64 Float16) Float64)
(declare-fun f19 (Float16 Float128) Float64)
(declare-fun f20 (Float64 Float128 Float16 Float64 Float32 Float16 Float128 Float64 Float64) Float16)
(declare-fun f21 (Float16) Float128)
(declare-fun f22 (Float64 Float128 Float16) Float128)
(declare-fun f23 (Float16 Float16 Float64) Float64)
(declare-fun f24 (Float64 Float128 Float128 Float32 Float16 Float32) Float64)
(declare-fun f25 (Float64 Float32) Float128)
(declare-fun f26 (Float64 Float32 Float64 Float16 Float64 Float64 Float32 Float16 Float64) Float128)
(declare-fun f27 (Float64 Float16 Float16) Float64)
(declare-fun f28 (Float16 Float128 Float128 Float128) Float128)
(declare-fun f29 (Float16) Float32)
(declare-fun f30 (Float32 Float64 Float32 Float16 Float128 Float32) Float16)
(declare-fun f31 (Float32 Float32 Float64 Float32 Float32 Float16 Float128) Float32)
(declare-fun f32 (Float64 Float32 Float128 Float32 Float16 Float128 Float128) Float32)
(declare-fun f33 (Float128 Float128 Float64 Float32 Float16 Float128 Float32 Float32 Float64 Float16) Float128)
(declare-fun f34 (Float128 Float16 Float128 Float32 Float128 Float16 Float32 Float64) Float128)
(declare-fun f35 (Float16 Float128) Float64)
(declare-fun f36 (Float16 Float64 Float32 Float16 Float64 Float128) Float64)
(declare-fun f37 (Float32 Float16 Float128 Float64 Float128 Float128 Float64) Float128)
(declare-fun f38 (Float64) Float32)
(declare-fun f39 (Float16 Float128 Float128 Float128 Float32) Float128)
(declare-fun f40 (Float64 Float32 Float16) Float64)
(declare-fun f41 (Float32 Float128 Float32) Float32)
(declare-fun f42 (Float128 Float64 Float64 Float64 Float128 Float16 Float16 Float64) Float16)
(declare-fun f43 (Float128 Float16 Float64 Float32 Float16 Float128) Float32)
(declare-fun f44 (Float128) Float128)
(declare-fun f45 (Float64 Float32 Float128 Float32 Float64 Float32 Float16) Float128)
(declare-fun f46 (Float16 Float16 Float128 Float64 Float16 Float64 Float64 Float128 Float32) Float128)
(declare-fun f47 (Float32 Float32 Float64 Float32 Float32) Float128)
(declare-fun f48 (Float16 Float64 Float64 Float64 Float64 Float32 Float64) Float64)
(declare-fun f49 (Float32 Float32) Float16)
(declare-fun p0 (Float128 Float16 Float16) Bool)
(declare-fun p1 (Float64 Float128 Float64 Float16 Float128 Float16 Float64 Float64 Float16 Float64) Bool)
(declare-fun p2 (Float16 Float32 Float128 Float64 Float64 Float128 Float128) Bool)
(declare-fun p3 (Float32 Float32 Float16 Float16 Float64 Float16 Float16 Float128 Float128 Float128) Bool)
(declare-fun p4 (Float128 Float16 Float32 Float32 Float64) Bool)
(declare-fun p5 (Float64 Float128 Float128 Float32) Bool)
(declare-fun p6 (Float64 Float16 Float16 Float32 Float16) Bool)
(declare-fun p7 (Float32 Float128 Float128 Float128) Bool)
(declare-fun p8 (Float64 Float16 Float64 Float64 Float16 Float64 Float128 Float128) Bool)
(declare-fun p9 (Float16 Float16 Float64 Float32 Float32 Float32 Float16 Float128 Float128 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float128)
(declare-const ?float62 Float32)
(declare-const ?float63 Float32)
(declare-const ?float64 Float16)
(declare-const ?float65 Float16)
(declare-const ?float66 Float32)
(declare-const ?float67 Float32)
(declare-const ?float68 Float64)
(declare-const ?float69 Float128)
(declare-const ?float70 Float64)
(declare-const ?float71 Float16)
(declare-const ?float72 Float16)
(declare-const ?float73 Float64)
(declare-const ?float74 Float16)
(declare-const ?float75 Float128)
(declare-const ?float76 Float64)
(declare-const ?float77 Float64)
(declare-const ?float78 Float32)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b0 #b10000100101 #b0011001110001110011110011111111111111110001110010100)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b0 #b010001000111101 #b0110101111110000110000100100010110110000101001110101011001100011001110101010110011010010110111110001011101001101)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (fp.div RTN ((_ to_fp 11 53) RTZ ?float75) ?float80)))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.min ((_ to_fp 15 113) RTN ?float98) ?float69)))
(declare-const ?float102 Float128)
(assert (= ?float102 (f12 ((_ to_fp 11 53) RTZ ?float65) ?float63 ?float96 ?float79 ((_ to_fp 15 113) RNE ?float97))))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.abs ?float76)))
(declare-const ?float104 Float64)
(assert (= ?float104 (f40 ?float83 ?float94 ((_ to_fp 5 11) RTZ ?float75))))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.neg ?float78)))
(declare-const ?float106 Float128)
(assert (= ?float106 (f45 ?float80 ((_ to_fp 8 24) RTN ?float83) ((_ to_fp 15 113) RNE ?float73) ((_ to_fp 8 24) RNE ?float74) ((_ to_fp 11 53) RTZ ?float75) ?float94 ((_ to_fp 5 11) RNE ?float66))))
(declare-const ?float107 Float32)
(assert (= ?float107 (f29 ((_ to_fp 5 11) RTP ?float61))))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.roundToIntegral RNE ?float105)))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.add RTZ ?float90 ((_ to_fp 5 11) RNE ?float104))))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.mul RNE ?float91 ((_ to_fp 11 53) RTZ ?float75))))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.mul RNE ((_ to_fp 11 53) RTN ?float75) ?float73)))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.mul RNE ?float74 ?float71)))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.max ?float94 ((_ to_fp 8 24) RTP ?float85))))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.sqrt RNE ?float108)))
(declare-const ?float115 Float64)
(assert (= ?float115 (f27 ((_ to_fp 11 53) RTN ?float113) ((_ to_fp 5 11) RTP ?float108) ((_ to_fp 5 11) RTZ ?float108))))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.roundToIntegral RTZ ?float94)))
(declare-const ?float117 Float16)
(assert (= ?float117 (f20 ?float91 ((_ to_fp 15 113) RTN ?float90) ?float74 ((_ to_fp 11 53) RTN ?float109) ((_ to_fp 8 24) RTP ?float112) ((_ to_fp 5 11) RTP ?float100) ((_ to_fp 15 113) RTN ?float74) ((_ to_fp 11 53) RNE ?float78) ?float104)))
(declare-const ?float118 Float128)
(assert (= ?float118 (f33 ((_ to_fp 15 113) RTZ ?float105) ?float102 ((_ to_fp 11 53) RTP ?float107) ((_ to_fp 8 24) RTZ ?float104) ?float84 ((_ to_fp 15 113) RTP ?float111) ?float62 ((_ to_fp 8 24) RNE ?float93) ((_ to_fp 11 53) RNE ?float113) ((_ to_fp 5 11) RTP ?float96))))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.sqrt RNE ?float113)))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.add RNE ((_ to_fp 15 113) RNE ?float112) ?float118)))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.max ?float118 ((_ to_fp 15 113) RNE ?float109))))
(declare-const ?float122 Float32)
(assert (= ?float122 (fp.mul RNE ?float116 ?float66)))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.abs ?float111)))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.div RNE ?float76 ((_ to_fp 11 53) RNE ?float60))))
(declare-const ?float125 Float128)
(assert (= ?float125 (fp.sub RNE ?float85 ((_ to_fp 15 113) RTN ?float107))))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.min ?float66 ((_ to_fp 8 24) RTZ ?float110))))
(declare-const ?float127 Float64)
(assert (= ?float127 (fp.sqrt RTP ?float68)))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.abs ?float115)))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.mul RTP ?float83 ((_ to_fp 11 53) RTZ ?float126))))
(declare-const ?float130 Float128)
(assert (= ?float130 (f4 ((_ to_fp 8 24) RTP ?float129))))
(declare-const ?float131 Float128)
(assert (= ?float131 (f9 ((_ to_fp 5 11) RNE ?float120))))
(declare-const ?float132 Float64)
(assert (= ?float132 (f48 ?float71 ((_ to_fp 11 53) RNE ?float97) ((_ to_fp 11 53) RTP ?float106) ?float83 ((_ to_fp 11 53) RTN ?float95) ?float107 ((_ to_fp 11 53) RTZ ?float67))))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.neg ?float63)))
(declare-const ?float134 Float32)
(assert (= ?float134 (f2 ((_ to_fp 5 11) RNE ?float76) ((_ to_fp 5 11) RTN ?float130) ((_ to_fp 11 53) RNE ?float105) ((_ to_fp 11 53) RNE ?float98) ((_ to_fp 8 24) RTN ?float80) ?float113 ((_ to_fp 8 24) RTP ?float68) ((_ to_fp 8 24) RTP ?float129) ((_ to_fp 11 53) RTZ ?float119) ((_ to_fp 15 113) RTP ?float91))))
(declare-const ?float135 Float128)
(assert (= ?float135 (f46 ((_ to_fp 5 11) RTP ?float104) ((_ to_fp 5 11) RTP ?float104) ?float125 ((_ to_fp 11 53) RNE ?float75) ((_ to_fp 5 11) RTP ?float119) ((_ to_fp 11 53) RTN ?float74) ((_ to_fp 11 53) RNE ?float79) ((_ to_fp 15 113) RTZ ?float80) ((_ to_fp 8 24) RTP ?float70))))
(declare-const ?float136 Float32)
(assert (= ?float136 (fp.mul RNE ?float108 ?float86)))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.sqrt RTP ?float74)))
(declare-const ?float138 Float128)
(assert (= ?float138 (fp.min ((_ to_fp 15 113) RTZ ?float110) ?float85)))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.sub RTZ ((_ to_fp 11 53) RTP ?float69) ?float132)))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.abs ?float63)))
(declare-const ?float141 Float32)
(assert (= ?float141 (fp.sub RTZ ?float134 ((_ to_fp 8 24) RTP ?float123))))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.sqrt RTZ ?float75)))
(declare-const ?float143 Float64)
(assert (= ?float143 (f35 ((_ to_fp 5 11) RTN ?float138) ((_ to_fp 15 113) RTN ?float79))))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.min ((_ to_fp 8 24) RTN ?float75) ?float140)))
(declare-const ?float145 Float16)
(assert (= ?float145 (fp.min ?float72 ((_ to_fp 5 11) RNE ?float139))))
(declare-const ?float146 Float64)
(assert (= ?float146 (fp.mul RTZ ?float80 ((_ to_fp 11 53) RTP ?float92))))
(declare-const ?float147 Float32)
(assert (= ?float147 (f43 ?float75 ((_ to_fp 5 11) RNE ?float95) ((_ to_fp 11 53) RTN ?float85) ((_ to_fp 8 24) RTZ ?float100) ((_ to_fp 5 11) RTP ?float125) ((_ to_fp 15 113) RTN ?float84))))
(declare-const ?float148 Float32)
(assert (= ?float148 (fp.abs ?float136)))
(declare-const ?float149 Float64)
(assert (= ?float149 (f5 ((_ to_fp 15 113) RTN ?float124) ?float134 ((_ to_fp 5 11) RTZ ?float83) ?float121 ((_ to_fp 15 113) RTP ?float104) ((_ to_fp 8 24) RTN ?float69))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p6 ((_ to_fp 11 53) RNE ?float137) ((_ to_fp 5 11) RNE ?float128) ((_ to_fp 5 11) RNE ?float126) ((_ to_fp 8 24) RTP ?float93) ((_ to_fp 5 11) RTZ ?float114))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p4 ((_ to_fp 15 113) RTN ?float90) ?float117 ((_ to_fp 8 24) RTP ?float139) ?float98 ((_ to_fp 11 53) RNE ?float126))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNegative ?float138)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isSubnormal ?float90)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.lt ?float107 ?float60)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p5 ((_ to_fp 11 53) RNE ?float134) ((_ to_fp 15 113) RTN ?float143) ?float121 ((_ to_fp 8 24) RTZ ?float109))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isPositive ?float100)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.geq ?float119 ?float86)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.geq ?float133 ((_ to_fp 8 24) RTZ ?float131))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.gt ?float128 ((_ to_fp 11 53) RTN ?float72))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p1 ?float111 ((_ to_fp 15 113) RNE ?float104) ((_ to_fp 11 53) RTZ ?float74) ((_ to_fp 5 11) RTP ?float127) ((_ to_fp 15 113) RNE ?float78) ((_ to_fp 5 11) RTN ?float76) ((_ to_fp 11 53) RTN ?float60) ((_ to_fp 11 53) RTP ?float62) ((_ to_fp 5 11) RTP ?float139) ((_ to_fp 11 53) RTN ?float119))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (p6 ((_ to_fp 11 53) RTN ?float130) ((_ to_fp 5 11) RTZ ?float111) ?float72 ((_ to_fp 8 24) RTN ?float101) ((_ to_fp 5 11) RTP ?float91))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isPositive ?float112)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNegative ?float66)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.eq ((_ to_fp 8 24) RTN ?float127) ?float81)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isSubnormal ?float76)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNormal ?float142)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p1 ?float124 ?float131 ((_ to_fp 11 53) RTP ?float61) ((_ to_fp 5 11) RNE ?float123) ((_ to_fp 15 113) RTP ?float141) ((_ to_fp 5 11) RTZ ?float130) ?float103 ((_ to_fp 11 53) RNE ?float60) ((_ to_fp 5 11) RTN ?float144) ((_ to_fp 11 53) RTZ ?float105))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isZero ?float77)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p4 ((_ to_fp 15 113) RTZ ?float97) ((_ to_fp 5 11) RTN ?float77) ((_ to_fp 8 24) RTZ ?float79) ((_ to_fp 8 24) RTP ?float149) ((_ to_fp 11 53) RTP ?float66))))
; FINAL ASSERT
(assert (or ?bool158 (or ?bool169)))
(check-sat)


-- iteration 28 --
(declare-fun f0 (Float64 Float128 Float32 Float64 Float128 Float16) Float32)
(declare-fun f1 (Float32 Float16 Float128 Float16) Float128)
(declare-fun f2 (Float16 Float128 Float128 Float16 Float64 Float64 Float32) Float128)
(declare-fun f3 (Float16 Float16 Float16 Float16 Float128 Float64 Float128 Float32) Float64)
(declare-fun f4 (Float128) Float32)
(declare-fun f5 (Float32 Float32 Float64 Float32 Float128) Float32)
(declare-fun f6 (Float64 Float16 Float128 Float16 Float32 Float16 Float64 Float128) Float64)
(declare-fun f7 (Float16 Float64) Float16)
(declare-fun f8 (Float128 Float128 Float128 Float128 Float128 Float64 Float64) Float32)
(declare-fun f9 (Float16 Float128 Float32 Float32 Float64 Float128 Float32 Float64) Float64)
(declare-fun f10 (Float16 Float128 Float16 Float64 Float16 Float128 Float16 Float32 Float32) Float128)
(declare-fun f11 (Float16 Float16 Float128) Float64)
(declare-fun f12 (Float64 Float16 Float32 Float32 Float32 Float128) Float16)
(declare-fun f13 (Float16 Float128 Float64 Float16 Float16 Float32 Float32 Float32 Float16) Float16)
(declare-fun f14 (Float32 Float16 Float128 Float16 Float128 Float64 Float64 Float16 Float32) Float32)
(declare-fun f15 (Float32 Float128 Float32) Float128)
(declare-fun f16 (Float64 Float32) Float128)
(declare-fun f17 (Float32 Float128) Float64)
(declare-fun f18 (Float16 Float16 Float16 Float64) Float16)
(declare-fun f19 (Float32 Float16) Float128)
(declare-fun f20 (Float16 Float16 Float32 Float128 Float32) Float32)
(declare-fun f21 (Float64) Float32)
(declare-fun f22 (Float64) Float128)
(declare-fun f23 (Float16 Float32) Float128)
(declare-fun f24 (Float16 Float64 Float32) Float16)
(declare-fun f25 (Float128 Float128 Float128 Float16 Float128 Float64 Float128 Float64) Float64)
(declare-fun f26 (Float32 Float16 Float32 Float64 Float128 Float128 Float32 Float64) Float64)
(declare-fun f27 (Float16 Float64 Float64 Float128 Float128 Float64) Float16)
(declare-fun f28 (Float32 Float64) Float64)
(declare-fun f29 (Float128 Float16 Float32 Float64 Float32 Float16) Float16)
(declare-fun f30 (Float16 Float32 Float16 Float128 Float128 Float128) Float64)
(declare-fun f31 (Float16 Float64 Float128 Float64 Float64 Float32 Float128) Float64)
(declare-fun f32 (Float32 Float64 Float32 Float32 Float32 Float16 Float16 Float64 Float16) Float32)
(declare-fun f33 (Float32 Float16 Float16 Float32 Float32 Float128) Float16)
(declare-fun f34 (Float32) Float32)
(declare-fun f35 (Float16 Float64 Float32 Float16) Float128)
(declare-fun f36 (Float16 Float128 Float16 Float64 Float16) Float64)
(declare-fun f37 (Float128 Float128 Float128) Float128)
(declare-fun f38 (Float128 Float128 Float64 Float64 Float16 Float128 Float64 Float16 Float16 Float128) Float32)
(declare-fun f39 (Float64 Float128 Float64 Float32 Float64 Float32 Float128 Float16 Float64) Float64)
(declare-fun f40 (Float64) Float16)
(declare-fun f41 (Float128 Float32 Float128 Float32 Float128) Float32)
(declare-fun f42 (Float16 Float16 Float16) Float16)
(declare-fun f43 (Float64 Float16 Float32 Float64 Float32 Float128 Float16 Float128) Float16)
(declare-fun f44 (Float32 Float16) Float16)
(declare-fun f45 (Float16 Float64 Float16 Float128) Float128)
(declare-fun f46 (Float32 Float32 Float32) Float128)
(declare-fun f47 (Float32 Float32 Float128 Float32 Float16 Float128 Float32 Float128) Float16)
(declare-fun f48 (Float16 Float32 Float128 Float64 Float64 Float64) Float16)
(declare-fun f49 (Float32 Float16 Float32 Float128 Float128 Float32 Float64) Float16)
(declare-fun p0 (Float64 Float128 Float128 Float64 Float64 Float128 Float128) Bool)
(declare-fun p1 (Float128 Float128 Float16 Float128 Float64 Float128) Bool)
(declare-fun p2 (Float32 Float16 Float128) Bool)
(declare-fun p3 (Float128 Float128 Float32 Float128 Float128 Float32 Float16 Float32) Bool)
(declare-fun p4 (Float32 Float16) Bool)
(declare-fun p5 (Float32) Bool)
(declare-fun p6 (Float32 Float128) Bool)
(declare-fun p7 (Float16) Bool)
(declare-fun p8 (Float32 Float16 Float128 Float128 Float128) Bool)
(declare-fun p9 (Float128 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float128)
(declare-const ?float62 Float32)
(declare-const ?float63 Float16)
(declare-const ?float64 Float64)
(declare-const ?float65 Float128)
(declare-const ?float66 Float64)
(declare-const ?float67 Float128)
(declare-const ?float68 Float128)
(declare-const ?float69 Float16)
(declare-const ?float70 Float64)
(declare-const ?float71 Float128)
(declare-const ?float72 Float128)
(declare-const ?float73 Float64)
(declare-const ?float74 Float128)
(declare-const ?float75 Float64)
(declare-const ?float76 Float32)
(declare-const ?float77 Float64)
(declare-const ?float78 Float64)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b0 #b111111100000000 #b0101010101010100100100001111001111010110110001000101011100000001010100110101001101001011011100010101000100001110)))
(declare-const ?float83 Float128)
(assert (= ?float83 (fp #b0 #b011101100100100 #b1000100010010000000001000111101011010111001010010111100000110110010111001000011101101110001110100000111101011100)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b0 #b10101011 #b00001100101101110110010)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b1 #b00000000 #b00000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.add RTZ ?float63 ((_ to_fp 5 11) RTZ ?float78))))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.max ?float72 ((_ to_fp 15 113) RTP ?float62))))
(declare-const ?float102 Float16)
(assert (= ?float102 (f18 ((_ to_fp 5 11) RTZ ?float77) ?float98 ?float89 ?float94)))
(declare-const ?float103 Float128)
(assert (= ?float103 (fp.max ?float72 ?float91)))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.mul RNE ((_ to_fp 5 11) RNE ?float66) ?float63)))
(declare-const ?float105 Float128)
(assert (= ?float105 (fp.roundToIntegral RTZ ?float65)))
(declare-const ?float106 Float64)
(assert (= ?float106 (f30 ?float85 ((_ to_fp 8 24) RNE ?float66) ((_ to_fp 5 11) RTN ?float70) ?float79 ((_ to_fp 15 113) RTZ ?float77) ?float74)))
(declare-const ?float107 Float16)
(assert (= ?float107 (fp.mul RTN ((_ to_fp 5 11) RNE ?float81) ?float85)))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.roundToIntegral RTZ ?float62)))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.div RTZ ((_ to_fp 15 113) RTZ ?float70) ?float71)))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.min ?float102 ?float107)))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.min ((_ to_fp 8 24) RTP ?float104) ?float97)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.add RNE ?float66 ((_ to_fp 11 53) RTZ ?float91))))
(declare-const ?float113 Float128)
(assert (= ?float113 (fp.max ?float74 ?float72)))
(declare-const ?float114 Float128)
(assert (= ?float114 (fp.max ?float96 ((_ to_fp 15 113) RNE ?float75))))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.abs ?float94)))
(declare-const ?float116 Float32)
(assert (= ?float116 (f38 ?float83 ?float95 ((_ to_fp 11 53) RTZ ?float82) ?float77 ((_ to_fp 5 11) RNE ?float75) ((_ to_fp 15 113) RNE ?float94) ?float66 ((_ to_fp 5 11) RNE ?float72) ?float89 ?float86)))
(declare-const ?float117 Float32)
(assert (= ?float117 (fp.mul RNE ((_ to_fp 8 24) RTP ?float106) ?float90)))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.add RTN ?float114 ((_ to_fp 15 113) RTZ ?float63))))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.mul RTN ?float106 ?float75)))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.neg ?float118)))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.add RNE ((_ to_fp 11 53) RTN ?float80) ?float70)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.min ((_ to_fp 5 11) RTZ ?float64) ?float100)))
(declare-const ?float123 Float128)
(assert (= ?float123 (fp.roundToIntegral RTP ?float95)))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.sqrt RNE ?float117)))
(declare-const ?float125 Float16)
(assert (= ?float125 (fp.abs ?float89)))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.sqrt RTZ ?float116)))
(declare-const ?float127 Float64)
(assert (= ?float127 (fp.max ((_ to_fp 11 53) RNE ?float122) ?float70)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.max ?float90 ?float76)))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.sqrt RTN ?float84)))
(declare-const ?float130 Float64)
(assert (= ?float130 (fp.add RTZ ((_ to_fp 11 53) RTN ?float84) ?float78)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.add RTZ ?float112 ((_ to_fp 11 53) RTN ?float84))))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.add RTN ((_ to_fp 15 113) RTZ ?float99) ?float72)))
(declare-const ?float133 Float32)
(assert (= ?float133 (f21 ?float70)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.div RNE ?float60 ((_ to_fp 15 113) RTN ?float102))))
(declare-const ?float135 Float64)
(assert (= ?float135 (fp.add RTN ((_ to_fp 11 53) RNE ?float133) ?float106)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.roundToIntegral RTP ?float125)))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.max ((_ to_fp 5 11) RNE ?float134) ?float102)))
(declare-const ?float138 Float32)
(assert (= ?float138 (fp.max ?float80 ((_ to_fp 8 24) RTP ?float107))))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.min ((_ to_fp 15 113) RNE ?float138) ?float72)))
(declare-const ?float140 Float64)
(assert (= ?float140 (f28 ((_ to_fp 8 24) RNE ?float136) ((_ to_fp 11 53) RTN ?float83))))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.sqrt RTZ ?float121)))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.min ((_ to_fp 11 53) RTP ?float83) ?float135)))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.max ?float141 ((_ to_fp 11 53) RTN ?float103))))
(declare-const ?float144 Float32)
(assert (= ?float144 (f5 ?float81 ((_ to_fp 8 24) RTP ?float143) ((_ to_fp 11 53) RTN ?float108) ((_ to_fp 8 24) RTZ ?float119) ((_ to_fp 15 113) RNE ?float73))))
(declare-const ?float145 Float64)
(assert (= ?float145 (f39 ?float70 ((_ to_fp 15 113) RNE ?float112) ?float143 ((_ to_fp 8 24) RTZ ?float139) ((_ to_fp 11 53) RTN ?float74) ((_ to_fp 8 24) RNE ?float132) ((_ to_fp 15 113) RTN ?float63) ((_ to_fp 5 11) RNE ?float143) ((_ to_fp 11 53) RTP ?float97))))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.neg ?float60)))
(declare-const ?float147 Float128)
(assert (= ?float147 (f15 ((_ to_fp 8 24) RTZ ?float136) ((_ to_fp 15 113) RNE ?float119) ((_ to_fp 8 24) RTP ?float77))))
(declare-const ?float148 Float128)
(assert (= ?float148 (fp.roundToIntegral RTP ?float103)))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.max ((_ to_fp 5 11) RNE ?float116) ?float136)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isInfinite ?float84)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isInfinite ?float60)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNegative ?float102)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.lt ((_ to_fp 11 53) RNE ?float82) ?float142)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.geq ?float61 ((_ to_fp 15 113) RTN ?float131))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p5 ((_ to_fp 8 24) RTP ?float145))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNegative ?float82)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNegative ?float86)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isPositive ?float100)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isSubnormal ?float118)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.leq ?float109 ((_ to_fp 15 113) RNE ?float69))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.leq ?float128 ((_ to_fp 8 24) RTN ?float71))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (p2 ((_ to_fp 8 24) RTP ?float72) ((_ to_fp 5 11) RTN ?float90) ?float61)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (p1 ((_ to_fp 15 113) RTZ ?float84) ((_ to_fp 15 113) RNE ?float100) ((_ to_fp 5 11) RTZ ?float109) ((_ to_fp 15 113) RNE ?float108) ?float135 ?float103)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.leq ?float139 ?float103)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.gt ?float72 ?float148)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNormal ?float126)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isInfinite ?float64)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isSubnormal ?float92)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isInfinite ?float110)))
; FINAL ASSERT
(assert (or ?bool152 (and ?bool159 (and ?bool155 (and (and ?bool152 ?bool163)) ?bool168)) (and ?bool156 ?bool152 (or ?bool164 ?bool169 ?bool153))))
(check-sat)


-- iteration 29 --
(declare-fun f0 (Float32 Float128 Float32 Float64 Float32 Float64 Float128 Float64) Float128)
(declare-fun f1 (Float64 Float128 Float32 Float128 Float16 Float64 Float32 Float64 Float128 Float128) Float128)
(declare-fun f2 (Float16 Float32 Float32 Float16 Float64 Float128 Float32 Float32 Float128 Float32) Float32)
(declare-fun f3 (Float64 Float32 Float128 Float64 Float32 Float32 Float64 Float16 Float128) Float32)
(declare-fun f4 (Float64 Float64 Float16 Float32 Float32) Float128)
(declare-fun f5 (Float32 Float16) Float128)
(declare-fun f6 (Float128 Float128 Float128 Float128 Float32 Float32) Float64)
(declare-fun f7 (Float32 Float64 Float64) Float16)
(declare-fun f8 (Float16 Float64 Float64 Float64 Float32 Float32 Float128 Float16 Float32 Float64) Float64)
(declare-fun f9 (Float128 Float128 Float32 Float64 Float32 Float128 Float16 Float32 Float32 Float64) Float16)
(declare-fun f10 (Float64 Float16 Float128 Float16 Float128) Float128)
(declare-fun f11 (Float128 Float64 Float128 Float64) Float16)
(declare-fun f12 (Float128 Float64) Float16)
(declare-fun f13 (Float16 Float64 Float128 Float32 Float32 Float128 Float16 Float128) Float32)
(declare-fun f14 (Float16 Float32 Float16 Float128 Float16 Float128 Float32 Float128) Float128)
(declare-fun f15 (Float64 Float16) Float16)
(declare-fun f16 (Float16 Float64 Float64 Float128 Float32 Float32 Float16 Float128 Float16 Float16) Float32)
(declare-fun f17 (Float64 Float16 Float16 Float16 Float64) Float32)
(declare-fun f18 (Float64 Float64 Float32 Float64 Float64) Float16)
(declare-fun f19 (Float16 Float64 Float16 Float32 Float16 Float16 Float16 Float32 Float128 Float64) Float128)
(declare-fun f20 (Float32 Float32 Float128 Float16 Float64 Float16 Float16 Float128 Float64) Float128)
(declare-fun f21 (Float64 Float128 Float128 Float16) Float64)
(declare-fun f22 (Float32 Float16 Float32) Float128)
(declare-fun f23 (Float16 Float16 Float16 Float16) Float32)
(declare-fun f24 (Float64 Float64 Float64 Float64 Float128 Float32 Float128 Float32 Float32 Float16) Float16)
(declare-fun f25 (Float32 Float32 Float16 Float32 Float32 Float64) Float32)
(declare-fun f26 (Float128 Float16 Float32 Float64 Float32 Float64 Float64 Float64) Float32)
(declare-fun f27 (Float128) Float32)
(declare-fun f28 (Float64 Float32 Float16 Float32 Float16 Float128 Float64) Float64)
(declare-fun f29 (Float64 Float16 Float32 Float32 Float16 Float64 Float64 Float32 Float32 Float32) Float16)
(declare-fun f30 (Float128 Float16 Float32 Float32 Float16 Float128 Float128) Float16)
(declare-fun f31 (Float16 Float32 Float64) Float16)
(declare-fun f32 (Float64 Float64 Float128 Float32 Float16 Float64 Float16 Float64 Float64) Float32)
(declare-fun f33 (Float64 Float128) Float64)
(declare-fun f34 (Float128 Float128 Float16 Float16 Float64 Float128 Float128 Float32 Float16 Float32) Float64)
(declare-fun f35 (Float128 Float32 Float128 Float32 Float64 Float16) Float16)
(declare-fun f36 (Float128) Float64)
(declare-fun f37 (Float64 Float16 Float128 Float64 Float128 Float32 Float16 Float128 Float128) Float32)
(declare-fun f38 (Float32 Float128 Float128 Float32 Float16 Float16 Float32 Float128) Float32)
(declare-fun f39 (Float128 Float128 Float32) Float64)
(declare-fun f40 (Float32 Float64) Float128)
(declare-fun f41 (Float32 Float32 Float32 Float64 Float128 Float64 Float16 Float16) Float64)
(declare-fun f42 (Float32 Float64 Float64 Float32) Float32)
(declare-fun f43 (Float64) Float32)
(declare-fun f44 (Float32 Float32 Float64 Float16 Float32 Float64) Float64)
(declare-fun f45 (Float16 Float64 Float32 Float16) Float64)
(declare-fun f46 (Float64 Float64 Float32 Float128 Float128 Float16 Float64 Float16 Float128) Float64)
(declare-fun f47 (Float64 Float32 Float128 Float16 Float16 Float64 Float32 Float16 Float128 Float128) Float32)
(declare-fun f48 (Float16 Float16 Float64) Float16)
(declare-fun f49 (Float64 Float16 Float64 Float16 Float16 Float32 Float16) Float128)
(declare-fun p0 (Float32) Bool)
(declare-fun p1 (Float64 Float16 Float16 Float32 Float32 Float128 Float32 Float16 Float32 Float128) Bool)
(declare-fun p2 (Float64 Float32) Bool)
(declare-fun p3 (Float128 Float16 Float128 Float32) Bool)
(declare-fun p4 (Float16 Float64 Float128) Bool)
(declare-fun p5 (Float16 Float16 Float16 Float128 Float16) Bool)
(declare-fun p6 (Float16 Float64 Float32 Float16 Float64 Float128 Float64) Bool)
(declare-fun p7 (Float64 Float32 Float32 Float32 Float32 Float32 Float32) Bool)
(declare-fun p8 (Float128 Float16 Float128 Float32 Float128 Float16 Float32 Float32 Float32 Float64) Bool)
(declare-fun p9 (Float32 Float128 Float128 Float16 Float64 Float128 Float64 Float32 Float128 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float64)
(declare-const ?float62 Float16)
(declare-const ?float63 Float32)
(declare-const ?float64 Float16)
(declare-const ?float65 Float128)
(declare-const ?float66 Float64)
(declare-const ?float67 Float64)
(declare-const ?float68 Float128)
(declare-const ?float69 Float16)
(declare-const ?float70 Float64)
(declare-const ?float71 Float16)
(declare-const ?float72 Float16)
(declare-const ?float73 Float32)
(declare-const ?float74 Float16)
(declare-const ?float75 Float16)
(declare-const ?float76 Float16)
(declare-const ?float77 Float64)
(declare-const ?float78 Float64)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b01111111 #b10010110011000110010001)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b0 #b100001100110011 #b0000000101000010100010100001110010111010110100110010010001100000111101100100000001000011100010011011000111010110)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float92 Float64)
(assert (= ?float92 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b0 #b11011011 #b01110011011011100100001)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b0 #b11101 #b0010011101)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b0 #b10100000101 #b0001100010010110000000111010010110001000101110010011)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (fp.neg ?float86)))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.min ((_ to_fp 8 24) RNE ?float72) ?float84)))
(declare-const ?float102 Float64)
(assert (= ?float102 (fp.max ((_ to_fp 11 53) RTP ?float79) ?float92)))
(declare-const ?float103 Float32)
(assert (= ?float103 (fp.roundToIntegral RTN ?float79)))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.neg ?float95)))
(declare-const ?float105 Float32)
(assert (= ?float105 (f13 ((_ to_fp 5 11) RTZ ?float77) ?float66 ((_ to_fp 15 113) RTN ?float80) ((_ to_fp 8 24) RTN ?float99) ((_ to_fp 8 24) RNE ?float96) ((_ to_fp 15 113) RTP ?float78) ((_ to_fp 5 11) RTP ?float77) ((_ to_fp 15 113) RTZ ?float93))))
(declare-const ?float106 Float32)
(assert (= ?float106 (f13 ((_ to_fp 5 11) RTP ?float101) ((_ to_fp 11 53) RTN ?float84) ((_ to_fp 15 113) RNE ?float70) ((_ to_fp 8 24) RNE ?float99) ?float84 ((_ to_fp 15 113) RTP ?float79) ((_ to_fp 5 11) RNE ?float65) ?float97)))
(declare-const ?float107 Float128)
(assert (= ?float107 (f19 ((_ to_fp 5 11) RTN ?float103) ((_ to_fp 11 53) RNE ?float103) ?float71 ((_ to_fp 8 24) RTP ?float69) ((_ to_fp 5 11) RTP ?float63) ((_ to_fp 5 11) RTP ?float73) ((_ to_fp 5 11) RNE ?float87) ((_ to_fp 8 24) RTN ?float71) ((_ to_fp 15 113) RTP ?float80) ((_ to_fp 11 53) RTN ?float96))))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.min ((_ to_fp 11 53) RTZ ?float100) ?float90)))
(declare-const ?float109 Float128)
(assert (= ?float109 (f19 ?float64 ((_ to_fp 11 53) RTN ?float68) ((_ to_fp 5 11) RTP ?float79) ((_ to_fp 8 24) RTZ ?float99) ((_ to_fp 5 11) RTP ?float67) ((_ to_fp 5 11) RTZ ?float99) ((_ to_fp 5 11) RTZ ?float70) ((_ to_fp 8 24) RTZ ?float92) ?float68 ?float66)))
(declare-const ?float110 Float128)
(assert (= ?float110 (f20 ((_ to_fp 8 24) RNE ?float77) ?float84 ?float100 ((_ to_fp 5 11) RTN ?float106) ?float61 ?float62 ?float62 ?float107 ((_ to_fp 11 53) RTP ?float62))))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.sub RTN ?float75 ((_ to_fp 5 11) RTP ?float102))))
(declare-const ?float112 Float32)
(assert (= ?float112 (f47 ((_ to_fp 11 53) RNE ?float82) ?float79 ((_ to_fp 15 113) RTP ?float62) ((_ to_fp 5 11) RTP ?float92) ((_ to_fp 5 11) RTN ?float86) ((_ to_fp 11 53) RNE ?float65) ((_ to_fp 8 24) RTN ?float107) ((_ to_fp 5 11) RTP ?float110) ((_ to_fp 15 113) RTN ?float98) ((_ to_fp 15 113) RTN ?float71))))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.sqrt RNE ?float73)))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.add RTZ ((_ to_fp 8 24) RTN ?float94) ?float79)))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.roundToIntegral RTZ ?float93)))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.neg ?float114)))
(declare-const ?float117 Float32)
(assert (= ?float117 (fp.neg ?float115)))
(declare-const ?float118 Float32)
(assert (= ?float118 (f32 ?float99 ((_ to_fp 11 53) RTN ?float79) ((_ to_fp 15 113) RTN ?float71) ((_ to_fp 8 24) RTZ ?float107) ?float111 ((_ to_fp 11 53) RNE ?float101) ((_ to_fp 5 11) RTN ?float70) ((_ to_fp 11 53) RTZ ?float82) ((_ to_fp 11 53) RTZ ?float105))))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.roundToIntegral RTZ ?float115)))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.min ?float101 ?float106)))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.sub RTZ ?float119 ((_ to_fp 8 24) RTN ?float104))))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.min ((_ to_fp 5 11) RNE ?float116) ?float75)))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.add RTN ?float94 ((_ to_fp 5 11) RTN ?float118))))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.max ?float114 ((_ to_fp 8 24) RTZ ?float104))))
(declare-const ?float125 Float16)
(assert (= ?float125 (fp.div RNE ((_ to_fp 5 11) RTZ ?float89) ?float81)))
(declare-const ?float126 Float64)
(assert (= ?float126 (fp.roundToIntegral RNE ?float102)))
(declare-const ?float127 Float64)
(assert (= ?float127 (fp.sub RTZ ?float104 ((_ to_fp 11 53) RTZ ?float115))))
(declare-const ?float128 Float32)
(assert (= ?float128 (f26 ?float107 ((_ to_fp 5 11) RNE ?float104) ((_ to_fp 8 24) RTP ?float90) ((_ to_fp 11 53) RTP ?float98) ?float116 ((_ to_fp 11 53) RNE ?float117) ?float95 ((_ to_fp 11 53) RTZ ?float106))))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.sub RNE ?float101 ((_ to_fp 8 24) RTZ ?float125))))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.sqrt RTP ?float82)))
(declare-const ?float131 Float32)
(assert (= ?float131 (fp.roundToIntegral RTN ?float91)))
(declare-const ?float132 Float64)
(assert (= ?float132 (f36 ?float87)))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.roundToIntegral RTP ?float117)))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.sub RTZ ((_ to_fp 5 11) RTN ?float133) ?float122)))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.neg ?float88)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.div RNE ?float125 ((_ to_fp 5 11) RTN ?float89))))
(declare-const ?float137 Float32)
(assert (= ?float137 (f17 ?float70 ((_ to_fp 5 11) RTZ ?float109) ((_ to_fp 5 11) RNE ?float67) ((_ to_fp 5 11) RTN ?float110) ((_ to_fp 11 53) RTN ?float114))))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.add RTP ((_ to_fp 5 11) RTN ?float101) ?float81)))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.mul RTP ((_ to_fp 8 24) RTN ?float62) ?float118)))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.min ?float133 ((_ to_fp 8 24) RTN ?float72))))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.min ?float65 ((_ to_fp 15 113) RNE ?float138))))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.min ((_ to_fp 15 113) RTZ ?float126) ?float86)))
(declare-const ?float143 Float32)
(assert (= ?float143 (fp.max ?float73 ?float84)))
(declare-const ?float144 Float32)
(assert (= ?float144 (f47 ((_ to_fp 11 53) RTN ?float116) ?float133 ((_ to_fp 15 113) RTP ?float140) ?float72 ((_ to_fp 5 11) RNE ?float82) ((_ to_fp 11 53) RTN ?float109) ((_ to_fp 8 24) RTN ?float61) ((_ to_fp 5 11) RTN ?float115) ((_ to_fp 15 113) RTP ?float69) ((_ to_fp 15 113) RTN ?float84))))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.div RTN ((_ to_fp 8 24) RTZ ?float102) ?float79)))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.neg ?float98)))
(declare-const ?float147 Float16)
(assert (= ?float147 (fp.neg ?float94)))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.abs ?float104)))
(declare-const ?float149 Float32)
(assert (= ?float149 (fp.max ((_ to_fp 8 24) RNE ?float126) ?float144)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isPositive ?float99)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isInfinite ?float145)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.leq ((_ to_fp 5 11) RNE ?float106) ?float122)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNaN ?float135)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.geq ?float64 ((_ to_fp 5 11) RTZ ?float92))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isZero ?float136)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNaN ?float129)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNegative ?float70)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isPositive ?float115)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isNormal ?float102)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.geq ?float125 ?float146)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.gt ?float130 ((_ to_fp 8 24) RTN ?float102))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isInfinite ?float112)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.leq ?float118 ((_ to_fp 8 24) RTZ ?float108))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.eq ((_ to_fp 5 11) RNE ?float97) ?float94)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p9 ((_ to_fp 8 24) RTN ?float132) ((_ to_fp 15 113) RNE ?float101) ((_ to_fp 15 113) RTP ?float126) ((_ to_fp 5 11) RTZ ?float86) ((_ to_fp 11 53) RTP ?float129) ((_ to_fp 15 113) RTP ?float103) ((_ to_fp 11 53) RTZ ?float139) ((_ to_fp 8 24) RNE ?float69) ((_ to_fp 15 113) RTP ?float67) ((_ to_fp 11 53) RNE ?float138))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.leq ((_ to_fp 5 11) RTN ?float109) ?float136)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isSubnormal ?float73)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.leq ((_ to_fp 8 24) RNE ?float90) ?float115)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p4 ((_ to_fp 5 11) RTP ?float108) ((_ to_fp 11 53) RTZ ?float107) ((_ to_fp 15 113) RTN ?float148))))
; FINAL ASSERT
(assert (or ?bool150 (or ?bool168 ?bool158 ?bool150)))
(check-sat)


-- iteration 30 --
(declare-fun f0 (Float32) Float64)
(declare-fun f1 (Float128) Float32)
(declare-fun f2 (Float64 Float16 Float128 Float16 Float64 Float16 Float16) Float128)
(declare-fun f3 (Float128) Float16)
(declare-fun f4 (Float128 Float16 Float16 Float128 Float32 Float64 Float32 Float128) Float128)
(declare-fun f5 (Float16 Float32 Float128 Float128 Float64 Float128 Float32 Float32) Float64)
(declare-fun f6 (Float128) Float32)
(declare-fun f7 (Float128 Float128 Float128 Float32 Float32 Float32 Float32 Float64 Float128 Float64) Float32)
(declare-fun f8 (Float32 Float32) Float128)
(declare-fun f9 (Float16 Float128 Float32 Float32) Float128)
(declare-fun f10 (Float16) Float32)
(declare-fun f11 (Float16 Float128 Float16 Float64 Float32 Float64) Float64)
(declare-fun f12 (Float32 Float128) Float16)
(declare-fun f13 (Float128 Float16 Float64 Float16 Float32 Float32 Float128 Float64) Float64)
(declare-fun f14 (Float128 Float32 Float16 Float16 Float128) Float64)
(declare-fun f15 (Float64 Float128) Float128)
(declare-fun f16 (Float32 Float128 Float32 Float128) Float64)
(declare-fun f17 (Float32 Float32 Float64 Float128 Float16 Float16 Float64 Float32) Float16)
(declare-fun f18 (Float128 Float32 Float16 Float128 Float32 Float16 Float32) Float128)
(declare-fun f19 (Float128 Float128 Float128 Float32 Float64) Float16)
(declare-fun f20 (Float32) Float16)
(declare-fun f21 (Float64 Float64 Float16 Float16 Float64) Float16)
(declare-fun f22 (Float64 Float128) Float64)
(declare-fun f23 (Float64 Float128 Float128 Float128 Float16 Float64 Float128 Float16) Float16)
(declare-fun f24 (Float32 Float16 Float16 Float128 Float64 Float64 Float128 Float64 Float32 Float32) Float16)
(declare-fun f25 (Float128 Float16 Float64) Float32)
(declare-fun f26 (Float128 Float16) Float128)
(declare-fun f27 (Float64 Float16 Float128 Float64 Float32 Float16 Float16 Float128 Float64 Float32) Float32)
(declare-fun f28 (Float64 Float64 Float64 Float32) Float32)
(declare-fun f29 (Float64 Float64) Float32)
(declare-fun f30 (Float32 Float32 Float32 Float16 Float32 Float32 Float16 Float32 Float128 Float32) Float128)
(declare-fun f31 (Float64 Float32 Float64 Float16 Float128 Float16 Float64) Float64)
(declare-fun f32 (Float16 Float64) Float128)
(declare-fun f33 (Float64 Float128 Float64 Float16 Float32 Float16 Float16 Float32) Float16)
(declare-fun f34 (Float16) Float64)
(declare-fun f35 (Float64 Float128) Float16)
(declare-fun f36 (Float16 Float64 Float64 Float32 Float64 Float32 Float32) Float16)
(declare-fun f37 (Float32 Float16 Float16 Float64 Float32 Float16 Float64 Float32 Float16) Float128)
(declare-fun f38 (Float128 Float64 Float16 Float16 Float32 Float128 Float64) Float64)
(declare-fun f39 (Float64) Float64)
(declare-fun f40 (Float16 Float128 Float32) Float64)
(declare-fun f41 (Float64 Float64 Float32 Float64 Float64 Float16 Float16 Float128 Float32 Float64) Float128)
(declare-fun f42 (Float64 Float64 Float32 Float128 Float16 Float32 Float128 Float128 Float128 Float16) Float32)
(declare-fun f43 (Float128 Float32 Float64) Float64)
(declare-fun f44 (Float32 Float16 Float64 Float128 Float128) Float128)
(declare-fun f45 (Float16 Float128 Float16 Float128 Float128) Float32)
(declare-fun f46 (Float64 Float16 Float64 Float128) Float64)
(declare-fun f47 (Float32 Float64 Float128 Float128 Float64 Float16) Float16)
(declare-fun f48 (Float128 Float128 Float64 Float16 Float32 Float32 Float16 Float64 Float16 Float16) Float16)
(declare-fun f49 (Float64 Float32 Float32 Float32 Float32 Float16 Float16 Float128 Float16) Float128)
(declare-fun p0 (Float32 Float64 Float32) Bool)
(declare-fun p1 (Float32 Float128) Bool)
(declare-fun p2 (Float64 Float32 Float64 Float32) Bool)
(declare-fun p3 (Float32 Float64 Float128 Float16 Float32 Float64 Float128 Float32 Float128 Float32) Bool)
(declare-fun p4 (Float32) Bool)
(declare-fun p5 (Float16 Float32 Float64 Float64 Float64 Float32 Float128 Float32 Float16) Bool)
(declare-fun p6 (Float16 Float128 Float64 Float128) Bool)
(declare-fun p7 (Float16 Float64 Float16 Float32 Float32 Float32 Float32 Float128 Float64) Bool)
(declare-fun p8 (Float32 Float64 Float32 Float16 Float64 Float32 Float16) Bool)
(declare-fun p9 (Float32 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float32)
(declare-const ?float62 Float64)
(declare-const ?float63 Float16)
(declare-const ?float64 Float64)
(declare-const ?float65 Float64)
(declare-const ?float66 Float16)
(declare-const ?float67 Float128)
(declare-const ?float68 Float64)
(declare-const ?float69 Float16)
(declare-const ?float70 Float32)
(declare-const ?float71 Float32)
(declare-const ?float72 Float32)
(declare-const ?float73 Float64)
(declare-const ?float74 Float128)
(declare-const ?float75 Float32)
(declare-const ?float76 Float32)
(declare-const ?float77 Float32)
(declare-const ?float78 Float16)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b0 #b01100000011 #b1000010111101000011000001001110111100010111110111000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b0 #b00010 #b0011010111)))
(declare-const ?float98 Float64)
(assert (= ?float98 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b0 #b00000 #b0000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.sub RNE ((_ to_fp 5 11) RTN ?float77) ?float78)))
(declare-const ?float101 Float16)
(assert (= ?float101 (f24 ?float77 ((_ to_fp 5 11) RTN ?float86) ((_ to_fp 5 11) RTN ?float89) ((_ to_fp 15 113) RTP ?float99) ((_ to_fp 11 53) RNE ?float99) ((_ to_fp 11 53) RTN ?float75) ((_ to_fp 15 113) RTZ ?float68) ((_ to_fp 11 53) RNE ?float67) ((_ to_fp 8 24) RTZ ?float64) ((_ to_fp 8 24) RTP ?float62))))
(declare-const ?float102 Float128)
(assert (= ?float102 (f41 ?float64 ((_ to_fp 11 53) RTP ?float88) ((_ to_fp 8 24) RTN ?float60) ((_ to_fp 11 53) RNE ?float78) ((_ to_fp 11 53) RTP ?float71) ((_ to_fp 5 11) RNE ?float61) ((_ to_fp 5 11) RNE ?float77) ((_ to_fp 15 113) RTZ ?float66) ((_ to_fp 8 24) RNE ?float68) ((_ to_fp 11 53) RTN ?float61))))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.sqrt RNE ?float99)))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.max ?float88 ((_ to_fp 15 113) RTP ?float76))))
(declare-const ?float105 Float32)
(assert (= ?float105 (f29 ?float60 ((_ to_fp 11 53) RNE ?float94))))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.neg ?float67)))
(declare-const ?float107 Float64)
(assert (= ?float107 (f22 ?float84 ((_ to_fp 15 113) RTP ?float72))))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.sqrt RTP ?float95)))
(declare-const ?float109 Float128)
(assert (= ?float109 (f49 ((_ to_fp 11 53) RTZ ?float67) ((_ to_fp 8 24) RTP ?float81) ((_ to_fp 8 24) RNE ?float108) ((_ to_fp 8 24) RNE ?float106) ((_ to_fp 8 24) RNE ?float93) ?float78 ((_ to_fp 5 11) RNE ?float108) ?float67 ((_ to_fp 5 11) RTP ?float89))))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.add RTZ ?float78 ?float96)))
(declare-const ?float111 Float128)
(assert (= ?float111 (fp.min ((_ to_fp 15 113) RNE ?float101) ?float106)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.mul RTP ?float65 ((_ to_fp 11 53) RTN ?float79))))
(declare-const ?float113 Float128)
(assert (= ?float113 (f26 ((_ to_fp 15 113) RTP ?float61) ((_ to_fp 5 11) RTP ?float67))))
(declare-const ?float114 Float16)
(assert (= ?float114 (f35 ?float82 ((_ to_fp 15 113) RTP ?float107))))
(declare-const ?float115 Float16)
(assert (= ?float115 (fp.neg ?float114)))
(declare-const ?float116 Float128)
(assert (= ?float116 (fp.div RTP ?float111 ((_ to_fp 15 113) RTZ ?float76))))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.neg ?float65)))
(declare-const ?float118 Float32)
(assert (= ?float118 (f1 ((_ to_fp 15 113) RTZ ?float79))))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.roundToIntegral RTN ?float60)))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.roundToIntegral RTZ ?float71)))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.min ?float90 ((_ to_fp 5 11) RTP ?float61))))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.mul RNE ?float96 ((_ to_fp 5 11) RTZ ?float61))))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.mul RTP ((_ to_fp 5 11) RTZ ?float102) ?float122)))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.sub RTZ ((_ to_fp 11 53) RTP ?float92) ?float117)))
(declare-const ?float125 Float32)
(assert (= ?float125 (f6 ((_ to_fp 15 113) RNE ?float64))))
(declare-const ?float126 Float64)
(assert (= ?float126 (fp.mul RTP ((_ to_fp 11 53) RTN ?float80) ?float124)))
(declare-const ?float127 Float64)
(assert (= ?float127 (fp.roundToIntegral RTZ ?float84)))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.sub RNE ?float68 ((_ to_fp 11 53) RNE ?float69))))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.sub RNE ?float97 ?float66)))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.sqrt RTP ?float105)))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.roundToIntegral RNE ?float99)))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.min ?float123 ((_ to_fp 5 11) RTZ ?float113))))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.div RNE ((_ to_fp 5 11) RTN ?float95) ?float90)))
(declare-const ?float134 Float128)
(assert (= ?float134 (f30 ((_ to_fp 8 24) RNE ?float103) ((_ to_fp 8 24) RTZ ?float85) ((_ to_fp 8 24) RTZ ?float68) ((_ to_fp 5 11) RTP ?float60) ((_ to_fp 8 24) RTP ?float126) ((_ to_fp 8 24) RNE ?float62) ((_ to_fp 5 11) RTP ?float85) ((_ to_fp 8 24) RTP ?float66) ((_ to_fp 15 113) RNE ?float70) ?float83)))
(declare-const ?float135 Float128)
(assert (= ?float135 (f26 ((_ to_fp 15 113) RTZ ?float80) ((_ to_fp 5 11) RNE ?float127))))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.add RTP ?float106 ((_ to_fp 15 113) RTN ?float82))))
(declare-const ?float137 Float64)
(assert (= ?float137 (f0 ?float71)))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.neg ?float100)))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.sub RTP ?float127 ((_ to_fp 11 53) RTZ ?float67))))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.sub RTZ ((_ to_fp 8 24) RTZ ?float65) ?float83)))
(declare-const ?float141 Float64)
(assert (= ?float141 (f46 ?float112 ((_ to_fp 5 11) RTP ?float120) ((_ to_fp 11 53) RTN ?float101) ((_ to_fp 15 113) RTP ?float64))))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.neg ?float110)))
(declare-const ?float143 Float32)
(assert (= ?float143 (f25 ((_ to_fp 15 113) RTP ?float114) ((_ to_fp 5 11) RNE ?float106) ?float60)))
(declare-const ?float144 Float128)
(assert (= ?float144 (fp.abs ?float109)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.add RTN ((_ to_fp 11 53) RTN ?float89) ?float107)))
(declare-const ?float146 Float16)
(assert (= ?float146 (f48 ?float86 ((_ to_fp 15 113) RNE ?float117) ((_ to_fp 11 53) RTN ?float72) ?float91 ((_ to_fp 8 24) RTZ ?float66) ((_ to_fp 8 24) RTN ?float117) ((_ to_fp 5 11) RTP ?float72) ?float112 ((_ to_fp 5 11) RTN ?float124) ((_ to_fp 5 11) RTP ?float74))))
(declare-const ?float147 Float64)
(assert (= ?float147 (fp.add RTZ ?float112 ((_ to_fp 11 53) RTP ?float103))))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.sub RTN ((_ to_fp 5 11) RTN ?float120) ?float132)))
(declare-const ?float149 Float32)
(assert (= ?float149 (fp.sqrt RTN ?float105)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isNegative ?float126)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isInfinite ?float120)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.eq ?float93 ?float74)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNaN ?float75)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNaN ?float91)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.geq ?float126 ?float68)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (p8 ((_ to_fp 8 24) RTN ?float98) ((_ to_fp 11 53) RTP ?float79) ((_ to_fp 8 24) RTN ?float146) ?float78 ?float84 ?float118 ?float100)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.geq ?float125 ((_ to_fp 8 24) RTZ ?float79))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p7 ((_ to_fp 5 11) RNE ?float87) ((_ to_fp 11 53) RTN ?float123) ?float131 ?float87 ?float61 ((_ to_fp 8 24) RNE ?float103) ((_ to_fp 8 24) RTZ ?float99) ?float136 ((_ to_fp 11 53) RNE ?float81))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.lt ?float68 ((_ to_fp 11 53) RNE ?float136))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNegative ?float146)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNegative ?float96)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.geq ?float146 ?float103)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.geq ((_ to_fp 11 53) RNE ?float136) ?float137)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (p3 ((_ to_fp 8 24) RTP ?float85) ((_ to_fp 11 53) RTZ ?float108) ((_ to_fp 15 113) RTN ?float79) ((_ to_fp 5 11) RTZ ?float76) ?float149 ((_ to_fp 11 53) RTP ?float149) ((_ to_fp 15 113) RNE ?float73) ((_ to_fp 8 24) RTZ ?float122) ((_ to_fp 15 113) RTP ?float126) ((_ to_fp 8 24) RTN ?float141))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.lt ?float114 ((_ to_fp 5 11) RTN ?float130))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isSubnormal ?float130)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isZero ?float61)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isInfinite ?float67)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p5 ((_ to_fp 5 11) RTZ ?float139) ((_ to_fp 8 24) RTZ ?float85) ((_ to_fp 11 53) RTN ?float118) ((_ to_fp 11 53) RNE ?float129) ?float73 ((_ to_fp 8 24) RNE ?float74) ((_ to_fp 15 113) RNE ?float101) ((_ to_fp 8 24) RTN ?float111) ((_ to_fp 5 11) RTP ?float120))))
; FINAL ASSERT
(assert (or (or (or (and ?bool152 (and ?bool156) ?bool158)) (or (or (and ?bool153 (and ?bool153))) ?bool150))))
(check-sat)


-- iteration 31 --
(declare-fun f0 (Float128 Float128 Float16 Float32 Float64 Float128 Float16 Float32) Float64)
(declare-fun f1 (Float32 Float16 Float64 Float64 Float16 Float128 Float64 Float128 Float64 Float128) Float32)
(declare-fun f2 (Float16 Float16 Float32 Float32 Float64 Float128 Float32 Float64 Float64 Float128) Float64)
(declare-fun f3 (Float32 Float32 Float32 Float64 Float32 Float16) Float128)
(declare-fun f4 (Float32 Float32 Float128 Float32) Float16)
(declare-fun f5 (Float64 Float64 Float32 Float32 Float64 Float32 Float128 Float64) Float16)
(declare-fun f6 (Float16 Float16) Float16)
(declare-fun f7 (Float128 Float128 Float128 Float64) Float16)
(declare-fun f8 (Float64 Float128 Float32 Float64 Float32 Float128 Float32) Float64)
(declare-fun f9 (Float128 Float128 Float32 Float64 Float32 Float16 Float32) Float64)
(declare-fun f10 (Float16 Float32 Float32 Float64 Float128 Float128 Float32 Float16) Float32)
(declare-fun f11 (Float16 Float16 Float128) Float128)
(declare-fun f12 (Float16 Float32 Float64 Float64 Float128 Float128 Float32 Float16) Float64)
(declare-fun f13 (Float16 Float128 Float32 Float128 Float16 Float128 Float64 Float128 Float128) Float16)
(declare-fun f14 (Float32 Float64 Float16 Float128 Float128 Float128 Float32 Float32 Float16 Float32) Float16)
(declare-fun f15 (Float64 Float64 Float64 Float128 Float32) Float64)
(declare-fun f16 (Float32 Float128 Float16 Float32) Float32)
(declare-fun f17 (Float32 Float128 Float16 Float32 Float64 Float32 Float16 Float64 Float16 Float32) Float128)
(declare-fun f18 (Float16 Float128 Float16 Float16 Float128 Float128 Float64 Float32 Float16 Float32) Float64)
(declare-fun f19 (Float64 Float128 Float16) Float16)
(declare-fun f20 (Float64 Float32 Float32) Float32)
(declare-fun f21 (Float16 Float64 Float32 Float32 Float32 Float128) Float16)
(declare-fun f22 (Float128) Float16)
(declare-fun f23 (Float32 Float128 Float128 Float32 Float64 Float128 Float32 Float16 Float32) Float32)
(declare-fun f24 (Float128 Float16 Float128 Float128 Float32 Float64 Float64 Float64 Float32) Float128)
(declare-fun f25 (Float128 Float128 Float64 Float64) Float32)
(declare-fun f26 (Float16 Float128 Float64 Float64 Float16) Float64)
(declare-fun f27 (Float64 Float64 Float128 Float32 Float16 Float32 Float32) Float16)
(declare-fun f28 (Float32 Float16) Float128)
(declare-fun f29 (Float16 Float16 Float32 Float16 Float32) Float64)
(declare-fun f30 (Float32 Float64 Float32 Float64 Float64 Float64 Float64 Float64) Float64)
(declare-fun f31 (Float32 Float128 Float32 Float32 Float64 Float128 Float16 Float64 Float128) Float128)
(declare-fun f32 (Float64) Float128)
(declare-fun f33 (Float16 Float64) Float64)
(declare-fun f34 (Float32 Float16 Float128) Float32)
(declare-fun f35 (Float128 Float64 Float16 Float128 Float128 Float128 Float16 Float64 Float128 Float16) Float16)
(declare-fun f36 (Float16 Float16 Float32 Float16 Float32) Float32)
(declare-fun f37 (Float64 Float64 Float32 Float128 Float64 Float16 Float16 Float128 Float16 Float64) Float64)
(declare-fun f38 (Float16 Float32) Float16)
(declare-fun f39 (Float64 Float32 Float64 Float32 Float128 Float64 Float32 Float128 Float64) Float32)
(declare-fun f40 (Float128 Float128 Float64) Float16)
(declare-fun f41 (Float64 Float32) Float64)
(declare-fun f42 (Float128 Float64 Float128 Float32 Float16 Float32 Float64 Float128) Float16)
(declare-fun f43 (Float32 Float64) Float64)
(declare-fun f44 (Float16 Float32 Float128 Float128 Float128 Float128 Float32 Float64) Float32)
(declare-fun f45 (Float128 Float64 Float64 Float64 Float128 Float16 Float32) Float128)
(declare-fun f46 (Float16 Float32 Float64 Float64 Float128 Float64 Float32) Float128)
(declare-fun f47 (Float16 Float64 Float16 Float16 Float16) Float16)
(declare-fun f48 (Float32 Float32 Float64 Float64 Float32 Float32 Float64 Float32 Float128) Float16)
(declare-fun f49 (Float32 Float128 Float64 Float64 Float128 Float32 Float32) Float16)
(declare-fun p0 (Float16 Float16) Bool)
(declare-fun p1 (Float16 Float128 Float128 Float16 Float16 Float64 Float32 Float32) Bool)
(declare-fun p2 (Float16 Float16 Float128 Float128 Float64 Float128 Float32 Float16) Bool)
(declare-fun p3 (Float64 Float32 Float64 Float64 Float16 Float16 Float64 Float32 Float64) Bool)
(declare-fun p4 (Float16 Float64) Bool)
(declare-fun p5 (Float32 Float128 Float64 Float32 Float16 Float128 Float16 Float128) Bool)
(declare-fun p6 (Float64) Bool)
(declare-fun p7 (Float32 Float64 Float64 Float32 Float32 Float64 Float128 Float32) Bool)
(declare-fun p8 (Float16 Float32 Float64 Float64 Float32) Bool)
(declare-fun p9 (Float16 Float16 Float32 Float64 Float128 Float128 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float128)
(declare-const ?float62 Float128)
(declare-const ?float63 Float128)
(declare-const ?float64 Float16)
(declare-const ?float65 Float16)
(declare-const ?float66 Float32)
(declare-const ?float67 Float64)
(declare-const ?float68 Float16)
(declare-const ?float69 Float64)
(declare-const ?float70 Float128)
(declare-const ?float71 Float32)
(declare-const ?float72 Float64)
(declare-const ?float73 Float32)
(declare-const ?float74 Float16)
(declare-const ?float75 Float32)
(declare-const ?float76 Float128)
(declare-const ?float77 Float64)
(declare-const ?float78 Float16)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b0 #b10111 #b0011000001)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b1 #b10110001101 #b1010010110100100101100001100110100111010010010001110)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float84 Float128)
(assert (= ?float84 (fp #b0 #b111011101110100 #b1011100100100100011100000100110110110100110100101000000101100101011101000111100011101010011010110101000100101111)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b1 #b10101 #b0011111100)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float64)
(assert (= ?float92 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b0 #b10011 #b1000001110)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.max ((_ to_fp 8 24) RTP ?float63) ?float98)))
(declare-const ?float101 Float64)
(assert (= ?float101 (fp.min ((_ to_fp 11 53) RTP ?float74) ?float82)))
(declare-const ?float102 Float128)
(assert (= ?float102 (f45 ?float61 ?float92 ((_ to_fp 11 53) RTN ?float88) ((_ to_fp 11 53) RTN ?float74) ((_ to_fp 15 113) RNE ?float77) ?float68 ?float87)))
(declare-const ?float103 Float32)
(assert (= ?float103 (fp.abs ?float86)))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.max ?float77 ((_ to_fp 11 53) RTP ?float103))))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.roundToIntegral RTP ?float67)))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.abs ?float82)))
(declare-const ?float107 Float128)
(assert (= ?float107 (fp.min ?float61 ?float84)))
(declare-const ?float108 Float16)
(assert (= ?float108 (f22 ((_ to_fp 15 113) RTZ ?float86))))
(declare-const ?float109 Float128)
(assert (= ?float109 (f24 ((_ to_fp 15 113) RTP ?float69) ?float88 ?float107 ((_ to_fp 15 113) RTP ?float80) ?float96 ((_ to_fp 11 53) RTZ ?float65) ?float101 ((_ to_fp 11 53) RNE ?float96) ?float75)))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.neg ?float68)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.max ?float68 ((_ to_fp 5 11) RNE ?float102))))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.sub RTN ?float92 ((_ to_fp 11 53) RTN ?float95))))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.mul RNE ((_ to_fp 5 11) RTP ?float72) ?float110)))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.div RNE ((_ to_fp 5 11) RTZ ?float72) ?float83)))
(declare-const ?float115 Float64)
(assert (= ?float115 (f2 ?float78 ?float111 ((_ to_fp 8 24) RNE ?float85) ?float73 ((_ to_fp 11 53) RNE ?float96) ((_ to_fp 15 113) RTZ ?float74) ((_ to_fp 8 24) RTP ?float101) ?float105 ((_ to_fp 11 53) RTZ ?float75) ?float70)))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.max ((_ to_fp 11 53) RTZ ?float98) ?float91)))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.div RNE ?float89 ((_ to_fp 11 53) RTN ?float100))))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.add RNE ((_ to_fp 8 24) RNE ?float94) ?float95)))
(declare-const ?float119 Float16)
(assert (= ?float119 (f13 ?float114 ((_ to_fp 15 113) RTZ ?float110) ((_ to_fp 8 24) RNE ?float63) ((_ to_fp 15 113) RNE ?float106) ((_ to_fp 5 11) RTN ?float99) ?float109 ((_ to_fp 11 53) RTZ ?float65) ((_ to_fp 15 113) RTZ ?float67) ((_ to_fp 15 113) RTP ?float66))))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.mul RTN ?float104 ?float82)))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.mul RTN ?float96 ((_ to_fp 8 24) RNE ?float65))))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.sub RTN ((_ to_fp 5 11) RNE ?float60) ?float83)))
(declare-const ?float123 Float128)
(assert (= ?float123 (fp.div RTN ?float61 ?float62)))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.div RTZ ?float73 ((_ to_fp 8 24) RTP ?float108))))
(declare-const ?float125 Float32)
(assert (= ?float125 (f36 ((_ to_fp 5 11) RTZ ?float87) ((_ to_fp 5 11) RNE ?float124) ((_ to_fp 8 24) RTZ ?float101) ?float80 ((_ to_fp 8 24) RTP ?float101))))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.add RNE ?float66 ?float118)))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.sub RTZ ?float111 ((_ to_fp 5 11) RNE ?float96))))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.add RTN ((_ to_fp 8 24) RTP ?float108) ?float75)))
(declare-const ?float129 Float32)
(assert (= ?float129 (f25 ((_ to_fp 15 113) RTP ?float115) ?float107 ((_ to_fp 11 53) RTP ?float114) ?float82)))
(declare-const ?float130 Float16)
(assert (= ?float130 (f48 ((_ to_fp 8 24) RTZ ?float122) ((_ to_fp 8 24) RTP ?float111) ?float115 ((_ to_fp 11 53) RTP ?float125) ?float98 ((_ to_fp 8 24) RTN ?float110) ((_ to_fp 11 53) RTN ?float83) ((_ to_fp 8 24) RTP ?float72) ((_ to_fp 15 113) RTN ?float108))))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.neg ?float80)))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.max ?float74 ?float85)))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.max ((_ to_fp 11 53) RTP ?float103) ?float67)))
(declare-const ?float134 Float64)
(assert (= ?float134 (f12 ((_ to_fp 5 11) RTN ?float101) ((_ to_fp 8 24) RNE ?float72) ?float115 ((_ to_fp 11 53) RTP ?float126) ((_ to_fp 15 113) RNE ?float116) ((_ to_fp 15 113) RTZ ?float72) ((_ to_fp 8 24) RNE ?float112) ((_ to_fp 5 11) RTP ?float86))))
(declare-const ?float135 Float64)
(assert (= ?float135 (fp.abs ?float117)))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.min ((_ to_fp 15 113) RTN ?float60) ?float76)))
(declare-const ?float137 Float16)
(assert (= ?float137 (f13 ((_ to_fp 5 11) RTP ?float105) ((_ to_fp 15 113) RNE ?float98) ?float66 ((_ to_fp 15 113) RTN ?float135) ?float88 ((_ to_fp 15 113) RTZ ?float104) ?float91 ((_ to_fp 15 113) RTP ?float75) ((_ to_fp 15 113) RTN ?float72))))
(declare-const ?float138 Float32)
(assert (= ?float138 (f1 ((_ to_fp 8 24) RNE ?float61) ((_ to_fp 5 11) RTN ?float60) ?float60 ((_ to_fp 11 53) RTP ?float78) ((_ to_fp 5 11) RTZ ?float70) ((_ to_fp 15 113) RNE ?float92) ?float69 ((_ to_fp 15 113) RTN ?float66) ((_ to_fp 11 53) RTP ?float107) ((_ to_fp 15 113) RTZ ?float71))))
(declare-const ?float139 Float16)
(assert (= ?float139 (f48 ((_ to_fp 8 24) RTZ ?float117) ((_ to_fp 8 24) RNE ?float133) ((_ to_fp 11 53) RTP ?float68) ((_ to_fp 11 53) RTP ?float124) ((_ to_fp 8 24) RNE ?float132) ((_ to_fp 8 24) RTP ?float82) ((_ to_fp 11 53) RTN ?float83) ((_ to_fp 8 24) RNE ?float60) ?float63)))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.min ?float114 ?float130)))
(declare-const ?float141 Float16)
(assert (= ?float141 (f49 ((_ to_fp 8 24) RTN ?float81) ?float123 ((_ to_fp 11 53) RNE ?float121) ((_ to_fp 11 53) RTP ?float122) ((_ to_fp 15 113) RTN ?float118) ((_ to_fp 8 24) RTP ?float65) ((_ to_fp 8 24) RTZ ?float133))))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.div RTN ?float81 ?float113)))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.sub RTZ ?float99 ?float69)))
(declare-const ?float144 Float128)
(assert (= ?float144 (fp.mul RTN ((_ to_fp 15 113) RTP ?float105) ?float62)))
(declare-const ?float145 Float16)
(assert (= ?float145 (fp.mul RTZ ((_ to_fp 5 11) RTN ?float143) ?float113)))
(declare-const ?float146 Float64)
(assert (= ?float146 (fp.abs ?float143)))
(declare-const ?float147 Float16)
(assert (= ?float147 (fp.div RTP ((_ to_fp 5 11) RNE ?float87) ?float74)))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.min ?float97 ((_ to_fp 5 11) RTN ?float123))))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.sub RTP ?float147 ((_ to_fp 5 11) RTP ?float89))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p9 ?float127 ((_ to_fp 5 11) RNE ?float73) ((_ to_fp 8 24) RTZ ?float89) ?float82 ((_ to_fp 15 113) RTP ?float132) ((_ to_fp 15 113) RTZ ?float104) ((_ to_fp 15 113) RTZ ?float69))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNegative ?float81)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.leq ((_ to_fp 5 11) RTN ?float69) ?float110)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.gt ?float114 ?float114)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isInfinite ?float138)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isPositive ?float72)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (p6 ((_ to_fp 11 53) RTZ ?float136))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.geq ?float70 ((_ to_fp 15 113) RTN ?float89))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.gt ?float78 ?float147)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isPositive ?float63)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p7 ((_ to_fp 8 24) RTN ?float107) ((_ to_fp 11 53) RTN ?float108) ((_ to_fp 11 53) RTN ?float147) ((_ to_fp 8 24) RTZ ?float127) ((_ to_fp 8 24) RNE ?float143) ((_ to_fp 11 53) RTZ ?float83) ((_ to_fp 15 113) RTN ?float124) ((_ to_fp 8 24) RNE ?float132))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.geq ?float131 ((_ to_fp 5 11) RTN ?float96))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.eq ((_ to_fp 15 113) RTP ?float80) ?float94)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isZero ?float110)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (p9 ((_ to_fp 5 11) RTP ?float82) ?float140 ((_ to_fp 8 24) RTP ?float110) ((_ to_fp 11 53) RNE ?float123) ?float144 ((_ to_fp 15 113) RNE ?float96) ?float61)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isNormal ?float148)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isSubnormal ?float142)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.leq ?float111 ?float145)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNegative ?float108)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNegative ?float86)))
; FINAL ASSERT
(assert (and ?bool161 ?bool161 ?bool157))
(check-sat)


-- iteration 32 --
(declare-fun f0 (Float32 Float32) Float32)
(declare-fun f1 (Float16 Float64 Float32 Float128 Float32 Float64) Float16)
(declare-fun f2 (Float32 Float16 Float64 Float64 Float64 Float128) Float64)
(declare-fun f3 (Float64 Float64 Float16 Float16 Float16 Float128 Float16 Float32 Float64) Float64)
(declare-fun f4 (Float16 Float32 Float128 Float128 Float16 Float128 Float64) Float16)
(declare-fun f5 (Float16 Float16 Float64 Float128 Float16 Float16) Float64)
(declare-fun f6 (Float128 Float64 Float32 Float128) Float64)
(declare-fun f7 (Float16 Float128 Float16 Float32 Float32 Float32 Float64 Float32) Float64)
(declare-fun f8 (Float128 Float64 Float16 Float16) Float128)
(declare-fun f9 (Float64 Float32 Float64) Float64)
(declare-fun f10 (Float64 Float128 Float128 Float64 Float64 Float128 Float64 Float64 Float64) Float32)
(declare-fun f11 (Float16 Float16 Float32 Float64 Float32 Float16 Float128 Float32 Float32 Float64) Float16)
(declare-fun f12 (Float32 Float128 Float32 Float128 Float16 Float32 Float32) Float64)
(declare-fun f13 (Float32 Float64 Float32 Float32 Float16 Float128 Float64 Float64 Float32) Float16)
(declare-fun f14 (Float128 Float64 Float32 Float32 Float64 Float128 Float128 Float16) Float128)
(declare-fun f15 (Float128 Float16 Float16) Float64)
(declare-fun f16 (Float64 Float128 Float32 Float64 Float16 Float32 Float128 Float128 Float16 Float128) Float128)
(declare-fun f17 (Float16 Float16 Float128 Float32 Float16 Float64 Float16 Float16 Float128) Float32)
(declare-fun f18 (Float128 Float128 Float128) Float16)
(declare-fun f19 (Float16 Float16 Float64 Float128 Float64 Float128 Float128) Float64)
(declare-fun f20 (Float16 Float128 Float32 Float128 Float16 Float32 Float64) Float16)
(declare-fun f21 (Float32 Float128 Float64 Float32 Float128) Float64)
(declare-fun f22 (Float32 Float128 Float32 Float64 Float16 Float32 Float32) Float16)
(declare-fun f23 (Float16) Float64)
(declare-fun f24 (Float128) Float64)
(declare-fun f25 (Float64 Float64 Float64 Float64) Float16)
(declare-fun f26 (Float16 Float16 Float64) Float32)
(declare-fun f27 (Float64 Float16 Float64 Float32 Float64) Float64)
(declare-fun f28 (Float32 Float128 Float128 Float64) Float64)
(declare-fun f29 (Float64 Float64) Float32)
(declare-fun f30 (Float16 Float128 Float16 Float32 Float16 Float16 Float128 Float32 Float16 Float64) Float128)
(declare-fun f31 (Float128 Float128 Float64 Float128 Float32 Float16 Float32 Float16 Float128) Float32)
(declare-fun f32 (Float64) Float64)
(declare-fun f33 (Float16 Float16 Float128) Float128)
(declare-fun f34 (Float128 Float64 Float16 Float32 Float128 Float64 Float32 Float64 Float64 Float32) Float128)
(declare-fun f35 (Float64 Float32 Float16) Float32)
(declare-fun f36 (Float16 Float128 Float64 Float32) Float64)
(declare-fun f37 (Float32 Float16 Float128 Float64 Float16) Float16)
(declare-fun f38 (Float64 Float128 Float16 Float64 Float16 Float32 Float64 Float16 Float64 Float128) Float64)
(declare-fun f39 (Float32 Float64 Float32 Float64) Float32)
(declare-fun f40 (Float128 Float16) Float64)
(declare-fun f41 (Float128 Float32) Float16)
(declare-fun f42 (Float128 Float64 Float16 Float128 Float64 Float64 Float16 Float64 Float16 Float64) Float16)
(declare-fun f43 (Float64 Float16 Float16 Float64 Float32 Float64 Float16) Float16)
(declare-fun f44 (Float128 Float32 Float32) Float32)
(declare-fun f45 (Float64 Float32 Float32 Float32 Float32 Float16 Float32) Float128)
(declare-fun f46 (Float128) Float64)
(declare-fun f47 (Float32 Float16 Float32 Float64 Float64 Float128 Float32 Float128) Float64)
(declare-fun f48 (Float32 Float64 Float128 Float64) Float32)
(declare-fun f49 (Float64 Float16 Float64 Float32 Float32) Float16)
(declare-fun p0 (Float128 Float128 Float128 Float128 Float64 Float128 Float64) Bool)
(declare-fun p1 (Float16 Float64 Float128 Float16 Float16 Float64) Bool)
(declare-fun p2 (Float32) Bool)
(declare-fun p3 (Float128 Float16 Float16 Float64 Float64) Bool)
(declare-fun p4 (Float128) Bool)
(declare-fun p5 (Float32 Float16 Float32 Float128 Float32 Float16) Bool)
(declare-fun p6 (Float16 Float32 Float32 Float128 Float32 Float128 Float64 Float64 Float16) Bool)
(declare-fun p7 (Float16 Float64) Bool)
(declare-fun p8 (Float32 Float16 Float16) Bool)
(declare-fun p9 (Float32 Float32 Float16 Float64 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float16)
(declare-const ?float62 Float128)
(declare-const ?float63 Float32)
(declare-const ?float64 Float32)
(declare-const ?float65 Float16)
(declare-const ?float66 Float16)
(declare-const ?float67 Float32)
(declare-const ?float68 Float64)
(declare-const ?float69 Float64)
(declare-const ?float70 Float64)
(declare-const ?float71 Float128)
(declare-const ?float72 Float16)
(declare-const ?float73 Float16)
(declare-const ?float74 Float64)
(declare-const ?float75 Float32)
(declare-const ?float76 Float32)
(declare-const ?float77 Float128)
(declare-const ?float78 Float128)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b0 #b00100011101 #b0001011000011010101110001010010000010110011101111100)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b1 #b01100111010 #b1100000101000100000011010101110011010100101010110101)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b1 #b01010 #b1100011110)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b0 #b101000111001001 #b1101010110011010111010100100010111101001000010010101000101000001001101100001010001010001000000001110000101100111)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b1 #b10100101 #b11010101001011000010101)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b0 #b11011 #b0010010010)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b0 #b100000011010100 #b1011100010010000101111100110111100011110000000101110000101010011110000111100011001110101111110110001000010000001)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b1 #b01110010110 #b0011100111011110011001000101011000010010011000010001)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b0 #b00000001 #b00000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.min ?float65 ?float92)))
(declare-const ?float101 Float32)
(assert (= ?float101 (f31 ((_ to_fp 15 113) RTP ?float89) ((_ to_fp 15 113) RTP ?float70) ?float82 ((_ to_fp 15 113) RTP ?float99) ?float90 ((_ to_fp 5 11) RTP ?float67) ((_ to_fp 8 24) RTN ?float95) ((_ to_fp 5 11) RNE ?float76) ((_ to_fp 15 113) RTN ?float87))))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.min ?float90 ((_ to_fp 8 24) RTZ ?float65))))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.add RTN ((_ to_fp 5 11) RNE ?float81) ?float65)))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.sqrt RNE ?float91)))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.add RTZ ((_ to_fp 8 24) RTN ?float88) ?float60)))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.sqrt RTZ ?float67)))
(declare-const ?float107 Float16)
(assert (= ?float107 (fp.mul RNE ((_ to_fp 5 11) RTP ?float98) ?float65)))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.min ?float90 ((_ to_fp 8 24) RTP ?float92))))
(declare-const ?float109 Float16)
(assert (= ?float109 (f1 ((_ to_fp 5 11) RTP ?float60) ((_ to_fp 11 53) RTZ ?float107) ((_ to_fp 8 24) RTN ?float79) ?float86 ((_ to_fp 8 24) RTP ?float74) ((_ to_fp 11 53) RTP ?float106))))
(declare-const ?float110 Float64)
(assert (= ?float110 (f24 ((_ to_fp 15 113) RTZ ?float103))))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.min ((_ to_fp 11 53) RTP ?float93) ?float83)))
(declare-const ?float112 Float128)
(assert (= ?float112 (fp.max ?float98 ((_ to_fp 15 113) RTN ?float107))))
(declare-const ?float113 Float128)
(assert (= ?float113 (fp.sqrt RTZ ?float62)))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.sqrt RTP ?float66)))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.neg ?float86)))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.neg ?float68)))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.div RTP ?float80 ?float86)))
(declare-const ?float118 Float64)
(assert (= ?float118 (f27 ((_ to_fp 11 53) RTP ?float93) ((_ to_fp 5 11) RTP ?float97) ?float116 ((_ to_fp 8 24) RTN ?float77) ((_ to_fp 11 53) RTN ?float101))))
(declare-const ?float119 Float16)
(assert (= ?float119 (f1 ?float66 ?float79 ((_ to_fp 8 24) RTN ?float77) ((_ to_fp 15 113) RTN ?float82) ?float76 ?float110)))
(declare-const ?float120 Float16)
(assert (= ?float120 (fp.roundToIntegral RTN ?float85)))
(declare-const ?float121 Float16)
(assert (= ?float121 (f11 ((_ to_fp 5 11) RTP ?float60) ((_ to_fp 5 11) RTP ?float110) ((_ to_fp 8 24) RTZ ?float113) ((_ to_fp 11 53) RTP ?float99) ((_ to_fp 8 24) RTN ?float91) ?float114 ?float98 ?float60 ((_ to_fp 8 24) RTZ ?float79) ((_ to_fp 11 53) RTN ?float101))))
(declare-const ?float122 Float64)
(assert (= ?float122 (f24 ?float117)))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.max ((_ to_fp 11 53) RTZ ?float117) ?float68)))
(declare-const ?float124 Float16)
(assert (= ?float124 (fp.mul RTP ((_ to_fp 5 11) RTN ?float96) ?float119)))
(declare-const ?float125 Float16)
(assert (= ?float125 (f25 ((_ to_fp 11 53) RTP ?float90) ((_ to_fp 11 53) RTN ?float119) ((_ to_fp 11 53) RNE ?float88) ((_ to_fp 11 53) RTN ?float71))))
(declare-const ?float126 Float16)
(assert (= ?float126 (f13 ((_ to_fp 8 24) RNE ?float91) ((_ to_fp 11 53) RTZ ?float120) ?float75 ((_ to_fp 8 24) RTP ?float119) ((_ to_fp 5 11) RTN ?float64) ?float71 ((_ to_fp 11 53) RTP ?float89) ?float118 ((_ to_fp 8 24) RTN ?float98))))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.sqrt RTZ ?float119)))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.mul RTN ?float112 ((_ to_fp 15 113) RNE ?float75))))
(declare-const ?float129 Float128)
(assert (= ?float129 (fp.min ?float81 ((_ to_fp 15 113) RNE ?float102))))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.div RNE ?float64 ?float105)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.max ((_ to_fp 11 53) RTN ?float109) ?float116)))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.sqrt RTN ?float113)))
(declare-const ?float133 Float128)
(assert (= ?float133 (fp.roundToIntegral RNE ?float95)))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.neg ?float89)))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.sub RTZ ((_ to_fp 8 24) RTP ?float97) ?float102)))
(declare-const ?float136 Float16)
(assert (= ?float136 (f20 ?float66 ((_ to_fp 15 113) RTP ?float61) ?float90 ((_ to_fp 15 113) RTZ ?float75) ((_ to_fp 5 11) RNE ?float70) ((_ to_fp 8 24) RTP ?float131) ((_ to_fp 11 53) RTP ?float61))))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.abs ?float122)))
(declare-const ?float138 Float64)
(assert (= ?float138 (fp.mul RTP ?float123 ((_ to_fp 11 53) RTP ?float84))))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.add RTZ ((_ to_fp 11 53) RTP ?float86) ?float138)))
(declare-const ?float140 Float64)
(assert (= ?float140 (f15 ((_ to_fp 15 113) RTP ?float61) ?float109 ?float127)))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.abs ?float98)))
(declare-const ?float142 Float128)
(assert (= ?float142 (f45 ((_ to_fp 11 53) RTP ?float129) ?float90 ?float108 ?float60 ((_ to_fp 8 24) RTZ ?float121) ((_ to_fp 5 11) RNE ?float123) ((_ to_fp 8 24) RTP ?float136))))
(declare-const ?float143 Float32)
(assert (= ?float143 (fp.sub RTZ ?float106 ((_ to_fp 8 24) RNE ?float77))))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.neg ?float125)))
(declare-const ?float145 Float32)
(assert (= ?float145 (f29 ((_ to_fp 11 53) RTP ?float136) ?float116)))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.sqrt RTN ?float88)))
(declare-const ?float147 Float64)
(assert (= ?float147 (fp.mul RTP ((_ to_fp 11 53) RTP ?float72) ?float82)))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.neg ?float92)))
(declare-const ?float149 Float32)
(assert (= ?float149 (fp.roundToIntegral RTP ?float130)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p8 ((_ to_fp 8 24) RNE ?float88) ((_ to_fp 5 11) RTP ?float86) ((_ to_fp 5 11) RTP ?float140))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.geq ?float118 ?float69)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isZero ?float118)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isInfinite ?float86)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p1 ?float127 ((_ to_fp 11 53) RNE ?float144) ?float98 ((_ to_fp 5 11) RTZ ?float128) ((_ to_fp 5 11) RNE ?float105) ((_ to_fp 11 53) RNE ?float120))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p6 ?float73 ?float87 ((_ to_fp 8 24) RNE ?float61) ((_ to_fp 15 113) RTN ?float143) ((_ to_fp 8 24) RTN ?float109) ?float117 ((_ to_fp 11 53) RTZ ?float102) ?float139 ((_ to_fp 5 11) RTP ?float96))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.eq ((_ to_fp 5 11) RTP ?float113) ?float93)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isPositive ?float138)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p9 ((_ to_fp 8 24) RNE ?float123) ((_ to_fp 8 24) RTN ?float96) ((_ to_fp 5 11) RTP ?float81) ((_ to_fp 11 53) RTP ?float90) ?float101)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isZero ?float144)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isZero ?float128)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.gt ((_ to_fp 11 53) RTP ?float148) ?float122)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.gt ?float132 ?float96)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNormal ?float143)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.geq ((_ to_fp 5 11) RNE ?float143) ?float93)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.leq ((_ to_fp 8 24) RNE ?float128) ?float60)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p7 ((_ to_fp 5 11) RTZ ?float83) ((_ to_fp 11 53) RTN ?float61))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isPositive ?float117)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isZero ?float114)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNormal ?float93)))
; FINAL ASSERT
(assert (and ?bool163 ?bool159))
(check-sat)


-- iteration 33 --
(declare-fun f0 (Float64 Float16 Float64 Float32) Float16)
(declare-fun f1 (Float16) Float16)
(declare-fun f2 (Float32 Float32 Float64 Float128) Float32)
(declare-fun f3 (Float32 Float16 Float64 Float64 Float16) Float64)
(declare-fun f4 (Float32 Float32 Float64 Float64 Float64) Float16)
(declare-fun f5 (Float16 Float64 Float32) Float128)
(declare-fun f6 (Float128 Float128 Float16 Float128 Float32 Float128) Float64)
(declare-fun f7 (Float128 Float32 Float128 Float128) Float128)
(declare-fun f8 (Float32 Float64 Float64 Float128) Float16)
(declare-fun f9 (Float128 Float128 Float16) Float128)
(declare-fun f10 (Float32 Float16 Float64 Float128 Float16 Float16 Float32 Float128 Float64) Float128)
(declare-fun f11 (Float16 Float64 Float32 Float64 Float64 Float128 Float64 Float32 Float128 Float32) Float16)
(declare-fun f12 (Float128 Float32 Float128 Float32 Float128 Float32 Float16 Float32 Float32) Float16)
(declare-fun f13 (Float16) Float64)
(declare-fun f14 (Float16) Float64)
(declare-fun f15 (Float128 Float16 Float32 Float32 Float64 Float16 Float32 Float128) Float64)
(declare-fun f16 (Float128 Float128 Float64 Float16) Float128)
(declare-fun f17 (Float128 Float64 Float32 Float128 Float16 Float16 Float32 Float128 Float16) Float32)
(declare-fun f18 (Float16 Float32 Float128) Float64)
(declare-fun f19 (Float32) Float16)
(declare-fun f20 (Float32 Float128 Float32 Float32 Float32) Float64)
(declare-fun f21 (Float128 Float128 Float32 Float16 Float16 Float16 Float64 Float128 Float128 Float16) Float64)
(declare-fun f22 (Float128 Float32 Float64 Float128 Float64 Float16 Float32 Float128) Float64)
(declare-fun f23 (Float16 Float16 Float128 Float128 Float128) Float16)
(declare-fun f24 (Float64 Float16 Float64 Float16 Float16) Float16)
(declare-fun f25 (Float64 Float16) Float32)
(declare-fun f26 (Float64 Float64 Float128 Float16 Float64 Float128 Float32 Float128 Float32) Float16)
(declare-fun f27 (Float128 Float32 Float64 Float32 Float64) Float16)
(declare-fun f28 (Float32 Float32) Float16)
(declare-fun f29 (Float32 Float32 Float64 Float32 Float64 Float16 Float32 Float64) Float128)
(declare-fun f30 (Float32) Float16)
(declare-fun f31 (Float128 Float16 Float64 Float32 Float32 Float128 Float64 Float64) Float32)
(declare-fun f32 (Float64 Float64) Float128)
(declare-fun f33 (Float64 Float32 Float32 Float64 Float16 Float128 Float128 Float32) Float64)
(declare-fun f34 (Float64 Float128 Float16 Float32 Float32) Float128)
(declare-fun f35 (Float64) Float16)
(declare-fun f36 (Float16 Float64 Float128 Float128 Float128 Float64 Float16 Float16) Float16)
(declare-fun f37 (Float128 Float128 Float128 Float64 Float64 Float64 Float128 Float32 Float32 Float64) Float128)
(declare-fun f38 (Float32 Float128) Float32)
(declare-fun f39 (Float16 Float32 Float128 Float16 Float16 Float32 Float128) Float128)
(declare-fun f40 (Float128 Float16) Float64)
(declare-fun f41 (Float16) Float16)
(declare-fun f42 (Float32 Float16 Float64) Float32)
(declare-fun f43 (Float64 Float64) Float16)
(declare-fun f44 (Float16 Float16 Float32 Float64 Float128 Float64 Float64 Float128 Float128) Float128)
(declare-fun f45 (Float32 Float64 Float32) Float64)
(declare-fun f46 (Float64 Float128 Float128 Float128 Float64 Float16 Float64 Float64 Float128) Float16)
(declare-fun f47 (Float128 Float16) Float128)
(declare-fun f48 (Float16 Float32) Float32)
(declare-fun f49 (Float128 Float32 Float64 Float128 Float128 Float128 Float64 Float128 Float32 Float128) Float64)
(declare-fun p0 (Float128 Float128 Float128 Float32 Float16 Float64 Float128) Bool)
(declare-fun p1 (Float128 Float16 Float16 Float32 Float128) Bool)
(declare-fun p2 (Float32 Float128 Float64 Float64 Float32 Float128) Bool)
(declare-fun p3 (Float128 Float32 Float16 Float128 Float16 Float64) Bool)
(declare-fun p4 (Float16 Float64 Float64 Float32 Float32 Float128 Float128) Bool)
(declare-fun p5 (Float16 Float128 Float64) Bool)
(declare-fun p6 (Float32 Float32 Float32 Float16 Float32 Float16 Float32) Bool)
(declare-fun p7 (Float128 Float128 Float32 Float64 Float128 Float64 Float128 Float64 Float128 Float128) Bool)
(declare-fun p8 (Float32 Float32 Float128 Float16 Float64 Float128 Float16 Float16 Float16 Float128) Bool)
(declare-fun p9 (Float64 Float128 Float16 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float16)
(declare-const ?float62 Float32)
(declare-const ?float63 Float16)
(declare-const ?float64 Float32)
(declare-const ?float65 Float128)
(declare-const ?float66 Float128)
(declare-const ?float67 Float64)
(declare-const ?float68 Float16)
(declare-const ?float69 Float128)
(declare-const ?float70 Float16)
(declare-const ?float71 Float32)
(declare-const ?float72 Float64)
(declare-const ?float73 Float64)
(declare-const ?float74 Float128)
(declare-const ?float75 Float16)
(declare-const ?float76 Float64)
(declare-const ?float77 Float128)
(declare-const ?float78 Float16)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b0 #b101111101011000 #b1110101011110000110101100000011100010111110101101001011000101111000101100111000010010111001101100110001110010011)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b1 #b01101000 #b00001101001100010010110)))
(declare-const ?float92 Float64)
(assert (= ?float92 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (fp.max ?float73 ((_ to_fp 11 53) RTZ ?float65))))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.min ((_ to_fp 8 24) RNE ?float97) ?float80)))
(declare-const ?float102 Float64)
(assert (= ?float102 (fp.neg ?float73)))
(declare-const ?float103 Float128)
(assert (= ?float103 (fp.min ?float82 ?float82)))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.max ((_ to_fp 15 113) RNE ?float60) ?float77)))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.roundToIntegral RTN ?float91)))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.div RNE ?float104 ((_ to_fp 15 113) RTZ ?float78))))
(declare-const ?float107 Float16)
(assert (= ?float107 (f12 ((_ to_fp 15 113) RTP ?float72) ((_ to_fp 8 24) RTN ?float83) ((_ to_fp 15 113) RTN ?float90) ((_ to_fp 8 24) RTN ?float60) ?float86 ((_ to_fp 8 24) RTP ?float70) ((_ to_fp 5 11) RTZ ?float65) ((_ to_fp 8 24) RTZ ?float83) ((_ to_fp 8 24) RTP ?float72))))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.roundToIntegral RTP ?float82)))
(declare-const ?float109 Float16)
(assert (= ?float109 (f43 ((_ to_fp 11 53) RNE ?float103) ?float97)))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.add RTZ ?float76 ?float85)))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.neg ?float76)))
(declare-const ?float112 Float128)
(assert (= ?float112 (fp.mul RTP ?float82 ((_ to_fp 15 113) RTN ?float95))))
(declare-const ?float113 Float128)
(assert (= ?float113 (fp.div RNE ?float69 ((_ to_fp 15 113) RTN ?float93))))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.sqrt RTZ ?float78)))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.min ?float92 ((_ to_fp 11 53) RTN ?float63))))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.mul RTZ ?float101 ((_ to_fp 8 24) RTZ ?float73))))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.div RTN ?float103 ?float112)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.sub RTZ ((_ to_fp 8 24) RTP ?float117) ?float71)))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.abs ?float92)))
(declare-const ?float120 Float16)
(assert (= ?float120 (fp.add RNE ((_ to_fp 5 11) RTN ?float67) ?float75)))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.min ?float67 ?float111)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.sub RTP ((_ to_fp 5 11) RNE ?float111) ?float90)))
(declare-const ?float123 Float16)
(assert (= ?float123 (f4 ?float62 ((_ to_fp 8 24) RTN ?float99) ((_ to_fp 11 53) RTZ ?float65) ((_ to_fp 11 53) RNE ?float122) ((_ to_fp 11 53) RNE ?float60))))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.roundToIntegral RNE ?float64)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.add RTN ((_ to_fp 8 24) RTN ?float90) ?float94)))
(declare-const ?float126 Float16)
(assert (= ?float126 (f43 ?float119 ((_ to_fp 11 53) RTN ?float90))))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.max ?float63 ((_ to_fp 5 11) RTP ?float86))))
(declare-const ?float128 Float16)
(assert (= ?float128 (f24 ?float121 ((_ to_fp 5 11) RTZ ?float89) ((_ to_fp 11 53) RTN ?float120) ((_ to_fp 5 11) RTN ?float95) ((_ to_fp 5 11) RTN ?float112))))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.div RTP ((_ to_fp 8 24) RTP ?float60) ?float124)))
(declare-const ?float130 Float64)
(assert (= ?float130 (f13 ((_ to_fp 5 11) RTZ ?float102))))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.max ?float107 ((_ to_fp 5 11) RTZ ?float112))))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.min ?float114 ?float83)))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.abs ?float118)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.abs ?float113)))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.sub RNE ?float123 ((_ to_fp 5 11) RTZ ?float117))))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.min ?float115 ((_ to_fp 11 53) RTN ?float132))))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.sub RTP ?float107 ?float122)))
(declare-const ?float138 Float16)
(assert (= ?float138 (f1 ((_ to_fp 5 11) RTN ?float124))))
(declare-const ?float139 Float64)
(assert (= ?float139 (f13 ((_ to_fp 5 11) RTP ?float130))))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.mul RTZ ?float134 ((_ to_fp 15 113) RTP ?float116))))
(declare-const ?float141 Float32)
(assert (= ?float141 (f17 ((_ to_fp 15 113) RTZ ?float105) ((_ to_fp 11 53) RTP ?float62) ((_ to_fp 8 24) RTN ?float135) ?float113 ?float128 ((_ to_fp 5 11) RTP ?float82) ((_ to_fp 8 24) RTN ?float61) ?float112 ((_ to_fp 5 11) RTP ?float67))))
(declare-const ?float142 Float32)
(assert (= ?float142 (fp.add RTP ((_ to_fp 8 24) RTZ ?float131) ?float98)))
(declare-const ?float143 Float16)
(assert (= ?float143 (f28 ((_ to_fp 8 24) RTZ ?float73) ((_ to_fp 8 24) RTN ?float106))))
(declare-const ?float144 Float128)
(assert (= ?float144 (f9 ((_ to_fp 15 113) RNE ?float101) ((_ to_fp 15 113) RTP ?float60) ?float114)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.mul RTN ((_ to_fp 8 24) RTN ?float121) ?float91)))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.neg ?float132)))
(declare-const ?float147 Float64)
(assert (= ?float147 (fp.min ?float110 ?float100)))
(declare-const ?float148 Float16)
(assert (= ?float148 (f4 ((_ to_fp 8 24) RTZ ?float121) ?float87 ?float119 ((_ to_fp 11 53) RTZ ?float69) ?float115)))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.mul RTN ?float63 ((_ to_fp 5 11) RTZ ?float89))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isZero ?float142)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isInfinite ?float118)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (p5 ((_ to_fp 5 11) RTN ?float100) ((_ to_fp 15 113) RTN ?float146) ((_ to_fp 11 53) RTZ ?float83))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.gt ((_ to_fp 5 11) RTZ ?float97) ?float122)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isZero ?float135)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.leq ((_ to_fp 15 113) RNE ?float72) ?float103)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isZero ?float137)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isSubnormal ?float100)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p9 ((_ to_fp 11 53) RNE ?float101) ((_ to_fp 15 113) RTZ ?float115) ?float120 ((_ to_fp 11 53) RTZ ?float122))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isInfinite ?float80)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isPositive ?float113)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.lt ((_ to_fp 5 11) RTP ?float116) ?float61)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.geq ((_ to_fp 5 11) RTZ ?float102) ?float135)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.geq ?float83 ((_ to_fp 5 11) RTN ?float98))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.geq ((_ to_fp 15 113) RTP ?float142) ?float69)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isNegative ?float142)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isInfinite ?float120)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p5 ((_ to_fp 5 11) RTP ?float129) ?float82 ((_ to_fp 11 53) RTP ?float118))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isPositive ?float116)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p9 ?float73 ?float144 ?float83 ((_ to_fp 11 53) RTZ ?float66))))
; FINAL ASSERT
(assert (or (or ?bool165 (or (and (and (and (or ?bool154) ?bool155) (or (and ?bool151 ?bool161)) ?bool160)) (and (or ?bool163)) ?bool169) (and (or (or ?bool164) (and ?bool161 (and ?bool169) (or ?bool164))) (and (or ?bool169)) ?bool167))))
(check-sat)


-- iteration 34 --
(declare-fun f0 (Float16 Float64 Float128 Float32 Float16 Float16 Float64 Float64) Float128)
(declare-fun f1 (Float64 Float32 Float32 Float64 Float64) Float128)
(declare-fun f2 (Float128 Float16 Float64 Float32 Float128 Float128 Float64) Float64)
(declare-fun f3 (Float16 Float16 Float32 Float16 Float16 Float16 Float32 Float32) Float32)
(declare-fun f4 (Float64) Float128)
(declare-fun f5 (Float32 Float64 Float64 Float32) Float128)
(declare-fun f6 (Float128 Float16 Float128 Float32 Float16 Float32 Float64 Float128 Float32) Float128)
(declare-fun f7 (Float16 Float32) Float16)
(declare-fun f8 (Float16 Float16) Float32)
(declare-fun f9 (Float32 Float32 Float128 Float128) Float32)
(declare-fun f10 (Float128 Float32 Float16 Float64 Float16 Float32 Float16 Float64 Float128) Float128)
(declare-fun f11 (Float64 Float32 Float16 Float32 Float16 Float32 Float16 Float64 Float64 Float16) Float16)
(declare-fun f12 (Float128) Float64)
(declare-fun f13 (Float16 Float64 Float16) Float128)
(declare-fun f14 (Float16) Float128)
(declare-fun f15 (Float128 Float64 Float32 Float32 Float64 Float64 Float128 Float16 Float32 Float64) Float16)
(declare-fun f16 (Float128 Float32 Float32 Float64) Float16)
(declare-fun f17 (Float128 Float128 Float128 Float128 Float16 Float32 Float32 Float64) Float128)
(declare-fun f18 (Float32 Float64 Float16 Float64 Float64 Float16 Float32) Float32)
(declare-fun f19 (Float64 Float128 Float16 Float32 Float16 Float32) Float16)
(declare-fun f20 (Float32 Float32 Float16 Float64 Float32 Float32 Float128 Float32 Float128) Float32)
(declare-fun f21 (Float16 Float16 Float32 Float16 Float16 Float32 Float128 Float16 Float32) Float64)
(declare-fun f22 (Float32 Float32 Float64 Float128 Float128 Float16 Float64 Float128 Float64) Float64)
(declare-fun f23 (Float128 Float64) Float16)
(declare-fun f24 (Float128 Float128 Float128 Float128) Float16)
(declare-fun f25 (Float128 Float16 Float32 Float32) Float64)
(declare-fun f26 (Float64 Float64 Float16 Float32 Float64 Float128 Float16 Float32 Float16 Float32) Float128)
(declare-fun f27 (Float16 Float16 Float128 Float32 Float32 Float32 Float32 Float128) Float16)
(declare-fun f28 (Float64 Float128 Float16 Float32 Float64 Float128) Float16)
(declare-fun f29 (Float16 Float16 Float16 Float16 Float128 Float128 Float16 Float32 Float128 Float16) Float16)
(declare-fun f30 (Float64 Float16 Float64 Float64 Float64) Float128)
(declare-fun f31 (Float64 Float128 Float32) Float64)
(declare-fun f32 (Float128 Float16 Float16 Float128) Float128)
(declare-fun f33 (Float32 Float16 Float16 Float128) Float16)
(declare-fun f34 (Float128 Float32 Float32 Float64 Float128) Float64)
(declare-fun f35 (Float16 Float32 Float64 Float64 Float64 Float128 Float128 Float128 Float16) Float128)
(declare-fun f36 (Float16 Float128 Float64 Float16 Float16 Float16 Float16 Float64 Float64 Float128) Float64)
(declare-fun f37 (Float32 Float16 Float128 Float32 Float16) Float16)
(declare-fun f38 (Float16 Float128 Float64) Float32)
(declare-fun f39 (Float64 Float128 Float16) Float64)
(declare-fun f40 (Float128 Float64 Float16) Float16)
(declare-fun f41 (Float64 Float128 Float32 Float16 Float32 Float32 Float128 Float128 Float128) Float32)
(declare-fun f42 (Float16 Float64 Float32 Float128 Float32 Float64 Float128 Float64) Float16)
(declare-fun f43 (Float32 Float128 Float32 Float64 Float16 Float128 Float16 Float64 Float32) Float32)
(declare-fun f44 (Float64 Float128 Float16 Float64 Float64 Float32 Float64 Float16 Float128 Float64) Float128)
(declare-fun f45 (Float16 Float32 Float16 Float32 Float32 Float32 Float16 Float64 Float32 Float64) Float32)
(declare-fun f46 (Float128 Float32 Float16 Float16 Float16 Float128 Float32 Float64 Float32) Float128)
(declare-fun f47 (Float16 Float64 Float64 Float32 Float128) Float128)
(declare-fun f48 (Float64) Float16)
(declare-fun f49 (Float32 Float32) Float64)
(declare-fun p0 (Float64 Float128 Float64 Float128) Bool)
(declare-fun p1 (Float128 Float64 Float32 Float16 Float128 Float128 Float128) Bool)
(declare-fun p2 (Float32 Float128) Bool)
(declare-fun p3 (Float16 Float16) Bool)
(declare-fun p4 (Float32 Float64 Float128 Float128 Float16) Bool)
(declare-fun p5 (Float64 Float128 Float32 Float16 Float32 Float64 Float16 Float64 Float16) Bool)
(declare-fun p6 (Float64 Float128 Float64 Float128 Float128 Float64) Bool)
(declare-fun p7 (Float32 Float64 Float64 Float16 Float64 Float32 Float16 Float128 Float32 Float128) Bool)
(declare-fun p8 (Float32 Float32 Float16 Float16 Float64 Float16 Float64 Float128) Bool)
(declare-fun p9 (Float32 Float16 Float64 Float64 Float16 Float128 Float128 Float128 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float32)
(declare-const ?float62 Float64)
(declare-const ?float63 Float16)
(declare-const ?float64 Float64)
(declare-const ?float65 Float64)
(declare-const ?float66 Float32)
(declare-const ?float67 Float64)
(declare-const ?float68 Float16)
(declare-const ?float69 Float16)
(declare-const ?float70 Float16)
(declare-const ?float71 Float16)
(declare-const ?float72 Float64)
(declare-const ?float73 Float16)
(declare-const ?float74 Float64)
(declare-const ?float75 Float16)
(declare-const ?float76 Float64)
(declare-const ?float77 Float16)
(declare-const ?float78 Float128)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b0 #b01101110001 #b0110111110000010110101101111111000111000000111101110)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b1 #b100000000111101 #b1110111101110110010110110100011001010000111001101011011011100100000111010111101001110010010010010101110000100000)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b1 #b00000001 #b00000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.sub RTZ ?float77 ?float77)))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.neg ?float93)))
(declare-const ?float102 Float64)
(assert (= ?float102 (fp.add RTN ?float82 ?float91)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.min ?float71 ((_ to_fp 5 11) RNE ?float66))))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.max ?float80 ((_ to_fp 5 11) RTZ ?float99))))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.max ?float75 ((_ to_fp 5 11) RTZ ?float98))))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.max ?float87 ?float95)))
(declare-const ?float107 Float64)
(assert (= ?float107 (fp.mul RTP ?float76 ((_ to_fp 11 53) RTZ ?float61))))
(declare-const ?float108 Float32)
(assert (= ?float108 (f43 ((_ to_fp 8 24) RNE ?float62) ((_ to_fp 15 113) RTN ?float73) ?float101 ((_ to_fp 11 53) RTN ?float103) ((_ to_fp 5 11) RNE ?float62) ((_ to_fp 15 113) RNE ?float67) ((_ to_fp 5 11) RTZ ?float95) ((_ to_fp 11 53) RTP ?float81) ((_ to_fp 8 24) RTP ?float63))))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.add RTN ?float100 ((_ to_fp 5 11) RNE ?float89))))
(declare-const ?float110 Float16)
(assert (= ?float110 (f29 ((_ to_fp 5 11) RTZ ?float67) ((_ to_fp 5 11) RTP ?float64) ((_ to_fp 5 11) RTP ?float66) ?float109 ((_ to_fp 15 113) RNE ?float71) ((_ to_fp 15 113) RTN ?float109) ((_ to_fp 5 11) RNE ?float106) ?float66 ((_ to_fp 15 113) RTZ ?float105) ((_ to_fp 5 11) RTP ?float96))))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.roundToIntegral RNE ?float69)))
(declare-const ?float112 Float128)
(assert (= ?float112 (f26 ?float64 ?float94 ?float68 ((_ to_fp 8 24) RTN ?float70) ((_ to_fp 11 53) RTZ ?float103) ((_ to_fp 15 113) RTN ?float88) ?float110 ((_ to_fp 8 24) RTZ ?float75) ?float71 ((_ to_fp 8 24) RTZ ?float110))))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.abs ?float83)))
(declare-const ?float114 Float128)
(assert (= ?float114 (f5 ((_ to_fp 8 24) RNE ?float87) ((_ to_fp 11 53) RNE ?float112) ((_ to_fp 11 53) RNE ?float63) ((_ to_fp 8 24) RNE ?float104))))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.roundToIntegral RTZ ?float101)))
(declare-const ?float116 Float16)
(assert (= ?float116 (f15 ((_ to_fp 15 113) RTN ?float91) ((_ to_fp 11 53) RTZ ?float84) ((_ to_fp 8 24) RTN ?float63) ((_ to_fp 8 24) RTN ?float110) ?float67 ((_ to_fp 11 53) RTN ?float73) ((_ to_fp 15 113) RNE ?float61) ((_ to_fp 5 11) RTZ ?float83) ?float92 ((_ to_fp 11 53) RTN ?float110))))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.min ?float75 ((_ to_fp 5 11) RNE ?float83))))
(declare-const ?float118 Float64)
(assert (= ?float118 (fp.sqrt RTP ?float65)))
(declare-const ?float119 Float128)
(assert (= ?float119 (fp.abs ?float96)))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.mul RTZ ?float119 ?float119)))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.sqrt RTN ?float76)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.sub RTP ?float69 ?float104)))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.add RNE ((_ to_fp 5 11) RTN ?float81) ?float68)))
(declare-const ?float124 Float16)
(assert (= ?float124 (fp.sqrt RNE ?float77)))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.sqrt RTN ?float91)))
(declare-const ?float126 Float32)
(assert (= ?float126 (f38 ?float68 ((_ to_fp 15 113) RTZ ?float122) ((_ to_fp 11 53) RTP ?float98))))
(declare-const ?float127 Float128)
(assert (= ?float127 (fp.neg ?float79)))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.sub RTN ?float107 ?float82)))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.sqrt RTZ ?float80)))
(declare-const ?float130 Float64)
(assert (= ?float130 (fp.add RNE ?float106 ?float72)))
(declare-const ?float131 Float32)
(assert (= ?float131 (fp.roundToIntegral RNE ?float108)))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.roundToIntegral RTZ ?float64)))
(declare-const ?float133 Float64)
(assert (= ?float133 (f2 ((_ to_fp 15 113) RTN ?float76) ?float129 ((_ to_fp 11 53) RTN ?float114) ((_ to_fp 8 24) RTZ ?float121) ?float98 ((_ to_fp 15 113) RTZ ?float70) ((_ to_fp 11 53) RTZ ?float60))))
(declare-const ?float134 Float64)
(assert (= ?float134 (fp.abs ?float74)))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.min ?float96 ((_ to_fp 15 113) RTN ?float109))))
(declare-const ?float136 Float32)
(assert (= ?float136 (f8 ((_ to_fp 5 11) RNE ?float108) ?float129)))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.sqrt RTN ?float96)))
(declare-const ?float138 Float128)
(assert (= ?float138 (fp.min ?float120 ?float127)))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.neg ?float68)))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.neg ?float99)))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.min ?float124 ?float117)))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.div RNE ?float122 ((_ to_fp 5 11) RTN ?float87))))
(declare-const ?float143 Float128)
(assert (= ?float143 (fp.div RTN ((_ to_fp 15 113) RTP ?float116) ?float127)))
(declare-const ?float144 Float128)
(assert (= ?float144 (fp.neg ?float127)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.neg ?float88)))
(declare-const ?float146 Float64)
(assert (= ?float146 (fp.min ((_ to_fp 11 53) RTZ ?float100) ?float121)))
(declare-const ?float147 Float16)
(assert (= ?float147 (fp.sqrt RTZ ?float80)))
(declare-const ?float148 Float16)
(assert (= ?float148 (f7 ((_ to_fp 5 11) RTZ ?float88) ((_ to_fp 8 24) RTZ ?float96))))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.sub RNE ?float68 ?float129)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.lt ((_ to_fp 11 53) RTN ?float135) ?float64)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNaN ?float108)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.geq ?float87 ((_ to_fp 11 53) RTP ?float139))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (p5 ?float97 ((_ to_fp 15 113) RNE ?float149) ?float84 ?float103 ((_ to_fp 8 24) RTZ ?float79) ((_ to_fp 11 53) RTZ ?float109) ((_ to_fp 5 11) RTP ?float106) ((_ to_fp 11 53) RNE ?float122) ?float129)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNaN ?float103)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.leq ((_ to_fp 11 53) RTP ?float78) ?float146)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNormal ?float144)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isInfinite ?float69)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isPositive ?float104)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isSubnormal ?float99)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isPositive ?float142)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.lt ?float124 ?float73)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isInfinite ?float74)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.geq ((_ to_fp 11 53) RTN ?float70) ?float94)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.eq ?float90 ?float70)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.eq ((_ to_fp 11 53) RTZ ?float110) ?float145)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p3 ?float103 ((_ to_fp 5 11) RTP ?float132))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.geq ?float138 ((_ to_fp 15 113) RTP ?float113))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isPositive ?float103)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.gt ?float96 ?float79)))
; FINAL ASSERT
(assert (or (and (and (and (or (and (and ?bool165 ?bool154 ?bool154))) (and ?bool167 ?bool157)) ?bool157) (or ?bool160 ?bool153) (and (or ?bool162))) ?bool163 (and (and (and ?bool154 (and (or (or ?bool163 ?bool153) ?bool154))) ?bool162) ?bool155)))
(check-sat)


-- iteration 35 --
(declare-fun f0 (Float64 Float32 Float32 Float32 Float64 Float32 Float16 Float128) Float16)
(declare-fun f1 (Float16 Float16 Float16 Float64 Float16 Float32 Float16 Float16 Float32) Float64)
(declare-fun f2 (Float32 Float128 Float16) Float32)
(declare-fun f3 (Float16 Float64 Float64 Float64) Float64)
(declare-fun f4 (Float16 Float16 Float128 Float64) Float32)
(declare-fun f5 (Float16 Float32 Float32 Float64 Float16 Float64) Float16)
(declare-fun f6 (Float64 Float128) Float64)
(declare-fun f7 (Float16 Float64) Float64)
(declare-fun f8 (Float32 Float128 Float32 Float32 Float16 Float32 Float128 Float64 Float32 Float16) Float128)
(declare-fun f9 (Float128 Float16 Float32 Float32 Float128 Float128) Float32)
(declare-fun f10 (Float16 Float16 Float128 Float128 Float64 Float16 Float32 Float128) Float128)
(declare-fun f11 (Float64 Float32 Float64 Float128 Float32 Float16) Float16)
(declare-fun f12 (Float32 Float64 Float64 Float128 Float32 Float128 Float32 Float128 Float128 Float64) Float128)
(declare-fun f13 (Float16 Float64 Float32 Float32) Float32)
(declare-fun f14 (Float32 Float16 Float128 Float64 Float16 Float32 Float128 Float16 Float64) Float64)
(declare-fun f15 (Float32) Float32)
(declare-fun f16 (Float128 Float16 Float128 Float128) Float16)
(declare-fun f17 (Float64 Float128 Float64 Float64) Float16)
(declare-fun f18 (Float64 Float16 Float16 Float16 Float128 Float16 Float128 Float64 Float128 Float32) Float64)
(declare-fun f19 (Float32 Float128 Float64 Float64 Float128 Float16 Float128 Float128) Float32)
(declare-fun f20 (Float16 Float128 Float64) Float128)
(declare-fun f21 (Float32 Float64 Float16) Float64)
(declare-fun f22 (Float128 Float16) Float128)
(declare-fun f23 (Float32 Float64 Float32 Float64 Float128 Float128 Float16 Float64 Float32 Float32) Float16)
(declare-fun f24 (Float32 Float32 Float128 Float32 Float64 Float64 Float32 Float16) Float16)
(declare-fun f25 (Float128 Float32 Float64 Float32 Float128 Float16) Float128)
(declare-fun f26 (Float32 Float16 Float128 Float128 Float32) Float16)
(declare-fun f27 (Float64) Float32)
(declare-fun f28 (Float16 Float32 Float32 Float128 Float16 Float64 Float32 Float128 Float64 Float128) Float64)
(declare-fun f29 (Float128 Float64 Float16 Float128 Float64 Float64 Float128 Float32 Float128) Float16)
(declare-fun f30 (Float16 Float32 Float64 Float16 Float128 Float32) Float64)
(declare-fun f31 (Float32) Float32)
(declare-fun f32 (Float32 Float64 Float64 Float128 Float128 Float64 Float64) Float128)
(declare-fun f33 (Float32 Float128 Float32 Float64) Float64)
(declare-fun f34 (Float64 Float128 Float16 Float16 Float128 Float128 Float64 Float16) Float64)
(declare-fun f35 (Float16 Float128 Float16 Float16 Float16 Float128 Float64 Float32 Float64 Float128) Float64)
(declare-fun f36 (Float32 Float64 Float128 Float16) Float32)
(declare-fun f37 (Float128 Float16 Float64 Float16 Float32 Float128) Float16)
(declare-fun f38 (Float32 Float32 Float128 Float16 Float128 Float64 Float32 Float32) Float128)
(declare-fun f39 (Float128 Float16 Float64 Float64 Float32 Float32 Float64 Float64) Float128)
(declare-fun f40 (Float64 Float128 Float64 Float128 Float32 Float64 Float32 Float128) Float64)
(declare-fun f41 (Float32 Float16 Float16 Float16 Float64 Float128 Float16 Float128) Float128)
(declare-fun f42 (Float128 Float16 Float64 Float16 Float32 Float32 Float16 Float32 Float16 Float64) Float64)
(declare-fun f43 (Float128 Float16 Float16 Float128 Float64 Float128) Float128)
(declare-fun f44 (Float64 Float32 Float16 Float128 Float64 Float16 Float128 Float16 Float32) Float128)
(declare-fun f45 (Float32 Float32 Float32 Float64 Float128 Float64 Float32 Float64 Float64 Float64) Float16)
(declare-fun f46 (Float32 Float32) Float128)
(declare-fun f47 (Float32 Float32 Float128) Float16)
(declare-fun f48 (Float32 Float16 Float128 Float16 Float16 Float64 Float32 Float128 Float32) Float16)
(declare-fun f49 (Float16 Float128 Float32 Float64) Float32)
(declare-fun p0 (Float32 Float128 Float32 Float128 Float32 Float64 Float128) Bool)
(declare-fun p1 (Float16 Float64 Float128 Float32 Float64 Float16 Float128 Float16 Float16 Float128) Bool)
(declare-fun p2 (Float32 Float32 Float32 Float128 Float64 Float16 Float32 Float32) Bool)
(declare-fun p3 (Float64 Float32 Float32) Bool)
(declare-fun p4 (Float64 Float128 Float16 Float16 Float128 Float32 Float32 Float16 Float128) Bool)
(declare-fun p5 (Float64 Float16 Float16 Float64 Float64 Float64 Float128 Float64 Float16 Float128) Bool)
(declare-fun p6 (Float32 Float128 Float128 Float128 Float16) Bool)
(declare-fun p7 (Float64) Bool)
(declare-fun p8 (Float16 Float128 Float16 Float16 Float128 Float16) Bool)
(declare-fun p9 (Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float16)
(declare-const ?float62 Float32)
(declare-const ?float63 Float16)
(declare-const ?float64 Float64)
(declare-const ?float65 Float64)
(declare-const ?float66 Float32)
(declare-const ?float67 Float64)
(declare-const ?float68 Float64)
(declare-const ?float69 Float64)
(declare-const ?float70 Float32)
(declare-const ?float71 Float16)
(declare-const ?float72 Float64)
(declare-const ?float73 Float32)
(declare-const ?float74 Float64)
(declare-const ?float75 Float128)
(declare-const ?float76 Float64)
(declare-const ?float77 Float16)
(declare-const ?float78 Float64)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b1 #b11100 #b1100001101)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b0 #b01000 #b0110001000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b0 #b01110101110 #b0011110100101111110011101100000010000110101000111010)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b1 #b110101111010011 #b0000010111101100010110111000110110100001011000011011110110001011110110011011011110111010111000110100100010001111)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b1 #b00000001 #b00000000000000000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (fp.max ?float91 ((_ to_fp 15 113) RTN ?float81))))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.max ?float85 ?float93)))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.neg ?float88)))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.neg ?float76)))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.max ((_ to_fp 15 113) RTZ ?float77) ?float91)))
(declare-const ?float105 Float64)
(assert (= ?float105 (f6 ((_ to_fp 11 53) RTZ ?float88) ((_ to_fp 15 113) RTP ?float96))))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.div RNE ?float75 ((_ to_fp 15 113) RTN ?float102))))
(declare-const ?float107 Float128)
(assert (= ?float107 (fp.sqrt RTZ ?float100)))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.abs ?float68)))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.abs ?float81)))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.max ?float69 ((_ to_fp 11 53) RTN ?float94))))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.div RTZ ?float66 ?float66)))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.max ?float66 ((_ to_fp 8 24) RTN ?float63))))
(declare-const ?float113 Float128)
(assert (= ?float113 (fp.sqrt RTZ ?float98)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.roundToIntegral RTN ?float110)))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.sub RTN ?float83 ?float83)))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.neg ?float62)))
(declare-const ?float117 Float32)
(assert (= ?float117 (fp.abs ?float60)))
(declare-const ?float118 Float64)
(assert (= ?float118 (f40 ((_ to_fp 11 53) RNE ?float63) ((_ to_fp 15 113) RTN ?float67) ((_ to_fp 11 53) RTN ?float91) ((_ to_fp 15 113) RTP ?float71) ((_ to_fp 8 24) RNE ?float89) ?float105 ((_ to_fp 8 24) RTZ ?float100) ((_ to_fp 15 113) RTN ?float66))))
(declare-const ?float119 Float128)
(assert (= ?float119 (f44 ((_ to_fp 11 53) RTN ?float92) ((_ to_fp 8 24) RTZ ?float109) ?float82 ((_ to_fp 15 113) RNE ?float103) ((_ to_fp 11 53) RTP ?float111) ?float77 ((_ to_fp 15 113) RNE ?float111) ((_ to_fp 5 11) RTZ ?float85) ((_ to_fp 8 24) RTN ?float102))))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.mul RTZ ?float60 ((_ to_fp 8 24) RTP ?float81))))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.roundToIntegral RTZ ?float111)))
(declare-const ?float122 Float64)
(assert (= ?float122 (fp.sqrt RNE ?float84)))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.add RTP ((_ to_fp 5 11) RTP ?float75) ?float71)))
(declare-const ?float124 Float128)
(assert (= ?float124 (fp.roundToIntegral RTN ?float97)))
(declare-const ?float125 Float16)
(assert (= ?float125 (fp.mul RNE ((_ to_fp 5 11) RTZ ?float72) ?float82)))
(declare-const ?float126 Float64)
(assert (= ?float126 (fp.mul RTP ((_ to_fp 11 53) RTZ ?float119) ?float74)))
(declare-const ?float127 Float16)
(assert (= ?float127 (f11 ((_ to_fp 11 53) RTN ?float113) ((_ to_fp 8 24) RTP ?float65) ?float69 ((_ to_fp 15 113) RTN ?float73) ((_ to_fp 8 24) RTZ ?float64) ((_ to_fp 5 11) RTN ?float110))))
(declare-const ?float128 Float64)
(assert (= ?float128 (f28 ?float125 ((_ to_fp 8 24) RTN ?float61) ?float121 ?float91 ((_ to_fp 5 11) RTP ?float83) ?float76 ?float111 ((_ to_fp 15 113) RTN ?float108) ((_ to_fp 11 53) RTZ ?float116) ((_ to_fp 15 113) RNE ?float96))))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.add RTZ ?float60 ?float62)))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.add RTP ((_ to_fp 8 24) RTP ?float76) ?float85)))
(declare-const ?float131 Float32)
(assert (= ?float131 (fp.div RTZ ?float99 ((_ to_fp 8 24) RTP ?float123))))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.max ((_ to_fp 11 53) RNE ?float116) ?float76)))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.abs ?float114)))
(declare-const ?float134 Float32)
(assert (= ?float134 (fp.add RTN ?float73 ((_ to_fp 8 24) RTP ?float96))))
(declare-const ?float135 Float64)
(assert (= ?float135 (f30 ((_ to_fp 5 11) RTZ ?float75) ((_ to_fp 8 24) RTP ?float127) ((_ to_fp 11 53) RNE ?float104) ((_ to_fp 5 11) RNE ?float113) ((_ to_fp 15 113) RTZ ?float129) ((_ to_fp 8 24) RTN ?float104))))
(declare-const ?float136 Float32)
(assert (= ?float136 (fp.abs ?float83)))
(declare-const ?float137 Float64)
(assert (= ?float137 (f3 ?float123 ?float128 ?float68 ((_ to_fp 11 53) RTP ?float98))))
(declare-const ?float138 Float32)
(assert (= ?float138 (fp.mul RTN ?float115 ?float79)))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.abs ?float131)))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.roundToIntegral RNE ?float66)))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.max ?float88 ((_ to_fp 5 11) RTZ ?float121))))
(declare-const ?float142 Float32)
(assert (= ?float142 (fp.div RTZ ?float66 ?float120)))
(declare-const ?float143 Float128)
(assert (= ?float143 (fp.max ((_ to_fp 15 113) RTN ?float125) ?float97)))
(declare-const ?float144 Float128)
(assert (= ?float144 (f46 ((_ to_fp 8 24) RTN ?float94) ((_ to_fp 8 24) RTN ?float80))))
(declare-const ?float145 Float128)
(assert (= ?float145 (f43 ((_ to_fp 15 113) RTZ ?float96) ((_ to_fp 5 11) RNE ?float142) ((_ to_fp 5 11) RNE ?float85) ((_ to_fp 15 113) RTZ ?float102) ((_ to_fp 11 53) RTN ?float120) ((_ to_fp 15 113) RTN ?float122))))
(declare-const ?float146 Float64)
(assert (= ?float146 (fp.div RTP ?float110 ?float135)))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.roundToIntegral RTN ?float134)))
(declare-const ?float148 Float128)
(assert (= ?float148 (fp.add RTZ ?float100 ?float104)))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.abs ?float84)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isInfinite ?float95)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isPositive ?float109)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isInfinite ?float130)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.geq ((_ to_fp 8 24) RNE ?float105) ?float60)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.eq ?float102 ((_ to_fp 5 11) RTN ?float130))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p5 ((_ to_fp 11 53) RTN ?float60) ((_ to_fp 5 11) RNE ?float135) ((_ to_fp 5 11) RNE ?float101) ((_ to_fp 11 53) RTN ?float75) ((_ to_fp 11 53) RTP ?float92) ((_ to_fp 11 53) RTZ ?float85) ((_ to_fp 15 113) RTZ ?float140) ?float135 ?float82 ((_ to_fp 15 113) RTP ?float125))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.geq ?float103 ?float133)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isInfinite ?float107)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.leq ?float138 ((_ to_fp 8 24) RNE ?float86))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isNegative ?float62)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNegative ?float93)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.eq ((_ to_fp 15 113) RTZ ?float146) ?float124)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.gt ?float124 ((_ to_fp 15 113) RTZ ?float102))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (p9 ((_ to_fp 8 24) RTP ?float71))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isZero ?float144)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isZero ?float111)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNormal ?float128)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.eq ?float64 ((_ to_fp 11 53) RTZ ?float102))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.leq ?float64 ((_ to_fp 11 53) RTP ?float119))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.lt ?float76 ((_ to_fp 11 53) RNE ?float112))))
; FINAL ASSERT
(assert (or (and ?bool153)))
(check-sat)


-- iteration 36 --
(declare-fun f0 (Float128) Float32)
(declare-fun f1 (Float32 Float64 Float32 Float64 Float64) Float64)
(declare-fun f2 (Float32 Float128 Float16 Float16 Float128 Float128 Float128 Float32 Float32) Float64)
(declare-fun f3 (Float32 Float32 Float64 Float128 Float16 Float32 Float16 Float16 Float32) Float16)
(declare-fun f4 (Float128 Float32 Float16 Float64 Float16) Float16)
(declare-fun f5 (Float16 Float64) Float64)
(declare-fun f6 (Float16 Float128 Float128 Float32) Float128)
(declare-fun f7 (Float64 Float16 Float16) Float64)
(declare-fun f8 (Float128 Float32 Float128 Float16 Float64 Float32 Float16 Float16) Float16)
(declare-fun f9 (Float128 Float16 Float16 Float128 Float32 Float64 Float128) Float128)
(declare-fun f10 (Float128 Float64 Float32 Float16 Float16 Float64 Float64 Float32 Float32 Float64) Float32)
(declare-fun f11 (Float16 Float16) Float128)
(declare-fun f12 (Float32 Float128 Float16 Float128 Float128 Float128 Float32) Float16)
(declare-fun f13 (Float16 Float16 Float128) Float64)
(declare-fun f14 (Float128 Float128 Float32 Float32 Float16 Float16) Float32)
(declare-fun f15 (Float128) Float32)
(declare-fun f16 (Float64 Float64 Float32) Float128)
(declare-fun f17 (Float64 Float32 Float128) Float64)
(declare-fun f18 (Float16 Float64 Float64) Float16)
(declare-fun f19 (Float32 Float16 Float32) Float64)
(declare-fun f20 (Float32) Float64)
(declare-fun f21 (Float16 Float64 Float64 Float32 Float16 Float64) Float16)
(declare-fun f22 (Float16 Float64 Float32 Float16 Float32) Float16)
(declare-fun f23 (Float16 Float128 Float64 Float32 Float32 Float16 Float64 Float32 Float16 Float64) Float32)
(declare-fun f24 (Float64 Float64 Float64 Float64 Float32 Float64) Float32)
(declare-fun f25 (Float128 Float64 Float128) Float16)
(declare-fun f26 (Float32 Float16 Float128 Float128 Float128 Float64 Float16) Float16)
(declare-fun f27 (Float16 Float64 Float128 Float128) Float128)
(declare-fun f28 (Float16 Float128 Float128 Float16) Float16)
(declare-fun f29 (Float16 Float16 Float32 Float128) Float32)
(declare-fun f30 (Float32 Float32 Float64) Float16)
(declare-fun f31 (Float16) Float64)
(declare-fun f32 (Float32 Float32 Float128 Float128 Float64 Float64 Float64 Float128 Float32 Float16) Float32)
(declare-fun f33 (Float16 Float64 Float128 Float128 Float32 Float64 Float32) Float32)
(declare-fun f34 (Float64 Float32 Float64 Float128 Float128 Float64 Float32) Float16)
(declare-fun f35 (Float64 Float32 Float128 Float128 Float32 Float64) Float16)
(declare-fun f36 (Float64 Float128 Float64 Float16) Float128)
(declare-fun f37 (Float64 Float32 Float128 Float32 Float16 Float32 Float64 Float64 Float32 Float16) Float16)
(declare-fun f38 (Float128 Float64 Float32) Float16)
(declare-fun f39 (Float32 Float32 Float64 Float64 Float128 Float16 Float16) Float16)
(declare-fun f40 (Float16 Float16 Float64) Float64)
(declare-fun f41 (Float32) Float128)
(declare-fun f42 (Float64 Float64 Float32 Float16 Float128 Float128 Float16 Float64 Float64 Float32) Float16)
(declare-fun f43 (Float128) Float128)
(declare-fun f44 (Float16 Float32 Float16 Float64 Float128 Float16 Float16) Float16)
(declare-fun f45 (Float128 Float16 Float128) Float128)
(declare-fun f46 (Float128 Float16 Float128) Float128)
(declare-fun f47 (Float128 Float128 Float64 Float16 Float32 Float64 Float16) Float16)
(declare-fun f48 (Float64) Float64)
(declare-fun f49 (Float16) Float64)
(declare-fun p0 (Float128 Float32 Float64 Float64 Float128 Float128) Bool)
(declare-fun p1 (Float32 Float128 Float64 Float16 Float16 Float64) Bool)
(declare-fun p2 (Float32 Float128 Float32 Float32 Float16 Float64) Bool)
(declare-fun p3 (Float128 Float32 Float16) Bool)
(declare-fun p4 (Float32 Float64 Float64 Float16 Float64 Float128) Bool)
(declare-fun p5 (Float16) Bool)
(declare-fun p6 (Float16 Float16 Float16 Float32 Float32 Float128 Float32 Float128 Float16) Bool)
(declare-fun p7 (Float16 Float32 Float128 Float64 Float64 Float32 Float64 Float32 Float32 Float32) Bool)
(declare-fun p8 (Float16) Bool)
(declare-fun p9 (Float64 Float32 Float16 Float16 Float16 Float64 Float32 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float64)
(declare-const ?float62 Float64)
(declare-const ?float63 Float64)
(declare-const ?float64 Float64)
(declare-const ?float65 Float16)
(declare-const ?float66 Float32)
(declare-const ?float67 Float64)
(declare-const ?float68 Float16)
(declare-const ?float69 Float64)
(declare-const ?float70 Float32)
(declare-const ?float71 Float16)
(declare-const ?float72 Float32)
(declare-const ?float73 Float128)
(declare-const ?float74 Float64)
(declare-const ?float75 Float32)
(declare-const ?float76 Float64)
(declare-const ?float77 Float128)
(declare-const ?float78 Float16)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b1 #b000000000010011 #b1110011001110001111000101101001000011110110101011010001111001111110110011000001001110111100111001110111100001001)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b1 #b00100101 #b11100111011001011010001)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b0 #b00001 #b1100001000)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (f27 ((_ to_fp 5 11) RTP ?float66) ((_ to_fp 11 53) RTP ?float91) ((_ to_fp 15 113) RTN ?float87) ((_ to_fp 15 113) RTN ?float86))))
(declare-const ?float101 Float64)
(assert (= ?float101 (fp.sub RTN ?float61 ((_ to_fp 11 53) RTZ ?float91))))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.max ((_ to_fp 5 11) RNE ?float73) ?float90)))
(declare-const ?float103 Float32)
(assert (= ?float103 (fp.neg ?float83)))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.abs ?float77)))
(declare-const ?float105 Float128)
(assert (= ?float105 (fp.mul RTN ?float99 ((_ to_fp 15 113) RNE ?float81))))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.max ?float62 ((_ to_fp 11 53) RNE ?float80))))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.roundToIntegral RTP ?float89)))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.max ((_ to_fp 11 53) RTZ ?float107) ?float61)))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.abs ?float79)))
(declare-const ?float110 Float32)
(assert (= ?float110 (fp.sub RTN ?float107 ((_ to_fp 8 24) RNE ?float93))))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.add RNE ((_ to_fp 5 11) RTN ?float100) ?float94)))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.abs ?float90)))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.add RTN ((_ to_fp 5 11) RTN ?float61) ?float102)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.max ?float106 ?float69)))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.mul RTP ?float93 ((_ to_fp 15 113) RNE ?float88))))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.min ((_ to_fp 5 11) RTN ?float97) ?float71)))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.roundToIntegral RTP ?float64)))
(declare-const ?float118 Float32)
(assert (= ?float118 (f10 ((_ to_fp 15 113) RTN ?float75) ((_ to_fp 11 53) RTN ?float84) ?float86 ((_ to_fp 5 11) RTZ ?float81) ((_ to_fp 5 11) RNE ?float67) ?float67 ((_ to_fp 11 53) RTZ ?float96) ((_ to_fp 8 24) RTP ?float65) ((_ to_fp 8 24) RNE ?float67) ((_ to_fp 11 53) RTN ?float99))))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.div RTN ?float63 ?float88)))
(declare-const ?float120 Float16)
(assert (= ?float120 (fp.min ?float94 ?float87)))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.sub RTN ?float69 ?float114)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.sub RTZ ?float90 ((_ to_fp 5 11) RNE ?float75))))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.add RTP ?float60 ((_ to_fp 8 24) RTZ ?float119))))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.max ((_ to_fp 11 53) RTZ ?float122) ?float76)))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.add RTP ?float79 ((_ to_fp 11 53) RTZ ?float112))))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.neg ?float91)))
(declare-const ?float127 Float128)
(assert (= ?float127 (f41 ?float75)))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.roundToIntegral RTN ?float79)))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.sub RTZ ?float101 ?float79)))
(declare-const ?float130 Float16)
(assert (= ?float130 (f38 ((_ to_fp 15 113) RNE ?float89) ((_ to_fp 11 53) RNE ?float122) ((_ to_fp 8 24) RTN ?float78))))
(declare-const ?float131 Float128)
(assert (= ?float131 (f43 ((_ to_fp 15 113) RTN ?float102))))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.sub RTP ?float60 ?float91)))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.mul RTZ ?float121 ?float61)))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.div RTZ ?float71 ((_ to_fp 5 11) RNE ?float81))))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.sub RNE ?float77 ((_ to_fp 15 113) RNE ?float72))))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.div RTP ((_ to_fp 5 11) RTZ ?float80) ?float113)))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.neg ?float98)))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.neg ?float112)))
(declare-const ?float139 Float32)
(assert (= ?float139 (f14 ((_ to_fp 15 113) RTZ ?float119) ((_ to_fp 15 113) RTN ?float133) ?float83 ((_ to_fp 8 24) RTP ?float130) ((_ to_fp 5 11) RTP ?float125) ((_ to_fp 5 11) RNE ?float72))))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.div RTN ((_ to_fp 8 24) RTP ?float105) ?float81)))
(declare-const ?float141 Float64)
(assert (= ?float141 (f13 ((_ to_fp 5 11) RNE ?float117) ((_ to_fp 5 11) RTN ?float73) ((_ to_fp 15 113) RTN ?float90))))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.neg ?float114)))
(declare-const ?float143 Float32)
(assert (= ?float143 (fp.roundToIntegral RTN ?float107)))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.sqrt RNE ?float72)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.add RTP ((_ to_fp 11 53) RNE ?float93) ?float117)))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.max ((_ to_fp 5 11) RTN ?float100) ?float94)))
(declare-const ?float147 Float64)
(assert (= ?float147 (fp.add RTP ((_ to_fp 11 53) RTN ?float72) ?float74)))
(declare-const ?float148 Float32)
(assert (= ?float148 (f23 ((_ to_fp 5 11) RNE ?float76) ((_ to_fp 15 113) RNE ?float119) ((_ to_fp 11 53) RTZ ?float143) ((_ to_fp 8 24) RNE ?float129) ((_ to_fp 8 24) RTZ ?float130) ((_ to_fp 5 11) RTP ?float81) ((_ to_fp 11 53) RTP ?float81) ((_ to_fp 8 24) RTN ?float68) ((_ to_fp 5 11) RTZ ?float106) ((_ to_fp 11 53) RTN ?float65))))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.abs ?float68)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.gt ?float141 ?float145)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.leq ((_ to_fp 8 24) RNE ?float136) ?float107)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (p8 ((_ to_fp 5 11) RTZ ?float70))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isInfinite ?float67)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isZero ?float135)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isSubnormal ?float91)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isInfinite ?float130)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p2 ((_ to_fp 8 24) RTP ?float137) ((_ to_fp 15 113) RTZ ?float94) ((_ to_fp 8 24) RTP ?float113) ?float144 ((_ to_fp 5 11) RTN ?float74) ?float88)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.eq ?float93 ?float73)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.geq ((_ to_fp 11 53) RTN ?float126) ?float121)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.gt ((_ to_fp 8 24) RNE ?float108) ?float107)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.gt ?float88 ((_ to_fp 11 53) RTP ?float139))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (p9 ((_ to_fp 11 53) RTP ?float95) ((_ to_fp 8 24) RTZ ?float100) ?float112 ?float112 ?float122 ((_ to_fp 11 53) RTN ?float96) ((_ to_fp 8 24) RTN ?float62) ((_ to_fp 11 53) RNE ?float118))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNaN ?float89)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isSubnormal ?float62)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p3 ?float80 ((_ to_fp 8 24) RTZ ?float68) ((_ to_fp 5 11) RTP ?float73))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.geq ((_ to_fp 8 24) RNE ?float121) ?float126)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.gt ((_ to_fp 8 24) RNE ?float104) ?float140)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNormal ?float90)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p2 ?float83 ((_ to_fp 15 113) RTZ ?float64) ((_ to_fp 8 24) RTN ?float120) ((_ to_fp 8 24) RNE ?float109) ((_ to_fp 5 11) RTP ?float104) ((_ to_fp 11 53) RTZ ?float111))))
; FINAL ASSERT
(assert (and (or ?bool165 (and ?bool153 ?bool152) (or ?bool156)) ?bool163 ?bool156))
(check-sat)


-- iteration 37 --
(declare-fun f0 (Float64 Float32 Float128 Float32 Float128 Float128 Float32 Float64) Float32)
(declare-fun f1 (Float16 Float32 Float16 Float16 Float32) Float64)
(declare-fun f2 (Float32 Float32 Float32 Float32 Float128) Float32)
(declare-fun f3 (Float128 Float32 Float16 Float64 Float32 Float128) Float32)
(declare-fun f4 (Float16) Float32)
(declare-fun f5 (Float64) Float32)
(declare-fun f6 (Float32 Float16 Float128 Float32) Float16)
(declare-fun f7 (Float16 Float16 Float32 Float128 Float16 Float128 Float16 Float32 Float64) Float16)
(declare-fun f8 (Float128) Float32)
(declare-fun f9 (Float16 Float32 Float16 Float128 Float64 Float16) Float32)
(declare-fun f10 (Float128 Float16 Float16 Float16) Float16)
(declare-fun f11 (Float32 Float16 Float128 Float16 Float16 Float32 Float64) Float64)
(declare-fun f12 (Float32 Float64 Float128 Float16) Float32)
(declare-fun f13 (Float32 Float128 Float16 Float16 Float64 Float16 Float16 Float16 Float32) Float64)
(declare-fun f14 (Float64 Float128 Float32 Float32 Float16 Float128) Float16)
(declare-fun f15 (Float16 Float128 Float128 Float16 Float64) Float32)
(declare-fun f16 (Float16 Float64 Float64 Float128 Float64 Float32 Float64 Float32) Float64)
(declare-fun f17 (Float64 Float64 Float32 Float64 Float128 Float64 Float64 Float16 Float32 Float64) Float16)
(declare-fun f18 (Float32 Float64 Float64 Float128) Float32)
(declare-fun f19 (Float64 Float64 Float16 Float64 Float128 Float32 Float32 Float32) Float128)
(declare-fun f20 (Float16 Float16 Float128 Float32 Float128 Float16) Float16)
(declare-fun f21 (Float32 Float16) Float64)
(declare-fun f22 (Float128 Float32 Float32 Float128 Float32 Float32 Float64 Float32 Float16) Float64)
(declare-fun f23 (Float32 Float32 Float64 Float128 Float16 Float16 Float32) Float16)
(declare-fun f24 (Float32 Float128 Float64) Float128)
(declare-fun f25 (Float64 Float64 Float64 Float16 Float64 Float32 Float128 Float32 Float32 Float128) Float64)
(declare-fun f26 (Float32 Float16 Float16) Float16)
(declare-fun f27 (Float128 Float32 Float128 Float128 Float128 Float128) Float64)
(declare-fun f28 (Float32 Float64) Float128)
(declare-fun f29 (Float16 Float32 Float32 Float16 Float32 Float64 Float64 Float16 Float128 Float16) Float64)
(declare-fun f30 (Float16) Float128)
(declare-fun f31 (Float128 Float64 Float64 Float128 Float128 Float64 Float128 Float32 Float32) Float16)
(declare-fun f32 (Float16 Float64) Float64)
(declare-fun f33 (Float128 Float32 Float32) Float16)
(declare-fun f34 (Float16 Float128 Float128 Float128 Float32) Float16)
(declare-fun f35 (Float128 Float64 Float32 Float16) Float16)
(declare-fun f36 (Float16 Float64 Float32 Float16 Float32) Float64)
(declare-fun f37 (Float32 Float128) Float128)
(declare-fun f38 (Float32) Float128)
(declare-fun f39 (Float64 Float16 Float128 Float32 Float64 Float16 Float64 Float16 Float32) Float16)
(declare-fun f40 (Float16 Float64 Float128 Float64 Float32 Float128 Float128) Float128)
(declare-fun f41 (Float16 Float128 Float64) Float128)
(declare-fun f42 (Float32 Float16 Float16 Float64 Float32 Float32 Float32 Float32 Float16 Float128) Float128)
(declare-fun f43 (Float32 Float16 Float16 Float64 Float32) Float32)
(declare-fun f44 (Float64 Float16) Float16)
(declare-fun f45 (Float64 Float16 Float32 Float64) Float64)
(declare-fun f46 (Float64 Float64 Float32 Float16 Float64 Float128 Float128 Float64 Float16 Float16) Float64)
(declare-fun f47 (Float16 Float128) Float128)
(declare-fun f48 (Float64 Float64 Float16 Float32 Float32) Float64)
(declare-fun f49 (Float16 Float64 Float64 Float32 Float64 Float64 Float64 Float16 Float64) Float16)
(declare-fun p0 (Float16 Float16 Float64 Float64 Float16 Float32 Float64 Float16 Float32) Bool)
(declare-fun p1 (Float16 Float16 Float16 Float16) Bool)
(declare-fun p2 (Float64 Float64) Bool)
(declare-fun p3 (Float64 Float16 Float32 Float64 Float64 Float64 Float64 Float64 Float32 Float32) Bool)
(declare-fun p4 (Float16 Float16 Float16 Float64) Bool)
(declare-fun p5 (Float64 Float16 Float64 Float64 Float32 Float128 Float32 Float64 Float64 Float32) Bool)
(declare-fun p6 (Float128 Float64 Float32 Float64 Float128 Float64 Float32 Float128 Float128 Float16) Bool)
(declare-fun p7 (Float32) Bool)
(declare-fun p8 (Float16 Float128 Float128 Float32) Bool)
(declare-fun p9 (Float16 Float64 Float32 Float64 Float64 Float128 Float64 Float128 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float64)
(declare-const ?float62 Float128)
(declare-const ?float63 Float32)
(declare-const ?float64 Float32)
(declare-const ?float65 Float128)
(declare-const ?float66 Float128)
(declare-const ?float67 Float64)
(declare-const ?float68 Float128)
(declare-const ?float69 Float64)
(declare-const ?float70 Float128)
(declare-const ?float71 Float128)
(declare-const ?float72 Float128)
(declare-const ?float73 Float16)
(declare-const ?float74 Float128)
(declare-const ?float75 Float32)
(declare-const ?float76 Float64)
(declare-const ?float77 Float64)
(declare-const ?float78 Float32)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b1 #b001100010111001 #b0011101101101010101111110011000110101100100010101111001001010011101010011001010100010011110011011110110101111001)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float90 Float128)
(assert (= ?float90 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b1 #b000111011111111 #b1000100001000100010110000011000001011111101001100110100100101100110000000010010000100010010110011101001101100110)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b0 #b000111011111100 #b1001110100101100011001010100111000011000101110110011110100010011011011010110100011101001001100110100001000001111)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b0 #b01000110 #b01010011100011111000010)))
(declare-const ?float98 Float64)
(assert (= ?float98 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (fp.sub RTN ((_ to_fp 11 53) RTN ?float91) ?float89)))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.mul RTP ?float90 ((_ to_fp 15 113) RNE ?float77))))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.roundToIntegral RTZ ?float74)))
(declare-const ?float103 Float128)
(assert (= ?float103 (fp.max ((_ to_fp 15 113) RTP ?float78) ?float68)))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.min ((_ to_fp 11 53) RTZ ?float68) ?float69)))
(declare-const ?float105 Float128)
(assert (= ?float105 (fp.neg ?float79)))
(declare-const ?float106 Float16)
(assert (= ?float106 (fp.sqrt RTP ?float84)))
(declare-const ?float107 Float64)
(assert (= ?float107 (f21 ((_ to_fp 8 24) RTN ?float84) ((_ to_fp 5 11) RTP ?float86))))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.mul RTN ?float96 ((_ to_fp 8 24) RTZ ?float62))))
(declare-const ?float109 Float32)
(assert (= ?float109 (fp.min ?float95 ?float75)))
(declare-const ?float110 Float16)
(assert (= ?float110 (f26 ((_ to_fp 8 24) RNE ?float73) ((_ to_fp 5 11) RNE ?float89) ((_ to_fp 5 11) RTN ?float88))))
(declare-const ?float111 Float128)
(assert (= ?float111 (fp.roundToIntegral RNE ?float92)))
(declare-const ?float112 Float128)
(assert (= ?float112 (fp.abs ?float71)))
(declare-const ?float113 Float128)
(assert (= ?float113 (fp.mul RTZ ((_ to_fp 15 113) RTN ?float84) ?float102)))
(declare-const ?float114 Float128)
(assert (= ?float114 (fp.min ((_ to_fp 15 113) RTZ ?float78) ?float105)))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.roundToIntegral RNE ?float108)))
(declare-const ?float116 Float128)
(assert (= ?float116 (fp.min ?float101 ?float85)))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.add RNE ?float113 ?float93)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.mul RTZ ?float83 ((_ to_fp 8 24) RTZ ?float84))))
(declare-const ?float119 Float128)
(assert (= ?float119 (fp.roundToIntegral RTP ?float71)))
(declare-const ?float120 Float64)
(assert (= ?float120 (f11 ((_ to_fp 8 24) RTN ?float91) ((_ to_fp 5 11) RTP ?float90) ?float119 ((_ to_fp 5 11) RNE ?float63) ((_ to_fp 5 11) RNE ?float78) ((_ to_fp 8 24) RNE ?float67) ((_ to_fp 11 53) RNE ?float68))))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.add RNE ?float75 ((_ to_fp 8 24) RTN ?float100))))
(declare-const ?float122 Float64)
(assert (= ?float122 (fp.abs ?float107)))
(declare-const ?float123 Float64)
(assert (= ?float123 (f45 ((_ to_fp 11 53) RTN ?float114) ((_ to_fp 5 11) RTP ?float122) ((_ to_fp 8 24) RTN ?float62) ((_ to_fp 11 53) RTZ ?float117))))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.roundToIntegral RTZ ?float67)))
(declare-const ?float125 Float128)
(assert (= ?float125 (fp.sub RTN ?float119 ((_ to_fp 15 113) RTP ?float64))))
(declare-const ?float126 Float32)
(assert (= ?float126 (f43 ((_ to_fp 8 24) RTP ?float120) ((_ to_fp 5 11) RNE ?float61) ((_ to_fp 5 11) RTZ ?float116) ((_ to_fp 11 53) RTZ ?float117) ((_ to_fp 8 24) RTP ?float66))))
(declare-const ?float127 Float16)
(assert (= ?float127 (f44 ((_ to_fp 11 53) RTZ ?float119) ((_ to_fp 5 11) RTZ ?float63))))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.neg ?float120)))
(declare-const ?float129 Float128)
(assert (= ?float129 (f38 ((_ to_fp 8 24) RTZ ?float107))))
(declare-const ?float130 Float64)
(assert (= ?float130 (fp.mul RTZ ?float77 ((_ to_fp 11 53) RTN ?float127))))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.max ?float69 ((_ to_fp 11 53) RTP ?float63))))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.min ?float120 ((_ to_fp 11 53) RNE ?float102))))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.sub RTN ?float126 ?float94)))
(declare-const ?float134 Float16)
(assert (= ?float134 (f35 ?float119 ((_ to_fp 11 53) RTZ ?float65) ((_ to_fp 8 24) RTN ?float85) ((_ to_fp 5 11) RTP ?float107))))
(declare-const ?float135 Float64)
(assert (= ?float135 (fp.sub RNE ((_ to_fp 11 53) RTZ ?float62) ?float132)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.sqrt RNE ?float127)))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.abs ?float77)))
(declare-const ?float138 Float64)
(assert (= ?float138 (fp.add RTZ ?float61 ?float107)))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.sub RTN ?float108 ((_ to_fp 8 24) RTN ?float104))))
(declare-const ?float140 Float64)
(assert (= ?float140 (fp.div RNE ((_ to_fp 11 53) RTN ?float127) ?float104)))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.abs ?float61)))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.abs ?float117)))
(declare-const ?float143 Float128)
(assert (= ?float143 (fp.sqrt RNE ?float102)))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.roundToIntegral RNE ?float100)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.neg ?float98)))
(declare-const ?float146 Float64)
(assert (= ?float146 (fp.max ?float130 ((_ to_fp 11 53) RTZ ?float108))))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.min ((_ to_fp 15 113) RTN ?float132) ?float125)))
(declare-const ?float148 Float128)
(assert (= ?float148 (fp.div RTP ?float125 ?float119)))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.add RNE ((_ to_fp 11 53) RTP ?float113) ?float99)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isNegative ?float79)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNaN ?float129)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.geq ((_ to_fp 15 113) RTP ?float98) ?float66)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isZero ?float105)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.geq ?float112 ((_ to_fp 15 113) RTZ ?float89))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p8 ((_ to_fp 5 11) RNE ?float148) ?float129 ((_ to_fp 15 113) RTP ?float127) ((_ to_fp 8 24) RNE ?float101))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (p6 ?float90 ((_ to_fp 11 53) RNE ?float96) ((_ to_fp 8 24) RTZ ?float104) ((_ to_fp 11 53) RTZ ?float136) ((_ to_fp 15 113) RNE ?float75) ((_ to_fp 11 53) RTZ ?float103) ((_ to_fp 8 24) RTP ?float137) ?float68 ?float91 ((_ to_fp 5 11) RTZ ?float124))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p2 ((_ to_fp 11 53) RTP ?float109) ((_ to_fp 11 53) RTZ ?float125))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isSubnormal ?float136)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isInfinite ?float101)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNaN ?float137)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isSubnormal ?float93)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isPositive ?float130)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isZero ?float149)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.lt ?float146 ?float130)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p1 ?float73 ((_ to_fp 5 11) RTP ?float102) ((_ to_fp 5 11) RTP ?float147) ((_ to_fp 5 11) RTZ ?float86))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.eq ?float115 ((_ to_fp 8 24) RTZ ?float98))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.leq ?float90 ?float117)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.eq ((_ to_fp 15 113) RNE ?float141) ?float79)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p8 ((_ to_fp 5 11) RTN ?float137) ?float62 ?float80 ?float83)))
; FINAL ASSERT
(assert (and (and ?bool150) ?bool164))
(check-sat)


-- iteration 38 --
(declare-fun f0 (Float16 Float16 Float32 Float128 Float32 Float32 Float64 Float32 Float64 Float128) Float128)
(declare-fun f1 (Float16 Float16 Float64 Float64 Float16 Float64 Float64 Float64 Float32 Float32) Float64)
(declare-fun f2 (Float128 Float64) Float16)
(declare-fun f3 (Float16 Float128 Float32 Float16 Float32 Float32 Float16 Float16) Float128)
(declare-fun f4 (Float128 Float16 Float16 Float16 Float64) Float32)
(declare-fun f5 (Float128 Float32 Float32 Float16 Float64 Float64 Float16) Float128)
(declare-fun f6 (Float64 Float128 Float128 Float32 Float128 Float16 Float64 Float16) Float32)
(declare-fun f7 (Float16 Float16 Float128 Float32 Float64 Float128) Float16)
(declare-fun f8 (Float16 Float64 Float16) Float128)
(declare-fun f9 (Float32 Float64 Float32 Float128 Float16 Float128 Float32) Float128)
(declare-fun f10 (Float128 Float32 Float16 Float16 Float16 Float64 Float128) Float32)
(declare-fun f11 (Float64) Float64)
(declare-fun f12 (Float16 Float32 Float64 Float16 Float128) Float64)
(declare-fun f13 (Float128 Float128 Float64 Float128) Float32)
(declare-fun f14 (Float64 Float16 Float64 Float128 Float64 Float16 Float16 Float128) Float32)
(declare-fun f15 (Float16 Float128 Float16 Float16 Float128 Float16 Float128 Float128 Float128 Float64) Float64)
(declare-fun f16 (Float32 Float64 Float128 Float128 Float128 Float16) Float64)
(declare-fun f17 (Float128 Float16 Float16) Float16)
(declare-fun f18 (Float128 Float32 Float64 Float64 Float128 Float64 Float64 Float32 Float32) Float128)
(declare-fun f19 (Float128 Float32 Float128 Float32) Float64)
(declare-fun f20 (Float64 Float64 Float64 Float128 Float32 Float64 Float32 Float64 Float32) Float64)
(declare-fun f21 (Float128 Float32 Float128 Float64 Float16 Float128 Float32) Float128)
(declare-fun f22 (Float32 Float16 Float16 Float128 Float32 Float128 Float16 Float128 Float16 Float32) Float128)
(declare-fun f23 (Float16 Float16 Float16 Float128 Float16 Float16) Float64)
(declare-fun f24 (Float128 Float32) Float16)
(declare-fun f25 (Float16) Float64)
(declare-fun f26 (Float16 Float32 Float16) Float64)
(declare-fun f27 (Float128 Float32 Float32 Float64 Float64 Float32 Float128 Float128 Float16 Float128) Float128)
(declare-fun f28 (Float32 Float32 Float128 Float16 Float64 Float64) Float64)
(declare-fun f29 (Float64 Float64) Float64)
(declare-fun f30 (Float128 Float128 Float128 Float128 Float16) Float64)
(declare-fun f31 (Float128 Float128 Float128) Float16)
(declare-fun f32 (Float16 Float64 Float32 Float16 Float16 Float128 Float16 Float32 Float16 Float64) Float64)
(declare-fun f33 (Float16 Float32 Float64 Float16 Float64 Float128 Float16 Float64 Float16 Float16) Float64)
(declare-fun f34 (Float128 Float64 Float64 Float128 Float128 Float128 Float32 Float16 Float128 Float32) Float128)
(declare-fun f35 (Float128 Float32 Float32 Float128) Float128)
(declare-fun f36 (Float64 Float128 Float64 Float32) Float16)
(declare-fun f37 (Float64 Float32 Float16 Float32 Float32 Float16 Float64) Float128)
(declare-fun f38 (Float64 Float32 Float64 Float64) Float16)
(declare-fun f39 (Float32 Float16 Float128 Float64 Float16 Float32) Float64)
(declare-fun f40 (Float128 Float64 Float16 Float32 Float32 Float128 Float128 Float64 Float16 Float64) Float64)
(declare-fun f41 (Float32 Float128 Float64 Float16 Float64 Float64 Float128 Float32) Float32)
(declare-fun f42 (Float128 Float64 Float128 Float32) Float64)
(declare-fun f43 (Float32) Float32)
(declare-fun f44 (Float64 Float16 Float64 Float128 Float64) Float16)
(declare-fun f45 (Float32 Float32 Float16) Float16)
(declare-fun f46 (Float64 Float16 Float64 Float32 Float16 Float32 Float64 Float32 Float128) Float128)
(declare-fun f47 (Float32 Float128) Float128)
(declare-fun f48 (Float32 Float32 Float16 Float128 Float128) Float16)
(declare-fun f49 (Float32 Float128 Float128 Float128 Float16 Float16 Float16 Float32 Float128 Float128) Float32)
(declare-fun p0 (Float128 Float64 Float64 Float128 Float16 Float32 Float32 Float128 Float32 Float32) Bool)
(declare-fun p1 (Float16 Float128 Float128 Float128 Float32 Float128) Bool)
(declare-fun p2 (Float16 Float64 Float16 Float128 Float16 Float32 Float128) Bool)
(declare-fun p3 (Float32) Bool)
(declare-fun p4 (Float64 Float16 Float128 Float128 Float128 Float128 Float32 Float32 Float64) Bool)
(declare-fun p5 (Float16) Bool)
(declare-fun p6 (Float128 Float64 Float16 Float32) Bool)
(declare-fun p7 (Float64 Float32 Float32 Float128 Float32 Float128) Bool)
(declare-fun p8 (Float32 Float16 Float32) Bool)
(declare-fun p9 (Float16 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float16)
(declare-const ?float62 Float16)
(declare-const ?float63 Float32)
(declare-const ?float64 Float16)
(declare-const ?float65 Float32)
(declare-const ?float66 Float128)
(declare-const ?float67 Float64)
(declare-const ?float68 Float16)
(declare-const ?float69 Float16)
(declare-const ?float70 Float32)
(declare-const ?float71 Float16)
(declare-const ?float72 Float32)
(declare-const ?float73 Float128)
(declare-const ?float74 Float16)
(declare-const ?float75 Float128)
(declare-const ?float76 Float64)
(declare-const ?float77 Float32)
(declare-const ?float78 Float16)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b0 #b00000111100 #b1111100011110101100001100111011100110100111011010010)))
(declare-const ?float84 Float128)
(assert (= ?float84 (fp #b1 #b011011000111111 #b0011110011111100101110101011001000000010011001101011111011010101100101010001010111000010000011110111001000110111)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b1 #b00001 #b0010111000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float128)
(assert (= ?float90 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float64)
(assert (= ?float98 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b1 #b00000 #b0000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.sub RNE ((_ to_fp 5 11) RNE ?float75) ?float88)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.mul RTN ?float100 ?float71)))
(declare-const ?float102 Float128)
(assert (= ?float102 (f47 ?float94 ((_ to_fp 15 113) RTP ?float93))))
(declare-const ?float103 Float128)
(assert (= ?float103 (fp.sqrt RTN ?float102)))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.sub RTN ((_ to_fp 8 24) RTP ?float97) ?float72)))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.mul RNE ?float100 ((_ to_fp 5 11) RTP ?float70))))
(declare-const ?float106 Float16)
(assert (= ?float106 (fp.mul RTZ ?float99 ?float74)))
(declare-const ?float107 Float32)
(assert (= ?float107 (f14 ((_ to_fp 11 53) RNE ?float105) ?float106 ((_ to_fp 11 53) RNE ?float100) ((_ to_fp 15 113) RNE ?float88) ((_ to_fp 11 53) RTZ ?float66) ((_ to_fp 5 11) RTN ?float97) ?float105 ((_ to_fp 15 113) RTN ?float96))))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.div RTP ((_ to_fp 15 113) RTZ ?float77) ?float84)))
(declare-const ?float109 Float32)
(assert (= ?float109 (fp.abs ?float77)))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.sub RTZ ?float96 ((_ to_fp 5 11) RNE ?float95))))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.max ((_ to_fp 5 11) RTN ?float103) ?float64)))
(declare-const ?float112 Float32)
(assert (= ?float112 (f49 ((_ to_fp 8 24) RTP ?float62) ((_ to_fp 15 113) RNE ?float94) ?float84 ?float108 ((_ to_fp 5 11) RTP ?float97) ((_ to_fp 5 11) RNE ?float94) ((_ to_fp 5 11) RTZ ?float92) ((_ to_fp 8 24) RNE ?float102) ((_ to_fp 15 113) RTP ?float85) ((_ to_fp 15 113) RTP ?float105))))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.sub RTZ ((_ to_fp 8 24) RTP ?float78) ?float77)))
(declare-const ?float114 Float128)
(assert (= ?float114 (f34 ((_ to_fp 15 113) RTP ?float95) ((_ to_fp 11 53) RTZ ?float88) ((_ to_fp 11 53) RNE ?float92) ((_ to_fp 15 113) RTN ?float93) ((_ to_fp 15 113) RTN ?float76) ((_ to_fp 15 113) RTP ?float99) ((_ to_fp 8 24) RTP ?float106) ((_ to_fp 5 11) RNE ?float70) ((_ to_fp 15 113) RNE ?float100) ((_ to_fp 8 24) RTZ ?float67))))
(declare-const ?float115 Float32)
(assert (= ?float115 (f49 ((_ to_fp 8 24) RTZ ?float62) ((_ to_fp 15 113) RNE ?float109) ((_ to_fp 15 113) RTP ?float97) ((_ to_fp 15 113) RNE ?float63) ((_ to_fp 5 11) RTZ ?float113) ?float71 ?float88 ?float93 ((_ to_fp 15 113) RTN ?float74) ?float108)))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.abs ?float72)))
(declare-const ?float117 Float32)
(assert (= ?float117 (fp.max ((_ to_fp 8 24) RNE ?float98) ?float91)))
(declare-const ?float118 Float64)
(assert (= ?float118 (f23 ?float64 ((_ to_fp 5 11) RNE ?float63) ?float99 ((_ to_fp 15 113) RTN ?float99) ((_ to_fp 5 11) RNE ?float60) ((_ to_fp 5 11) RTZ ?float72))))
(declare-const ?float119 Float32)
(assert (= ?float119 (f6 ((_ to_fp 11 53) RTZ ?float102) ((_ to_fp 15 113) RNE ?float115) ?float66 ((_ to_fp 8 24) RTZ ?float111) ?float73 ((_ to_fp 5 11) RTP ?float85) ?float98 ((_ to_fp 5 11) RTP ?float116))))
(declare-const ?float120 Float16)
(assert (= ?float120 (fp.mul RTN ((_ to_fp 5 11) RTZ ?float80) ?float62)))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.sqrt RTP ?float115)))
(declare-const ?float122 Float64)
(assert (= ?float122 (f33 ?float68 ((_ to_fp 8 24) RTN ?float95) ((_ to_fp 11 53) RTP ?float70) ?float78 ((_ to_fp 11 53) RNE ?float91) ((_ to_fp 15 113) RTN ?float76) ((_ to_fp 5 11) RNE ?float117) ((_ to_fp 11 53) RTN ?float111) ((_ to_fp 5 11) RTZ ?float83) ?float61)))
(declare-const ?float123 Float64)
(assert (= ?float123 (f26 ((_ to_fp 5 11) RTZ ?float67) ((_ to_fp 8 24) RTN ?float84) ((_ to_fp 5 11) RTP ?float95))))
(declare-const ?float124 Float128)
(assert (= ?float124 (fp.max ?float90 ((_ to_fp 15 113) RTN ?float62))))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.add RTN ((_ to_fp 11 53) RTZ ?float116) ?float95)))
(declare-const ?float126 Float16)
(assert (= ?float126 (f31 ?float75 ((_ to_fp 15 113) RNE ?float121) ((_ to_fp 15 113) RTZ ?float70))))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.sqrt RNE ?float63)))
(declare-const ?float128 Float16)
(assert (= ?float128 (fp.sqrt RTZ ?float71)))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.neg ?float68)))
(declare-const ?float130 Float128)
(assert (= ?float130 (f35 ((_ to_fp 15 113) RTZ ?float113) ((_ to_fp 8 24) RTN ?float96) ((_ to_fp 8 24) RNE ?float62) ((_ to_fp 15 113) RNE ?float62))))
(declare-const ?float131 Float32)
(assert (= ?float131 (fp.sqrt RTP ?float72)))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.sqrt RTZ ?float121)))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.div RTN ((_ to_fp 5 11) RTN ?float86) ?float74)))
(declare-const ?float134 Float64)
(assert (= ?float134 (fp.mul RTZ ((_ to_fp 11 53) RTZ ?float126) ?float83)))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.sub RTP ((_ to_fp 15 113) RTN ?float106) ?float108)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.neg ?float69)))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.neg ?float135)))
(declare-const ?float138 Float32)
(assert (= ?float138 (fp.sqrt RTP ?float117)))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.min ?float87 ((_ to_fp 11 53) RTN ?float121))))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.min ((_ to_fp 15 113) RTZ ?float79) ?float135)))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.mul RNE ((_ to_fp 5 11) RTZ ?float116) ?float82)))
(declare-const ?float142 Float32)
(assert (= ?float142 (fp.abs ?float94)))
(declare-const ?float143 Float16)
(assert (= ?float143 (fp.min ((_ to_fp 5 11) RTZ ?float109) ?float69)))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.neg ?float111)))
(declare-const ?float145 Float128)
(assert (= ?float145 (f35 ((_ to_fp 15 113) RTZ ?float81) ((_ to_fp 8 24) RNE ?float92) ((_ to_fp 8 24) RTZ ?float126) ((_ to_fp 15 113) RNE ?float119))))
(declare-const ?float146 Float64)
(assert (= ?float146 (fp.sqrt RTP ?float134)))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.neg ?float109)))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.sqrt RTP ?float69)))
(declare-const ?float149 Float32)
(assert (= ?float149 (fp.sub RTN ?float116 ?float112)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isZero ?float70)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.eq ((_ to_fp 11 53) RTZ ?float105) ?float83)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNegative ?float120)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (p5 ((_ to_fp 5 11) RTZ ?float97))))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p6 ((_ to_fp 15 113) RTP ?float68) ((_ to_fp 11 53) RNE ?float90) ((_ to_fp 5 11) RTP ?float135) ((_ to_fp 8 24) RTN ?float137))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isZero ?float117)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (p3 ((_ to_fp 8 24) RTZ ?float146))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p6 ((_ to_fp 15 113) RTZ ?float86) ((_ to_fp 11 53) RTP ?float113) ?float68 ((_ to_fp 8 24) RTN ?float73))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isZero ?float137)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.lt ?float141 ?float148)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p2 ((_ to_fp 5 11) RTN ?float91) ((_ to_fp 11 53) RNE ?float64) ((_ to_fp 5 11) RTZ ?float127) ?float80 ((_ to_fp 5 11) RNE ?float132) ((_ to_fp 8 24) RTN ?float79) ?float137)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.leq ?float78 ((_ to_fp 5 11) RTN ?float108))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isSubnormal ?float72)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (p8 ?float116 ?float105 ((_ to_fp 8 24) RTP ?float75))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.lt ((_ to_fp 8 24) RTN ?float102) ?float119)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.lt ?float131 ((_ to_fp 8 24) RTN ?float67))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isZero ?float118)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNormal ?float63)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNormal ?float127)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.leq ?float130 ((_ to_fp 15 113) RNE ?float149))))
; FINAL ASSERT
(assert (or ?bool159 (or ?bool157 ?bool164) (or ?bool151 (or ?bool162 ?bool168 ?bool153))))
(check-sat)


-- iteration 39 --
(declare-fun f0 (Float32 Float16 Float64 Float128 Float32 Float64) Float128)
(declare-fun f1 (Float128 Float32) Float64)
(declare-fun f2 (Float128 Float64 Float128 Float16) Float128)
(declare-fun f3 (Float64 Float16 Float64 Float32 Float16 Float32 Float16 Float32 Float128 Float64) Float16)
(declare-fun f4 (Float128 Float16 Float32 Float128 Float16 Float32 Float64) Float32)
(declare-fun f5 (Float128) Float128)
(declare-fun f6 (Float32 Float128 Float128 Float128 Float32) Float32)
(declare-fun f7 (Float16 Float128 Float128 Float32 Float32) Float128)
(declare-fun f8 (Float64) Float32)
(declare-fun f9 (Float64 Float32 Float32 Float128 Float16) Float16)
(declare-fun f10 (Float32 Float16 Float128 Float32 Float64 Float32 Float64) Float16)
(declare-fun f11 (Float32 Float32 Float32 Float32) Float16)
(declare-fun f12 (Float64 Float16) Float16)
(declare-fun f13 (Float64 Float32 Float64 Float128 Float32 Float128 Float16 Float16 Float16) Float128)
(declare-fun f14 (Float128 Float32 Float16 Float16 Float16) Float128)
(declare-fun f15 (Float32 Float64 Float128) Float32)
(declare-fun f16 (Float32 Float64 Float16 Float32 Float32 Float32 Float16 Float128 Float32) Float64)
(declare-fun f17 (Float128 Float128 Float32 Float128 Float128 Float128 Float16) Float32)
(declare-fun f18 (Float128 Float128 Float16 Float16 Float16 Float16 Float64) Float16)
(declare-fun f19 (Float32 Float64) Float128)
(declare-fun f20 (Float32 Float64 Float32) Float32)
(declare-fun f21 (Float128 Float128 Float16) Float32)
(declare-fun f22 (Float64 Float32 Float16 Float16 Float32 Float64 Float32 Float32) Float32)
(declare-fun f23 (Float16 Float16 Float32 Float32 Float128 Float32) Float128)
(declare-fun f24 (Float16 Float64 Float64 Float32 Float128 Float16 Float64) Float16)
(declare-fun f25 (Float16 Float64) Float16)
(declare-fun f26 (Float16 Float16 Float32 Float64 Float64 Float32 Float32 Float32 Float32) Float32)
(declare-fun f27 (Float16 Float32 Float128 Float16 Float16 Float128 Float16 Float16) Float128)
(declare-fun f28 (Float128 Float16 Float32 Float32 Float16) Float64)
(declare-fun f29 (Float32 Float128 Float16 Float16 Float128 Float128 Float128 Float128 Float16) Float32)
(declare-fun f30 (Float128 Float64 Float16 Float64 Float64 Float32 Float32 Float32 Float32 Float128) Float128)
(declare-fun f31 (Float128 Float16) Float16)
(declare-fun f32 (Float16 Float64 Float64 Float32 Float128 Float128 Float128 Float128 Float128) Float128)
(declare-fun f33 (Float32 Float32 Float128 Float16 Float16 Float64) Float32)
(declare-fun f34 (Float128 Float64 Float128 Float32 Float16 Float128) Float128)
(declare-fun f35 (Float16 Float128 Float64) Float64)
(declare-fun f36 (Float32 Float32 Float16 Float16 Float64 Float16 Float16 Float16) Float16)
(declare-fun f37 (Float16 Float16 Float16 Float64 Float64 Float128 Float128 Float64) Float32)
(declare-fun f38 (Float32 Float16 Float32 Float64 Float64 Float128) Float16)
(declare-fun f39 (Float16 Float64 Float32 Float128 Float128 Float16 Float32 Float128) Float32)
(declare-fun f40 (Float16 Float32 Float16 Float32 Float32) Float128)
(declare-fun f41 (Float32) Float32)
(declare-fun f42 (Float16 Float32 Float64) Float16)
(declare-fun f43 (Float32 Float32 Float32 Float32 Float64) Float64)
(declare-fun f44 (Float64 Float16 Float128 Float32) Float16)
(declare-fun f45 (Float64 Float128 Float16 Float16 Float32 Float32 Float128) Float64)
(declare-fun f46 (Float128 Float128 Float16 Float16 Float128 Float16 Float16) Float128)
(declare-fun f47 (Float128 Float32 Float64 Float16 Float32 Float128 Float16 Float16 Float64 Float128) Float128)
(declare-fun f48 (Float128 Float128 Float16 Float16 Float16 Float32 Float32 Float64) Float128)
(declare-fun f49 (Float16 Float128 Float32) Float16)
(declare-fun p0 (Float16 Float64 Float16 Float64) Bool)
(declare-fun p1 (Float128 Float64 Float128 Float16 Float128 Float64 Float64 Float128 Float128) Bool)
(declare-fun p2 (Float128 Float128 Float16 Float64 Float64 Float32 Float64 Float128 Float16 Float64) Bool)
(declare-fun p3 (Float128 Float64 Float128 Float16 Float64 Float64 Float128 Float128 Float16 Float128) Bool)
(declare-fun p4 (Float32 Float32 Float32) Bool)
(declare-fun p5 (Float16 Float32 Float64 Float64 Float128 Float128 Float32 Float16 Float64) Bool)
(declare-fun p6 (Float128 Float64 Float32 Float64 Float64) Bool)
(declare-fun p7 (Float32 Float64 Float128 Float32 Float16) Bool)
(declare-fun p8 (Float32 Float64 Float64 Float128 Float128) Bool)
(declare-fun p9 (Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float16)
(declare-const ?float62 Float16)
(declare-const ?float63 Float16)
(declare-const ?float64 Float64)
(declare-const ?float65 Float64)
(declare-const ?float66 Float64)
(declare-const ?float67 Float128)
(declare-const ?float68 Float128)
(declare-const ?float69 Float16)
(declare-const ?float70 Float16)
(declare-const ?float71 Float128)
(declare-const ?float72 Float32)
(declare-const ?float73 Float64)
(declare-const ?float74 Float64)
(declare-const ?float75 Float16)
(declare-const ?float76 Float32)
(declare-const ?float77 Float64)
(declare-const ?float78 Float16)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b0 #b00111011 #b11111100000001110100101)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b1 #b01111111111 #b1100010011100000000100100101010000111001110110111001)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b0 #b010011100001000 #b1000010010000111000100000101110010110110111111100001011010101111000111001010101110101000011001110110010000011101)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b0 #b10000001 #b00100011011100001000111)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b0 #b00000 #b0000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (f46 ((_ to_fp 15 113) RTN ?float81) ((_ to_fp 15 113) RTP ?float96) ?float75 ((_ to_fp 5 11) RTP ?float77) ((_ to_fp 15 113) RTP ?float80) ((_ to_fp 5 11) RNE ?float96) ((_ to_fp 5 11) RTZ ?float96))))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.sqrt RTZ ?float95)))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.neg ?float78)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.abs ?float63)))
(declare-const ?float104 Float16)
(assert (= ?float104 (f49 ((_ to_fp 5 11) RTN ?float76) ((_ to_fp 15 113) RTP ?float93) ?float84)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.mul RTN ?float81 ?float81)))
(declare-const ?float106 Float128)
(assert (= ?float106 (f23 ((_ to_fp 5 11) RTZ ?float97) ((_ to_fp 5 11) RTZ ?float73) ((_ to_fp 8 24) RTZ ?float105) ((_ to_fp 8 24) RTZ ?float96) ((_ to_fp 15 113) RTN ?float94) ?float89)))
(declare-const ?float107 Float128)
(assert (= ?float107 (f46 ?float71 ((_ to_fp 15 113) RNE ?float72) ((_ to_fp 5 11) RTZ ?float89) ((_ to_fp 5 11) RTN ?float72) ?float100 ((_ to_fp 5 11) RTN ?float77) ((_ to_fp 5 11) RTP ?float73))))
(declare-const ?float108 Float16)
(assert (= ?float108 (fp.add RNE ?float69 ((_ to_fp 5 11) RNE ?float106))))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.roundToIntegral RTZ ?float108)))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.min ((_ to_fp 11 53) RTZ ?float101) ?float64)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.neg ?float69)))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.max ((_ to_fp 8 24) RNE ?float78) ?float60)))
(declare-const ?float113 Float128)
(assert (= ?float113 (fp.sqrt RNE ?float79)))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.abs ?float89)))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.max ((_ to_fp 15 113) RTP ?float75) ?float107)))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.roundToIntegral RTN ?float81)))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.max ((_ to_fp 11 53) RTN ?float108) ?float96)))
(declare-const ?float118 Float64)
(assert (= ?float118 (fp.abs ?float73)))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.sub RTZ ((_ to_fp 11 53) RTP ?float107) ?float65)))
(declare-const ?float120 Float16)
(assert (= ?float120 (fp.neg ?float70)))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.neg ?float120)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.sqrt RTN ?float75)))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.max ((_ to_fp 5 11) RTP ?float106) ?float62)))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.min ?float117 ((_ to_fp 11 53) RTZ ?float114))))
(declare-const ?float125 Float128)
(assert (= ?float125 (fp.neg ?float100)))
(declare-const ?float126 Float128)
(assert (= ?float126 (f30 ((_ to_fp 15 113) RNE ?float116) ((_ to_fp 11 53) RTP ?float111) ?float94 ?float90 ((_ to_fp 11 53) RNE ?float67) ((_ to_fp 8 24) RTP ?float74) ((_ to_fp 8 24) RTN ?float120) ((_ to_fp 8 24) RTZ ?float123) ((_ to_fp 8 24) RTN ?float81) ((_ to_fp 15 113) RNE ?float62))))
(declare-const ?float127 Float128)
(assert (= ?float127 (f7 ((_ to_fp 5 11) RTP ?float95) ((_ to_fp 15 113) RTP ?float80) ((_ to_fp 15 113) RTN ?float103) ((_ to_fp 8 24) RTN ?float125) ((_ to_fp 8 24) RTN ?float88))))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.max ((_ to_fp 11 53) RTP ?float87) ?float74)))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.roundToIntegral RTN ?float88)))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.max ?float61 ((_ to_fp 5 11) RNE ?float114))))
(declare-const ?float131 Float32)
(assert (= ?float131 (f6 ((_ to_fp 8 24) RTP ?float109) ((_ to_fp 15 113) RNE ?float64) ((_ to_fp 15 113) RTN ?float64) ((_ to_fp 15 113) RTZ ?float93) ((_ to_fp 8 24) RTP ?float97))))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.max ?float130 ?float75)))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.max ?float61 ((_ to_fp 5 11) RTP ?float131))))
(declare-const ?float134 Float64)
(assert (= ?float134 (fp.max ((_ to_fp 11 53) RTP ?float102) ?float85)))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.roundToIntegral RNE ?float132)))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.abs ?float82)))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.sub RTP ((_ to_fp 15 113) RTZ ?float93) ?float67)))
(declare-const ?float138 Float16)
(assert (= ?float138 (f11 ?float92 ((_ to_fp 8 24) RTN ?float123) ((_ to_fp 8 24) RTN ?float116) ?float89)))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.sqrt RTP ?float124)))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.mul RNE ((_ to_fp 8 24) RNE ?float120) ?float92)))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.sqrt RTP ?float113)))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.min ?float106 ((_ to_fp 15 113) RTZ ?float80))))
(declare-const ?float143 Float32)
(assert (= ?float143 (f22 ((_ to_fp 11 53) RTZ ?float75) ?float84 ((_ to_fp 5 11) RTN ?float93) ((_ to_fp 5 11) RNE ?float84) ((_ to_fp 8 24) RTN ?float128) ((_ to_fp 11 53) RNE ?float111) ?float60 ((_ to_fp 8 24) RTZ ?float107))))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.roundToIntegral RNE ?float102)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.abs ?float140)))
(declare-const ?float146 Float128)
(assert (= ?float146 (f48 ((_ to_fp 15 113) RTZ ?float75) ((_ to_fp 15 113) RTZ ?float85) ?float88 ((_ to_fp 5 11) RTP ?float100) ?float130 ((_ to_fp 8 24) RTP ?float83) ((_ to_fp 8 24) RTN ?float77) ?float116)))
(declare-const ?float147 Float16)
(assert (= ?float147 (fp.max ?float70 ?float109)))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.abs ?float98)))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.neg ?float71)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isZero ?float65)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isInfinite ?float111)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNormal ?float136)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isZero ?float89)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p0 ?float103 ?float118 ((_ to_fp 5 11) RNE ?float66) ((_ to_fp 11 53) RTP ?float99))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.lt ?float99 ?float144)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.eq ?float104 ((_ to_fp 5 11) RTZ ?float127))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNaN ?float81)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.geq ((_ to_fp 15 113) RTN ?float109) ?float125)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.leq ((_ to_fp 5 11) RTP ?float93) ?float108)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p8 ((_ to_fp 8 24) RNE ?float116) ((_ to_fp 11 53) RNE ?float87) ((_ to_fp 11 53) RTN ?float133) ((_ to_fp 15 113) RTN ?float92) ((_ to_fp 15 113) RNE ?float138))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.gt ?float138 ((_ to_fp 5 11) RNE ?float137))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (p0 ((_ to_fp 5 11) RNE ?float110) ?float117 ?float144 ((_ to_fp 11 53) RNE ?float126))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (p4 ((_ to_fp 8 24) RTN ?float74) ?float140 ((_ to_fp 8 24) RTZ ?float65))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.leq ?float143 ?float95)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isInfinite ?float135)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.gt ((_ to_fp 8 24) RTZ ?float82) ?float80)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNormal ?float148)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.lt ((_ to_fp 8 24) RNE ?float136) ?float84)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNormal ?float112)))
; FINAL ASSERT
(assert (or ?bool156 ?bool154 (or ?bool155 ?bool161)))
(check-sat)


-- iteration 40 --
(declare-fun f0 (Float64 Float16 Float128 Float32 Float128) Float128)
(declare-fun f1 (Float16 Float16 Float32 Float128 Float128 Float128) Float16)
(declare-fun f2 (Float16 Float16 Float64) Float128)
(declare-fun f3 (Float16 Float128) Float32)
(declare-fun f4 (Float128 Float128 Float64 Float32 Float16 Float64 Float64 Float32 Float128) Float128)
(declare-fun f5 (Float16 Float64 Float128) Float64)
(declare-fun f6 (Float64 Float16 Float32 Float32 Float16 Float128 Float32) Float32)
(declare-fun f7 (Float32 Float64 Float16 Float64 Float64 Float128 Float32 Float32 Float64) Float64)
(declare-fun f8 (Float128) Float64)
(declare-fun f9 (Float16 Float32 Float64 Float16 Float16 Float64 Float32 Float128 Float32) Float16)
(declare-fun f10 (Float16 Float32 Float64 Float128 Float128) Float128)
(declare-fun f11 (Float16 Float64 Float32 Float64 Float16 Float16 Float128 Float64 Float16 Float64) Float16)
(declare-fun f12 (Float64 Float64 Float32 Float128 Float64 Float16 Float128) Float32)
(declare-fun f13 (Float128 Float16 Float128 Float64 Float32) Float32)
(declare-fun f14 (Float128 Float32 Float16 Float16 Float128 Float64 Float128 Float16 Float32 Float64) Float64)
(declare-fun f15 (Float32 Float128 Float16) Float16)
(declare-fun f16 (Float16 Float64 Float32 Float64) Float64)
(declare-fun f17 (Float16 Float16 Float128) Float16)
(declare-fun f18 (Float16 Float64 Float32 Float32 Float128 Float64 Float32) Float32)
(declare-fun f19 (Float16 Float16) Float16)
(declare-fun f20 (Float32 Float32 Float32 Float128 Float32 Float32 Float32 Float32 Float32) Float32)
(declare-fun f21 (Float64 Float32) Float64)
(declare-fun f22 (Float64 Float128 Float32 Float128 Float64 Float128 Float16 Float64) Float64)
(declare-fun f23 (Float16 Float32 Float16 Float32 Float64) Float16)
(declare-fun f24 (Float128 Float64 Float128 Float128 Float16 Float32) Float64)
(declare-fun f25 (Float16) Float32)
(declare-fun f26 (Float128 Float128 Float128 Float128 Float32) Float16)
(declare-fun f27 (Float64 Float128 Float64 Float64) Float128)
(declare-fun f28 (Float128 Float32 Float64) Float16)
(declare-fun f29 (Float64) Float64)
(declare-fun f30 (Float64 Float32 Float128 Float64 Float32 Float128 Float16) Float32)
(declare-fun f31 (Float64) Float16)
(declare-fun f32 (Float64 Float128 Float128 Float64 Float64 Float128 Float128) Float16)
(declare-fun f33 (Float16 Float64 Float32 Float128 Float32 Float16 Float64 Float128 Float128) Float16)
(declare-fun f34 (Float128 Float16 Float32 Float32 Float128 Float128 Float32 Float64 Float32) Float32)
(declare-fun f35 (Float16 Float64 Float128 Float64 Float128 Float16 Float128 Float64 Float128 Float32) Float32)
(declare-fun f36 (Float32 Float64 Float128 Float16 Float32 Float128 Float32 Float128 Float32) Float16)
(declare-fun f37 (Float32 Float64 Float16 Float128 Float128 Float16 Float64 Float64) Float16)
(declare-fun f38 (Float16 Float64 Float64 Float16 Float64 Float64 Float32 Float64) Float128)
(declare-fun f39 (Float16 Float64 Float16 Float128 Float32) Float32)
(declare-fun f40 (Float128 Float16 Float32 Float128) Float32)
(declare-fun f41 (Float128 Float128 Float32 Float32 Float16 Float128) Float32)
(declare-fun f42 (Float128 Float64 Float64 Float64) Float16)
(declare-fun f43 (Float64 Float64) Float16)
(declare-fun f44 (Float32 Float16 Float32 Float16 Float128 Float64 Float16 Float32 Float128 Float16) Float16)
(declare-fun f45 (Float128 Float32 Float16 Float128 Float128 Float128 Float128 Float32) Float64)
(declare-fun f46 (Float128 Float16 Float64 Float128 Float32 Float32 Float32 Float128 Float128) Float128)
(declare-fun f47 (Float16 Float64 Float16 Float128 Float16 Float32 Float128 Float32 Float32) Float128)
(declare-fun f48 (Float128 Float128 Float32 Float16 Float64 Float32 Float32 Float128 Float64) Float128)
(declare-fun f49 (Float32 Float128 Float16) Float16)
(declare-fun p0 (Float128 Float16 Float64 Float16 Float128 Float128 Float64 Float128) Bool)
(declare-fun p1 (Float64 Float32 Float128 Float64 Float64 Float32 Float64 Float128 Float16) Bool)
(declare-fun p2 (Float64 Float32 Float128 Float128 Float16 Float128 Float32 Float16 Float64) Bool)
(declare-fun p3 (Float32 Float32 Float16 Float32 Float64) Bool)
(declare-fun p4 (Float64 Float128 Float128 Float64 Float32 Float128 Float64 Float64) Bool)
(declare-fun p5 (Float16 Float16 Float16 Float128 Float128 Float64 Float16 Float16) Bool)
(declare-fun p6 (Float32 Float16 Float64 Float64 Float128 Float64 Float16 Float32) Bool)
(declare-fun p7 (Float32 Float64 Float64 Float32 Float64 Float128 Float64 Float64 Float64 Float16) Bool)
(declare-fun p8 (Float128 Float64 Float64 Float16 Float32 Float32 Float128 Float16) Bool)
(declare-fun p9 (Float32 Float128 Float16 Float64 Float128 Float128 Float16 Float64 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float64)
(declare-const ?float62 Float32)
(declare-const ?float63 Float128)
(declare-const ?float64 Float64)
(declare-const ?float65 Float128)
(declare-const ?float66 Float64)
(declare-const ?float67 Float64)
(declare-const ?float68 Float128)
(declare-const ?float69 Float16)
(declare-const ?float70 Float128)
(declare-const ?float71 Float128)
(declare-const ?float72 Float128)
(declare-const ?float73 Float64)
(declare-const ?float74 Float64)
(declare-const ?float75 Float32)
(declare-const ?float76 Float128)
(declare-const ?float77 Float16)
(declare-const ?float78 Float32)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b1 #b01111111 #b01110101101101100000100)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b0 #b01101 #b0111001110)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b1 #b00111101101 #b1001111110100000110000010011101110010101101000011100)))
(declare-const ?float90 Float128)
(assert (= ?float90 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b1 #b000011001111010 #b1011000010010101110110111001011110110000100110110101010000010110111010010100001101000110001011101100100001111001)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (fp.max ?float91 ?float72)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.neg ?float84)))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.abs ?float93)))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.sqrt RTZ ?float89)))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.abs ?float92)))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.neg ?float62)))
(declare-const ?float106 Float16)
(assert (= ?float106 (fp.max ?float88 ((_ to_fp 5 11) RTN ?float63))))
(declare-const ?float107 Float16)
(assert (= ?float107 (f11 ?float69 ((_ to_fp 11 53) RNE ?float96) ((_ to_fp 8 24) RTP ?float80) ((_ to_fp 11 53) RTN ?float98) ((_ to_fp 5 11) RNE ?float71) ((_ to_fp 5 11) RNE ?float67) ((_ to_fp 15 113) RTP ?float85) ?float99 ?float84 ((_ to_fp 11 53) RNE ?float86))))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.neg ?float103)))
(declare-const ?float109 Float64)
(assert (= ?float109 (f21 ?float89 ((_ to_fp 8 24) RNE ?float77))))
(declare-const ?float110 Float16)
(assert (= ?float110 (f37 ((_ to_fp 8 24) RTN ?float77) ((_ to_fp 11 53) RTP ?float90) ((_ to_fp 5 11) RNE ?float98) ((_ to_fp 15 113) RTZ ?float108) ((_ to_fp 15 113) RNE ?float101) ((_ to_fp 5 11) RTP ?float98) ((_ to_fp 11 53) RTZ ?float104) ((_ to_fp 11 53) RTP ?float96))))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.mul RTZ ?float108 ?float73)))
(declare-const ?float112 Float128)
(assert (= ?float112 (fp.div RTZ ?float70 ?float63)))
(declare-const ?float113 Float128)
(assert (= ?float113 (fp.abs ?float72)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.sqrt RTP ?float108)))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.neg ?float105)))
(declare-const ?float116 Float128)
(assert (= ?float116 (fp.sub RTZ ?float96 ?float93)))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.add RNE ?float116 ?float98)))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.div RTP ?float112 ((_ to_fp 15 113) RNE ?float111))))
(declare-const ?float119 Float128)
(assert (= ?float119 (f0 ((_ to_fp 11 53) RTZ ?float96) ((_ to_fp 5 11) RNE ?float81) ((_ to_fp 15 113) RNE ?float104) ((_ to_fp 8 24) RNE ?float64) ((_ to_fp 15 113) RTZ ?float97))))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.add RNE ?float87 ?float81)))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.neg ?float66)))
(declare-const ?float122 Float64)
(assert (= ?float122 (fp.max ?float108 ((_ to_fp 11 53) RTZ ?float100))))
(declare-const ?float123 Float128)
(assert (= ?float123 (fp.div RTZ ((_ to_fp 15 113) RNE ?float79) ?float86)))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.neg ?float92)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.add RNE ((_ to_fp 8 24) RTP ?float114) ?float124)))
(declare-const ?float126 Float32)
(assert (= ?float126 (f6 ((_ to_fp 11 53) RNE ?float115) ((_ to_fp 5 11) RTZ ?float71) ((_ to_fp 8 24) RTZ ?float97) ((_ to_fp 8 24) RNE ?float82) ((_ to_fp 5 11) RTN ?float76) ?float63 ?float105)))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.min ?float81 ((_ to_fp 8 24) RNE ?float119))))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.sub RTN ?float116 ((_ to_fp 15 113) RNE ?float121))))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.max ((_ to_fp 5 11) RTP ?float112) ?float69)))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.min ?float102 ((_ to_fp 15 113) RTN ?float80))))
(declare-const ?float131 Float128)
(assert (= ?float131 (fp.max ?float68 ?float93)))
(declare-const ?float132 Float16)
(assert (= ?float132 (f11 ((_ to_fp 5 11) RTZ ?float76) ((_ to_fp 11 53) RTP ?float118) ((_ to_fp 8 24) RTZ ?float61) ((_ to_fp 11 53) RNE ?float126) ((_ to_fp 5 11) RTZ ?float131) ?float84 ?float90 ((_ to_fp 11 53) RNE ?float116) ?float95 ?float64)))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.add RNE ?float126 ((_ to_fp 8 24) RTP ?float129))))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.sub RTZ ?float102 ?float112)))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.div RNE ?float129 ((_ to_fp 5 11) RTP ?float89))))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.neg ?float85)))
(declare-const ?float137 Float16)
(assert (= ?float137 (f37 ((_ to_fp 8 24) RTN ?float93) ((_ to_fp 11 53) RNE ?float117) ((_ to_fp 5 11) RTZ ?float62) ((_ to_fp 15 113) RTP ?float61) ?float86 ((_ to_fp 5 11) RTP ?float105) ((_ to_fp 11 53) RTP ?float106) ((_ to_fp 11 53) RTZ ?float76))))
(declare-const ?float138 Float16)
(assert (= ?float138 (f37 ((_ to_fp 8 24) RTP ?float111) ((_ to_fp 11 53) RTZ ?float115) ((_ to_fp 5 11) RNE ?float79) ?float91 ?float98 ((_ to_fp 5 11) RTZ ?float61) ((_ to_fp 11 53) RTZ ?float113) ((_ to_fp 11 53) RTP ?float85))))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.add RTN ((_ to_fp 5 11) RTP ?float111) ?float82)))
(declare-const ?float140 Float64)
(assert (= ?float140 (fp.roundToIntegral RNE ?float74)))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.abs ?float123)))
(declare-const ?float142 Float128)
(assert (= ?float142 (f38 ?float135 ?float80 ?float121 ((_ to_fp 5 11) RTP ?float112) ((_ to_fp 11 53) RNE ?float134) ((_ to_fp 11 53) RTN ?float119) ((_ to_fp 8 24) RTN ?float108) ((_ to_fp 11 53) RTP ?float141))))
(declare-const ?float143 Float16)
(assert (= ?float143 (fp.mul RNE ((_ to_fp 5 11) RTZ ?float73) ?float69)))
(declare-const ?float144 Float16)
(assert (= ?float144 (f19 ?float136 ((_ to_fp 5 11) RTP ?float131))))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.div RTZ ((_ to_fp 8 24) RNE ?float100) ?float127)))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.add RTP ((_ to_fp 8 24) RTZ ?float80) ?float133)))
(declare-const ?float147 Float16)
(assert (= ?float147 (fp.abs ?float95)))
(declare-const ?float148 Float32)
(assert (= ?float148 (fp.add RTN ?float127 ?float104)))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.roundToIntegral RTZ ?float89)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.leq ?float109 ?float66)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isPositive ?float118)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isInfinite ?float68)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isPositive ?float89)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p8 ((_ to_fp 15 113) RTN ?float82) ((_ to_fp 11 53) RNE ?float102) ((_ to_fp 11 53) RTP ?float76) ?float139 ?float104 ?float124 ((_ to_fp 15 113) RTN ?float92) ((_ to_fp 5 11) RTZ ?float140))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.lt ?float120 ((_ to_fp 8 24) RTZ ?float128))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (p7 ((_ to_fp 8 24) RTZ ?float64) ((_ to_fp 11 53) RTN ?float127) ((_ to_fp 11 53) RTN ?float93) ((_ to_fp 8 24) RTZ ?float147) ?float74 ((_ to_fp 15 113) RTZ ?float105) ((_ to_fp 11 53) RTN ?float141) ((_ to_fp 11 53) RTN ?float107) ((_ to_fp 11 53) RTP ?float126) ((_ to_fp 5 11) RTN ?float145))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.geq ?float143 ((_ to_fp 5 11) RTN ?float61))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isPositive ?float117)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.geq ((_ to_fp 15 113) RTP ?float147) ?float71)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isPositive ?float74)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.lt ?float120 ((_ to_fp 8 24) RTP ?float144))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isInfinite ?float95)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isZero ?float79)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (p6 ((_ to_fp 8 24) RTZ ?float114) ?float101 ((_ to_fp 11 53) RTN ?float143) ((_ to_fp 11 53) RTN ?float146) ((_ to_fp 15 113) RTN ?float69) ((_ to_fp 11 53) RTN ?float141) ((_ to_fp 5 11) RTP ?float105) ?float75)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isNegative ?float146)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.lt ?float92 ?float60)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNormal ?float92)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.gt ((_ to_fp 11 53) RTN ?float106) ?float109)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.gt ?float129 ((_ to_fp 5 11) RTZ ?float112))))
; FINAL ASSERT
(assert (and (or (and ?bool161 ?bool159)) (or ?bool157) ?bool157))
(check-sat)


-- iteration 41 --
(declare-fun f0 (Float128 Float16 Float128 Float32) Float128)
(declare-fun f1 (Float128) Float16)
(declare-fun f2 (Float32 Float16 Float16 Float128) Float64)
(declare-fun f3 (Float64 Float64 Float128 Float32 Float32) Float128)
(declare-fun f4 (Float64 Float64 Float64) Float64)
(declare-fun f5 (Float64 Float128 Float128 Float32 Float128 Float16 Float64) Float32)
(declare-fun f6 (Float128 Float64 Float16) Float128)
(declare-fun f7 (Float32 Float16 Float128 Float128 Float32 Float16 Float16) Float32)
(declare-fun f8 (Float64 Float64 Float32 Float16) Float16)
(declare-fun f9 (Float16 Float64 Float32 Float128 Float128) Float128)
(declare-fun f10 (Float32 Float64 Float16) Float32)
(declare-fun f11 (Float64 Float128) Float32)
(declare-fun f12 (Float32 Float16 Float128 Float128 Float32 Float32 Float64) Float32)
(declare-fun f13 (Float32 Float16) Float128)
(declare-fun f14 (Float128 Float16 Float32 Float16 Float32 Float128 Float16 Float128 Float16 Float128) Float128)
(declare-fun f15 (Float16 Float16 Float32 Float128 Float16 Float16 Float64 Float32 Float128 Float32) Float128)
(declare-fun f16 (Float16 Float64 Float128 Float64 Float128 Float128 Float32 Float16 Float32) Float64)
(declare-fun f17 (Float64 Float32 Float32 Float16 Float32 Float64 Float128 Float64 Float32 Float16) Float16)
(declare-fun f18 (Float128) Float16)
(declare-fun f19 (Float64 Float16) Float64)
(declare-fun f20 (Float16) Float64)
(declare-fun f21 (Float128 Float32) Float64)
(declare-fun f22 (Float32 Float64 Float32 Float32 Float128 Float128 Float64 Float64) Float32)
(declare-fun f23 (Float64 Float64) Float32)
(declare-fun f24 (Float64 Float16 Float128) Float128)
(declare-fun f25 (Float32 Float64 Float16 Float16 Float16 Float128 Float16 Float32) Float16)
(declare-fun f26 (Float32 Float32 Float16) Float64)
(declare-fun f27 (Float32 Float128 Float64 Float64 Float64 Float32 Float32) Float16)
(declare-fun f28 (Float64 Float128 Float16 Float64) Float128)
(declare-fun f29 (Float16 Float32 Float32) Float64)
(declare-fun f30 (Float64 Float64 Float16 Float128 Float128 Float32 Float16 Float32 Float128) Float128)
(declare-fun f31 (Float32 Float32 Float16 Float32 Float16) Float64)
(declare-fun f32 (Float128 Float32) Float32)
(declare-fun f33 (Float32 Float64 Float32 Float64 Float16 Float64 Float64 Float64) Float16)
(declare-fun f34 (Float128 Float16 Float128) Float64)
(declare-fun f35 (Float16 Float32 Float16 Float32 Float128) Float128)
(declare-fun f36 (Float32 Float64 Float128 Float128 Float32 Float128 Float128 Float16) Float32)
(declare-fun f37 (Float32 Float16 Float32 Float64 Float128 Float128 Float16 Float64 Float32) Float16)
(declare-fun f38 (Float32 Float32 Float64 Float16) Float16)
(declare-fun f39 (Float16 Float128 Float32 Float16 Float32) Float128)
(declare-fun f40 (Float64 Float16 Float128 Float128 Float16 Float32) Float128)
(declare-fun f41 (Float16 Float16 Float32 Float32 Float32 Float64) Float128)
(declare-fun f42 (Float128) Float128)
(declare-fun f43 (Float64 Float128 Float128 Float32 Float128 Float16 Float16 Float64) Float32)
(declare-fun f44 (Float64 Float32 Float32 Float128 Float64 Float16) Float16)
(declare-fun f45 (Float64 Float64 Float16 Float16 Float128 Float32 Float128 Float16 Float128 Float64) Float128)
(declare-fun f46 (Float128) Float128)
(declare-fun f47 (Float128 Float16 Float128 Float128 Float128 Float64 Float32 Float128 Float64) Float128)
(declare-fun f48 (Float64 Float128 Float64 Float128 Float32) Float32)
(declare-fun f49 (Float64 Float32 Float128 Float64 Float32 Float32 Float128 Float16) Float32)
(declare-fun p0 (Float64 Float64 Float64 Float128 Float64 Float64 Float32 Float128) Bool)
(declare-fun p1 (Float64 Float64 Float128 Float32 Float16 Float64 Float32 Float32) Bool)
(declare-fun p2 (Float32 Float32 Float64) Bool)
(declare-fun p3 (Float64 Float128) Bool)
(declare-fun p4 (Float128 Float128 Float16 Float64 Float16 Float16 Float128 Float32) Bool)
(declare-fun p5 (Float16 Float128 Float32) Bool)
(declare-fun p6 (Float64 Float128 Float64 Float32 Float32) Bool)
(declare-fun p7 (Float64 Float16 Float32) Bool)
(declare-fun p8 (Float64 Float128 Float32 Float128 Float32 Float32 Float32) Bool)
(declare-fun p9 (Float16 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float128)
(declare-const ?float62 Float128)
(declare-const ?float63 Float128)
(declare-const ?float64 Float128)
(declare-const ?float65 Float16)
(declare-const ?float66 Float128)
(declare-const ?float67 Float128)
(declare-const ?float68 Float16)
(declare-const ?float69 Float128)
(declare-const ?float70 Float32)
(declare-const ?float71 Float32)
(declare-const ?float72 Float16)
(declare-const ?float73 Float32)
(declare-const ?float74 Float16)
(declare-const ?float75 Float16)
(declare-const ?float76 Float32)
(declare-const ?float77 Float64)
(declare-const ?float78 Float32)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b0 #b00100110 #b11011010000111010001101)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b0 #b00000 #b0000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.neg ?float93)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.min ((_ to_fp 5 11) RTP ?float78) ?float97)))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.max ?float65 ((_ to_fp 5 11) RTN ?float62))))
(declare-const ?float103 Float16)
(assert (= ?float103 (f33 ((_ to_fp 8 24) RTP ?float60) ((_ to_fp 11 53) RTZ ?float68) ((_ to_fp 8 24) RNE ?float69) ((_ to_fp 11 53) RNE ?float102) ?float75 ((_ to_fp 11 53) RNE ?float96) ((_ to_fp 11 53) RTP ?float89) ((_ to_fp 11 53) RNE ?float96))))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.max ((_ to_fp 5 11) RNE ?float89) ?float102)))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.max ((_ to_fp 5 11) RNE ?float76) ?float97)))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.add RTZ ((_ to_fp 15 113) RNE ?float101) ?float63)))
(declare-const ?float107 Float64)
(assert (= ?float107 (fp.max ?float80 ((_ to_fp 11 53) RTZ ?float91))))
(declare-const ?float108 Float32)
(assert (= ?float108 (f10 ((_ to_fp 8 24) RTN ?float69) ((_ to_fp 11 53) RTP ?float63) ((_ to_fp 5 11) RTP ?float64))))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.neg ?float105)))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.roundToIntegral RTP ?float68)))
(declare-const ?float111 Float128)
(assert (= ?float111 (fp.roundToIntegral RTP ?float89)))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.min ?float102 ?float93)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.div RTP ?float85 ((_ to_fp 11 53) RTP ?float69))))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.roundToIntegral RNE ?float105)))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.add RNE ((_ to_fp 8 24) RNE ?float74) ?float108)))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.div RTN ((_ to_fp 11 53) RTP ?float114) ?float82)))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.add RTN ((_ to_fp 5 11) RNE ?float116) ?float114)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.neg ?float71)))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.div RNE ((_ to_fp 11 53) RNE ?float114) ?float87)))
(declare-const ?float120 Float32)
(assert (= ?float120 (f48 ?float113 ((_ to_fp 15 113) RTZ ?float105) ((_ to_fp 11 53) RTP ?float62) ((_ to_fp 15 113) RTP ?float109) ?float118)))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.mul RNE ?float60 ((_ to_fp 5 11) RTZ ?float106))))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.neg ?float110)))
(declare-const ?float123 Float128)
(assert (= ?float123 (fp.sqrt RTZ ?float92)))
(declare-const ?float124 Float128)
(assert (= ?float124 (fp.sqrt RTZ ?float66)))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.roundToIntegral RTN ?float83)))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.add RTZ ((_ to_fp 8 24) RNE ?float97) ?float120)))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.roundToIntegral RNE ?float71)))
(declare-const ?float128 Float128)
(assert (= ?float128 (f0 ((_ to_fp 15 113) RTN ?float104) ?float60 ?float124 ((_ to_fp 8 24) RNE ?float105))))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.mul RTP ?float126 ((_ to_fp 8 24) RTZ ?float60))))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.add RTZ ?float96 ?float86)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.mul RTZ ?float82 ?float94)))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.div RTZ ((_ to_fp 5 11) RTZ ?float88) ?float72)))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.sub RNE ((_ to_fp 8 24) RNE ?float85) ?float73)))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.min ((_ to_fp 5 11) RNE ?float106) ?float100)))
(declare-const ?float135 Float16)
(assert (= ?float135 (f38 ((_ to_fp 8 24) RTZ ?float110) ((_ to_fp 8 24) RNE ?float66) ?float116 ?float101)))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.add RNE ((_ to_fp 11 53) RTP ?float67) ?float87)))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.sub RTP ((_ to_fp 8 24) RTZ ?float119) ?float71)))
(declare-const ?float138 Float128)
(assert (= ?float138 (f40 ((_ to_fp 11 53) RTN ?float100) ((_ to_fp 5 11) RTP ?float78) ((_ to_fp 15 113) RTZ ?float65) ((_ to_fp 15 113) RTP ?float126) ?float93 ((_ to_fp 8 24) RTN ?float117))))
(declare-const ?float139 Float32)
(assert (= ?float139 (f10 ?float78 ((_ to_fp 11 53) RTN ?float115) ?float74)))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.max ?float96 ?float122)))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.add RTZ ?float105 ((_ to_fp 5 11) RTP ?float63))))
(declare-const ?float142 Float64)
(assert (= ?float142 (f21 ?float63 ((_ to_fp 8 24) RTP ?float116))))
(declare-const ?float143 Float16)
(assert (= ?float143 (fp.sub RNE ?float134 ((_ to_fp 5 11) RTP ?float78))))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.sub RNE ?float132 ?float135)))
(declare-const ?float145 Float128)
(assert (= ?float145 (fp.mul RTP ((_ to_fp 15 113) RTP ?float108) ?float124)))
(declare-const ?float146 Float128)
(assert (= ?float146 (f9 ((_ to_fp 5 11) RTP ?float66) ((_ to_fp 11 53) RNE ?float99) ((_ to_fp 8 24) RNE ?float123) ((_ to_fp 15 113) RNE ?float109) ((_ to_fp 15 113) RTP ?float85))))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.add RTN ?float71 ((_ to_fp 8 24) RTN ?float100))))
(declare-const ?float148 Float64)
(assert (= ?float148 (f34 ?float145 ?float101 ((_ to_fp 15 113) RTP ?float127))))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.min ((_ to_fp 15 113) RNE ?float112) ?float69)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isNegative ?float108)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.eq ((_ to_fp 15 113) RNE ?float109) ?float67)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.lt ((_ to_fp 5 11) RNE ?float73) ?float105)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.lt ?float79 ?float79)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.leq ((_ to_fp 11 53) RTP ?float62) ?float85)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p4 ((_ to_fp 15 113) RTN ?float118) ((_ to_fp 15 113) RTP ?float68) ?float75 ?float107 ((_ to_fp 5 11) RTP ?float118) ((_ to_fp 5 11) RTN ?float129) ((_ to_fp 15 113) RTN ?float86) ?float108)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNormal ?float140)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNormal ?float140)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.lt ?float88 ((_ to_fp 11 53) RTZ ?float141))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isSubnormal ?float142)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p4 ((_ to_fp 15 113) RNE ?float72) ((_ to_fp 15 113) RNE ?float117) ((_ to_fp 5 11) RTZ ?float76) ?float116 ((_ to_fp 5 11) RTZ ?float124) ((_ to_fp 5 11) RTZ ?float139) ((_ to_fp 15 113) RTZ ?float102) ?float76)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (p8 ((_ to_fp 11 53) RNE ?float91) ((_ to_fp 15 113) RTP ?float137) ((_ to_fp 8 24) RTP ?float141) ((_ to_fp 15 113) RTZ ?float114) ((_ to_fp 8 24) RNE ?float97) ((_ to_fp 8 24) RTN ?float61) ((_ to_fp 8 24) RTN ?float110))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isPositive ?float104)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.geq ?float144 ?float97)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isNormal ?float132)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.eq ?float61 ((_ to_fp 15 113) RNE ?float118))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isSubnormal ?float64)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isZero ?float119)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.eq ((_ to_fp 15 113) RTN ?float136) ?float111)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNormal ?float106)))
; FINAL ASSERT
(assert (and ?bool167 (or (or ?bool167)) (and ?bool153)))
(check-sat)


-- iteration 42 --
(declare-fun f0 (Float16 Float32 Float32 Float64 Float16 Float32 Float32 Float16) Float128)
(declare-fun f1 (Float128 Float128 Float64 Float32 Float32 Float16 Float64) Float128)
(declare-fun f2 (Float64 Float16 Float64 Float128 Float128 Float32 Float16) Float32)
(declare-fun f3 (Float64) Float32)
(declare-fun f4 (Float16 Float16 Float32 Float64 Float128 Float64 Float64 Float128) Float32)
(declare-fun f5 (Float64 Float64 Float32 Float16 Float32 Float16 Float32 Float128) Float32)
(declare-fun f6 (Float16 Float32 Float16 Float16 Float32) Float64)
(declare-fun f7 (Float32 Float16 Float64 Float16 Float16) Float64)
(declare-fun f8 (Float128 Float16 Float128) Float128)
(declare-fun f9 (Float128) Float64)
(declare-fun f10 (Float16 Float64 Float16 Float16 Float64 Float128 Float128) Float16)
(declare-fun f11 (Float64 Float32) Float32)
(declare-fun f12 (Float16 Float64 Float64 Float128 Float64 Float64 Float64) Float64)
(declare-fun f13 (Float64 Float64) Float32)
(declare-fun f14 (Float64 Float128 Float16 Float64 Float64 Float64 Float64 Float32 Float64 Float32) Float32)
(declare-fun f15 (Float128) Float128)
(declare-fun f16 (Float128 Float32 Float16 Float16 Float32 Float32 Float32 Float128 Float128 Float64) Float32)
(declare-fun f17 (Float32 Float128 Float128 Float128 Float16) Float64)
(declare-fun f18 (Float16 Float128) Float16)
(declare-fun f19 (Float32) Float32)
(declare-fun f20 (Float128 Float16 Float128 Float16 Float128 Float32 Float32 Float64 Float128) Float16)
(declare-fun f21 (Float32 Float64) Float128)
(declare-fun f22 (Float16 Float16) Float32)
(declare-fun f23 (Float64 Float32 Float128 Float16 Float128 Float128) Float16)
(declare-fun f24 (Float32 Float32 Float32 Float128 Float64 Float32 Float64) Float128)
(declare-fun f25 (Float128 Float16 Float64 Float32 Float64 Float128 Float64 Float32 Float16) Float16)
(declare-fun f26 (Float16 Float128 Float16 Float32 Float32 Float16 Float32 Float64 Float32 Float64) Float16)
(declare-fun f27 (Float128 Float128 Float16) Float32)
(declare-fun f28 (Float64 Float32 Float16 Float64 Float16 Float16) Float16)
(declare-fun f29 (Float16 Float32 Float64 Float128 Float64 Float16 Float16 Float32) Float32)
(declare-fun f30 (Float16 Float128 Float16 Float32 Float16 Float128) Float16)
(declare-fun f31 (Float32 Float16) Float128)
(declare-fun f32 (Float16 Float64 Float64 Float16 Float16 Float32 Float16 Float32 Float64) Float32)
(declare-fun f33 (Float32 Float64) Float32)
(declare-fun f34 (Float32 Float32) Float16)
(declare-fun f35 (Float32 Float64) Float32)
(declare-fun f36 (Float16 Float64 Float16 Float128 Float64 Float32 Float32 Float16 Float64) Float128)
(declare-fun f37 (Float16) Float64)
(declare-fun f38 (Float128 Float16 Float16 Float16 Float16) Float128)
(declare-fun f39 (Float32 Float16 Float128 Float16 Float128 Float128) Float16)
(declare-fun f40 (Float64) Float32)
(declare-fun f41 (Float64 Float128 Float128 Float128 Float128 Float128) Float64)
(declare-fun f42 (Float128 Float16 Float16 Float16 Float16 Float32 Float16 Float128 Float64 Float64) Float128)
(declare-fun f43 (Float64 Float32 Float64 Float128 Float16 Float16 Float64) Float128)
(declare-fun f44 (Float16) Float32)
(declare-fun f45 (Float32 Float32 Float64 Float32 Float32 Float32 Float32 Float32 Float64 Float32) Float32)
(declare-fun f46 (Float128 Float16 Float64 Float32 Float128 Float128 Float32) Float128)
(declare-fun f47 (Float128 Float32 Float128 Float64 Float16 Float64 Float16 Float32 Float32) Float16)
(declare-fun f48 (Float64 Float64 Float16 Float64 Float64) Float16)
(declare-fun f49 (Float64 Float64 Float32 Float64) Float128)
(declare-fun p0 (Float32) Bool)
(declare-fun p1 (Float64 Float16 Float64 Float128 Float16 Float128 Float16 Float32 Float32 Float64) Bool)
(declare-fun p2 (Float32 Float128 Float64 Float128 Float16 Float128 Float128) Bool)
(declare-fun p3 (Float128 Float128 Float32 Float16 Float64 Float32 Float64 Float32) Bool)
(declare-fun p4 (Float16) Bool)
(declare-fun p5 (Float64 Float128 Float16 Float32) Bool)
(declare-fun p6 (Float16) Bool)
(declare-fun p7 (Float16 Float64 Float64 Float16 Float128 Float64 Float128) Bool)
(declare-fun p8 (Float32 Float128 Float64 Float16 Float64 Float128 Float64 Float128 Float16) Bool)
(declare-fun p9 (Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float64)
(declare-const ?float62 Float16)
(declare-const ?float63 Float32)
(declare-const ?float64 Float128)
(declare-const ?float65 Float64)
(declare-const ?float66 Float16)
(declare-const ?float67 Float16)
(declare-const ?float68 Float64)
(declare-const ?float69 Float32)
(declare-const ?float70 Float16)
(declare-const ?float71 Float64)
(declare-const ?float72 Float32)
(declare-const ?float73 Float16)
(declare-const ?float74 Float128)
(declare-const ?float75 Float128)
(declare-const ?float76 Float64)
(declare-const ?float77 Float16)
(declare-const ?float78 Float32)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b0 #b01001 #b0111100111)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b0 #b10101101 #b01111101010011111011011)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b1 #b01011100 #b00010110011011010100100)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b1 #b00000001 #b00000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (fp.neg ?float71)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.abs ?float73)))
(declare-const ?float102 Float64)
(assert (= ?float102 (fp.div RTZ ?float71 ((_ to_fp 11 53) RTP ?float78))))
(declare-const ?float103 Float32)
(assert (= ?float103 (f33 ((_ to_fp 8 24) RTP ?float65) ((_ to_fp 11 53) RTZ ?float98))))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.add RTZ ?float61 ((_ to_fp 11 53) RTZ ?float63))))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.sqrt RNE ?float68)))
(declare-const ?float106 Float16)
(assert (= ?float106 (fp.abs ?float70)))
(declare-const ?float107 Float128)
(assert (= ?float107 (f1 ((_ to_fp 15 113) RNE ?float84) ((_ to_fp 15 113) RTN ?float67) ((_ to_fp 11 53) RTP ?float99) ?float94 ((_ to_fp 8 24) RTN ?float93) ((_ to_fp 5 11) RTP ?float85) ?float80)))
(declare-const ?float108 Float128)
(assert (= ?float108 (f49 ((_ to_fp 11 53) RTZ ?float82) ?float65 ((_ to_fp 8 24) RTP ?float74) ((_ to_fp 11 53) RTN ?float87))))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.roundToIntegral RTN ?float79)))
(declare-const ?float110 Float128)
(assert (= ?float110 (f24 ((_ to_fp 8 24) RTN ?float84) ((_ to_fp 8 24) RNE ?float87) ((_ to_fp 8 24) RTN ?float91) ?float98 ((_ to_fp 11 53) RNE ?float72) ((_ to_fp 8 24) RTP ?float85) ((_ to_fp 11 53) RTZ ?float109))))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.abs ?float85)))
(declare-const ?float112 Float128)
(assert (= ?float112 (fp.div RTN ?float64 ((_ to_fp 15 113) RTP ?float91))))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.mul RTP ((_ to_fp 11 53) RTN ?float94) ?float68)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.max ?float93 ?float104)))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.max ((_ to_fp 11 53) RTN ?float112) ?float60)))
(declare-const ?float116 Float32)
(assert (= ?float116 (f40 ?float76)))
(declare-const ?float117 Float128)
(assert (= ?float117 (f38 ((_ to_fp 15 113) RTP ?float114) ((_ to_fp 5 11) RTZ ?float60) ((_ to_fp 5 11) RTN ?float113) ((_ to_fp 5 11) RTZ ?float112) ((_ to_fp 5 11) RTP ?float82))))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.abs ?float73)))
(declare-const ?float119 Float128)
(assert (= ?float119 (f38 ((_ to_fp 15 113) RTP ?float78) ((_ to_fp 5 11) RNE ?float75) ((_ to_fp 5 11) RTP ?float107) ((_ to_fp 5 11) RTN ?float89) ?float101)))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.div RTN ((_ to_fp 11 53) RTN ?float82) ?float91)))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.neg ?float78)))
(declare-const ?float122 Float32)
(assert (= ?float122 (f19 ((_ to_fp 8 24) RTN ?float105))))
(declare-const ?float123 Float128)
(assert (= ?float123 (fp.min ?float79 ((_ to_fp 15 113) RNE ?float91))))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.mul RTN ((_ to_fp 8 24) RTZ ?float61) ?float72)))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.add RNE ?float100 ((_ to_fp 11 53) RTP ?float116))))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.mul RNE ?float92 ?float81)))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.div RTN ((_ to_fp 8 24) RNE ?float105) ?float92)))
(declare-const ?float128 Float16)
(assert (= ?float128 (f30 ((_ to_fp 5 11) RNE ?float110) ((_ to_fp 15 113) RTN ?float116) ((_ to_fp 5 11) RTP ?float117) ((_ to_fp 8 24) RTP ?float89) ((_ to_fp 5 11) RTZ ?float124) ((_ to_fp 15 113) RNE ?float121))))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.mul RNE ?float95 ((_ to_fp 8 24) RNE ?float117))))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.min ((_ to_fp 8 24) RNE ?float76) ?float97)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.max ?float61 ((_ to_fp 11 53) RTN ?float110))))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.abs ?float120)))
(declare-const ?float133 Float128)
(assert (= ?float133 (fp.add RTZ ?float75 ((_ to_fp 15 113) RTN ?float130))))
(declare-const ?float134 Float32)
(assert (= ?float134 (fp.sqrt RTZ ?float121)))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.sqrt RNE ?float129)))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.sqrt RTN ?float96)))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.neg ?float106)))
(declare-const ?float138 Float16)
(assert (= ?float138 (f20 ((_ to_fp 15 113) RTP ?float70) ((_ to_fp 5 11) RTN ?float109) ((_ to_fp 15 113) RTN ?float73) ((_ to_fp 5 11) RNE ?float123) ((_ to_fp 15 113) RTZ ?float67) ((_ to_fp 8 24) RNE ?float98) ((_ to_fp 8 24) RTP ?float79) ((_ to_fp 11 53) RTP ?float81) ((_ to_fp 15 113) RTN ?float71))))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.sqrt RTN ?float79)))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.max ?float82 ((_ to_fp 15 113) RTZ ?float94))))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.neg ?float112)))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.roundToIntegral RTN ?float67)))
(declare-const ?float143 Float16)
(assert (= ?float143 (fp.max ?float101 ((_ to_fp 5 11) RTN ?float120))))
(declare-const ?float144 Float128)
(assert (= ?float144 (fp.mul RTN ((_ to_fp 15 113) RTN ?float99) ?float139)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.neg ?float132)))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.neg ?float95)))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.add RTP ((_ to_fp 8 24) RNE ?float145) ?float134)))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.mul RTZ ((_ to_fp 11 53) RNE ?float139) ?float60)))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.sqrt RTP ?float70)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.gt ((_ to_fp 5 11) RTZ ?float122) ?float73)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isSubnormal ?float83)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isZero ?float139)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.gt ((_ to_fp 11 53) RTZ ?float84) ?float93)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.geq ?float105 ?float114)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isNormal ?float123)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.eq ?float76 ((_ to_fp 11 53) RTN ?float135))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.geq ((_ to_fp 15 113) RNE ?float120) ?float139)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isZero ?float120)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.eq ?float137 ((_ to_fp 5 11) RNE ?float126))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p5 ((_ to_fp 11 53) RNE ?float130) ?float110 ?float77 ((_ to_fp 8 24) RTZ ?float108))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isInfinite ?float139)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isZero ?float97)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNaN ?float68)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.geq ((_ to_fp 11 53) RNE ?float96) ?float132)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isNegative ?float123)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.leq ((_ to_fp 11 53) RNE ?float133) ?float93)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.geq ((_ to_fp 15 113) RTN ?float67) ?float123)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.lt ?float140 ((_ to_fp 15 113) RTZ ?float77))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.leq ?float87 ((_ to_fp 5 11) RTN ?float122))))
; FINAL ASSERT
(assert (and (and (and (and ?bool162 (or ?bool151 (or (and ?bool165)))) (or (or (or (or ?bool168) ?bool157 (or ?bool156)) ?bool157 (and (and ?bool153) (or ?bool163 ?bool157 ?bool158))) (or (or (or ?bool151 ?bool167 ?bool153)) (or (or ?bool164) (or ?bool168 ?bool154))) ?bool162) ?bool154) ?bool154 (or (and ?bool167 ?bool156))) ?bool157))
(check-sat)


-- iteration 43 --
(declare-fun f0 (Float128) Float128)
(declare-fun f1 (Float16 Float128) Float32)
(declare-fun f2 (Float16 Float16) Float128)
(declare-fun f3 (Float16 Float128 Float16 Float16 Float128) Float32)
(declare-fun f4 (Float32 Float16 Float32) Float64)
(declare-fun f5 (Float16 Float32 Float16 Float32) Float32)
(declare-fun f6 (Float32 Float32 Float16) Float128)
(declare-fun f7 (Float64 Float128 Float16 Float32 Float32 Float16 Float128 Float64 Float32 Float128) Float32)
(declare-fun f8 (Float16 Float64) Float64)
(declare-fun f9 (Float64 Float128 Float16 Float32 Float128 Float32 Float64 Float64) Float32)
(declare-fun f10 (Float64 Float32 Float32 Float64 Float64 Float32) Float128)
(declare-fun f11 (Float32 Float32 Float128 Float128 Float32 Float64 Float64 Float16) Float64)
(declare-fun f12 (Float64 Float128) Float32)
(declare-fun f13 (Float32 Float32 Float16 Float128 Float128 Float32 Float32) Float128)
(declare-fun f14 (Float64 Float16 Float32 Float16 Float16 Float128 Float128 Float16 Float64) Float16)
(declare-fun f15 (Float16 Float16 Float128 Float64) Float64)
(declare-fun f16 (Float64 Float64 Float32 Float64 Float64 Float16 Float128 Float128) Float32)
(declare-fun f17 (Float128 Float32 Float128 Float64 Float64) Float64)
(declare-fun f18 (Float16) Float128)
(declare-fun f19 (Float64 Float64 Float32 Float128 Float64 Float128 Float128 Float128 Float32) Float128)
(declare-fun f20 (Float16 Float16 Float128) Float128)
(declare-fun f21 (Float16 Float64 Float32 Float32 Float128 Float16 Float16 Float32 Float128) Float32)
(declare-fun f22 (Float16 Float32 Float128 Float16 Float64 Float16 Float16) Float16)
(declare-fun f23 (Float16) Float64)
(declare-fun f24 (Float16 Float128 Float64 Float128 Float32 Float32 Float32) Float128)
(declare-fun f25 (Float128) Float128)
(declare-fun f26 (Float128 Float64 Float128 Float16 Float128 Float16 Float16 Float64) Float16)
(declare-fun f27 (Float64 Float32 Float32) Float128)
(declare-fun f28 (Float64 Float64 Float16 Float32) Float64)
(declare-fun f29 (Float16 Float128 Float64 Float32 Float32 Float64) Float128)
(declare-fun f30 (Float32 Float128 Float32 Float64 Float64 Float32 Float32 Float16 Float16 Float16) Float64)
(declare-fun f31 (Float128 Float128 Float32 Float64 Float64 Float128 Float128 Float64 Float16 Float64) Float128)
(declare-fun f32 (Float128) Float128)
(declare-fun f33 (Float64 Float32 Float128 Float128) Float128)
(declare-fun f34 (Float128 Float32 Float32 Float32) Float32)
(declare-fun f35 (Float32 Float16 Float16 Float128) Float32)
(declare-fun f36 (Float64 Float32 Float16 Float128 Float64 Float64 Float64 Float16 Float64 Float16) Float64)
(declare-fun f37 (Float128 Float64) Float16)
(declare-fun f38 (Float64 Float32 Float32 Float64) Float128)
(declare-fun f39 (Float128) Float64)
(declare-fun f40 (Float32 Float64 Float64 Float32 Float32 Float64 Float16 Float32 Float16 Float64) Float128)
(declare-fun f41 (Float32) Float128)
(declare-fun f42 (Float64 Float32) Float16)
(declare-fun f43 (Float32 Float32 Float128 Float16 Float16 Float128) Float16)
(declare-fun f44 (Float64 Float16 Float128 Float16 Float128 Float64 Float128 Float16 Float128 Float16) Float16)
(declare-fun f45 (Float32 Float64 Float32 Float16 Float32) Float32)
(declare-fun f46 (Float32 Float128 Float16 Float64 Float16 Float16) Float32)
(declare-fun f47 (Float128 Float64 Float64 Float16 Float64 Float128 Float128 Float16) Float64)
(declare-fun f48 (Float64 Float32) Float128)
(declare-fun f49 (Float32 Float16 Float64 Float128 Float16 Float32 Float16 Float64 Float128) Float16)
(declare-fun p0 (Float32) Bool)
(declare-fun p1 (Float16 Float64 Float16 Float32 Float32 Float64 Float16 Float16) Bool)
(declare-fun p2 (Float128 Float64 Float32 Float64 Float16) Bool)
(declare-fun p3 (Float64 Float128 Float16 Float128 Float32 Float32) Bool)
(declare-fun p4 (Float64 Float128 Float32 Float16 Float128 Float16 Float128 Float64) Bool)
(declare-fun p5 (Float128 Float32 Float64 Float16) Bool)
(declare-fun p6 (Float128) Bool)
(declare-fun p7 (Float32 Float64 Float128 Float16 Float64 Float64 Float32 Float128 Float128) Bool)
(declare-fun p8 (Float32 Float16 Float128 Float64 Float16 Float128 Float128 Float32) Bool)
(declare-fun p9 (Float64 Float32 Float32 Float128 Float64 Float128 Float64 Float128 Float128 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float128)
(declare-const ?float62 Float128)
(declare-const ?float63 Float64)
(declare-const ?float64 Float16)
(declare-const ?float65 Float64)
(declare-const ?float66 Float32)
(declare-const ?float67 Float16)
(declare-const ?float68 Float128)
(declare-const ?float69 Float128)
(declare-const ?float70 Float64)
(declare-const ?float71 Float16)
(declare-const ?float72 Float16)
(declare-const ?float73 Float32)
(declare-const ?float74 Float64)
(declare-const ?float75 Float32)
(declare-const ?float76 Float64)
(declare-const ?float77 Float128)
(declare-const ?float78 Float16)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b0 #b10000100100 #b1100100100000111110000100111111011010001101001100101)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b1 #b001110001101101 #b1010100110101011011110001010010100011010001011101111000000110111001111001010101100000101011000110011100001111100)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b1 #b010111111001111 #b0000000001100101001111111000101111000100001101000010001110111110000111111010000010100111100100001000001111011011)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b0 #b00001 #b0110110100)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b1 #b00000000 #b00000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (f46 ((_ to_fp 8 24) RTP ?float68) ((_ to_fp 15 113) RTZ ?float63) ((_ to_fp 5 11) RNE ?float84) ((_ to_fp 11 53) RTN ?float89) ((_ to_fp 5 11) RTZ ?float96) ((_ to_fp 5 11) RTN ?float75))))
(declare-const ?float101 Float64)
(assert (= ?float101 (fp.add RTZ ?float91 ((_ to_fp 11 53) RTN ?float88))))
(declare-const ?float102 Float64)
(assert (= ?float102 (fp.abs ?float63)))
(declare-const ?float103 Float32)
(assert (= ?float103 (fp.neg ?float96)))
(declare-const ?float104 Float128)
(assert (= ?float104 (f24 ((_ to_fp 5 11) RTN ?float101) ((_ to_fp 15 113) RNE ?float102) ((_ to_fp 11 53) RTN ?float88) ?float68 ((_ to_fp 8 24) RTP ?float83) ((_ to_fp 8 24) RNE ?float68) ((_ to_fp 8 24) RNE ?float101))))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.div RTZ ?float99 ((_ to_fp 8 24) RTN ?float78))))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.abs ?float68)))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.roundToIntegral RTN ?float75)))
(declare-const ?float108 Float16)
(assert (= ?float108 (f44 ?float76 ?float72 ((_ to_fp 15 113) RTN ?float72) ((_ to_fp 5 11) RTN ?float80) ((_ to_fp 15 113) RTZ ?float107) ((_ to_fp 11 53) RTZ ?float89) ((_ to_fp 15 113) RTN ?float79) ((_ to_fp 5 11) RNE ?float91) ((_ to_fp 15 113) RTP ?float70) ((_ to_fp 5 11) RTZ ?float83))))
(declare-const ?float109 Float32)
(assert (= ?float109 (f12 ((_ to_fp 11 53) RTP ?float103) ((_ to_fp 15 113) RNE ?float91))))
(declare-const ?float110 Float128)
(assert (= ?float110 (f48 ((_ to_fp 11 53) RTP ?float62) ((_ to_fp 8 24) RTZ ?float98))))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.mul RNE ((_ to_fp 11 53) RTZ ?float72) ?float81)))
(declare-const ?float112 Float128)
(assert (= ?float112 (fp.mul RTP ((_ to_fp 15 113) RTP ?float78) ?float82)))
(declare-const ?float113 Float32)
(assert (= ?float113 (f34 ((_ to_fp 15 113) RTP ?float105) ((_ to_fp 8 24) RTZ ?float83) ((_ to_fp 8 24) RTZ ?float67) ((_ to_fp 8 24) RTN ?float61))))
(declare-const ?float114 Float128)
(assert (= ?float114 (fp.neg ?float89)))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.sub RTN ?float103 ((_ to_fp 8 24) RTN ?float61))))
(declare-const ?float116 Float32)
(assert (= ?float116 (f34 ((_ to_fp 15 113) RNE ?float74) ((_ to_fp 8 24) RNE ?float78) ?float96 ((_ to_fp 8 24) RTN ?float87))))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.roundToIntegral RNE ?float70)))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.neg ?float108)))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.max ?float65 ?float102)))
(declare-const ?float120 Float32)
(assert (= ?float120 (f46 ((_ to_fp 8 24) RNE ?float114) ((_ to_fp 15 113) RTP ?float111) ((_ to_fp 5 11) RTN ?float68) ?float117 ((_ to_fp 5 11) RTP ?float84) ((_ to_fp 5 11) RTN ?float87))))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.div RTP ?float107 ?float95)))
(declare-const ?float122 Float128)
(assert (= ?float122 (f20 ((_ to_fp 5 11) RTN ?float80) ((_ to_fp 5 11) RTZ ?float91) ((_ to_fp 15 113) RNE ?float102))))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.add RNE ((_ to_fp 11 53) RTN ?float82) ?float74)))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.min ((_ to_fp 11 53) RTP ?float72) ?float70)))
(declare-const ?float125 Float32)
(assert (= ?float125 (f21 ((_ to_fp 5 11) RTP ?float65) ((_ to_fp 11 53) RTN ?float89) ((_ to_fp 8 24) RNE ?float106) ?float107 ((_ to_fp 15 113) RNE ?float66) ((_ to_fp 5 11) RTN ?float77) ((_ to_fp 5 11) RTN ?float116) ((_ to_fp 8 24) RNE ?float88) ((_ to_fp 15 113) RNE ?float75))))
(declare-const ?float126 Float16)
(assert (= ?float126 (fp.neg ?float118)))
(declare-const ?float127 Float64)
(assert (= ?float127 (f17 ((_ to_fp 15 113) RTP ?float79) ?float109 ((_ to_fp 15 113) RTN ?float95) ((_ to_fp 11 53) RTN ?float116) ?float111)))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.neg ?float127)))
(declare-const ?float129 Float128)
(assert (= ?float129 (fp.max ((_ to_fp 15 113) RTN ?float101) ?float61)))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.min ((_ to_fp 8 24) RTN ?float82) ?float109)))
(declare-const ?float131 Float128)
(assert (= ?float131 (f32 ((_ to_fp 15 113) RTZ ?float100))))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.roundToIntegral RTP ?float76)))
(declare-const ?float133 Float128)
(assert (= ?float133 (fp.roundToIntegral RTP ?float62)))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.sub RTN ?float126 ?float126)))
(declare-const ?float135 Float64)
(assert (= ?float135 (fp.div RTZ ?float60 ((_ to_fp 11 53) RTP ?float88))))
(declare-const ?float136 Float32)
(assert (= ?float136 (fp.min ?float75 ((_ to_fp 8 24) RNE ?float97))))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.div RTN ?float119 ?float128)))
(declare-const ?float138 Float64)
(assert (= ?float138 (f8 ((_ to_fp 5 11) RTP ?float87) ((_ to_fp 11 53) RTZ ?float67))))
(declare-const ?float139 Float32)
(assert (= ?float139 (f16 ((_ to_fp 11 53) RNE ?float72) ((_ to_fp 11 53) RTN ?float136) ((_ to_fp 8 24) RTP ?float61) ((_ to_fp 11 53) RNE ?float99) ?float138 ((_ to_fp 5 11) RNE ?float122) ?float69 ((_ to_fp 15 113) RTN ?float97))))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.sub RTP ?float126 ?float78)))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.sqrt RTZ ?float126)))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.sqrt RTN ?float102)))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.min ?float138 ((_ to_fp 11 53) RTN ?float68))))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.add RTP ((_ to_fp 5 11) RTP ?float98) ?float86)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.sub RTP ?float97 ?float91)))
(declare-const ?float146 Float128)
(assert (= ?float146 (f13 ?float116 ((_ to_fp 8 24) RNE ?float86) ((_ to_fp 5 11) RTP ?float65) ((_ to_fp 15 113) RTN ?float85) ((_ to_fp 15 113) RTZ ?float93) ((_ to_fp 8 24) RNE ?float79) ((_ to_fp 8 24) RTZ ?float97))))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.abs ?float98)))
(declare-const ?float148 Float128)
(assert (= ?float148 (f40 ((_ to_fp 8 24) RTP ?float141) ?float117 ((_ to_fp 11 53) RTP ?float112) ?float96 ((_ to_fp 8 24) RTP ?float135) ((_ to_fp 11 53) RTN ?float147) ?float79 ?float125 ((_ to_fp 5 11) RTZ ?float95) ((_ to_fp 11 53) RTN ?float72))))
(declare-const ?float149 Float32)
(assert (= ?float149 (fp.abs ?float95)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isPositive ?float106)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isSubnormal ?float120)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isZero ?float95)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (p4 ?float135 ((_ to_fp 15 113) RTP ?float125) ((_ to_fp 8 24) RTN ?float67) ((_ to_fp 5 11) RTN ?float88) ?float114 ((_ to_fp 5 11) RTZ ?float143) ((_ to_fp 15 113) RTP ?float132) ?float81)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.gt ?float65 ?float83)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.eq ?float77 ((_ to_fp 15 113) RTP ?float109))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNegative ?float115)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNormal ?float149)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isInfinite ?float90)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p8 ((_ to_fp 8 24) RTN ?float117) ((_ to_fp 5 11) RTP ?float132) ((_ to_fp 15 113) RTZ ?float120) ?float111 ((_ to_fp 5 11) RTZ ?float63) ((_ to_fp 15 113) RTZ ?float115) ((_ to_fp 15 113) RTP ?float139) ((_ to_fp 8 24) RNE ?float97))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isInfinite ?float123)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isZero ?float88)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isInfinite ?float89)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (p4 ?float60 ?float104 ((_ to_fp 8 24) RTZ ?float72) ((_ to_fp 5 11) RTP ?float91) ((_ to_fp 15 113) RNE ?float119) ((_ to_fp 5 11) RTN ?float97) ((_ to_fp 15 113) RTP ?float141) ((_ to_fp 11 53) RTZ ?float64))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isNaN ?float104)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isZero ?float91)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.leq ((_ to_fp 11 53) RTP ?float75) ?float94)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.geq ?float113 ((_ to_fp 8 24) RTN ?float142))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (p4 ((_ to_fp 11 53) RTN ?float92) ((_ to_fp 15 113) RTN ?float90) ((_ to_fp 8 24) RNE ?float93) ((_ to_fp 5 11) RTN ?float112) ((_ to_fp 15 113) RTN ?float149) ?float108 ((_ to_fp 15 113) RTP ?float113) ?float94)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNaN ?float87)))
; FINAL ASSERT
(assert (or (and ?bool155 ?bool156 (and (and (and ?bool153 ?bool153) ?bool166 (or (and ?bool158 (and ?bool154 ?bool156 ?bool168) ?bool151))) (and (or (and ?bool169 ?bool169) (and (or ?bool152) ?bool165 ?bool150))) ?bool156)) (and (or ?bool159 ?bool164 ?bool163)) ?bool161))
(check-sat)


-- iteration 44 --
(declare-fun f0 (Float64 Float32 Float16 Float16 Float16) Float64)
(declare-fun f1 (Float32 Float32 Float64 Float128 Float32 Float32 Float16 Float32) Float32)
(declare-fun f2 (Float64 Float32 Float128) Float16)
(declare-fun f3 (Float64 Float128) Float16)
(declare-fun f4 (Float128) Float64)
(declare-fun f5 (Float16 Float32 Float32 Float64 Float64 Float64 Float128 Float64 Float32 Float16) Float64)
(declare-fun f6 (Float32 Float32 Float16 Float128 Float64 Float64 Float64 Float16 Float16 Float32) Float64)
(declare-fun f7 (Float16 Float32 Float16 Float128 Float32 Float64 Float128) Float32)
(declare-fun f8 (Float32 Float128 Float32 Float32) Float64)
(declare-fun f9 (Float16 Float64 Float32 Float64 Float32 Float16) Float32)
(declare-fun f10 (Float16 Float128 Float16 Float64) Float128)
(declare-fun f11 (Float64 Float64 Float128 Float128 Float128 Float128 Float64 Float64 Float32) Float128)
(declare-fun f12 (Float64 Float128 Float128 Float16 Float32) Float16)
(declare-fun f13 (Float64 Float16 Float32 Float32 Float16) Float64)
(declare-fun f14 (Float128 Float64 Float64 Float16 Float128 Float128 Float16 Float16 Float64) Float128)
(declare-fun f15 (Float16 Float32 Float64 Float128 Float64 Float64 Float16 Float16 Float16) Float64)
(declare-fun f16 (Float64 Float32 Float32 Float128 Float32) Float64)
(declare-fun f17 (Float64 Float64) Float128)
(declare-fun f18 (Float32 Float128 Float16 Float64 Float16 Float128 Float128 Float128 Float16) Float128)
(declare-fun f19 (Float32 Float128 Float128 Float16) Float32)
(declare-fun f20 (Float128) Float16)
(declare-fun f21 (Float32 Float64 Float16 Float64 Float16 Float32 Float32 Float16 Float64 Float128) Float16)
(declare-fun f22 (Float32 Float16 Float16 Float16 Float32) Float128)
(declare-fun f23 (Float16 Float64 Float128 Float32 Float16 Float64 Float16 Float64 Float32) Float16)
(declare-fun f24 (Float128 Float16) Float32)
(declare-fun f25 (Float64) Float128)
(declare-fun f26 (Float32 Float16 Float16 Float32 Float16 Float32) Float64)
(declare-fun f27 (Float32 Float16) Float32)
(declare-fun f28 (Float32 Float128) Float128)
(declare-fun f29 (Float16 Float64 Float128 Float128 Float128 Float32 Float64 Float64) Float64)
(declare-fun f30 (Float128 Float32 Float128 Float32 Float16) Float16)
(declare-fun f31 (Float16 Float128 Float16 Float16 Float64 Float16 Float64 Float32) Float16)
(declare-fun f32 (Float32 Float64 Float128 Float64 Float128) Float128)
(declare-fun f33 (Float16 Float128 Float32 Float16 Float16 Float16 Float32 Float128 Float64 Float64) Float64)
(declare-fun f34 (Float64 Float32 Float32 Float64 Float64 Float128 Float32 Float32) Float128)
(declare-fun f35 (Float64 Float16 Float32 Float64 Float128 Float16) Float128)
(declare-fun f36 (Float64) Float16)
(declare-fun f37 (Float64 Float128 Float32 Float64 Float128 Float64 Float128 Float32 Float16) Float128)
(declare-fun f38 (Float16 Float128 Float64) Float64)
(declare-fun f39 (Float32 Float128 Float16 Float32 Float16 Float128 Float128 Float16) Float32)
(declare-fun f40 (Float32 Float32 Float32 Float128 Float16 Float64 Float32) Float32)
(declare-fun f41 (Float16 Float128 Float128 Float64 Float16 Float32 Float64 Float128 Float32 Float128) Float128)
(declare-fun f42 (Float128 Float128 Float128 Float32 Float128 Float64 Float64 Float32 Float32) Float16)
(declare-fun f43 (Float16 Float32) Float64)
(declare-fun f44 (Float32 Float16) Float64)
(declare-fun f45 (Float64 Float64 Float16 Float64 Float128 Float128 Float32 Float128) Float16)
(declare-fun f46 (Float32 Float32 Float16 Float128) Float32)
(declare-fun f47 (Float32 Float64 Float32) Float16)
(declare-fun f48 (Float16) Float16)
(declare-fun f49 (Float16 Float32 Float128 Float32 Float16 Float16 Float16 Float16 Float16 Float128) Float32)
(declare-fun p0 (Float32 Float64 Float16 Float16 Float32 Float128 Float64 Float64 Float64) Bool)
(declare-fun p1 (Float16 Float64 Float32 Float32 Float32 Float32 Float64 Float128 Float16 Float128) Bool)
(declare-fun p2 (Float64 Float64) Bool)
(declare-fun p3 (Float128 Float16 Float64) Bool)
(declare-fun p4 (Float16 Float16 Float64 Float16 Float16 Float128 Float16 Float64 Float128 Float64) Bool)
(declare-fun p5 (Float64) Bool)
(declare-fun p6 (Float128 Float32 Float16) Bool)
(declare-fun p7 (Float32 Float32 Float64 Float64 Float128 Float32 Float64 Float64 Float16) Bool)
(declare-fun p8 (Float32 Float128) Bool)
(declare-fun p9 (Float32 Float32 Float128 Float128 Float16 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float32)
(declare-const ?float62 Float32)
(declare-const ?float63 Float128)
(declare-const ?float64 Float16)
(declare-const ?float65 Float16)
(declare-const ?float66 Float64)
(declare-const ?float67 Float128)
(declare-const ?float68 Float128)
(declare-const ?float69 Float32)
(declare-const ?float70 Float32)
(declare-const ?float71 Float128)
(declare-const ?float72 Float64)
(declare-const ?float73 Float64)
(declare-const ?float74 Float64)
(declare-const ?float75 Float64)
(declare-const ?float76 Float32)
(declare-const ?float77 Float64)
(declare-const ?float78 Float16)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float83 Float128)
(assert (= ?float83 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b0 #b11111111011 #b0011001100101000000010000101100101000100011010101110)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b1 #b11000101 #b01010001000010100101001)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b1 #b10110 #b0010010011)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.abs ?float95)))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.div RTN ((_ to_fp 15 113) RNE ?float73) ?float98)))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.roundToIntegral RTN ?float61)))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.max ((_ to_fp 11 53) RTN ?float67) ?float86)))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.neg ?float70)))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.abs ?float79)))
(declare-const ?float106 Float16)
(assert (= ?float106 (fp.sqrt RTZ ?float92)))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.add RTZ ?float88 ?float69)))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.sub RTN ?float69 ((_ to_fp 8 24) RTP ?float80))))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.max ((_ to_fp 5 11) RTN ?float104) ?float92)))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.abs ?float97)))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.abs ?float73)))
(declare-const ?float112 Float128)
(assert (= ?float112 (fp.min ?float81 ?float71)))
(declare-const ?float113 Float16)
(assert (= ?float113 (f47 ?float60 ((_ to_fp 11 53) RTP ?float85) ((_ to_fp 8 24) RNE ?float82))))
(declare-const ?float114 Float128)
(assert (= ?float114 (fp.div RTZ ?float68 ?float71)))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.mul RTP ?float111 ?float90)))
(declare-const ?float116 Float64)
(assert (= ?float116 (f0 ((_ to_fp 11 53) RNE ?float114) ((_ to_fp 8 24) RTP ?float115) ((_ to_fp 5 11) RTP ?float111) ((_ to_fp 5 11) RNE ?float62) ((_ to_fp 5 11) RTZ ?float111))))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.add RTP ((_ to_fp 15 113) RTP ?float76) ?float71)))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.abs ?float80)))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.sub RNE ((_ to_fp 5 11) RNE ?float114) ?float82)))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.mul RNE ?float112 ((_ to_fp 15 113) RNE ?float115))))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.roundToIntegral RTP ?float67)))
(declare-const ?float122 Float32)
(assert (= ?float122 (fp.abs ?float108)))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.roundToIntegral RNE ?float111)))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.sub RTZ ((_ to_fp 8 24) RTP ?float93) ?float69)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.sub RNE ?float62 ((_ to_fp 8 24) RTP ?float90))))
(declare-const ?float126 Float16)
(assert (= ?float126 (fp.roundToIntegral RTP ?float96)))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.div RTZ ?float88 ?float62)))
(declare-const ?float128 Float16)
(assert (= ?float128 (f21 ((_ to_fp 8 24) RNE ?float126) ((_ to_fp 11 53) RTN ?float124) ?float80 ((_ to_fp 11 53) RTP ?float95) ((_ to_fp 5 11) RTP ?float84) ((_ to_fp 8 24) RNE ?float81) ((_ to_fp 8 24) RTN ?float121) ?float93 ((_ to_fp 11 53) RTN ?float93) ((_ to_fp 15 113) RTP ?float118))))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.abs ?float76)))
(declare-const ?float130 Float64)
(assert (= ?float130 (f29 ((_ to_fp 5 11) RTZ ?float122) ((_ to_fp 11 53) RNE ?float127) ((_ to_fp 15 113) RTP ?float72) ((_ to_fp 15 113) RTZ ?float79) ?float121 ?float122 ((_ to_fp 11 53) RNE ?float62) ((_ to_fp 11 53) RNE ?float78))))
(declare-const ?float131 Float128)
(assert (= ?float131 (fp.abs ?float101)))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.sqrt RTP ?float87)))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.abs ?float90)))
(declare-const ?float134 Float32)
(assert (= ?float134 (fp.div RTN ?float107 ?float60)))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.max ((_ to_fp 15 113) RTZ ?float109) ?float120)))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.min ?float81 ((_ to_fp 15 113) RTN ?float110))))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.abs ?float83)))
(declare-const ?float138 Float64)
(assert (= ?float138 (fp.sub RTN ?float73 ((_ to_fp 11 53) RTP ?float93))))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.sub RNE ?float73 ((_ to_fp 11 53) RNE ?float113))))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.sqrt RNE ?float126)))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.div RTN ?float103 ((_ to_fp 11 53) RTN ?float76))))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.abs ?float106)))
(declare-const ?float143 Float64)
(assert (= ?float143 (f13 ((_ to_fp 11 53) RTP ?float108) ((_ to_fp 5 11) RTN ?float81) ?float124 ((_ to_fp 8 24) RTP ?float137) ((_ to_fp 5 11) RTN ?float134))))
(declare-const ?float144 Float128)
(assert (= ?float144 (fp.div RTP ((_ to_fp 15 113) RNE ?float79) ?float121)))
(declare-const ?float145 Float32)
(assert (= ?float145 (f49 ((_ to_fp 5 11) RNE ?float105) ((_ to_fp 8 24) RTZ ?float100) ?float114 ?float69 ((_ to_fp 5 11) RNE ?float105) ((_ to_fp 5 11) RNE ?float73) ((_ to_fp 5 11) RTP ?float74) ((_ to_fp 5 11) RTN ?float117) ?float110 ?float117)))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.div RTZ ?float83 ?float120)))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.sqrt RNE ?float137)))
(declare-const ?float148 Float64)
(assert (= ?float148 (f33 ((_ to_fp 5 11) RNE ?float129) ((_ to_fp 15 113) RTZ ?float79) ?float69 ((_ to_fp 5 11) RTP ?float122) ?float113 ((_ to_fp 5 11) RTZ ?float81) ((_ to_fp 8 24) RTP ?float99) ((_ to_fp 15 113) RTN ?float79) ((_ to_fp 11 53) RTP ?float132) ?float123)))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.mul RTN ((_ to_fp 15 113) RTP ?float125) ?float114)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p0 ((_ to_fp 8 24) RTZ ?float130) ((_ to_fp 11 53) RTP ?float71) ((_ to_fp 5 11) RTZ ?float134) ?float109 ?float134 ((_ to_fp 15 113) RTP ?float125) ?float115 ?float115 ?float91)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNaN ?float110)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isSubnormal ?float74)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNormal ?float141)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p0 ?float87 ((_ to_fp 11 53) RTP ?float71) ?float95 ((_ to_fp 5 11) RTZ ?float77) ((_ to_fp 8 24) RTN ?float112) ((_ to_fp 15 113) RTZ ?float132) ((_ to_fp 11 53) RNE ?float64) ((_ to_fp 11 53) RTN ?float93) ((_ to_fp 11 53) RNE ?float87))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.eq ?float98 ?float121)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.eq ((_ to_fp 11 53) RTZ ?float65) ?float86)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isZero ?float69)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNaN ?float102)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.lt ((_ to_fp 11 53) RTP ?float97) ?float133)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.eq ?float113 ?float97)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isPositive ?float149)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.gt ?float61 ?float105)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.geq ?float85 ?float65)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.lt ?float83 ((_ to_fp 15 113) RTP ?float62))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isNaN ?float123)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNormal ?float104)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isPositive ?float101)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (p7 ((_ to_fp 8 24) RNE ?float82) ((_ to_fp 8 24) RTN ?float135) ((_ to_fp 11 53) RTZ ?float67) ((_ to_fp 11 53) RNE ?float126) ((_ to_fp 15 113) RTZ ?float74) ((_ to_fp 8 24) RTP ?float96) ((_ to_fp 11 53) RTN ?float92) ?float133 ((_ to_fp 5 11) RTZ ?float138))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNormal ?float109)))
; FINAL ASSERT
(assert (or (and (and ?bool157 ?bool161)) ?bool150 ?bool164))
(check-sat)


-- iteration 45 --
(declare-fun f0 (Float32 Float64 Float128) Float16)
(declare-fun f1 (Float64 Float16 Float128 Float128 Float32 Float64 Float16) Float16)
(declare-fun f2 (Float32 Float128 Float16 Float32 Float32 Float16 Float16 Float16 Float16) Float128)
(declare-fun f3 (Float16 Float128 Float32) Float16)
(declare-fun f4 (Float16 Float64 Float16 Float128 Float128) Float16)
(declare-fun f5 (Float32 Float64 Float64 Float128) Float128)
(declare-fun f6 (Float16 Float64) Float16)
(declare-fun f7 (Float64 Float64) Float16)
(declare-fun f8 (Float64) Float16)
(declare-fun f9 (Float128 Float16 Float16 Float64 Float64 Float64 Float32 Float32 Float32 Float128) Float16)
(declare-fun f10 (Float16) Float64)
(declare-fun f11 (Float64 Float32 Float128 Float128 Float64 Float32 Float32 Float32 Float16) Float64)
(declare-fun f12 (Float64 Float128 Float16 Float128 Float128 Float64 Float128 Float16 Float32 Float16) Float32)
(declare-fun f13 (Float64 Float32 Float128) Float16)
(declare-fun f14 (Float32 Float64 Float64 Float128 Float128 Float32 Float128) Float64)
(declare-fun f15 (Float64 Float16) Float16)
(declare-fun f16 (Float64 Float32 Float64 Float64 Float128 Float128 Float64) Float128)
(declare-fun f17 (Float32 Float128 Float32) Float32)
(declare-fun f18 (Float16 Float32 Float64 Float128 Float64 Float32) Float128)
(declare-fun f19 (Float64 Float128 Float16 Float128 Float16) Float32)
(declare-fun f20 (Float128) Float64)
(declare-fun f21 (Float16 Float32 Float16 Float128 Float64) Float64)
(declare-fun f22 (Float128 Float128 Float32 Float32 Float64) Float128)
(declare-fun f23 (Float32 Float64 Float16 Float64 Float16 Float32 Float64 Float64 Float32 Float64) Float32)
(declare-fun f24 (Float128 Float16 Float64 Float32 Float64 Float32 Float64 Float64 Float16) Float128)
(declare-fun f25 (Float128 Float32 Float32 Float16 Float128 Float64) Float128)
(declare-fun f26 (Float16 Float128 Float64 Float128) Float128)
(declare-fun f27 (Float128) Float16)
(declare-fun f28 (Float128) Float32)
(declare-fun f29 (Float32 Float64 Float128 Float64) Float128)
(declare-fun f30 (Float16 Float32 Float64 Float64 Float32 Float64) Float64)
(declare-fun f31 (Float16 Float128 Float32 Float128 Float128 Float32 Float32) Float128)
(declare-fun f32 (Float64) Float32)
(declare-fun f33 (Float16) Float64)
(declare-fun f34 (Float16 Float64 Float64) Float128)
(declare-fun f35 (Float128 Float128 Float64 Float64 Float128 Float128) Float128)
(declare-fun f36 (Float128 Float16 Float16 Float128 Float128 Float32 Float64 Float16 Float16 Float128) Float128)
(declare-fun f37 (Float64 Float128 Float32 Float128 Float16 Float16 Float64 Float32 Float128 Float16) Float16)
(declare-fun f38 (Float16 Float128 Float64 Float128) Float64)
(declare-fun f39 (Float64 Float16) Float64)
(declare-fun f40 (Float16 Float16 Float16 Float16 Float32) Float64)
(declare-fun f41 (Float32 Float64 Float64 Float64 Float16 Float128 Float16 Float16 Float64 Float16) Float64)
(declare-fun f42 (Float32 Float128 Float128 Float16 Float32 Float32 Float64 Float32) Float64)
(declare-fun f43 (Float16 Float16 Float64 Float64) Float128)
(declare-fun f44 (Float16 Float64 Float64 Float32 Float32 Float16 Float64 Float128 Float128 Float128) Float32)
(declare-fun f45 (Float64) Float16)
(declare-fun f46 (Float64 Float16 Float64 Float32 Float128) Float128)
(declare-fun f47 (Float128 Float128 Float128 Float32 Float64) Float128)
(declare-fun f48 (Float64 Float64 Float32 Float16 Float128 Float32 Float32 Float32 Float16) Float32)
(declare-fun f49 (Float16 Float64 Float128 Float128 Float32 Float32) Float32)
(declare-fun p0 (Float16 Float128 Float16 Float64 Float64 Float16 Float64 Float64) Bool)
(declare-fun p1 (Float32 Float64 Float64 Float16 Float32 Float32 Float32) Bool)
(declare-fun p2 (Float16) Bool)
(declare-fun p3 (Float128 Float128 Float128 Float64 Float16) Bool)
(declare-fun p4 (Float128 Float128 Float64 Float64 Float32 Float16 Float16) Bool)
(declare-fun p5 (Float16 Float16 Float64 Float32) Bool)
(declare-fun p6 (Float32 Float64 Float32 Float32 Float64) Bool)
(declare-fun p7 (Float16 Float128 Float32 Float64 Float128 Float16 Float128 Float16 Float16 Float32) Bool)
(declare-fun p8 (Float64 Float32 Float64 Float128 Float64) Bool)
(declare-fun p9 (Float16 Float32 Float32 Float64 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float16)
(declare-const ?float62 Float64)
(declare-const ?float63 Float64)
(declare-const ?float64 Float32)
(declare-const ?float65 Float128)
(declare-const ?float66 Float16)
(declare-const ?float67 Float32)
(declare-const ?float68 Float64)
(declare-const ?float69 Float64)
(declare-const ?float70 Float64)
(declare-const ?float71 Float64)
(declare-const ?float72 Float128)
(declare-const ?float73 Float16)
(declare-const ?float74 Float16)
(declare-const ?float75 Float32)
(declare-const ?float76 Float128)
(declare-const ?float77 Float32)
(declare-const ?float78 Float64)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b0 #b01001 #b0110101001)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b1 #b10001000011 #b1100100011011101001001000101110001000110011101110100)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b1 #b00110101001 #b0000000100000111011010000111010001011010100010000010)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b1 #b01101 #b0110111001)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b11100010010 #b0011110011111110000111111001100010000110011010011101)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b1 #b01100011 #b00100110111011011000010)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b1 #b11101010 #b00110100001110111110111)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b1 #b00000 #b0000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (f36 ((_ to_fp 15 113) RTN ?float86) ((_ to_fp 5 11) RTN ?float79) ((_ to_fp 5 11) RTN ?float65) ?float72 ((_ to_fp 15 113) RTZ ?float62) ?float81 ?float69 ?float99 ((_ to_fp 5 11) RTZ ?float69) ((_ to_fp 15 113) RTP ?float79))))
(declare-const ?float101 Float64)
(assert (= ?float101 (fp.abs ?float62)))
(declare-const ?float102 Float16)
(assert (= ?float102 (f4 ?float99 ?float70 ((_ to_fp 5 11) RTN ?float77) ((_ to_fp 15 113) RNE ?float78) ?float95)))
(declare-const ?float103 Float64)
(assert (= ?float103 (f11 ((_ to_fp 11 53) RTP ?float98) ((_ to_fp 8 24) RTZ ?float84) ?float65 ((_ to_fp 15 113) RTN ?float85) ?float101 ((_ to_fp 8 24) RNE ?float100) ((_ to_fp 8 24) RTN ?float85) ((_ to_fp 8 24) RTN ?float90) ((_ to_fp 5 11) RTP ?float89))))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.div RTZ ?float86 ((_ to_fp 11 53) RNE ?float60))))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.abs ?float74)))
(declare-const ?float106 Float16)
(assert (= ?float106 (fp.sub RTZ ((_ to_fp 5 11) RNE ?float93) ?float61)))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.sub RTZ ?float81 ((_ to_fp 8 24) RTZ ?float71))))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.roundToIntegral RNE ?float77)))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.add RNE ?float101 ((_ to_fp 11 53) RTP ?float72))))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.neg ?float62)))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.abs ?float64)))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.max ?float111 ?float108)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.add RTP ?float78 ?float104)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.div RTZ ?float91 ?float71)))
(declare-const ?float115 Float16)
(assert (= ?float115 (fp.min ?float66 ((_ to_fp 5 11) RTN ?float94))))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.max ((_ to_fp 11 53) RTN ?float95) ?float104)))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.add RTZ ((_ to_fp 15 113) RTN ?float88) ?float100)))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.mul RTZ ((_ to_fp 15 113) RNE ?float116) ?float100)))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.max ((_ to_fp 8 24) RTP ?float103) ?float97)))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.add RNE ((_ to_fp 11 53) RTP ?float96) ?float110)))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.max ((_ to_fp 8 24) RNE ?float106) ?float94)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.neg ?float61)))
(declare-const ?float123 Float128)
(assert (= ?float123 (f31 ((_ to_fp 5 11) RTZ ?float69) ?float95 ?float64 ((_ to_fp 15 113) RTP ?float62) ?float117 ((_ to_fp 8 24) RTP ?float90) ((_ to_fp 8 24) RTN ?float92))))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.div RTP ((_ to_fp 8 24) RTZ ?float118) ?float60)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.abs ?float77)))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.roundToIntegral RTN ?float72)))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.roundToIntegral RTN ?float85)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.div RTZ ?float81 ((_ to_fp 8 24) RTN ?float89))))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.max ?float109 ((_ to_fp 11 53) RNE ?float128))))
(declare-const ?float130 Float128)
(assert (= ?float130 (f16 ?float114 ?float79 ?float70 ?float86 ((_ to_fp 15 113) RTN ?float81) ((_ to_fp 15 113) RTN ?float87) ((_ to_fp 11 53) RNE ?float87))))
(declare-const ?float131 Float32)
(assert (= ?float131 (f23 ((_ to_fp 8 24) RTZ ?float82) ((_ to_fp 11 53) RTN ?float87) ?float102 ?float101 ((_ to_fp 5 11) RTZ ?float125) ((_ to_fp 8 24) RNE ?float69) ((_ to_fp 11 53) RTZ ?float85) ((_ to_fp 11 53) RTN ?float105) ?float108 ((_ to_fp 11 53) RTN ?float130))))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.abs ?float90)))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.div RTZ ?float112 ((_ to_fp 8 24) RNE ?float100))))
(declare-const ?float134 Float64)
(assert (= ?float134 (fp.abs ?float84)))
(declare-const ?float135 Float128)
(assert (= ?float135 (f35 ((_ to_fp 15 113) RTP ?float77) ((_ to_fp 15 113) RTP ?float120) ((_ to_fp 11 53) RTZ ?float73) ?float83 ((_ to_fp 15 113) RTZ ?float122) ?float95)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.div RTZ ?float82 ?float85)))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.roundToIntegral RTP ?float104)))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.mul RNE ?float115 ?float90)))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.sub RTP ((_ to_fp 15 113) RTN ?float127) ?float89)))
(declare-const ?float140 Float128)
(assert (= ?float140 (f18 ((_ to_fp 5 11) RTZ ?float134) ((_ to_fp 8 24) RTZ ?float84) ?float70 ?float118 ((_ to_fp 11 53) RTP ?float89) ?float112)))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.abs ?float113)))
(declare-const ?float142 Float32)
(assert (= ?float142 (fp.sub RTZ ?float81 ?float75)))
(declare-const ?float143 Float32)
(assert (= ?float143 (f44 ((_ to_fp 5 11) RTP ?float68) ((_ to_fp 11 53) RTZ ?float108) ((_ to_fp 11 53) RTZ ?float74) ((_ to_fp 8 24) RTZ ?float129) ((_ to_fp 8 24) RTN ?float126) ((_ to_fp 5 11) RTN ?float87) ?float78 ((_ to_fp 15 113) RTZ ?float90) ((_ to_fp 15 113) RTZ ?float110) ((_ to_fp 15 113) RTP ?float94))))
(declare-const ?float144 Float64)
(assert (= ?float144 (f30 ?float99 ?float142 ((_ to_fp 11 53) RTZ ?float88) ((_ to_fp 11 53) RTZ ?float108) ?float60 ((_ to_fp 11 53) RNE ?float99))))
(declare-const ?float145 Float16)
(assert (= ?float145 (fp.neg ?float102)))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.mul RTP ?float64 ?float133)))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.neg ?float107)))
(declare-const ?float148 Float32)
(assert (= ?float148 (fp.neg ?float131)))
(declare-const ?float149 Float32)
(assert (= ?float149 (fp.roundToIntegral RTZ ?float112)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p1 ?float149 ?float84 ((_ to_fp 11 53) RNE ?float107) ((_ to_fp 5 11) RTN ?float123) ((_ to_fp 8 24) RNE ?float69) ?float107 ((_ to_fp 8 24) RTN ?float78))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.lt ?float131 ((_ to_fp 8 24) RTN ?float132))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.leq ((_ to_fp 15 113) RTN ?float133) ?float117)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isPositive ?float149)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p9 ((_ to_fp 5 11) RTN ?float89) ((_ to_fp 8 24) RTN ?float117) ?float108 ?float62 ((_ to_fp 15 113) RTN ?float84))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isSubnormal ?float73)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isSubnormal ?float125)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p9 ?float80 ((_ to_fp 8 24) RTN ?float132) ?float112 ((_ to_fp 11 53) RTZ ?float143) ((_ to_fp 15 113) RTP ?float113))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNaN ?float135)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.geq ?float78 ((_ to_fp 11 53) RTP ?float125))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.lt ?float78 ?float84)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isPositive ?float92)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isInfinite ?float147)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (p7 ((_ to_fp 5 11) RTZ ?float83) ((_ to_fp 15 113) RTP ?float60) ((_ to_fp 8 24) RNE ?float70) ((_ to_fp 11 53) RTN ?float138) ((_ to_fp 15 113) RTZ ?float115) ((_ to_fp 5 11) RTP ?float141) ?float126 ?float127 ((_ to_fp 5 11) RTZ ?float147) ?float97)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.lt ?float85 ((_ to_fp 5 11) RTZ ?float131))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isNaN ?float98)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNormal ?float76)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.lt ((_ to_fp 5 11) RTN ?float146) ?float99)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isInfinite ?float121)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isPositive ?float77)))
; FINAL ASSERT
(assert (and (and ?bool162) (or (and (and ?bool162 ?bool162) ?bool158) (and ?bool155 ?bool165) (and (and (or ?bool162 ?bool168 ?bool166) ?bool164) (or ?bool158)))))
(check-sat)


-- iteration 46 --
(declare-fun f0 (Float16 Float128) Float16)
(declare-fun f1 (Float128 Float64 Float32) Float128)
(declare-fun f2 (Float128 Float64 Float64 Float128 Float32 Float32) Float64)
(declare-fun f3 (Float128 Float32 Float128 Float16 Float32 Float128 Float128 Float64 Float128 Float64) Float32)
(declare-fun f4 (Float32 Float16 Float64 Float16 Float64 Float128) Float128)
(declare-fun f5 (Float128 Float128 Float64 Float16 Float128 Float64 Float32 Float16 Float32) Float32)
(declare-fun f6 (Float32 Float128 Float128) Float32)
(declare-fun f7 (Float64 Float32 Float128 Float32) Float64)
(declare-fun f8 (Float128 Float64 Float16 Float64 Float16 Float64) Float32)
(declare-fun f9 (Float64 Float64 Float32 Float32) Float16)
(declare-fun f10 (Float16 Float128 Float16 Float16 Float128 Float128 Float16 Float64 Float128) Float64)
(declare-fun f11 (Float16 Float32 Float16 Float64 Float64 Float16 Float16 Float64 Float64) Float16)
(declare-fun f12 (Float128 Float128 Float64 Float64 Float64 Float64) Float32)
(declare-fun f13 (Float16 Float32) Float16)
(declare-fun f14 (Float128 Float128 Float128) Float16)
(declare-fun f15 (Float128 Float16) Float16)
(declare-fun f16 (Float64 Float32 Float64) Float64)
(declare-fun f17 (Float128 Float128 Float64 Float64 Float32 Float128 Float64 Float16 Float128) Float128)
(declare-fun f18 (Float64 Float16 Float16 Float16) Float128)
(declare-fun f19 (Float32 Float64) Float64)
(declare-fun f20 (Float16 Float32 Float128 Float128 Float64) Float32)
(declare-fun f21 (Float64 Float64 Float128 Float64) Float16)
(declare-fun f22 (Float64 Float64 Float32 Float64 Float128 Float32 Float32 Float128 Float64 Float32) Float64)
(declare-fun f23 (Float128) Float32)
(declare-fun f24 (Float128 Float128 Float64) Float16)
(declare-fun f25 (Float16 Float16 Float64 Float64 Float64) Float128)
(declare-fun f26 (Float32 Float64) Float32)
(declare-fun f27 (Float16 Float128 Float32 Float64 Float64 Float64 Float64 Float64) Float32)
(declare-fun f28 (Float16 Float32 Float128 Float64 Float16 Float32 Float32 Float16) Float16)
(declare-fun f29 (Float64 Float128) Float32)
(declare-fun f30 (Float32 Float32 Float64 Float32) Float64)
(declare-fun f31 (Float16 Float16 Float16 Float128 Float64) Float16)
(declare-fun f32 (Float32 Float16 Float64 Float64 Float64 Float16 Float32 Float32) Float64)
(declare-fun f33 (Float128 Float16 Float16 Float16 Float64) Float32)
(declare-fun f34 (Float64 Float16 Float64 Float64 Float32 Float64 Float16) Float64)
(declare-fun f35 (Float64 Float16 Float128 Float32 Float32 Float64 Float16) Float32)
(declare-fun f36 (Float32 Float128 Float32 Float16 Float16 Float16 Float64 Float16 Float64) Float128)
(declare-fun f37 (Float64 Float128 Float64 Float32 Float32 Float128 Float128) Float16)
(declare-fun f38 (Float64 Float16 Float128 Float128 Float128) Float128)
(declare-fun f39 (Float128) Float64)
(declare-fun f40 (Float32 Float64 Float16 Float16) Float16)
(declare-fun f41 (Float32 Float128 Float32 Float16 Float16 Float16) Float64)
(declare-fun f42 (Float16 Float64 Float16 Float64 Float16 Float128 Float128) Float32)
(declare-fun f43 (Float64 Float32 Float128 Float16 Float32 Float128) Float16)
(declare-fun f44 (Float128 Float128 Float16 Float16 Float64) Float64)
(declare-fun f45 (Float64) Float16)
(declare-fun f46 (Float32 Float64 Float64 Float128 Float128 Float32) Float128)
(declare-fun f47 (Float64 Float64 Float64 Float128 Float128 Float16) Float32)
(declare-fun f48 (Float128) Float32)
(declare-fun f49 (Float128 Float64 Float128 Float64 Float32 Float128 Float64 Float64 Float32) Float64)
(declare-fun p0 (Float64 Float128 Float16 Float32 Float128 Float128 Float64) Bool)
(declare-fun p1 (Float16 Float64 Float128 Float128 Float64 Float32 Float32) Bool)
(declare-fun p2 (Float32 Float32 Float128 Float16 Float128 Float16 Float16 Float128 Float64 Float32) Bool)
(declare-fun p3 (Float32 Float32 Float16 Float128 Float128 Float16 Float32) Bool)
(declare-fun p4 (Float128 Float64 Float16 Float16 Float64 Float128 Float16 Float32 Float32) Bool)
(declare-fun p5 (Float32 Float128 Float16 Float64) Bool)
(declare-fun p6 (Float128 Float16 Float64 Float128 Float16) Bool)
(declare-fun p7 (Float64 Float16 Float64 Float32 Float128 Float16 Float128 Float128 Float16) Bool)
(declare-fun p8 (Float16 Float32 Float16 Float128) Bool)
(declare-fun p9 (Float128 Float128 Float16 Float128 Float128 Float128 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float64)
(declare-const ?float62 Float64)
(declare-const ?float63 Float128)
(declare-const ?float64 Float16)
(declare-const ?float65 Float128)
(declare-const ?float66 Float16)
(declare-const ?float67 Float128)
(declare-const ?float68 Float16)
(declare-const ?float69 Float32)
(declare-const ?float70 Float16)
(declare-const ?float71 Float16)
(declare-const ?float72 Float16)
(declare-const ?float73 Float16)
(declare-const ?float74 Float128)
(declare-const ?float75 Float32)
(declare-const ?float76 Float16)
(declare-const ?float77 Float32)
(declare-const ?float78 Float128)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b0 #b11001011 #b00001110000011011010110)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float92 Float64)
(assert (= ?float92 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b0 #b11101 #b1000000010)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b11000 #b1010001010)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b1 #b01010110001 #b0001010110000000111011010011110010010010010001101001)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (f41 ((_ to_fp 8 24) RNE ?float93) ((_ to_fp 15 113) RTP ?float94) ((_ to_fp 8 24) RNE ?float79) ((_ to_fp 5 11) RTZ ?float85) ((_ to_fp 5 11) RTN ?float91) ((_ to_fp 5 11) RNE ?float95))))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.abs ?float71)))
(declare-const ?float102 Float32)
(assert (= ?float102 (f42 ((_ to_fp 5 11) RNE ?float62) ((_ to_fp 11 53) RTZ ?float85) ((_ to_fp 5 11) RTP ?float74) ((_ to_fp 11 53) RTZ ?float91) ?float93 ((_ to_fp 15 113) RTZ ?float80) ((_ to_fp 15 113) RTZ ?float99))))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.sqrt RTZ ?float64)))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.abs ?float82)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.sqrt RNE ?float90)))
(declare-const ?float106 Float16)
(assert (= ?float106 (fp.min ?float103 ((_ to_fp 5 11) RNE ?float61))))
(declare-const ?float107 Float128)
(assert (= ?float107 (fp.max ?float65 ?float63)))
(declare-const ?float108 Float16)
(assert (= ?float108 (fp.abs ?float97)))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.add RNE ?float100 ?float61)))
(declare-const ?float110 Float64)
(assert (= ?float110 (f34 ((_ to_fp 11 53) RTN ?float66) ((_ to_fp 5 11) RTZ ?float63) ((_ to_fp 11 53) RNE ?float97) ((_ to_fp 11 53) RTN ?float93) ((_ to_fp 8 24) RTZ ?float74) ?float62 ((_ to_fp 5 11) RNE ?float63))))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.sub RNE ?float101 ?float60)))
(declare-const ?float112 Float128)
(assert (= ?float112 (f46 ((_ to_fp 8 24) RTP ?float80) ?float92 ((_ to_fp 11 53) RTP ?float67) ((_ to_fp 15 113) RTN ?float105) ((_ to_fp 15 113) RTP ?float108) ((_ to_fp 8 24) RNE ?float80))))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.mul RTP ((_ to_fp 8 24) RTN ?float74) ?float69)))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.add RTN ?float82 ?float103)))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.min ?float79 ?float79)))
(declare-const ?float116 Float64)
(assert (= ?float116 (f49 ((_ to_fp 15 113) RTP ?float66) ((_ to_fp 11 53) RTP ?float77) ?float115 ?float94 ((_ to_fp 8 24) RTP ?float101) ((_ to_fp 15 113) RTZ ?float61) ?float90 ((_ to_fp 11 53) RTN ?float66) ((_ to_fp 8 24) RTZ ?float64))))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.mul RTP ?float68 ((_ to_fp 5 11) RNE ?float116))))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.neg ?float73)))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.abs ?float84)))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.sub RTZ ?float115 ?float91)))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.neg ?float85)))
(declare-const ?float122 Float64)
(assert (= ?float122 (fp.add RTN ?float90 ?float100)))
(declare-const ?float123 Float128)
(assert (= ?float123 (f1 ((_ to_fp 15 113) RTP ?float109) ?float99 ((_ to_fp 8 24) RTN ?float72))))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.abs ?float95)))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.neg ?float90)))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.abs ?float69)))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.div RTZ ((_ to_fp 5 11) RTZ ?float89) ?float88)))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.neg ?float109)))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.min ?float108 ((_ to_fp 5 11) RTZ ?float115))))
(declare-const ?float130 Float64)
(assert (= ?float130 (f22 ((_ to_fp 11 53) RTZ ?float82) ?float92 ((_ to_fp 8 24) RNE ?float96) ((_ to_fp 11 53) RTP ?float88) ((_ to_fp 15 113) RTP ?float114) ?float119 ((_ to_fp 8 24) RTN ?float129) ((_ to_fp 15 113) RNE ?float71) ((_ to_fp 11 53) RTN ?float113) ((_ to_fp 8 24) RTP ?float64))))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.sqrt RTN ?float93)))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.abs ?float115)))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.max ?float125 ?float116)))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.add RTP ?float76 ((_ to_fp 5 11) RTN ?float94))))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.div RTN ?float96 ?float103)))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.add RTP ((_ to_fp 11 53) RTZ ?float124) ?float90)))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.abs ?float129)))
(declare-const ?float138 Float16)
(assert (= ?float138 (f28 ((_ to_fp 5 11) RTZ ?float120) ((_ to_fp 8 24) RTP ?float94) ((_ to_fp 15 113) RNE ?float99) ((_ to_fp 11 53) RTZ ?float69) ((_ to_fp 5 11) RTZ ?float79) ((_ to_fp 8 24) RTZ ?float122) ((_ to_fp 8 24) RTP ?float132) ((_ to_fp 5 11) RTN ?float78))))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.roundToIntegral RTN ?float89)))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.mul RTN ((_ to_fp 5 11) RTZ ?float139) ?float88)))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.sub RNE ((_ to_fp 11 53) RTP ?float93) ?float109)))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.max ?float87 ((_ to_fp 15 113) RTZ ?float106))))
(declare-const ?float143 Float32)
(assert (= ?float143 (fp.roundToIntegral RTZ ?float84)))
(declare-const ?float144 Float128)
(assert (= ?float144 (fp.div RTP ((_ to_fp 15 113) RTN ?float108) ?float91)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.sub RNE ((_ to_fp 11 53) RTZ ?float69) ?float125)))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.sqrt RTZ ?float77)))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.sqrt RTZ ?float115)))
(declare-const ?float148 Float64)
(assert (= ?float148 (f19 ((_ to_fp 8 24) RNE ?float92) ((_ to_fp 11 53) RTP ?float66))))
(declare-const ?float149 Float32)
(assert (= ?float149 (fp.mul RNE ?float83 ?float75)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isNegative ?float113)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.eq ((_ to_fp 11 53) RTZ ?float87) ?float122)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (p5 ((_ to_fp 8 24) RNE ?float132) ((_ to_fp 15 113) RTP ?float122) ?float137 ((_ to_fp 11 53) RTN ?float119))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isSubnormal ?float110)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isZero ?float116)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.geq ?float71 ?float60)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.gt ((_ to_fp 15 113) RTZ ?float75) ?float87)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p1 ((_ to_fp 5 11) RTZ ?float63) ((_ to_fp 11 53) RTZ ?float106) ((_ to_fp 15 113) RTN ?float81) ((_ to_fp 15 113) RTZ ?float101) ((_ to_fp 11 53) RNE ?float103) ((_ to_fp 8 24) RNE ?float123) ((_ to_fp 8 24) RNE ?float78))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p2 ((_ to_fp 8 24) RTZ ?float99) ((_ to_fp 8 24) RTZ ?float147) ((_ to_fp 15 113) RNE ?float70) ((_ to_fp 5 11) RNE ?float65) ?float65 ?float82 ((_ to_fp 5 11) RTN ?float112) ((_ to_fp 15 113) RTP ?float76) ((_ to_fp 11 53) RTP ?float86) ((_ to_fp 8 24) RTN ?float89))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isSubnormal ?float108)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.lt ((_ to_fp 15 113) RNE ?float90) ?float79)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isInfinite ?float83)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.eq ?float124 ((_ to_fp 8 24) RTZ ?float142))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNaN ?float143)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isSubnormal ?float121)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isNaN ?float131)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isZero ?float125)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p2 ((_ to_fp 8 24) RTN ?float74) ((_ to_fp 8 24) RTZ ?float140) ((_ to_fp 15 113) RTZ ?float122) ((_ to_fp 5 11) RTP ?float125) ((_ to_fp 15 113) RNE ?float129) ((_ to_fp 5 11) RTN ?float112) ((_ to_fp 5 11) RTP ?float125) ((_ to_fp 15 113) RTZ ?float95) ?float61 ((_ to_fp 8 24) RTZ ?float91))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.eq ((_ to_fp 8 24) RTN ?float100) ?float102)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p6 ((_ to_fp 15 113) RTN ?float108) ((_ to_fp 5 11) RTN ?float109) ((_ to_fp 11 53) RTP ?float70) ?float112 ((_ to_fp 5 11) RNE ?float91))))
; FINAL ASSERT
(assert (and (or (or (or ?bool150 ?bool167 (or (or ?bool154 ?bool151 ?bool165) ?bool150 (and (or ?bool153 ?bool160) ?bool164 (and ?bool150 ?bool156)))) ?bool157) (or ?bool155 ?bool164) (and ?bool158 ?bool168 ?bool154)) ?bool158))
(check-sat)


-- iteration 47 --
(declare-fun f0 (Float128 Float128 Float16 Float32 Float32 Float64) Float128)
(declare-fun f1 (Float32 Float128 Float16 Float32 Float32) Float64)
(declare-fun f2 (Float64 Float64 Float128 Float16 Float128) Float16)
(declare-fun f3 (Float64 Float32 Float16 Float32 Float16 Float16 Float16 Float128) Float64)
(declare-fun f4 (Float64 Float32 Float16) Float32)
(declare-fun f5 (Float16 Float32 Float16 Float32 Float64 Float64) Float128)
(declare-fun f6 (Float64) Float128)
(declare-fun f7 (Float16) Float32)
(declare-fun f8 (Float16 Float64 Float64 Float64 Float16) Float64)
(declare-fun f9 (Float32 Float32) Float32)
(declare-fun f10 (Float64 Float32 Float32 Float64 Float16 Float64 Float32) Float64)
(declare-fun f11 (Float128 Float64 Float32 Float16 Float32 Float16 Float16) Float16)
(declare-fun f12 (Float16 Float128 Float128 Float128 Float16 Float128 Float128 Float128 Float128) Float16)
(declare-fun f13 (Float32 Float32) Float64)
(declare-fun f14 (Float64 Float128 Float32 Float32) Float16)
(declare-fun f15 (Float128 Float32 Float16 Float64) Float64)
(declare-fun f16 (Float32 Float32 Float64 Float16 Float128 Float128) Float64)
(declare-fun f17 (Float128 Float32 Float64 Float32) Float128)
(declare-fun f18 (Float64 Float16 Float16 Float16 Float64 Float16 Float16 Float32 Float32) Float32)
(declare-fun f19 (Float64 Float64) Float32)
(declare-fun f20 (Float128 Float128 Float16) Float64)
(declare-fun f21 (Float128 Float16 Float64 Float128 Float16 Float64 Float32 Float64) Float128)
(declare-fun f22 (Float16 Float64 Float16 Float16) Float16)
(declare-fun f23 (Float32 Float16) Float32)
(declare-fun f24 (Float32 Float64 Float16 Float32 Float64 Float64 Float32 Float64 Float16 Float16) Float64)
(declare-fun f25 (Float64 Float64 Float32 Float16) Float32)
(declare-fun f26 (Float32 Float16 Float128 Float128 Float64 Float16 Float32) Float128)
(declare-fun f27 (Float32 Float64 Float128) Float128)
(declare-fun f28 (Float32 Float16 Float32 Float32 Float32 Float16 Float32 Float16 Float16) Float32)
(declare-fun f29 (Float16 Float64 Float16 Float128 Float16) Float64)
(declare-fun f30 (Float64 Float128 Float16 Float32 Float64 Float16 Float64 Float16 Float32) Float64)
(declare-fun f31 (Float64) Float32)
(declare-fun f32 (Float32) Float16)
(declare-fun f33 (Float128 Float32 Float16 Float32 Float32 Float16 Float128 Float128 Float16 Float16) Float32)
(declare-fun f34 (Float64 Float64 Float32 Float128 Float128 Float64 Float128) Float32)
(declare-fun f35 (Float64 Float128 Float64 Float64 Float32 Float64 Float64 Float64) Float16)
(declare-fun f36 (Float32 Float32 Float16 Float32 Float16 Float16 Float32) Float32)
(declare-fun f37 (Float64 Float32 Float128 Float64 Float32 Float32 Float64 Float16 Float128) Float16)
(declare-fun f38 (Float16 Float16 Float32 Float32 Float64 Float32 Float64 Float32) Float64)
(declare-fun f39 (Float16 Float16 Float32 Float128 Float128 Float128 Float32 Float32 Float64 Float16) Float128)
(declare-fun f40 (Float64 Float32 Float32 Float16) Float16)
(declare-fun f41 (Float16 Float32 Float16 Float64) Float16)
(declare-fun f42 (Float32 Float64 Float64 Float16 Float64 Float32 Float32 Float128) Float64)
(declare-fun f43 (Float16 Float16 Float16 Float64) Float128)
(declare-fun f44 (Float32 Float64) Float16)
(declare-fun f45 (Float32 Float64 Float16 Float32 Float32 Float32 Float16 Float32 Float32 Float16) Float32)
(declare-fun f46 (Float32 Float32 Float128 Float64 Float16 Float16 Float64 Float64 Float128) Float32)
(declare-fun f47 (Float16 Float128 Float64 Float16) Float128)
(declare-fun f48 (Float16 Float32) Float128)
(declare-fun f49 (Float16 Float32 Float32 Float64) Float128)
(declare-fun p0 (Float64 Float16 Float64 Float16 Float16 Float32 Float64 Float64 Float32 Float64) Bool)
(declare-fun p1 (Float64 Float16 Float32) Bool)
(declare-fun p2 (Float16 Float128 Float16 Float32 Float16 Float16 Float16) Bool)
(declare-fun p3 (Float64 Float64 Float32 Float32) Bool)
(declare-fun p4 (Float16 Float16 Float32 Float64) Bool)
(declare-fun p5 (Float128) Bool)
(declare-fun p6 (Float64 Float32 Float64 Float128) Bool)
(declare-fun p7 (Float16 Float32 Float128 Float128 Float32) Bool)
(declare-fun p8 (Float128 Float16 Float32 Float64 Float128 Float128 Float128 Float32 Float128 Float16) Bool)
(declare-fun p9 (Float64 Float128 Float16 Float16 Float32 Float64 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float16)
(declare-const ?float62 Float128)
(declare-const ?float63 Float16)
(declare-const ?float64 Float32)
(declare-const ?float65 Float64)
(declare-const ?float66 Float128)
(declare-const ?float67 Float64)
(declare-const ?float68 Float64)
(declare-const ?float69 Float16)
(declare-const ?float70 Float16)
(declare-const ?float71 Float16)
(declare-const ?float72 Float128)
(declare-const ?float73 Float64)
(declare-const ?float74 Float32)
(declare-const ?float75 Float32)
(declare-const ?float76 Float64)
(declare-const ?float77 Float32)
(declare-const ?float78 Float128)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b1 #b10110101010 #b1000111001111111011011111111001111001000010111100001)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float90 Float128)
(assert (= ?float90 (fp #b1 #b111100111101000 #b0111110000011100010001110010101011100101100001101001110000110100101001010011110000111101110000001100001101110100)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b0 #b100010101111011 #b0000100001011010010100110000011110111110001011100101100111110010111101111111111110001010011000100111111010010010)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b1 #b11110 #b0110001010)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b1 #b10000100 #b11110000010001000010111)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (fp.roundToIntegral RTP ?float86)))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.add RTN ?float60 ?float62)))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.neg ?float101)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.roundToIntegral RNE ?float71)))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.mul RTZ ((_ to_fp 11 53) RTP ?float63) ?float100)))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.sqrt RNE ?float85)))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.min ?float86 ((_ to_fp 11 53) RTN ?float62))))
(declare-const ?float107 Float16)
(assert (= ?float107 (f35 ((_ to_fp 11 53) RTP ?float61) ?float72 ((_ to_fp 11 53) RNE ?float96) ?float76 ?float95 ((_ to_fp 11 53) RTP ?float80) ((_ to_fp 11 53) RTZ ?float92) ((_ to_fp 11 53) RTZ ?float95))))
(declare-const ?float108 Float16)
(assert (= ?float108 (fp.div RTN ?float69 ?float61)))
(declare-const ?float109 Float32)
(assert (= ?float109 (fp.neg ?float98)))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.max ?float99 ((_ to_fp 15 113) RTN ?float89))))
(declare-const ?float111 Float32)
(assert (= ?float111 (f7 ((_ to_fp 5 11) RTZ ?float78))))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.roundToIntegral RTZ ?float77)))
(declare-const ?float113 Float64)
(assert (= ?float113 (f29 ?float103 ((_ to_fp 11 53) RNE ?float69) ((_ to_fp 5 11) RTP ?float73) ?float66 ((_ to_fp 5 11) RTN ?float86))))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.add RTN ?float65 ((_ to_fp 11 53) RNE ?float111))))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.abs ?float86)))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.abs ?float65)))
(declare-const ?float117 Float32)
(assert (= ?float117 (fp.min ?float109 ((_ to_fp 8 24) RTZ ?float104))))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.sub RTP ?float81 ?float99)))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.abs ?float80)))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.sub RNE ((_ to_fp 15 113) RNE ?float80) ?float101)))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.div RTP ((_ to_fp 5 11) RTN ?float83) ?float108)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.add RTP ((_ to_fp 5 11) RTZ ?float113) ?float70)))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.add RTZ ?float77 ?float64)))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.sub RTN ?float97 ?float111)))
(declare-const ?float125 Float128)
(assert (= ?float125 (fp.mul RTP ?float66 ((_ to_fp 15 113) RTP ?float77))))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.add RTP ?float123 ?float95)))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.mul RNE ?float109 ((_ to_fp 8 24) RTP ?float121))))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.neg ?float115)))
(declare-const ?float129 Float128)
(assert (= ?float129 (fp.sub RNE ((_ to_fp 15 113) RTZ ?float109) ?float92)))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.div RTP ?float63 ((_ to_fp 5 11) RNE ?float78))))
(declare-const ?float131 Float128)
(assert (= ?float131 (fp.min ((_ to_fp 15 113) RTN ?float86) ?float60)))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.add RNE ?float117 ?float112)))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.abs ?float84)))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.neg ?float70)))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.sqrt RNE ?float64)))
(declare-const ?float136 Float32)
(assert (= ?float136 (fp.sub RTZ ?float112 ?float85)))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.roundToIntegral RTN ?float92)))
(declare-const ?float138 Float128)
(assert (= ?float138 (fp.roundToIntegral RNE ?float93)))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.div RNE ((_ to_fp 5 11) RTZ ?float77) ?float70)))
(declare-const ?float140 Float32)
(assert (= ?float140 (f36 ?float80 ?float82 ((_ to_fp 5 11) RTZ ?float131) ((_ to_fp 8 24) RTP ?float81) ((_ to_fp 5 11) RNE ?float101) ((_ to_fp 5 11) RTN ?float110) ((_ to_fp 8 24) RTZ ?float70))))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.mul RTP ?float106 ?float65)))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.max ?float133 ?float139)))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.sqrt RNE ?float88)))
(declare-const ?float144 Float128)
(assert (= ?float144 (fp.roundToIntegral RTZ ?float93)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.abs ?float112)))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.mul RTP ?float91 ((_ to_fp 8 24) RTP ?float106))))
(declare-const ?float147 Float16)
(assert (= ?float147 (fp.add RNE ?float134 ?float139)))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.sub RTP ?float141 ((_ to_fp 11 53) RTZ ?float72))))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.abs ?float60)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.gt ?float130 ((_ to_fp 5 11) RTP ?float146))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNegative ?float95)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.gt ?float111 ?float75)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isPositive ?float116)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isSubnormal ?float136)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isNegative ?float68)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isPositive ?float99)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNormal ?float100)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.eq ((_ to_fp 11 53) RNE ?float147) ?float148)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.leq ((_ to_fp 5 11) RTZ ?float93) ?float133)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.eq ((_ to_fp 15 113) RTZ ?float109) ?float101)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.leq ?float132 ((_ to_fp 8 24) RNE ?float103))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isZero ?float83)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isSubnormal ?float119)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isSubnormal ?float114)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isInfinite ?float77)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.gt ?float92 ((_ to_fp 15 113) RTN ?float145))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isSubnormal ?float84)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.geq ?float132 ?float127)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.leq ?float139 ((_ to_fp 5 11) RTN ?float110))))
; FINAL ASSERT
(assert (and ?bool153 ?bool161))
(check-sat)


-- iteration 48 --
(declare-fun f0 (Float64 Float32 Float64 Float64 Float64 Float16) Float32)
(declare-fun f1 (Float32 Float64 Float16 Float32 Float16 Float128 Float128 Float128 Float32) Float64)
(declare-fun f2 (Float128 Float128 Float128 Float32 Float64 Float64 Float128 Float32) Float128)
(declare-fun f3 (Float128 Float64) Float16)
(declare-fun f4 (Float32 Float32) Float16)
(declare-fun f5 (Float128 Float16 Float16 Float32 Float64 Float32 Float64 Float128 Float128 Float64) Float32)
(declare-fun f6 (Float32) Float64)
(declare-fun f7 (Float32 Float128) Float32)
(declare-fun f8 (Float64 Float64 Float64 Float128) Float32)
(declare-fun f9 (Float32 Float32 Float32 Float16 Float32) Float32)
(declare-fun f10 (Float16 Float16 Float128 Float32 Float128 Float64 Float32 Float32) Float32)
(declare-fun f11 (Float32 Float16 Float128 Float64 Float128 Float64) Float16)
(declare-fun f12 (Float64 Float64 Float64) Float16)
(declare-fun f13 (Float16) Float64)
(declare-fun f14 (Float128 Float32 Float16 Float32 Float128) Float32)
(declare-fun f15 (Float32 Float32 Float32 Float128 Float32 Float32 Float16 Float32 Float32) Float128)
(declare-fun f16 (Float64 Float128 Float16 Float32 Float64 Float16) Float128)
(declare-fun f17 (Float64 Float64 Float64 Float64) Float64)
(declare-fun f18 (Float64 Float32 Float32 Float16 Float128) Float32)
(declare-fun f19 (Float32 Float16 Float64 Float128 Float16 Float32) Float32)
(declare-fun f20 (Float32 Float16 Float128 Float64 Float32 Float64) Float128)
(declare-fun f21 (Float128 Float64 Float32 Float32 Float16 Float128 Float64 Float128 Float16 Float16) Float128)
(declare-fun f22 (Float32 Float16 Float64) Float128)
(declare-fun f23 (Float16 Float16 Float64 Float128 Float128 Float32 Float16) Float64)
(declare-fun f24 (Float128 Float32 Float128 Float16 Float64 Float64) Float16)
(declare-fun f25 (Float16 Float32 Float16 Float16 Float32 Float64 Float128) Float64)
(declare-fun f26 (Float128 Float64 Float16 Float16 Float32) Float16)
(declare-fun f27 (Float64 Float16) Float128)
(declare-fun f28 (Float128 Float32 Float64 Float128 Float64 Float64 Float16 Float128) Float64)
(declare-fun f29 (Float64 Float32) Float128)
(declare-fun f30 (Float32 Float32 Float16 Float32 Float64 Float128) Float16)
(declare-fun f31 (Float64 Float32 Float128 Float32) Float64)
(declare-fun f32 (Float64) Float16)
(declare-fun f33 (Float16 Float128 Float16) Float16)
(declare-fun f34 (Float128 Float64 Float16 Float16 Float32) Float32)
(declare-fun f35 (Float64 Float128 Float128 Float32) Float64)
(declare-fun f36 (Float32) Float16)
(declare-fun f37 (Float32 Float128 Float32 Float32 Float128 Float16 Float32 Float32 Float32 Float16) Float32)
(declare-fun f38 (Float32 Float64 Float32 Float64 Float128) Float16)
(declare-fun f39 (Float128 Float64 Float128 Float64 Float128 Float16 Float32) Float32)
(declare-fun f40 (Float128 Float64) Float16)
(declare-fun f41 (Float64 Float32) Float32)
(declare-fun f42 (Float32 Float32 Float64 Float64 Float128 Float32 Float64 Float32 Float64 Float32) Float16)
(declare-fun f43 (Float16 Float64 Float16) Float64)
(declare-fun f44 (Float64) Float64)
(declare-fun f45 (Float32 Float64 Float128 Float128) Float64)
(declare-fun f46 (Float16 Float16 Float64 Float16 Float64 Float64 Float16) Float32)
(declare-fun f47 (Float32 Float16 Float128 Float128 Float32 Float64 Float128 Float128) Float16)
(declare-fun f48 (Float128 Float32 Float64 Float64 Float16 Float64) Float32)
(declare-fun f49 (Float32 Float32 Float16 Float16 Float32 Float16 Float64 Float16 Float16) Float128)
(declare-fun p0 (Float128 Float64 Float64 Float64 Float128) Bool)
(declare-fun p1 (Float128 Float128 Float16 Float128 Float128 Float128 Float16 Float128 Float64) Bool)
(declare-fun p2 (Float128) Bool)
(declare-fun p3 (Float32 Float64 Float32 Float32 Float128 Float16) Bool)
(declare-fun p4 (Float16) Bool)
(declare-fun p5 (Float16 Float128 Float32 Float32 Float128 Float32 Float16 Float32) Bool)
(declare-fun p6 (Float16 Float32 Float32 Float32 Float16 Float64 Float64) Bool)
(declare-fun p7 (Float32 Float32 Float128 Float64) Bool)
(declare-fun p8 (Float128 Float64 Float64 Float16) Bool)
(declare-fun p9 (Float16 Float32 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float128)
(declare-const ?float62 Float128)
(declare-const ?float63 Float32)
(declare-const ?float64 Float32)
(declare-const ?float65 Float64)
(declare-const ?float66 Float32)
(declare-const ?float67 Float32)
(declare-const ?float68 Float32)
(declare-const ?float69 Float16)
(declare-const ?float70 Float16)
(declare-const ?float71 Float128)
(declare-const ?float72 Float64)
(declare-const ?float73 Float32)
(declare-const ?float74 Float16)
(declare-const ?float75 Float64)
(declare-const ?float76 Float16)
(declare-const ?float77 Float64)
(declare-const ?float78 Float16)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b0 #b01010 #b0001100001)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float128)
(assert (= ?float84 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b10111000 #b10010001101000100011110)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b0 #b01000110 #b11000110110001010110110)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b1 #b11101101000 #b1000000101000011110101110111110001000111010001000011)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b1 #b11100 #b1100011111)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (f2 ((_ to_fp 15 113) RTZ ?float92) ((_ to_fp 15 113) RTP ?float80) ((_ to_fp 15 113) RTN ?float97) ((_ to_fp 8 24) RTN ?float61) ((_ to_fp 11 53) RTP ?float61) ((_ to_fp 11 53) RTP ?float92) ((_ to_fp 15 113) RTZ ?float91) ((_ to_fp 8 24) RTP ?float72))))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.mul RTP ?float84 ?float62)))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.neg ?float86)))
(declare-const ?float103 Float128)
(assert (= ?float103 (fp.sub RTN ?float61 ((_ to_fp 15 113) RNE ?float91))))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.abs ?float86)))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.add RTZ ((_ to_fp 5 11) RTP ?float73) ?float70)))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.neg ?float100)))
(declare-const ?float107 Float64)
(assert (= ?float107 (fp.roundToIntegral RTZ ?float83)))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.sqrt RNE ?float99)))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.max ?float75 ?float99)))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.div RTN ((_ to_fp 5 11) RTZ ?float68) ?float60)))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.roundToIntegral RTP ?float63)))
(declare-const ?float112 Float32)
(assert (= ?float112 (f37 ?float86 ((_ to_fp 15 113) RTN ?float107) ((_ to_fp 8 24) RTP ?float103) ?float66 ((_ to_fp 15 113) RTN ?float96) ?float60 ((_ to_fp 8 24) RTZ ?float75) ?float111 ((_ to_fp 8 24) RTN ?float84) ?float60)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.roundToIntegral RNE ?float80)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.sub RTZ ((_ to_fp 11 53) RTZ ?float91) ?float108)))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.roundToIntegral RTN ?float86)))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.abs ?float63)))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.abs ?float95)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.roundToIntegral RNE ?float91)))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.add RTZ ?float80 ((_ to_fp 11 53) RTP ?float74))))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.sqrt RTP ?float86)))
(declare-const ?float121 Float32)
(assert (= ?float121 (f39 ((_ to_fp 15 113) RTN ?float104) ((_ to_fp 11 53) RNE ?float97) ((_ to_fp 15 113) RNE ?float116) ?float119 ((_ to_fp 15 113) RNE ?float87) ?float110 ((_ to_fp 8 24) RNE ?float99))))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.max ?float81 ?float70)))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.neg ?float76)))
(declare-const ?float124 Float64)
(assert (= ?float124 (f35 ((_ to_fp 11 53) RTP ?float97) ((_ to_fp 15 113) RTN ?float93) ((_ to_fp 15 113) RNE ?float97) ((_ to_fp 8 24) RTZ ?float119))))
(declare-const ?float125 Float16)
(assert (= ?float125 (fp.mul RTZ ((_ to_fp 5 11) RTZ ?float65) ?float78)))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.neg ?float68)))
(declare-const ?float127 Float128)
(assert (= ?float127 (f27 ((_ to_fp 11 53) RTZ ?float97) ((_ to_fp 5 11) RTZ ?float111))))
(declare-const ?float128 Float128)
(assert (= ?float128 (f15 ((_ to_fp 8 24) RNE ?float62) ((_ to_fp 8 24) RNE ?float60) ?float87 ((_ to_fp 15 113) RTZ ?float95) ((_ to_fp 8 24) RNE ?float117) ((_ to_fp 8 24) RTZ ?float123) ((_ to_fp 5 11) RTZ ?float93) ((_ to_fp 8 24) RTZ ?float80) ?float86)))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.min ?float60 ((_ to_fp 5 11) RTP ?float119))))
(declare-const ?float130 Float16)
(assert (= ?float130 (f38 ((_ to_fp 8 24) RTN ?float61) ((_ to_fp 11 53) RTZ ?float105) ((_ to_fp 8 24) RTP ?float107) ?float79 ((_ to_fp 15 113) RTP ?float108))))
(declare-const ?float131 Float128)
(assert (= ?float131 (fp.mul RTN ?float94 ((_ to_fp 15 113) RNE ?float74))))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.roundToIntegral RTP ?float121)))
(declare-const ?float133 Float64)
(assert (= ?float133 (f28 ((_ to_fp 15 113) RTP ?float70) ?float73 ((_ to_fp 11 53) RTP ?float103) ?float127 ((_ to_fp 11 53) RTP ?float93) ((_ to_fp 11 53) RNE ?float103) ((_ to_fp 5 11) RTN ?float63) ((_ to_fp 15 113) RTP ?float116))))
(declare-const ?float134 Float64)
(assert (= ?float134 (fp.max ?float79 ((_ to_fp 11 53) RNE ?float117))))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.min ?float94 ((_ to_fp 15 113) RTZ ?float74))))
(declare-const ?float136 Float128)
(assert (= ?float136 (f22 ((_ to_fp 8 24) RTZ ?float79) ((_ to_fp 5 11) RTP ?float66) ?float90)))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.add RTN ?float124 ((_ to_fp 11 53) RTP ?float135))))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.neg ?float105)))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.mul RTZ ((_ to_fp 8 24) RTN ?float106) ?float112)))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.max ?float85 ((_ to_fp 15 113) RTZ ?float133))))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.sub RTP ?float81 ((_ to_fp 5 11) RNE ?float104))))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.roundToIntegral RTP ?float98)))
(declare-const ?float143 Float16)
(assert (= ?float143 (fp.min ?float95 ((_ to_fp 5 11) RTN ?float101))))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.roundToIntegral RNE ?float89)))
(declare-const ?float145 Float64)
(assert (= ?float145 (f6 ((_ to_fp 8 24) RTZ ?float130))))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.sqrt RNE ?float141)))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.min ?float91 ?float63)))
(declare-const ?float148 Float32)
(assert (= ?float148 (fp.max ((_ to_fp 8 24) RTN ?float137) ?float93)))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.neg ?float70)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p4 ((_ to_fp 5 11) RNE ?float148))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNegative ?float60)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (p6 ((_ to_fp 5 11) RTZ ?float87) ((_ to_fp 8 24) RNE ?float146) ((_ to_fp 8 24) RTP ?float103) ((_ to_fp 8 24) RNE ?float137) ?float130 ((_ to_fp 11 53) RTP ?float141) ((_ to_fp 11 53) RTP ?float141))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (p0 ((_ to_fp 15 113) RNE ?float72) ?float96 ?float75 ?float119 ?float127)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNormal ?float130)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isZero ?float126)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.gt ((_ to_fp 5 11) RNE ?float132) ?float92)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p9 ((_ to_fp 5 11) RTP ?float63) ?float111 ((_ to_fp 15 113) RTP ?float92))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isSubnormal ?float98)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p7 ?float64 ((_ to_fp 8 24) RTZ ?float89) ((_ to_fp 15 113) RTN ?float98) ((_ to_fp 11 53) RTP ?float126))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p5 ((_ to_fp 5 11) RTP ?float131) ((_ to_fp 15 113) RTP ?float126) ((_ to_fp 8 24) RNE ?float97) ?float132 ?float103 ((_ to_fp 8 24) RTN ?float100) ((_ to_fp 5 11) RNE ?float124) ?float104)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isInfinite ?float94)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isPositive ?float106)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNegative ?float114)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.eq ((_ to_fp 11 53) RNE ?float88) ?float133)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p7 ((_ to_fp 8 24) RTN ?float76) ((_ to_fp 8 24) RTZ ?float137) ((_ to_fp 15 113) RTN ?float96) ((_ to_fp 11 53) RTN ?float106))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.gt ?float146 ((_ to_fp 5 11) RTZ ?float114))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.lt ((_ to_fp 8 24) RTP ?float95) ?float147)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNormal ?float121)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isSubnormal ?float104)))
; FINAL ASSERT
(assert (and (and (and ?bool161 ?bool163 (and (or ?bool158 (and (and ?bool163 ?bool164 ?bool163) ?bool162) ?bool159) (and (or (and ?bool163 ?bool163 ?bool169))) ?bool165)) ?bool153 ?bool159) (and (and ?bool163 (or ?bool151 (and ?bool169 (or ?bool152 (and ?bool151 ?bool162)) ?bool163)) ?bool156)) ?bool151))
(check-sat)


-- iteration 49 --
(declare-fun f0 (Float32 Float64 Float16 Float32 Float128 Float16 Float32 Float16 Float16 Float64) Float64)
(declare-fun f1 (Float32) Float64)
(declare-fun f2 (Float64 Float64 Float128 Float128 Float16 Float128 Float128 Float64) Float128)
(declare-fun f3 (Float64 Float16 Float16) Float32)
(declare-fun f4 (Float16 Float32 Float128 Float128 Float32 Float64 Float128 Float16 Float16 Float16) Float32)
(declare-fun f5 (Float32 Float32) Float64)
(declare-fun f6 (Float64 Float128 Float32 Float128 Float64 Float32 Float64 Float32) Float128)
(declare-fun f7 (Float64 Float128 Float16 Float64 Float16 Float64 Float128 Float64 Float128) Float32)
(declare-fun f8 (Float32 Float64 Float64 Float64 Float32 Float128 Float32 Float64 Float32 Float128) Float16)
(declare-fun f9 (Float64 Float128 Float16 Float16 Float32 Float128) Float32)
(declare-fun f10 (Float16 Float64 Float128 Float16 Float64 Float128) Float64)
(declare-fun f11 (Float16 Float64 Float64 Float32 Float16 Float64 Float64) Float32)
(declare-fun f12 (Float16 Float16 Float32) Float64)
(declare-fun f13 (Float128 Float64 Float32 Float128 Float128 Float128 Float32) Float16)
(declare-fun f14 (Float64 Float64 Float128 Float32 Float16 Float128 Float32 Float16) Float32)
(declare-fun f15 (Float64 Float32 Float16 Float128 Float64 Float32 Float32 Float128) Float64)
(declare-fun f16 (Float128 Float128 Float128 Float64) Float64)
(declare-fun f17 (Float128 Float64 Float16 Float64 Float64 Float32) Float64)
(declare-fun f18 (Float32) Float128)
(declare-fun f19 (Float64 Float128 Float128 Float64 Float32) Float32)
(declare-fun f20 (Float64 Float64 Float32 Float128 Float32) Float32)
(declare-fun f21 (Float32 Float128 Float128 Float64) Float32)
(declare-fun f22 (Float64 Float32 Float16 Float32 Float16 Float32 Float32 Float32) Float16)
(declare-fun f23 (Float64 Float128 Float32 Float32) Float32)
(declare-fun f24 (Float64 Float64 Float16) Float128)
(declare-fun f25 (Float64 Float128 Float128 Float32 Float64 Float128) Float64)
(declare-fun f26 (Float16 Float16 Float128 Float32 Float16 Float32 Float64 Float16 Float16 Float128) Float64)
(declare-fun f27 (Float16 Float32 Float32 Float64 Float64 Float16 Float32) Float16)
(declare-fun f28 (Float64) Float64)
(declare-fun f29 (Float64 Float16 Float64 Float16 Float64 Float16 Float64 Float64 Float64 Float128) Float16)
(declare-fun f30 (Float16 Float64 Float128 Float32 Float16 Float16 Float16 Float64 Float64 Float32) Float64)
(declare-fun f31 (Float64 Float64 Float16 Float32 Float128) Float16)
(declare-fun f32 (Float128 Float16 Float128 Float128 Float16 Float64 Float128 Float128 Float64 Float64) Float64)
(declare-fun f33 (Float128 Float16) Float32)
(declare-fun f34 (Float32 Float64 Float32 Float64 Float128 Float64 Float16 Float64 Float32) Float16)
(declare-fun f35 (Float16 Float128 Float32 Float32 Float64 Float64 Float32 Float128 Float32) Float64)
(declare-fun f36 (Float64 Float32 Float128 Float64 Float64 Float32 Float64 Float128 Float128) Float32)
(declare-fun f37 (Float128 Float128 Float32) Float32)
(declare-fun f38 (Float128 Float32 Float128 Float16 Float32 Float128 Float64 Float64 Float16) Float128)
(declare-fun f39 (Float16 Float64 Float64 Float64 Float32 Float128 Float16 Float16) Float128)
(declare-fun f40 (Float128 Float64 Float128) Float64)
(declare-fun f41 (Float64 Float128 Float32 Float64 Float16 Float64 Float32) Float16)
(declare-fun f42 (Float16 Float32 Float16 Float64 Float16 Float64 Float32 Float16) Float32)
(declare-fun f43 (Float128 Float128 Float128 Float16 Float64 Float16 Float64) Float32)
(declare-fun f44 (Float16 Float32 Float64 Float32 Float128 Float16) Float128)
(declare-fun f45 (Float32 Float32 Float64 Float128 Float128 Float128 Float16 Float64) Float64)
(declare-fun f46 (Float128 Float64 Float16 Float64 Float32 Float64 Float128) Float16)
(declare-fun f47 (Float128 Float64 Float16 Float16 Float128) Float16)
(declare-fun f48 (Float128 Float32 Float32 Float16 Float32) Float32)
(declare-fun f49 (Float32 Float128 Float64 Float128 Float64 Float128 Float128 Float128) Float16)
(declare-fun p0 (Float16 Float16 Float32 Float64 Float32) Bool)
(declare-fun p1 (Float16 Float128 Float32 Float64 Float32 Float32 Float32 Float32 Float128 Float64) Bool)
(declare-fun p2 (Float16 Float32 Float64 Float16 Float16 Float16 Float128) Bool)
(declare-fun p3 (Float64 Float16 Float32) Bool)
(declare-fun p4 (Float64 Float16 Float32 Float64) Bool)
(declare-fun p5 (Float128) Bool)
(declare-fun p6 (Float64 Float64 Float16 Float64 Float16 Float16) Bool)
(declare-fun p7 (Float32 Float64 Float16 Float128) Bool)
(declare-fun p8 (Float64) Bool)
(declare-fun p9 (Float32 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float16)
(declare-const ?float62 Float16)
(declare-const ?float63 Float64)
(declare-const ?float64 Float16)
(declare-const ?float65 Float16)
(declare-const ?float66 Float32)
(declare-const ?float67 Float32)
(declare-const ?float68 Float32)
(declare-const ?float69 Float128)
(declare-const ?float70 Float128)
(declare-const ?float71 Float32)
(declare-const ?float72 Float16)
(declare-const ?float73 Float16)
(declare-const ?float74 Float128)
(declare-const ?float75 Float32)
(declare-const ?float76 Float32)
(declare-const ?float77 Float32)
(declare-const ?float78 Float16)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b0 #b00001001001 #b1110110011000010010001001000000110010010011001001001)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b1 #b11110 #b1111010010)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b1 #b00101 #b1110011011)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b0 #b00010000 #b00110101110100011010111)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b0 #b011010110011100 #b0110001110010011111110000101111101101100100010010010111000111101010101001001001001011010110000001001011101101110)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b0 #b100011001111001 #b0110010000101111100111110100111000011010110101111101010000011100110001100110001000110101011000101110010010111100)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b0 #b01000110110 #b1001000000100011101110000110101011010101001100001100)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b0 #b011010100011001 #b0011110010000110111011101010001011000100111000110011100011111010110110101000100000101001000111110010101001011100)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.neg ?float75)))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.neg ?float83)))
(declare-const ?float102 Float64)
(assert (= ?float102 (fp.neg ?float79)))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.sqrt RNE ?float85)))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.min ((_ to_fp 8 24) RNE ?float92) ?float101)))
(declare-const ?float105 Float128)
(assert (= ?float105 (fp.min ?float96 ((_ to_fp 15 113) RNE ?float98))))
(declare-const ?float106 Float64)
(assert (= ?float106 (f0 ?float98 ((_ to_fp 11 53) RTZ ?float73) ((_ to_fp 5 11) RTZ ?float67) ((_ to_fp 8 24) RTP ?float97) ((_ to_fp 15 113) RTP ?float75) ((_ to_fp 5 11) RTP ?float79) ((_ to_fp 8 24) RTP ?float70) ?float88 ((_ to_fp 5 11) RTZ ?float69) ?float102)))
(declare-const ?float107 Float64)
(assert (= ?float107 (fp.add RTZ ((_ to_fp 11 53) RTZ ?float65) ?float97)))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.div RTZ ?float99 ?float99)))
(declare-const ?float109 Float64)
(assert (= ?float109 (f10 ?float88 ((_ to_fp 11 53) RNE ?float101) ((_ to_fp 15 113) RTP ?float78) ((_ to_fp 5 11) RTZ ?float106) ((_ to_fp 11 53) RNE ?float75) ((_ to_fp 15 113) RTP ?float104))))
(declare-const ?float110 Float32)
(assert (= ?float110 (fp.add RNE ?float101 ?float86)))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.sub RTN ((_ to_fp 8 24) RNE ?float72) ?float90)))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.min ?float65 ?float88)))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.sqrt RNE ?float61)))
(declare-const ?float114 Float64)
(assert (= ?float114 (f40 ((_ to_fp 15 113) RTZ ?float76) ?float109 ?float99)))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.roundToIntegral RTN ?float76)))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.div RNE ?float72 ((_ to_fp 5 11) RNE ?float76))))
(declare-const ?float117 Float128)
(assert (= ?float117 (f44 ((_ to_fp 5 11) RNE ?float86) ((_ to_fp 8 24) RTZ ?float84) ((_ to_fp 11 53) RNE ?float62) ((_ to_fp 8 24) RNE ?float69) ((_ to_fp 15 113) RTN ?float72) ?float113)))
(declare-const ?float118 Float32)
(assert (= ?float118 (f20 ((_ to_fp 11 53) RNE ?float86) ?float107 ((_ to_fp 8 24) RTN ?float113) ((_ to_fp 15 113) RTN ?float78) ?float66)))
(declare-const ?float119 Float64)
(assert (= ?float119 (f5 ((_ to_fp 8 24) RTN ?float63) ?float118)))
(declare-const ?float120 Float32)
(assert (= ?float120 (f23 ((_ to_fp 11 53) RTZ ?float64) ((_ to_fp 15 113) RTP ?float64) ((_ to_fp 8 24) RNE ?float87) ((_ to_fp 8 24) RTZ ?float70))))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.neg ?float107)))
(declare-const ?float122 Float64)
(assert (= ?float122 (fp.roundToIntegral RTP ?float91)))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.roundToIntegral RTZ ?float67)))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.roundToIntegral RTZ ?float63)))
(declare-const ?float125 Float64)
(assert (= ?float125 (f25 ((_ to_fp 11 53) RNE ?float96) ((_ to_fp 15 113) RTP ?float116) ((_ to_fp 15 113) RNE ?float98) ?float60 ((_ to_fp 11 53) RNE ?float115) ((_ to_fp 15 113) RTP ?float98))))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.min ?float101 ((_ to_fp 8 24) RTP ?float79))))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.sqrt RTZ ?float118)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.abs ?float101)))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.max ((_ to_fp 11 53) RTZ ?float62) ?float91)))
(declare-const ?float130 Float16)
(assert (= ?float130 (f31 ?float82 ((_ to_fp 11 53) RTZ ?float64) ((_ to_fp 5 11) RNE ?float68) ((_ to_fp 8 24) RNE ?float97) ((_ to_fp 15 113) RTP ?float66))))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.neg ?float94)))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.min ((_ to_fp 11 53) RNE ?float108) ?float94)))
(declare-const ?float133 Float128)
(assert (= ?float133 (fp.neg ?float96)))
(declare-const ?float134 Float32)
(assert (= ?float134 (fp.sub RTP ((_ to_fp 8 24) RNE ?float70) ?float66)))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.sub RTZ ?float83 ?float104)))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.min ((_ to_fp 11 53) RTZ ?float78) ?float85)))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.min ?float80 ((_ to_fp 15 113) RNE ?float123))))
(declare-const ?float138 Float32)
(assert (= ?float138 (fp.max ?float134 ((_ to_fp 8 24) RTZ ?float73))))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.min ?float103 ((_ to_fp 11 53) RTZ ?float127))))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.sqrt RTP ?float127)))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.roundToIntegral RTP ?float121)))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.roundToIntegral RTP ?float132)))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.div RNE ((_ to_fp 11 53) RTN ?float88) ?float87)))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.div RNE ((_ to_fp 8 24) RNE ?float143) ?float90)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.neg ?float83)))
(declare-const ?float146 Float32)
(assert (= ?float146 (f9 ((_ to_fp 11 53) RNE ?float88) ((_ to_fp 15 113) RNE ?float64) ((_ to_fp 5 11) RNE ?float129) ?float84 ((_ to_fp 8 24) RNE ?float97) ((_ to_fp 15 113) RTN ?float111))))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.div RTP ((_ to_fp 15 113) RTN ?float63) ?float69)))
(declare-const ?float148 Float128)
(assert (= ?float148 (fp.sqrt RNE ?float93)))
(declare-const ?float149 Float32)
(assert (= ?float149 (fp.sqrt RNE ?float140)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.leq ((_ to_fp 11 53) RNE ?float116) ?float109)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p9 ?float76 ((_ to_fp 11 53) RTN ?float66))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.eq ((_ to_fp 5 11) RTN ?float66) ?float84)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isInfinite ?float83)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p8 ?float91)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.lt ?float98 ((_ to_fp 8 24) RTN ?float136))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isZero ?float65)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.leq ?float113 ((_ to_fp 5 11) RNE ?float94))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNegative ?float123)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.gt ?float97 ?float102)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.lt ((_ to_fp 15 113) RNE ?float110) ?float93)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (p6 ((_ to_fp 11 53) RTZ ?float137) ?float125 ((_ to_fp 5 11) RNE ?float74) ?float141 ?float61 ?float61)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (p8 ((_ to_fp 11 53) RTZ ?float80))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isSubnormal ?float64)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isInfinite ?float123)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isNormal ?float115)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNegative ?float121)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isPositive ?float65)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isPositive ?float101)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.lt ?float140 ?float60)))
; FINAL ASSERT
(assert (or (or (and (or ?bool168 (and (or ?bool160) (and (and ?bool168) ?bool161) ?bool161) ?bool160) ?bool161) (or (and ?bool166) ?bool155 (and (and (or (and ?bool169 ?bool152) (and ?bool157) (and ?bool169 ?bool156 ?bool159)) (or ?bool153 ?bool155 ?bool161)) ?bool157 (and (and ?bool165 (and ?bool164) (or ?bool161))))))))
(check-sat)


-- iteration 50 --
(declare-fun f0 (Float32 Float64 Float32 Float128 Float64 Float16 Float32) Float64)
(declare-fun f1 (Float64 Float32 Float32 Float16 Float16 Float16) Float16)
(declare-fun f2 (Float32 Float64 Float16 Float128 Float64 Float16 Float128 Float128 Float64) Float16)
(declare-fun f3 (Float64 Float64 Float32 Float128 Float32 Float16 Float16 Float32 Float128 Float32) Float16)
(declare-fun f4 (Float16 Float128 Float16) Float32)
(declare-fun f5 (Float16) Float128)
(declare-fun f6 (Float32 Float16 Float128 Float128 Float64 Float64 Float64) Float16)
(declare-fun f7 (Float16 Float16 Float32 Float64 Float32 Float64 Float32 Float128 Float128) Float16)
(declare-fun f8 (Float64) Float64)
(declare-fun f9 (Float16 Float32) Float16)
(declare-fun f10 (Float64 Float128 Float128 Float16) Float16)
(declare-fun f11 (Float32 Float64 Float128 Float16 Float32) Float64)
(declare-fun f12 (Float32 Float128 Float32 Float32 Float16 Float128 Float32 Float128 Float32) Float64)
(declare-fun f13 (Float32) Float16)
(declare-fun f14 (Float16 Float128) Float32)
(declare-fun f15 (Float128 Float16 Float16 Float32) Float16)
(declare-fun f16 (Float32 Float16 Float32 Float128 Float16 Float64 Float16 Float128) Float16)
(declare-fun f17 (Float64 Float64) Float64)
(declare-fun f18 (Float64 Float16 Float32 Float32 Float32 Float64 Float128 Float64 Float32 Float64) Float128)
(declare-fun f19 (Float16 Float64 Float32) Float32)
(declare-fun f20 (Float16 Float128) Float64)
(declare-fun f21 (Float64 Float64 Float32 Float16 Float64 Float32 Float32 Float64 Float64 Float128) Float128)
(declare-fun f22 (Float32 Float128 Float64) Float16)
(declare-fun f23 (Float32 Float32 Float64 Float32 Float64) Float32)
(declare-fun f24 (Float128 Float128 Float128) Float128)
(declare-fun f25 (Float16 Float16 Float32 Float128 Float128 Float32) Float128)
(declare-fun f26 (Float64 Float64 Float128 Float64 Float16) Float128)
(declare-fun f27 (Float128 Float64 Float32 Float16 Float128 Float16 Float64) Float32)
(declare-fun f28 (Float16 Float64 Float64 Float16) Float16)
(declare-fun f29 (Float128 Float16 Float32 Float64 Float128 Float128 Float32 Float16 Float16 Float128) Float32)
(declare-fun f30 (Float32) Float64)
(declare-fun f31 (Float16 Float16 Float16 Float32 Float64 Float32 Float32) Float16)
(declare-fun f32 (Float16) Float16)
(declare-fun f33 (Float64) Float32)
(declare-fun f34 (Float32 Float16 Float16 Float32 Float64) Float32)
(declare-fun f35 (Float32 Float64 Float32 Float16 Float64 Float32 Float16) Float64)
(declare-fun f36 (Float16 Float32 Float64 Float32 Float64 Float64 Float16 Float64 Float32) Float64)
(declare-fun f37 (Float128 Float16 Float64 Float128 Float64) Float128)
(declare-fun f38 (Float32 Float64 Float32 Float128 Float32 Float64 Float64 Float16 Float64) Float32)
(declare-fun f39 (Float16 Float16 Float64) Float128)
(declare-fun f40 (Float64 Float128 Float64 Float16 Float64 Float64 Float32) Float128)
(declare-fun f41 (Float64 Float128 Float64 Float16 Float64 Float16) Float64)
(declare-fun f42 (Float64 Float16 Float32 Float32 Float16) Float16)
(declare-fun f43 (Float64 Float32) Float128)
(declare-fun f44 (Float128 Float128 Float32) Float128)
(declare-fun f45 (Float16) Float64)
(declare-fun f46 (Float128 Float128 Float32 Float32 Float32 Float64) Float128)
(declare-fun f47 (Float32 Float32 Float64 Float32 Float16 Float32 Float64) Float128)
(declare-fun f48 (Float64 Float32 Float64 Float16 Float64 Float16) Float64)
(declare-fun f49 (Float64 Float128 Float32 Float32 Float16 Float32 Float16 Float128 Float128 Float16) Float32)
(declare-fun p0 (Float128 Float32) Bool)
(declare-fun p1 (Float32 Float128 Float128 Float32) Bool)
(declare-fun p2 (Float32 Float128 Float32 Float128 Float32 Float128 Float16 Float16) Bool)
(declare-fun p3 (Float32 Float128 Float16 Float128) Bool)
(declare-fun p4 (Float128 Float64) Bool)
(declare-fun p5 (Float64 Float64 Float32 Float16 Float64 Float64 Float128 Float16 Float16) Bool)
(declare-fun p6 (Float128 Float32 Float32 Float64) Bool)
(declare-fun p7 (Float128 Float32 Float16 Float64 Float16 Float32 Float64) Bool)
(declare-fun p8 (Float64 Float128 Float32 Float16 Float128 Float16 Float128 Float64) Bool)
(declare-fun p9 (Float16 Float16 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float16)
(declare-const ?float62 Float64)
(declare-const ?float63 Float64)
(declare-const ?float64 Float16)
(declare-const ?float65 Float64)
(declare-const ?float66 Float32)
(declare-const ?float67 Float64)
(declare-const ?float68 Float32)
(declare-const ?float69 Float32)
(declare-const ?float70 Float32)
(declare-const ?float71 Float128)
(declare-const ?float72 Float16)
(declare-const ?float73 Float128)
(declare-const ?float74 Float128)
(declare-const ?float75 Float16)
(declare-const ?float76 Float64)
(declare-const ?float77 Float128)
(declare-const ?float78 Float128)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b01100111 #b01001100010110101110111)))
(declare-const ?float84 Float128)
(assert (= ?float84 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b1 #b10000011 #b00101111010111100101100)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b01110100111 #b0000000010011111101010110101101000101111001101100011)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b0 #b00100 #b1111010111)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b0 #b00001010011 #b0001101101000100010011101001110110001011010011000101)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b0 #b00100000100 #b0000100110010011110111111110111101000001100001001010)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b0 #b01010100 #b10110110111101100111011)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.add RTP ?float94 ((_ to_fp 5 11) RNE ?float73))))
(declare-const ?float101 Float64)
(assert (= ?float101 (f17 ((_ to_fp 11 53) RTN ?float66) ((_ to_fp 11 53) RTZ ?float97))))
(declare-const ?float102 Float128)
(assert (= ?float102 (f26 ?float93 ((_ to_fp 11 53) RTZ ?float71) ((_ to_fp 15 113) RTZ ?float83) ((_ to_fp 11 53) RNE ?float85) ((_ to_fp 5 11) RTP ?float80))))
(declare-const ?float103 Float32)
(assert (= ?float103 (f14 ((_ to_fp 5 11) RTZ ?float90) ((_ to_fp 15 113) RNE ?float61))))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.abs ?float98)))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.sqrt RNE ?float104)))
(declare-const ?float106 Float32)
(assert (= ?float106 (f38 ((_ to_fp 8 24) RTN ?float91) ((_ to_fp 11 53) RTZ ?float104) ((_ to_fp 8 24) RTZ ?float76) ((_ to_fp 15 113) RNE ?float103) ((_ to_fp 8 24) RNE ?float62) ?float90 ((_ to_fp 11 53) RNE ?float61) ((_ to_fp 5 11) RTP ?float90) ((_ to_fp 11 53) RTP ?float68))))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.neg ?float97)))
(declare-const ?float108 Float16)
(assert (= ?float108 (fp.sub RTZ ?float79 ?float72)))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.max ?float77 ((_ to_fp 15 113) RNE ?float76))))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.abs ?float78)))
(declare-const ?float111 Float128)
(assert (= ?float111 (fp.max ?float71 ((_ to_fp 15 113) RTZ ?float100))))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.min ?float86 ((_ to_fp 5 11) RTZ ?float77))))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.sqrt RTN ?float60)))
(declare-const ?float114 Float16)
(assert (= ?float114 (f6 ?float106 ((_ to_fp 5 11) RTP ?float93) ((_ to_fp 15 113) RTZ ?float81) ((_ to_fp 15 113) RTZ ?float90) ((_ to_fp 11 53) RTN ?float66) ((_ to_fp 11 53) RTZ ?float103) ((_ to_fp 11 53) RTZ ?float89))))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.mul RTZ ?float96 ((_ to_fp 11 53) RTP ?float78))))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.neg ?float68)))
(declare-const ?float117 Float16)
(assert (= ?float117 (f42 ?float90 ?float114 ((_ to_fp 8 24) RTN ?float73) ((_ to_fp 8 24) RTN ?float95) ((_ to_fp 5 11) RTZ ?float96))))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.max ?float71 ((_ to_fp 15 113) RNE ?float94))))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.sub RTP ?float114 ?float92)))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.sub RNE ((_ to_fp 15 113) RTZ ?float113) ?float84)))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.max ((_ to_fp 15 113) RNE ?float119) ?float109)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.min ?float61 ((_ to_fp 5 11) RTN ?float113))))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.roundToIntegral RTZ ?float79)))
(declare-const ?float124 Float64)
(assert (= ?float124 (f30 ((_ to_fp 8 24) RNE ?float115))))
(declare-const ?float125 Float16)
(assert (= ?float125 (f15 ((_ to_fp 15 113) RTZ ?float62) ((_ to_fp 5 11) RTP ?float69) ((_ to_fp 5 11) RTN ?float115) ?float97)))
(declare-const ?float126 Float16)
(assert (= ?float126 (fp.max ?float92 ((_ to_fp 5 11) RTN ?float78))))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.div RTP ?float82 ((_ to_fp 8 24) RNE ?float87))))
(declare-const ?float128 Float16)
(assert (= ?float128 (fp.add RNE ((_ to_fp 5 11) RTP ?float67) ?float117)))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.add RNE ((_ to_fp 11 53) RTP ?float86) ?float124)))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.max ((_ to_fp 15 113) RTZ ?float119) ?float110)))
(declare-const ?float131 Float128)
(assert (= ?float131 (fp.sub RNE ?float84 ((_ to_fp 15 113) RTP ?float65))))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.abs ?float121)))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.mul RNE ((_ to_fp 5 11) RNE ?float84) ?float98)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.sqrt RTN ?float111)))
(declare-const ?float135 Float64)
(assert (= ?float135 (fp.neg ?float65)))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.max ?float96 ((_ to_fp 11 53) RTP ?float61))))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.roundToIntegral RTP ?float122)))
(declare-const ?float138 Float32)
(assert (= ?float138 (fp.min ((_ to_fp 8 24) RNE ?float64) ?float68)))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.mul RTZ ?float106 ((_ to_fp 8 24) RTP ?float105))))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.sub RTP ?float104 ?float119)))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.sub RNE ((_ to_fp 5 11) RTN ?float67) ?float81)))
(declare-const ?float142 Float16)
(assert (= ?float142 (f2 ((_ to_fp 8 24) RTZ ?float114) ((_ to_fp 11 53) RTZ ?float133) ((_ to_fp 5 11) RTZ ?float70) ((_ to_fp 15 113) RTZ ?float135) ((_ to_fp 11 53) RTP ?float60) ((_ to_fp 5 11) RTZ ?float96) ?float110 ?float121 ((_ to_fp 11 53) RNE ?float103))))
(declare-const ?float143 Float32)
(assert (= ?float143 (fp.sub RNE ((_ to_fp 8 24) RTP ?float91) ?float66)))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.div RTP ?float63 ((_ to_fp 11 53) RTZ ?float110))))
(declare-const ?float145 Float128)
(assert (= ?float145 (fp.div RTZ ?float78 ?float71)))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.sqrt RTZ ?float131)))
(declare-const ?float147 Float16)
(assert (= ?float147 (fp.sqrt RTN ?float64)))
(declare-const ?float148 Float128)
(assert (= ?float148 (fp.min ((_ to_fp 15 113) RTN ?float127) ?float111)))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.add RTP ((_ to_fp 5 11) RNE ?float116) ?float123)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isInfinite ?float127)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.leq ((_ to_fp 15 113) RNE ?float107) ?float130)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNegative ?float148)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isSubnormal ?float122)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.geq ?float95 ((_ to_fp 5 11) RTZ ?float90))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.gt ?float79 ((_ to_fp 5 11) RTZ ?float89))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNormal ?float118)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.eq ?float90 ((_ to_fp 11 53) RNE ?float141))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.lt ?float82 ?float85)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.lt ((_ to_fp 5 11) RNE ?float85) ?float64)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p7 ((_ to_fp 15 113) RNE ?float64) ?float60 ?float104 ?float65 ((_ to_fp 5 11) RTZ ?float63) ((_ to_fp 8 24) RTZ ?float109) ((_ to_fp 11 53) RTZ ?float104))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNaN ?float74)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (p0 ?float73 ((_ to_fp 8 24) RTZ ?float140))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isSubnormal ?float136)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isInfinite ?float143)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.geq ?float85 ((_ to_fp 8 24) RNE ?float111))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNegative ?float105)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNaN ?float66)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.lt ?float88 ?float84)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p7 ((_ to_fp 15 113) RNE ?float107) ?float60 ((_ to_fp 5 11) RTP ?float90) ((_ to_fp 11 53) RNE ?float107) ?float81 ((_ to_fp 8 24) RTP ?float64) ?float129)))
; FINAL ASSERT
(assert (or ?bool156))
(check-sat)


-- iteration 51 --
(declare-fun f0 (Float32 Float32 Float128 Float64) Float32)
(declare-fun f1 (Float16 Float32 Float16 Float64 Float64) Float16)
(declare-fun f2 (Float64 Float32 Float32 Float128 Float64) Float16)
(declare-fun f3 (Float16 Float16 Float128 Float16 Float128 Float64 Float128 Float16) Float64)
(declare-fun f4 (Float64 Float32 Float64 Float64 Float128 Float16 Float32 Float16 Float32 Float64) Float32)
(declare-fun f5 (Float128 Float32 Float32 Float64) Float64)
(declare-fun f6 (Float16 Float32 Float32 Float64 Float128 Float16 Float64 Float32 Float32) Float16)
(declare-fun f7 (Float16 Float128) Float128)
(declare-fun f8 (Float64 Float64 Float64 Float128 Float16 Float16 Float128 Float128 Float64) Float64)
(declare-fun f9 (Float16) Float16)
(declare-fun f10 (Float64 Float32 Float16 Float16 Float32 Float128) Float64)
(declare-fun f11 (Float64 Float64 Float128 Float64) Float64)
(declare-fun f12 (Float32 Float64) Float16)
(declare-fun f13 (Float16 Float32 Float16 Float128 Float16) Float64)
(declare-fun f14 (Float32 Float32 Float16 Float32 Float16 Float32 Float64) Float32)
(declare-fun f15 (Float128 Float32) Float32)
(declare-fun f16 (Float64 Float64 Float128 Float64 Float16 Float32 Float128 Float128 Float32) Float32)
(declare-fun f17 (Float128 Float128 Float32 Float16 Float64 Float16 Float64 Float32) Float64)
(declare-fun f18 (Float32 Float16 Float32 Float32 Float64 Float32 Float64) Float16)
(declare-fun f19 (Float16 Float128 Float128 Float16 Float32) Float16)
(declare-fun f20 (Float16 Float128 Float16 Float16 Float128 Float128 Float64 Float128 Float32) Float16)
(declare-fun f21 (Float128 Float128 Float64 Float16 Float128 Float64 Float64 Float64 Float32 Float16) Float128)
(declare-fun f22 (Float16 Float64 Float128 Float64 Float64) Float16)
(declare-fun f23 (Float64 Float16 Float64 Float32 Float64 Float32 Float16 Float16 Float16) Float64)
(declare-fun f24 (Float32 Float128 Float64) Float128)
(declare-fun f25 (Float64 Float128) Float32)
(declare-fun f26 (Float128 Float32 Float16 Float16 Float16 Float64 Float128 Float16) Float128)
(declare-fun f27 (Float16 Float64 Float64) Float32)
(declare-fun f28 (Float64 Float32) Float32)
(declare-fun f29 (Float64 Float32) Float16)
(declare-fun f30 (Float32) Float32)
(declare-fun f31 (Float128 Float16 Float64 Float128 Float128 Float128 Float32 Float128) Float16)
(declare-fun f32 (Float32 Float16 Float32 Float32 Float128 Float64 Float16 Float32 Float64 Float32) Float16)
(declare-fun f33 (Float64 Float16 Float64 Float32 Float64 Float128 Float64 Float32 Float32) Float64)
(declare-fun f34 (Float128 Float64 Float64 Float64 Float128 Float32 Float16 Float32) Float128)
(declare-fun f35 (Float64) Float64)
(declare-fun f36 (Float64 Float128 Float128 Float128) Float32)
(declare-fun f37 (Float32 Float32 Float64 Float128 Float16 Float64 Float32 Float16 Float16 Float16) Float64)
(declare-fun f38 (Float16 Float128 Float128 Float64 Float32 Float64 Float32 Float32) Float16)
(declare-fun f39 (Float128 Float16) Float64)
(declare-fun f40 (Float16) Float16)
(declare-fun f41 (Float32 Float32 Float64 Float64 Float32 Float16 Float16 Float32 Float128) Float32)
(declare-fun f42 (Float128 Float128 Float16 Float32 Float128 Float16 Float16 Float32 Float16 Float16) Float16)
(declare-fun f43 (Float32 Float64) Float64)
(declare-fun f44 (Float64 Float16 Float16 Float64 Float32 Float64) Float64)
(declare-fun f45 (Float128 Float16 Float16 Float128 Float128 Float16 Float32 Float64) Float16)
(declare-fun f46 (Float64) Float32)
(declare-fun f47 (Float16 Float32 Float128 Float16 Float32 Float128) Float32)
(declare-fun f48 (Float32 Float64 Float128 Float16 Float32 Float128 Float128 Float128 Float128) Float16)
(declare-fun f49 (Float16) Float16)
(declare-fun p0 (Float32 Float64 Float64 Float16 Float128 Float128 Float32 Float16 Float16 Float128) Bool)
(declare-fun p1 (Float64 Float16) Bool)
(declare-fun p2 (Float32 Float128 Float16) Bool)
(declare-fun p3 (Float16 Float16 Float16 Float64 Float16) Bool)
(declare-fun p4 (Float128 Float32 Float32 Float64 Float16) Bool)
(declare-fun p5 (Float128 Float128 Float128 Float64 Float32 Float16 Float32 Float32) Bool)
(declare-fun p6 (Float32 Float32 Float32) Bool)
(declare-fun p7 (Float128 Float16 Float32 Float128 Float16 Float16 Float64 Float64) Bool)
(declare-fun p8 (Float16 Float16 Float128 Float128) Bool)
(declare-fun p9 (Float16 Float64 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float32)
(declare-const ?float62 Float64)
(declare-const ?float63 Float16)
(declare-const ?float64 Float32)
(declare-const ?float65 Float128)
(declare-const ?float66 Float32)
(declare-const ?float67 Float128)
(declare-const ?float68 Float64)
(declare-const ?float69 Float32)
(declare-const ?float70 Float64)
(declare-const ?float71 Float32)
(declare-const ?float72 Float64)
(declare-const ?float73 Float64)
(declare-const ?float74 Float64)
(declare-const ?float75 Float64)
(declare-const ?float76 Float32)
(declare-const ?float77 Float32)
(declare-const ?float78 Float32)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b1 #b11000 #b1001111010)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float128)
(assert (= ?float90 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float98 Float64)
(assert (= ?float98 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (f27 ((_ to_fp 5 11) RTN ?float73) ((_ to_fp 11 53) RTN ?float64) ((_ to_fp 11 53) RTN ?float83))))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.min ((_ to_fp 5 11) RTP ?float69) ?float88)))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.neg ?float63)))
(declare-const ?float103 Float32)
(assert (= ?float103 (fp.neg ?float71)))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.roundToIntegral RTP ?float83)))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.mul RTZ ?float91 ((_ to_fp 8 24) RNE ?float104))))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.min ?float85 ((_ to_fp 8 24) RNE ?float73))))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.mul RTP ?float96 ((_ to_fp 8 24) RNE ?float62))))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.abs ?float62)))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.sqrt RNE ?float104)))
(declare-const ?float110 Float16)
(assert (= ?float110 (f40 ((_ to_fp 5 11) RTP ?float66))))
(declare-const ?float111 Float32)
(assert (= ?float111 (f47 ?float63 ?float107 ((_ to_fp 15 113) RTZ ?float70) ((_ to_fp 5 11) RTN ?float78) ((_ to_fp 8 24) RNE ?float79) ?float93)))
(declare-const ?float112 Float16)
(assert (= ?float112 (f20 ((_ to_fp 5 11) RTN ?float67) ((_ to_fp 15 113) RTN ?float70) ?float101 ((_ to_fp 5 11) RTP ?float62) ((_ to_fp 15 113) RTZ ?float69) ((_ to_fp 15 113) RNE ?float89) ?float70 ?float93 ((_ to_fp 8 24) RTZ ?float87))))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.div RTN ?float88 ((_ to_fp 5 11) RTN ?float89))))
(declare-const ?float114 Float16)
(assert (= ?float114 (f9 ((_ to_fp 5 11) RTZ ?float111))))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.mul RTN ((_ to_fp 11 53) RTN ?float90) ?float74)))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.mul RNE ((_ to_fp 8 24) RNE ?float99) ?float100)))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.neg ?float88)))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.sqrt RTP ?float84)))
(declare-const ?float119 Float16)
(assert (= ?float119 (f32 ?float60 ((_ to_fp 5 11) RTP ?float70) ?float103 ((_ to_fp 8 24) RNE ?float114) ?float87 ((_ to_fp 11 53) RNE ?float107) ((_ to_fp 5 11) RTP ?float67) ((_ to_fp 8 24) RTN ?float84) ((_ to_fp 11 53) RTZ ?float106) ((_ to_fp 8 24) RTZ ?float73))))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.mul RTP ((_ to_fp 11 53) RTN ?float92) ?float70)))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.sub RTN ((_ to_fp 8 24) RTP ?float87) ?float116)))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.neg ?float87)))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.min ((_ to_fp 8 24) RNE ?float73) ?float105)))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.abs ?float68)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.roundToIntegral RTZ ?float105)))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.div RTP ?float90 ?float93)))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.roundToIntegral RNE ?float96)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.add RTZ ((_ to_fp 8 24) RTN ?float67) ?float106)))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.mul RNE ?float102 ((_ to_fp 5 11) RTN ?float76))))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.roundToIntegral RTN ?float82)))
(declare-const ?float131 Float64)
(assert (= ?float131 (f5 ((_ to_fp 15 113) RTN ?float105) ((_ to_fp 8 24) RTN ?float115) ?float121 ((_ to_fp 11 53) RTP ?float60))))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.sqrt RTP ?float107)))
(declare-const ?float133 Float64)
(assert (= ?float133 (f35 ((_ to_fp 11 53) RTN ?float88))))
(declare-const ?float134 Float32)
(assert (= ?float134 (f46 ((_ to_fp 11 53) RNE ?float82))))
(declare-const ?float135 Float32)
(assert (= ?float135 (f41 ((_ to_fp 8 24) RTP ?float112) ?float71 ((_ to_fp 11 53) RTN ?float127) ((_ to_fp 11 53) RNE ?float90) ((_ to_fp 8 24) RTN ?float117) ?float117 ((_ to_fp 5 11) RTP ?float127) ?float123 ((_ to_fp 15 113) RTP ?float70))))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.mul RTN ?float63 ((_ to_fp 5 11) RNE ?float115))))
(declare-const ?float137 Float16)
(assert (= ?float137 (f2 ((_ to_fp 11 53) RTN ?float111) ((_ to_fp 8 24) RNE ?float102) ((_ to_fp 8 24) RTZ ?float95) ((_ to_fp 15 113) RTZ ?float94) ((_ to_fp 11 53) RNE ?float63))))
(declare-const ?float138 Float32)
(assert (= ?float138 (f41 ?float81 ((_ to_fp 8 24) RTN ?float131) ((_ to_fp 11 53) RTP ?float114) ((_ to_fp 11 53) RTP ?float78) ((_ to_fp 8 24) RTP ?float94) ((_ to_fp 5 11) RNE ?float76) ((_ to_fp 5 11) RTZ ?float69) ((_ to_fp 8 24) RTN ?float86) ((_ to_fp 15 113) RTN ?float60))))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.roundToIntegral RTN ?float124)))
(declare-const ?float140 Float64)
(assert (= ?float140 (f11 ?float89 ((_ to_fp 11 53) RTZ ?float82) ((_ to_fp 15 113) RTN ?float115) ((_ to_fp 11 53) RTZ ?float93))))
(declare-const ?float141 Float32)
(assert (= ?float141 (f41 ((_ to_fp 8 24) RTZ ?float82) ((_ to_fp 8 24) RNE ?float112) ((_ to_fp 11 53) RTP ?float100) ((_ to_fp 11 53) RNE ?float96) ((_ to_fp 8 24) RTP ?float63) ((_ to_fp 5 11) RTP ?float89) ?float117 ?float81 ((_ to_fp 15 113) RTZ ?float139))))
(declare-const ?float142 Float32)
(assert (= ?float142 (fp.max ?float69 ((_ to_fp 8 24) RTZ ?float129))))
(declare-const ?float143 Float16)
(assert (= ?float143 (f48 ((_ to_fp 8 24) RTZ ?float130) ((_ to_fp 11 53) RTZ ?float101) ((_ to_fp 15 113) RNE ?float120) ((_ to_fp 5 11) RNE ?float135) ((_ to_fp 8 24) RTN ?float62) ((_ to_fp 15 113) RNE ?float72) ((_ to_fp 15 113) RTP ?float132) ((_ to_fp 15 113) RTP ?float77) ?float87)))
(declare-const ?float144 Float128)
(assert (= ?float144 (fp.neg ?float93)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.max ?float124 ((_ to_fp 11 53) RTZ ?float77))))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.roundToIntegral RTN ?float119)))
(declare-const ?float147 Float64)
(assert (= ?float147 (fp.min ((_ to_fp 11 53) RTP ?float100) ?float94)))
(declare-const ?float148 Float16)
(assert (= ?float148 (f29 ((_ to_fp 11 53) RTN ?float104) ((_ to_fp 8 24) RTP ?float73))))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.div RTP ((_ to_fp 5 11) RTZ ?float69) ?float129)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.gt ?float109 ((_ to_fp 5 11) RNE ?float126))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.lt ((_ to_fp 8 24) RTP ?float144) ?float123)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.gt ?float74 ((_ to_fp 11 53) RNE ?float102))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNormal ?float110)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNaN ?float144)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.leq ?float85 ?float135)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.geq ?float66 ?float121)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNaN ?float129)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNegative ?float104)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isNegative ?float128)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isInfinite ?float145)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (p8 ((_ to_fp 5 11) RTZ ?float99) ?float146 ?float144 ((_ to_fp 15 113) RTN ?float108))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNaN ?float98)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.geq ((_ to_fp 8 24) RTP ?float108) ?float116)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.geq ?float95 ?float145)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.leq ?float113 ?float110)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNaN ?float113)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p2 ((_ to_fp 8 24) RTP ?float148) ((_ to_fp 15 113) RNE ?float79) ((_ to_fp 5 11) RTP ?float134))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNaN ?float60)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNegative ?float77)))
; FINAL ASSERT
(assert (and (or (and ?bool165) (or ?bool156) (or ?bool168)) (or (and ?bool160 ?bool164 (and (and ?bool169 (or (and ?bool169) (or ?bool167) (and ?bool155 ?bool152)) ?bool162) ?bool150 ?bool162))) (or ?bool163)))
(check-sat)


-- iteration 52 --
(declare-fun f0 (Float128 Float32 Float32 Float32 Float32 Float32 Float16 Float128) Float128)
(declare-fun f1 (Float64 Float16 Float128 Float16 Float32 Float32 Float16) Float32)
(declare-fun f2 (Float32 Float128 Float16 Float16 Float64) Float128)
(declare-fun f3 (Float32 Float128 Float64 Float16 Float32 Float64 Float16) Float64)
(declare-fun f4 (Float64 Float128 Float64 Float16 Float16 Float32 Float16 Float16 Float16) Float128)
(declare-fun f5 (Float64 Float32 Float64 Float16 Float16 Float64 Float64 Float64) Float16)
(declare-fun f6 (Float16 Float16 Float128 Float16 Float32) Float128)
(declare-fun f7 (Float128 Float32 Float64 Float64) Float32)
(declare-fun f8 (Float16) Float128)
(declare-fun f9 (Float32 Float64 Float128 Float32 Float16 Float128 Float32 Float128) Float32)
(declare-fun f10 (Float32 Float128 Float64 Float128 Float64 Float32 Float128 Float128 Float32) Float128)
(declare-fun f11 (Float32 Float128 Float32 Float32 Float128 Float64 Float128) Float16)
(declare-fun f12 (Float128 Float64 Float32 Float64 Float128 Float32 Float128 Float64) Float128)
(declare-fun f13 (Float128 Float128 Float16 Float64) Float64)
(declare-fun f14 (Float128 Float128 Float32) Float16)
(declare-fun f15 (Float128 Float64 Float128 Float32 Float64 Float128 Float64 Float16 Float128 Float16) Float16)
(declare-fun f16 (Float16 Float128) Float64)
(declare-fun f17 (Float128 Float128 Float128 Float16) Float16)
(declare-fun f18 (Float32) Float128)
(declare-fun f19 (Float128 Float64 Float16) Float32)
(declare-fun f20 (Float16 Float128 Float32 Float128 Float128 Float64) Float64)
(declare-fun f21 (Float128 Float64 Float16 Float32 Float16 Float64) Float32)
(declare-fun f22 (Float64 Float16 Float64 Float64 Float64 Float16 Float32 Float16 Float128) Float64)
(declare-fun f23 (Float128 Float128 Float128 Float16 Float32 Float128) Float128)
(declare-fun f24 (Float16 Float128 Float32 Float16 Float128 Float128) Float128)
(declare-fun f25 (Float64 Float64 Float16 Float128 Float128 Float32) Float128)
(declare-fun f26 (Float64 Float16) Float32)
(declare-fun f27 (Float64 Float16 Float32 Float64) Float32)
(declare-fun f28 (Float32 Float64 Float16 Float16 Float32 Float32) Float128)
(declare-fun f29 (Float16 Float128 Float32 Float64) Float16)
(declare-fun f30 (Float64) Float16)
(declare-fun f31 (Float32) Float64)
(declare-fun f32 (Float16 Float128 Float32 Float16 Float32 Float128 Float16 Float16) Float32)
(declare-fun f33 (Float128 Float16 Float64 Float16 Float128 Float64 Float64) Float64)
(declare-fun f34 (Float64 Float128 Float16 Float128 Float32 Float16) Float32)
(declare-fun f35 (Float128 Float128 Float32 Float16 Float16 Float64) Float128)
(declare-fun f36 (Float128 Float16 Float128 Float64) Float128)
(declare-fun f37 (Float64) Float32)
(declare-fun f38 (Float128 Float32 Float128 Float32 Float16 Float16 Float64 Float32 Float128) Float64)
(declare-fun f39 (Float64 Float128 Float16 Float32 Float64) Float128)
(declare-fun f40 (Float32 Float64 Float16 Float16 Float16 Float16) Float64)
(declare-fun f41 (Float64 Float64) Float32)
(declare-fun f42 (Float32 Float128 Float16) Float32)
(declare-fun f43 (Float128 Float32 Float64 Float64 Float16) Float128)
(declare-fun f44 (Float64 Float128 Float16 Float128 Float32 Float128 Float64 Float16 Float16 Float128) Float128)
(declare-fun f45 (Float32 Float16 Float128 Float64 Float16 Float128 Float32) Float32)
(declare-fun f46 (Float32 Float16 Float64) Float64)
(declare-fun f47 (Float16 Float64 Float128 Float16 Float16 Float32) Float128)
(declare-fun f48 (Float32 Float16 Float64 Float64 Float16 Float32 Float64) Float16)
(declare-fun f49 (Float16 Float32 Float64 Float16 Float64 Float64) Float128)
(declare-fun p0 (Float32 Float16) Bool)
(declare-fun p1 (Float128 Float128 Float32) Bool)
(declare-fun p2 (Float16 Float32 Float32 Float16 Float64 Float128 Float32) Bool)
(declare-fun p3 (Float128 Float16 Float128 Float64 Float64 Float128 Float16) Bool)
(declare-fun p4 (Float32 Float128 Float32 Float32 Float64 Float128 Float16 Float128 Float16) Bool)
(declare-fun p5 (Float32) Bool)
(declare-fun p6 (Float16 Float64 Float16 Float128 Float16) Bool)
(declare-fun p7 (Float16 Float16 Float128 Float16 Float128 Float32 Float16) Bool)
(declare-fun p8 (Float32 Float64 Float16 Float64 Float16 Float64) Bool)
(declare-fun p9 (Float16 Float64 Float64 Float128 Float16 Float128 Float16 Float16 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float128)
(declare-const ?float62 Float128)
(declare-const ?float63 Float16)
(declare-const ?float64 Float128)
(declare-const ?float65 Float128)
(declare-const ?float66 Float16)
(declare-const ?float67 Float16)
(declare-const ?float68 Float16)
(declare-const ?float69 Float16)
(declare-const ?float70 Float128)
(declare-const ?float71 Float32)
(declare-const ?float72 Float128)
(declare-const ?float73 Float16)
(declare-const ?float74 Float128)
(declare-const ?float75 Float64)
(declare-const ?float76 Float32)
(declare-const ?float77 Float64)
(declare-const ?float78 Float128)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float84 Float128)
(assert (= ?float84 (fp #b0 #b001011001001100 #b1011001001000001011000111111000110101110010101000101110000001100100100010001111111100100100011010011001100001001)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b1 #b010110001001000 #b0100101001001100001111001111001101011100101010111010001100101101100111001110011011100100001010001110110110111011)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b0 #b00110111 #b10101011011101011010000)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b11010 #b1010000000)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (fp.abs ?float72)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.div RTN ((_ to_fp 5 11) RTN ?float77) ?float80)))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.roundToIntegral RTZ ?float66)))
(declare-const ?float103 Float64)
(assert (= ?float103 (f3 ((_ to_fp 8 24) RTZ ?float91) ?float84 ((_ to_fp 11 53) RTN ?float73) ((_ to_fp 5 11) RNE ?float99) ((_ to_fp 8 24) RTP ?float69) ((_ to_fp 11 53) RTP ?float92) ?float67)))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.sub RNE ?float64 ((_ to_fp 15 113) RTP ?float66))))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.div RTN ((_ to_fp 11 53) RTN ?float74) ?float86)))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.mul RNE ?float76 ((_ to_fp 8 24) RTN ?float77))))
(declare-const ?float107 Float16)
(assert (= ?float107 (fp.max ?float91 ((_ to_fp 5 11) RTP ?float106))))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.min ?float87 ((_ to_fp 8 24) RNE ?float86))))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.abs ?float107)))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.roundToIntegral RTP ?float109)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.div RTZ ((_ to_fp 5 11) RTZ ?float98) ?float101)))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.min ((_ to_fp 5 11) RTP ?float100) ?float109)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.add RTP ?float99 ?float75)))
(declare-const ?float114 Float32)
(assert (= ?float114 (f32 ?float111 ?float78 ((_ to_fp 8 24) RTZ ?float64) ((_ to_fp 5 11) RTN ?float93) ((_ to_fp 8 24) RNE ?float90) ((_ to_fp 15 113) RTZ ?float89) ((_ to_fp 5 11) RTZ ?float77) ((_ to_fp 5 11) RTP ?float74))))
(declare-const ?float115 Float16)
(assert (= ?float115 (fp.max ((_ to_fp 5 11) RNE ?float113) ?float109)))
(declare-const ?float116 Float32)
(assert (= ?float116 (f34 ((_ to_fp 11 53) RTP ?float64) ?float100 ((_ to_fp 5 11) RTZ ?float93) ((_ to_fp 15 113) RTN ?float106) ((_ to_fp 8 24) RTP ?float111) ((_ to_fp 5 11) RTZ ?float89))))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.sub RTN ?float93 ((_ to_fp 15 113) RTN ?float88))))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.sqrt RNE ?float79)))
(declare-const ?float119 Float128)
(assert (= ?float119 (fp.min ((_ to_fp 15 113) RTN ?float80) ?float62)))
(declare-const ?float120 Float16)
(assert (= ?float120 (fp.sub RNE ((_ to_fp 5 11) RTN ?float104) ?float69)))
(declare-const ?float121 Float128)
(assert (= ?float121 (f28 ((_ to_fp 8 24) RTN ?float119) ((_ to_fp 11 53) RTP ?float91) ((_ to_fp 5 11) RNE ?float85) ((_ to_fp 5 11) RTN ?float79) ((_ to_fp 8 24) RTP ?float112) ?float85)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.sub RNE ((_ to_fp 5 11) RTP ?float93) ?float109)))
(declare-const ?float123 Float128)
(assert (= ?float123 (fp.add RTP ?float70 ((_ to_fp 15 113) RTP ?float106))))
(declare-const ?float124 Float16)
(assert (= ?float124 (fp.max ?float67 ((_ to_fp 5 11) RTP ?float61))))
(declare-const ?float125 Float128)
(assert (= ?float125 (fp.mul RTN ?float60 ?float97)))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.div RTP ((_ to_fp 8 24) RTN ?float60) ?float114)))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.neg ?float101)))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.sub RTZ ?float99 ((_ to_fp 11 53) RTZ ?float94))))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.sub RNE ?float63 ?float91)))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.add RNE ((_ to_fp 8 24) RTZ ?float117) ?float85)))
(declare-const ?float131 Float32)
(assert (= ?float131 (f7 ((_ to_fp 15 113) RNE ?float71) ?float79 ((_ to_fp 11 53) RNE ?float101) ((_ to_fp 11 53) RTZ ?float84))))
(declare-const ?float132 Float32)
(assert (= ?float132 (f27 ((_ to_fp 11 53) RTZ ?float111) ((_ to_fp 5 11) RNE ?float106) ((_ to_fp 8 24) RTZ ?float77) ((_ to_fp 11 53) RTZ ?float82))))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.roundToIntegral RTN ?float118)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.sqrt RTN ?float74)))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.neg ?float60)))
(declare-const ?float136 Float16)
(assert (= ?float136 (f17 ((_ to_fp 15 113) RNE ?float130) ((_ to_fp 15 113) RTZ ?float69) ((_ to_fp 15 113) RTP ?float102) ?float96)))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.min ?float121 ((_ to_fp 15 113) RNE ?float80))))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.mul RTN ?float90 ((_ to_fp 5 11) RNE ?float79))))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.sqrt RTP ?float85)))
(declare-const ?float140 Float128)
(assert (= ?float140 (f24 ((_ to_fp 5 11) RTZ ?float128) ?float97 ((_ to_fp 8 24) RNE ?float129) ((_ to_fp 5 11) RNE ?float75) ?float100 ?float100)))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.div RTN ((_ to_fp 15 113) RTP ?float85) ?float100)))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.max ?float127 ?float90)))
(declare-const ?float143 Float128)
(assert (= ?float143 (fp.sqrt RTN ?float78)))
(declare-const ?float144 Float128)
(assert (= ?float144 (fp.roundToIntegral RTP ?float61)))
(declare-const ?float145 Float16)
(assert (= ?float145 (fp.min ((_ to_fp 5 11) RTN ?float70) ?float111)))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.max ((_ to_fp 5 11) RNE ?float87) ?float80)))
(declare-const ?float147 Float64)
(assert (= ?float147 (f3 ((_ to_fp 8 24) RTP ?float86) ((_ to_fp 15 113) RTP ?float68) ((_ to_fp 11 53) RNE ?float71) ?float124 ((_ to_fp 8 24) RTZ ?float64) ((_ to_fp 11 53) RNE ?float88) ?float102)))
(declare-const ?float148 Float64)
(assert (= ?float148 (f40 ((_ to_fp 8 24) RNE ?float144) ?float103 ((_ to_fp 5 11) RTN ?float114) ?float80 ((_ to_fp 5 11) RNE ?float105) ((_ to_fp 5 11) RTZ ?float86))))
(declare-const ?float149 Float128)
(assert (= ?float149 (f44 ?float83 ((_ to_fp 15 113) RTP ?float68) ((_ to_fp 5 11) RNE ?float106) ((_ to_fp 15 113) RTP ?float88) ?float131 ((_ to_fp 15 113) RNE ?float111) ((_ to_fp 11 53) RTP ?float72) ((_ to_fp 5 11) RTP ?float118) ((_ to_fp 5 11) RNE ?float81) ((_ to_fp 15 113) RTN ?float114))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p0 ?float106 ((_ to_fp 5 11) RTZ ?float77))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNormal ?float138)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (p4 ?float126 ((_ to_fp 15 113) RTN ?float124) ((_ to_fp 8 24) RTP ?float68) ((_ to_fp 8 24) RTZ ?float69) ((_ to_fp 11 53) RNE ?float70) ?float72 ((_ to_fp 5 11) RTZ ?float130) ?float117 ?float109)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.eq ?float149 ((_ to_fp 15 113) RTN ?float130))))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isPositive ?float114)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.gt ?float138 ((_ to_fp 5 11) RTN ?float72))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isInfinite ?float84)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNegative ?float90)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.eq ?float110 ((_ to_fp 5 11) RNE ?float89))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.leq ((_ to_fp 15 113) RTP ?float91) ?float93)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNormal ?float60)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isPositive ?float60)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isSubnormal ?float101)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.gt ?float139 ((_ to_fp 8 24) RTP ?float146))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.gt ?float129 ?float91)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isPositive ?float147)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p7 ?float115 ?float115 ?float135 ((_ to_fp 5 11) RTZ ?float71) ((_ to_fp 15 113) RTZ ?float77) ((_ to_fp 8 24) RTN ?float111) ((_ to_fp 5 11) RNE ?float61))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNormal ?float115)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isSubnormal ?float114)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNormal ?float74)))
; FINAL ASSERT
(assert (and ?bool152 (and ?bool167 (and ?bool152 ?bool163 ?bool160) (or ?bool150 (or ?bool169 ?bool165))) (and ?bool150 ?bool154)))
(check-sat)


-- iteration 53 --
(declare-fun f0 (Float32 Float16 Float16 Float16 Float64 Float16) Float128)
(declare-fun f1 (Float64 Float16) Float32)
(declare-fun f2 (Float32 Float128 Float128 Float32 Float128 Float64 Float128 Float32) Float16)
(declare-fun f3 (Float128) Float16)
(declare-fun f4 (Float32 Float16 Float32) Float64)
(declare-fun f5 (Float16 Float64 Float16 Float32 Float32 Float32 Float128 Float16) Float32)
(declare-fun f6 (Float128 Float32) Float16)
(declare-fun f7 (Float128 Float32 Float64) Float64)
(declare-fun f8 (Float16 Float32 Float16 Float16 Float32 Float16) Float128)
(declare-fun f9 (Float64 Float16 Float64 Float128 Float64 Float128 Float64 Float128) Float32)
(declare-fun f10 (Float64 Float16 Float16 Float32 Float16 Float32) Float64)
(declare-fun f11 (Float16 Float32 Float64 Float128 Float32 Float32 Float128) Float16)
(declare-fun f12 (Float64 Float128 Float128 Float64 Float16 Float16 Float16 Float128 Float32 Float128) Float64)
(declare-fun f13 (Float32 Float128 Float32 Float16 Float64 Float16 Float16 Float16 Float32 Float32) Float64)
(declare-fun f14 (Float128 Float16 Float16 Float128 Float32 Float16 Float16 Float128 Float64) Float128)
(declare-fun f15 (Float16 Float16 Float32 Float64 Float32 Float16 Float32 Float128) Float16)
(declare-fun f16 (Float32 Float16 Float32 Float128 Float32 Float64 Float128 Float128) Float16)
(declare-fun f17 (Float16 Float64 Float32) Float32)
(declare-fun f18 (Float64 Float64 Float128 Float16 Float16 Float64 Float64 Float128) Float128)
(declare-fun f19 (Float64 Float64 Float128 Float16 Float128 Float32 Float64 Float32 Float64 Float128) Float32)
(declare-fun f20 (Float64 Float16 Float128 Float32 Float64 Float16 Float16 Float16 Float32 Float16) Float128)
(declare-fun f21 (Float64 Float64 Float32 Float64) Float16)
(declare-fun f22 (Float64 Float64 Float128 Float64 Float16 Float64 Float32 Float32 Float32 Float128) Float32)
(declare-fun f23 (Float16 Float32 Float128 Float128 Float64 Float16) Float64)
(declare-fun f24 (Float128 Float128 Float128 Float16 Float128 Float32 Float32 Float16 Float16 Float64) Float128)
(declare-fun f25 (Float64 Float32 Float128 Float32 Float64 Float128 Float128) Float16)
(declare-fun f26 (Float64 Float32 Float32 Float16 Float64 Float16 Float16 Float64 Float64) Float128)
(declare-fun f27 (Float64 Float16) Float16)
(declare-fun f28 (Float16 Float32 Float16 Float16 Float64 Float32 Float32) Float32)
(declare-fun f29 (Float32 Float16 Float64) Float128)
(declare-fun f30 (Float64 Float16 Float32 Float64 Float64 Float16 Float32 Float32 Float64) Float16)
(declare-fun f31 (Float64 Float64 Float32 Float64 Float32) Float16)
(declare-fun f32 (Float16 Float64 Float64) Float128)
(declare-fun f33 (Float32 Float32 Float32 Float128 Float32 Float128 Float32 Float32 Float32 Float128) Float64)
(declare-fun f34 (Float16 Float32 Float64) Float16)
(declare-fun f35 (Float64 Float16 Float16 Float16 Float32 Float128 Float32 Float64 Float64 Float32) Float32)
(declare-fun f36 (Float16 Float16 Float128 Float64) Float64)
(declare-fun f37 (Float128 Float16) Float16)
(declare-fun f38 (Float128 Float32 Float16 Float16 Float16 Float16 Float16 Float64 Float32) Float64)
(declare-fun f39 (Float64) Float128)
(declare-fun f40 (Float32 Float16) Float64)
(declare-fun f41 (Float64 Float64 Float16) Float32)
(declare-fun f42 (Float128) Float64)
(declare-fun f43 (Float128) Float128)
(declare-fun f44 (Float128 Float32 Float32) Float64)
(declare-fun f45 (Float32 Float32 Float32 Float64 Float32 Float64) Float128)
(declare-fun f46 (Float128 Float64 Float128 Float32) Float64)
(declare-fun f47 (Float32 Float64 Float32 Float64) Float64)
(declare-fun f48 (Float32 Float32) Float16)
(declare-fun f49 (Float64 Float64 Float16 Float32 Float32 Float128 Float16 Float16 Float32) Float128)
(declare-fun p0 (Float32 Float128 Float32 Float64 Float16 Float16 Float64 Float16 Float64) Bool)
(declare-fun p1 (Float128 Float16 Float128 Float32 Float16 Float16 Float16) Bool)
(declare-fun p2 (Float32 Float128 Float128 Float32 Float128 Float64 Float64 Float64 Float128) Bool)
(declare-fun p3 (Float32) Bool)
(declare-fun p4 (Float16 Float16 Float64 Float32 Float16 Float32 Float64 Float32 Float32) Bool)
(declare-fun p5 (Float16 Float16 Float128 Float32 Float32 Float32 Float32 Float32 Float128 Float32) Bool)
(declare-fun p6 (Float32) Bool)
(declare-fun p7 (Float32 Float128 Float64 Float128 Float128 Float64 Float64) Bool)
(declare-fun p8 (Float16 Float64 Float128 Float128 Float32 Float128 Float128 Float64 Float128 Float128) Bool)
(declare-fun p9 (Float64 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float16)
(declare-const ?float62 Float64)
(declare-const ?float63 Float128)
(declare-const ?float64 Float64)
(declare-const ?float65 Float64)
(declare-const ?float66 Float64)
(declare-const ?float67 Float16)
(declare-const ?float68 Float16)
(declare-const ?float69 Float16)
(declare-const ?float70 Float32)
(declare-const ?float71 Float128)
(declare-const ?float72 Float64)
(declare-const ?float73 Float32)
(declare-const ?float74 Float32)
(declare-const ?float75 Float32)
(declare-const ?float76 Float128)
(declare-const ?float77 Float64)
(declare-const ?float78 Float16)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b1 #b00110 #b0000011001)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b0 #b01111 #b1010111100)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b10110011011 #b1011110101001101110100100000011011010001010110110010)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b0 #b00000 #b1101100101)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b0 #b11000010011 #b0010011100100110101000111111101101000111111111101010)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b1 #b00000 #b1011110111)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b0 #b00001 #b0000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.abs ?float88)))
(declare-const ?float101 Float64)
(assert (= ?float101 (fp.div RTZ ((_ to_fp 11 53) RTN ?float92) ?float65)))
(declare-const ?float102 Float64)
(assert (= ?float102 (fp.add RTP ?float77 ?float62)))
(declare-const ?float103 Float64)
(assert (= ?float103 (f47 ((_ to_fp 8 24) RTN ?float88) ((_ to_fp 11 53) RTZ ?float73) ?float79 ?float77)))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.min ?float96 ?float81)))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.max ?float86 ?float78)))
(declare-const ?float106 Float16)
(assert (= ?float106 (fp.min ((_ to_fp 5 11) RNE ?float75) ?float97)))
(declare-const ?float107 Float16)
(assert (= ?float107 (fp.neg ?float68)))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.abs ?float73)))
(declare-const ?float109 Float128)
(assert (= ?float109 (f8 ((_ to_fp 5 11) RTN ?float90) ((_ to_fp 8 24) RTN ?float89) ((_ to_fp 5 11) RNE ?float87) ((_ to_fp 5 11) RNE ?float72) ?float87 ((_ to_fp 5 11) RNE ?float70))))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.mul RTZ ((_ to_fp 15 113) RNE ?float77) ?float63)))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.div RTP ((_ to_fp 8 24) RTN ?float103) ?float93)))
(declare-const ?float112 Float128)
(assert (= ?float112 (f0 ((_ to_fp 8 24) RNE ?float104) ((_ to_fp 5 11) RTZ ?float72) ?float82 ((_ to_fp 5 11) RTN ?float75) ((_ to_fp 11 53) RNE ?float82) ?float69)))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.abs ?float98)))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.min ?float87 ?float113)))
(declare-const ?float115 Float16)
(assert (= ?float115 (fp.abs ?float81)))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.neg ?float75)))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.sqrt RNE ?float107)))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.min ((_ to_fp 15 113) RTP ?float86) ?float63)))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.add RNE ((_ to_fp 5 11) RNE ?float113) ?float100)))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.sub RTZ ((_ to_fp 15 113) RNE ?float94) ?float71)))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.max ?float92 ((_ to_fp 15 113) RTZ ?float115))))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.max ?float78 ?float86)))
(declare-const ?float123 Float16)
(assert (= ?float123 (f48 ((_ to_fp 8 24) RNE ?float85) ((_ to_fp 8 24) RNE ?float66))))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.neg ?float93)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.sub RTZ ((_ to_fp 8 24) RTP ?float123) ?float98)))
(declare-const ?float126 Float16)
(assert (= ?float126 (f2 ((_ to_fp 8 24) RNE ?float94) ((_ to_fp 15 113) RTZ ?float70) ((_ to_fp 15 113) RTP ?float77) ?float108 ((_ to_fp 15 113) RTP ?float72) ?float65 ((_ to_fp 15 113) RTP ?float103) ?float98)))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.div RTZ ?float114 ((_ to_fp 8 24) RTZ ?float81))))
(declare-const ?float128 Float128)
(assert (= ?float128 (f14 ((_ to_fp 15 113) RTP ?float83) ((_ to_fp 5 11) RTP ?float70) ((_ to_fp 5 11) RTZ ?float103) ((_ to_fp 15 113) RTP ?float117) ((_ to_fp 8 24) RTN ?float97) ?float106 ((_ to_fp 5 11) RTP ?float66) ((_ to_fp 15 113) RTP ?float65) ((_ to_fp 11 53) RTN ?float119))))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.add RNE ?float122 ((_ to_fp 5 11) RNE ?float75))))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.sub RNE ?float129 ((_ to_fp 5 11) RTZ ?float118))))
(declare-const ?float131 Float128)
(assert (= ?float131 (fp.sub RTZ ?float120 ((_ to_fp 15 113) RNE ?float123))))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.neg ?float61)))
(declare-const ?float133 Float128)
(assert (= ?float133 (fp.roundToIntegral RNE ?float121)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.roundToIntegral RTN ?float120)))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.mul RNE ((_ to_fp 5 11) RTP ?float120) ?float126)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.div RTN ?float129 ?float69)))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.neg ?float125)))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.min ?float106 ?float78)))
(declare-const ?float139 Float128)
(assert (= ?float139 (f14 ((_ to_fp 15 113) RNE ?float66) ?float132 ?float105 ((_ to_fp 15 113) RNE ?float95) ((_ to_fp 8 24) RNE ?float115) ?float135 ?float99 ((_ to_fp 15 113) RTP ?float77) ((_ to_fp 11 53) RTZ ?float69))))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.div RTZ ?float82 ?float117)))
(declare-const ?float141 Float32)
(assert (= ?float141 (fp.abs ?float108)))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.min ?float100 ?float136)))
(declare-const ?float143 Float64)
(assert (= ?float143 (f38 ((_ to_fp 15 113) RTP ?float116) ?float124 ((_ to_fp 5 11) RTZ ?float112) ?float107 ((_ to_fp 5 11) RTP ?float79) ((_ to_fp 5 11) RNE ?float65) ?float117 ((_ to_fp 11 53) RTP ?float129) ?float87)))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.max ?float72 ((_ to_fp 11 53) RTP ?float79))))
(declare-const ?float145 Float16)
(assert (= ?float145 (fp.add RTP ?float68 ?float126)))
(declare-const ?float146 Float16)
(assert (= ?float146 (f48 ((_ to_fp 8 24) RTZ ?float99) ((_ to_fp 8 24) RTZ ?float92))))
(declare-const ?float147 Float32)
(assert (= ?float147 (f41 ?float102 ((_ to_fp 11 53) RTP ?float82) ?float88)))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.max ((_ to_fp 5 11) RTZ ?float76) ?float96)))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.min ?float138 ((_ to_fp 5 11) RTN ?float120))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isPositive ?float68)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNaN ?float129)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isPositive ?float77)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNegative ?float110)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p0 ((_ to_fp 8 24) RTZ ?float134) ((_ to_fp 15 113) RNE ?float84) ((_ to_fp 8 24) RTZ ?float68) ((_ to_fp 11 53) RTP ?float139) ((_ to_fp 5 11) RNE ?float83) ?float88 ((_ to_fp 11 53) RNE ?float68) ?float132 ((_ to_fp 11 53) RTN ?float132))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.gt ?float112 ((_ to_fp 15 113) RTZ ?float69))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.geq ?float81 ?float105)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isZero ?float123)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNormal ?float140)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p7 ((_ to_fp 8 24) RNE ?float146) ((_ to_fp 15 113) RTN ?float116) ((_ to_fp 11 53) RTP ?float145) ((_ to_fp 15 113) RTN ?float114) ((_ to_fp 15 113) RNE ?float94) ((_ to_fp 11 53) RTN ?float79) ((_ to_fp 11 53) RTP ?float114))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isZero ?float101)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.leq ((_ to_fp 8 24) RTP ?float77) ?float74)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.eq ((_ to_fp 5 11) RTN ?float108) ?float84)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNaN ?float82)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isInfinite ?float92)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isZero ?float77)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isSubnormal ?float121)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.leq ?float94 ?float84)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isPositive ?float115)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isSubnormal ?float147)))
; FINAL ASSERT
(assert (and ?bool161 (and (and ?bool155 (and ?bool162 (or ?bool152))))))
(check-sat)


-- iteration 54 --
(declare-fun f0 (Float16 Float64 Float16 Float128 Float64 Float32 Float32 Float32 Float128 Float64) Float64)
(declare-fun f1 (Float64 Float64 Float32 Float128 Float128) Float64)
(declare-fun f2 (Float64 Float32 Float64 Float64) Float16)
(declare-fun f3 (Float64) Float32)
(declare-fun f4 (Float64 Float128 Float32 Float16 Float128) Float128)
(declare-fun f5 (Float64) Float16)
(declare-fun f6 (Float32 Float64 Float128 Float64 Float16 Float128 Float32) Float64)
(declare-fun f7 (Float64 Float64 Float16 Float32 Float64 Float128 Float32 Float16 Float16 Float64) Float16)
(declare-fun f8 (Float128 Float64 Float32 Float64 Float16 Float32 Float128 Float16 Float128) Float32)
(declare-fun f9 (Float64 Float32 Float32 Float16 Float64) Float64)
(declare-fun f10 (Float16 Float16 Float16 Float16 Float128 Float128) Float128)
(declare-fun f11 (Float16 Float16) Float64)
(declare-fun f12 (Float128 Float64 Float64) Float128)
(declare-fun f13 (Float16 Float128 Float32 Float64 Float64 Float16 Float64 Float128) Float64)
(declare-fun f14 (Float64 Float32 Float16 Float32 Float32 Float128) Float64)
(declare-fun f15 (Float32) Float16)
(declare-fun f16 (Float128 Float128 Float64 Float32 Float128 Float64) Float32)
(declare-fun f17 (Float32 Float128 Float64 Float16 Float64 Float32 Float64 Float16 Float32 Float16) Float64)
(declare-fun f18 (Float128 Float128 Float128) Float64)
(declare-fun f19 (Float128 Float32 Float32 Float128 Float16 Float32 Float16 Float64 Float32) Float16)
(declare-fun f20 (Float128 Float128 Float32 Float128 Float128 Float128 Float32) Float16)
(declare-fun f21 (Float64) Float128)
(declare-fun f22 (Float64 Float32 Float128 Float32 Float128 Float16) Float32)
(declare-fun f23 (Float16 Float16 Float128 Float16 Float16 Float32) Float128)
(declare-fun f24 (Float128 Float64 Float128 Float128) Float16)
(declare-fun f25 (Float64 Float16 Float64 Float32) Float16)
(declare-fun f26 (Float64) Float32)
(declare-fun f27 (Float16 Float16 Float32 Float32 Float32 Float64 Float128 Float64) Float32)
(declare-fun f28 (Float16 Float64 Float128) Float128)
(declare-fun f29 (Float16 Float32 Float64 Float64 Float16 Float16 Float64) Float128)
(declare-fun f30 (Float32 Float128 Float128 Float32 Float128 Float128 Float32 Float16 Float128 Float32) Float16)
(declare-fun f31 (Float128 Float128) Float16)
(declare-fun f32 (Float64 Float16 Float128 Float32) Float128)
(declare-fun f33 (Float32 Float64 Float64 Float128) Float16)
(declare-fun f34 (Float64 Float16 Float64 Float128 Float16) Float16)
(declare-fun f35 (Float16) Float32)
(declare-fun f36 (Float128 Float64 Float32 Float64 Float16 Float32 Float16 Float16 Float32) Float16)
(declare-fun f37 (Float64) Float64)
(declare-fun f38 (Float64 Float32 Float16 Float32 Float128) Float16)
(declare-fun f39 (Float128 Float128 Float64 Float64 Float128 Float16 Float64 Float32 Float32) Float64)
(declare-fun f40 (Float64 Float16 Float128 Float32 Float16 Float64 Float32 Float64 Float64 Float128) Float32)
(declare-fun f41 (Float128 Float16 Float32 Float16 Float16 Float64 Float16 Float128 Float128) Float128)
(declare-fun f42 (Float32 Float128 Float32 Float128 Float64 Float32) Float16)
(declare-fun f43 (Float64 Float16 Float128 Float128) Float32)
(declare-fun f44 (Float16 Float64 Float32 Float32) Float128)
(declare-fun f45 (Float16 Float128 Float32 Float32 Float64 Float16 Float32 Float64) Float32)
(declare-fun f46 (Float32 Float32 Float16) Float16)
(declare-fun f47 (Float64 Float128 Float128 Float64 Float128 Float64 Float32 Float128) Float128)
(declare-fun f48 (Float64 Float64 Float32 Float32 Float64 Float64 Float16 Float32 Float32 Float128) Float128)
(declare-fun f49 (Float64 Float128 Float64 Float128 Float32 Float32 Float64) Float128)
(declare-fun p0 (Float64 Float128 Float32 Float128 Float64) Bool)
(declare-fun p1 (Float64 Float64 Float64 Float64 Float64 Float32 Float16 Float16) Bool)
(declare-fun p2 (Float64 Float32 Float32 Float16 Float32) Bool)
(declare-fun p3 (Float64) Bool)
(declare-fun p4 (Float32 Float32) Bool)
(declare-fun p5 (Float64 Float16 Float32 Float16 Float64 Float32 Float128 Float64) Bool)
(declare-fun p6 (Float32 Float32 Float128 Float128 Float16 Float32 Float32 Float64) Bool)
(declare-fun p7 (Float128 Float128 Float32 Float128 Float32 Float128 Float128 Float16 Float64 Float16) Bool)
(declare-fun p8 (Float16 Float16 Float64 Float64 Float32 Float16 Float128 Float128) Bool)
(declare-fun p9 (Float128 Float16 Float16 Float64 Float32 Float16 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float32)
(declare-const ?float62 Float64)
(declare-const ?float63 Float128)
(declare-const ?float64 Float16)
(declare-const ?float65 Float64)
(declare-const ?float66 Float128)
(declare-const ?float67 Float64)
(declare-const ?float68 Float16)
(declare-const ?float69 Float16)
(declare-const ?float70 Float128)
(declare-const ?float71 Float64)
(declare-const ?float72 Float128)
(declare-const ?float73 Float128)
(declare-const ?float74 Float32)
(declare-const ?float75 Float128)
(declare-const ?float76 Float64)
(declare-const ?float77 Float32)
(declare-const ?float78 Float32)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b1 #b01110010 #b01010011001100001000100)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float83 Float128)
(assert (= ?float83 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b01011001 #b11000010001100100111111)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b1 #b00001111010 #b0011011111100000011000011111000111011101110001011111)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b1 #b00000001 #b00000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (fp.div RTZ ?float63 ((_ to_fp 15 113) RTN ?float91))))
(declare-const ?float101 Float64)
(assert (= ?float101 (f1 ((_ to_fp 11 53) RTP ?float78) ((_ to_fp 11 53) RTZ ?float100) ((_ to_fp 8 24) RTP ?float76) ((_ to_fp 15 113) RNE ?float95) ?float75)))
(declare-const ?float102 Float32)
(assert (= ?float102 (f35 ((_ to_fp 5 11) RTZ ?float90))))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.sqrt RTZ ?float90)))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.div RTP ((_ to_fp 8 24) RTN ?float94) ?float74)))
(declare-const ?float105 Float16)
(assert (= ?float105 (f2 ((_ to_fp 11 53) RTZ ?float80) ?float96 ((_ to_fp 11 53) RNE ?float60) ((_ to_fp 11 53) RTP ?float98))))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.sub RTP ((_ to_fp 11 53) RTN ?float80) ?float76)))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.max ((_ to_fp 8 24) RTN ?float103) ?float95)))
(declare-const ?float108 Float16)
(assert (= ?float108 (f25 ?float67 ((_ to_fp 5 11) RTN ?float83) ((_ to_fp 11 53) RTP ?float77) ?float80)))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.sqrt RTN ?float71)))
(declare-const ?float110 Float32)
(assert (= ?float110 (fp.sub RTN ?float99 ((_ to_fp 8 24) RTN ?float81))))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.div RNE ?float89 ((_ to_fp 5 11) RTP ?float85))))
(declare-const ?float112 Float64)
(assert (= ?float112 (f11 ((_ to_fp 5 11) RNE ?float78) ((_ to_fp 5 11) RTP ?float77))))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.roundToIntegral RTZ ?float62)))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.sub RTN ((_ to_fp 8 24) RNE ?float112) ?float102)))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.mul RTP ?float102 ?float78)))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.div RNE ?float68 ((_ to_fp 5 11) RTN ?float95))))
(declare-const ?float117 Float32)
(assert (= ?float117 (fp.min ?float60 ((_ to_fp 8 24) RNE ?float98))))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.roundToIntegral RTN ?float87)))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.add RNE ?float96 ?float77)))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.neg ?float65)))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.mul RTN ((_ to_fp 11 53) RTZ ?float87) ?float113)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.mul RNE ?float64 ((_ to_fp 5 11) RTP ?float90))))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.div RTP ?float78 ?float99)))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.sub RNE ((_ to_fp 8 24) RTN ?float103) ?float110)))
(declare-const ?float125 Float32)
(assert (= ?float125 (f43 ((_ to_fp 11 53) RNE ?float104) ((_ to_fp 5 11) RTZ ?float98) ((_ to_fp 15 113) RTN ?float90) ((_ to_fp 15 113) RTN ?float116))))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.add RTN ?float85 ?float72)))
(declare-const ?float127 Float128)
(assert (= ?float127 (f41 ((_ to_fp 15 113) RTP ?float120) ((_ to_fp 5 11) RNE ?float102) ((_ to_fp 8 24) RTN ?float126) ((_ to_fp 5 11) RTZ ?float61) ((_ to_fp 5 11) RTN ?float88) ((_ to_fp 11 53) RTZ ?float80) ((_ to_fp 5 11) RTZ ?float67) ((_ to_fp 15 113) RNE ?float79) ((_ to_fp 15 113) RNE ?float69))))
(declare-const ?float128 Float16)
(assert (= ?float128 (fp.mul RTP ((_ to_fp 5 11) RTP ?float102) ?float116)))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.sqrt RTZ ?float106)))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.add RTN ?float117 ((_ to_fp 8 24) RNE ?float65))))
(declare-const ?float131 Float64)
(assert (= ?float131 (f1 ((_ to_fp 11 53) RTZ ?float82) ?float106 ((_ to_fp 8 24) RTZ ?float127) ?float72 ((_ to_fp 15 113) RTZ ?float125))))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.abs ?float70)))
(declare-const ?float133 Float128)
(assert (= ?float133 (fp.div RTZ ?float88 ?float66)))
(declare-const ?float134 Float64)
(assert (= ?float134 (fp.div RTN ?float109 ((_ to_fp 11 53) RTZ ?float61))))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.add RTZ ?float86 ?float78)))
(declare-const ?float136 Float32)
(assert (= ?float136 (fp.add RTN ?float124 ((_ to_fp 8 24) RTP ?float79))))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.sub RTN ?float67 ?float121)))
(declare-const ?float138 Float32)
(assert (= ?float138 (fp.abs ?float136)))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.abs ?float127)))
(declare-const ?float140 Float64)
(assert (= ?float140 (fp.neg ?float109)))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.sqrt RTZ ?float137)))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.sqrt RNE ?float129)))
(declare-const ?float143 Float16)
(assert (= ?float143 (fp.mul RTZ ?float64 ((_ to_fp 5 11) RTP ?float75))))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.neg ?float131)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.neg ?float80)))
(declare-const ?float146 Float64)
(assert (= ?float146 (fp.add RNE ?float109 ((_ to_fp 11 53) RTN ?float105))))
(declare-const ?float147 Float16)
(assert (= ?float147 (fp.max ?float128 ?float143)))
(declare-const ?float148 Float32)
(assert (= ?float148 (fp.max ?float78 ?float86)))
(declare-const ?float149 Float32)
(assert (= ?float149 (fp.roundToIntegral RTN ?float97)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isPositive ?float130)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p8 ((_ to_fp 5 11) RNE ?float131) ?float69 ((_ to_fp 11 53) RTN ?float96) ((_ to_fp 11 53) RTN ?float136) ((_ to_fp 8 24) RTZ ?float128) ((_ to_fp 5 11) RTZ ?float110) ((_ to_fp 15 113) RNE ?float117) ((_ to_fp 15 113) RTN ?float84))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (p7 ((_ to_fp 15 113) RTP ?float129) ((_ to_fp 15 113) RTP ?float74) ((_ to_fp 8 24) RTP ?float85) ((_ to_fp 15 113) RTP ?float140) ((_ to_fp 8 24) RTP ?float88) ?float75 ((_ to_fp 15 113) RTZ ?float78) ((_ to_fp 5 11) RTP ?float124) ?float137 ?float122)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (p7 ((_ to_fp 15 113) RTN ?float80) ((_ to_fp 15 113) RNE ?float112) ?float148 ((_ to_fp 15 113) RNE ?float114) ((_ to_fp 8 24) RNE ?float94) ((_ to_fp 15 113) RTP ?float97) ((_ to_fp 15 113) RTP ?float78) ?float108 ((_ to_fp 11 53) RTP ?float94) ((_ to_fp 5 11) RNE ?float88))))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p5 ((_ to_fp 11 53) RNE ?float104) ((_ to_fp 5 11) RTZ ?float120) ?float80 ?float116 ?float84 ((_ to_fp 8 24) RNE ?float79) ((_ to_fp 15 113) RTZ ?float91) ?float106)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isInfinite ?float91)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (p8 ((_ to_fp 5 11) RTN ?float62) ((_ to_fp 5 11) RTN ?float88) ?float101 ((_ to_fp 11 53) RNE ?float124) ((_ to_fp 8 24) RNE ?float85) ((_ to_fp 5 11) RTP ?float132) ((_ to_fp 15 113) RNE ?float60) ((_ to_fp 15 113) RTP ?float74))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isZero ?float95)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p0 ?float76 ((_ to_fp 15 113) RNE ?float149) ((_ to_fp 8 24) RTZ ?float83) ((_ to_fp 15 113) RTN ?float141) ((_ to_fp 11 53) RTP ?float91))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isNormal ?float75)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isInfinite ?float98)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNegative ?float129)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isInfinite ?float102)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.leq ?float89 ?float128)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isNegative ?float126)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isZero ?float119)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.gt ?float105 ((_ to_fp 5 11) RNE ?float137))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isInfinite ?float104)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isPositive ?float100)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.leq ?float132 ?float85)))
; FINAL ASSERT
(assert (or ?bool150 (and (or (or ?bool160 ?bool150)) ?bool167) (or ?bool164 (or ?bool161 ?bool159))))
(check-sat)


-- iteration 55 --
(declare-fun f0 (Float16 Float32 Float16 Float32 Float16 Float128 Float16 Float128 Float128 Float64) Float16)
(declare-fun f1 (Float32 Float16 Float16 Float16 Float16 Float64 Float64 Float32) Float128)
(declare-fun f2 (Float16) Float32)
(declare-fun f3 (Float32 Float128 Float16 Float32) Float128)
(declare-fun f4 (Float32 Float64 Float64 Float16 Float64 Float16 Float32 Float64 Float16 Float128) Float16)
(declare-fun f5 (Float16 Float128) Float16)
(declare-fun f6 (Float16 Float64 Float128 Float16 Float32 Float32 Float16) Float128)
(declare-fun f7 (Float128 Float64 Float128 Float128 Float64 Float16 Float32 Float128 Float32 Float16) Float128)
(declare-fun f8 (Float64 Float128 Float32 Float128 Float64) Float16)
(declare-fun f9 (Float32 Float16 Float64) Float16)
(declare-fun f10 (Float32 Float64 Float64 Float128 Float128 Float32) Float128)
(declare-fun f11 (Float32 Float128 Float64 Float16 Float128 Float64 Float16 Float32) Float128)
(declare-fun f12 (Float32) Float128)
(declare-fun f13 (Float32 Float64) Float64)
(declare-fun f14 (Float64 Float128 Float16 Float64 Float64 Float128 Float128 Float16 Float16) Float64)
(declare-fun f15 (Float128 Float16 Float32 Float16 Float32 Float128 Float16 Float32) Float16)
(declare-fun f16 (Float64) Float16)
(declare-fun f17 (Float64 Float32 Float64 Float64) Float128)
(declare-fun f18 (Float32 Float64 Float32) Float128)
(declare-fun f19 (Float16 Float64 Float64 Float64 Float16 Float32 Float128) Float64)
(declare-fun f20 (Float16 Float64 Float64 Float16 Float64) Float128)
(declare-fun f21 (Float64 Float128 Float32 Float128 Float64) Float32)
(declare-fun f22 (Float64 Float32 Float64 Float32 Float64 Float16 Float16) Float64)
(declare-fun f23 (Float16 Float16 Float128 Float32 Float64) Float16)
(declare-fun f24 (Float16 Float64 Float16 Float128 Float32 Float64 Float16 Float64 Float16) Float64)
(declare-fun f25 (Float16 Float64 Float128 Float32 Float32 Float128 Float32 Float16 Float64) Float128)
(declare-fun f26 (Float32 Float16 Float32) Float64)
(declare-fun f27 (Float16 Float64 Float128 Float32 Float32 Float32 Float64 Float32) Float64)
(declare-fun f28 (Float128 Float128 Float64 Float32) Float64)
(declare-fun f29 (Float128 Float64 Float128 Float16 Float16 Float32 Float32 Float32 Float32 Float128) Float32)
(declare-fun f30 (Float128 Float64 Float64 Float32 Float128 Float64) Float128)
(declare-fun f31 (Float32 Float32 Float32 Float16) Float128)
(declare-fun f32 (Float128 Float128 Float16 Float16 Float32 Float16 Float32 Float128) Float64)
(declare-fun f33 (Float128) Float16)
(declare-fun f34 (Float128 Float16 Float128 Float32 Float16 Float128 Float128 Float16) Float64)
(declare-fun f35 (Float64 Float16 Float32) Float128)
(declare-fun f36 (Float128 Float32 Float32 Float32 Float128 Float32 Float16) Float128)
(declare-fun f37 (Float32 Float16 Float16 Float32 Float16) Float32)
(declare-fun f38 (Float64) Float16)
(declare-fun f39 (Float16 Float64 Float16 Float64 Float128) Float32)
(declare-fun f40 (Float16 Float32 Float16 Float16) Float16)
(declare-fun f41 (Float64 Float128 Float32 Float16 Float32 Float128) Float32)
(declare-fun f42 (Float64 Float32 Float32 Float128 Float64 Float64 Float64 Float64 Float128) Float64)
(declare-fun f43 (Float32 Float32 Float128 Float64 Float32 Float32 Float128 Float32 Float16 Float64) Float16)
(declare-fun f44 (Float32 Float16 Float32) Float16)
(declare-fun f45 (Float128) Float32)
(declare-fun f46 (Float64 Float16 Float64 Float128) Float64)
(declare-fun f47 (Float64 Float16 Float128 Float128) Float128)
(declare-fun f48 (Float32 Float64 Float64 Float128 Float128 Float16 Float128 Float64) Float64)
(declare-fun f49 (Float64 Float128 Float128 Float16 Float16 Float16 Float16 Float64 Float128) Float16)
(declare-fun p0 (Float16 Float128 Float128 Float32 Float32 Float128 Float128) Bool)
(declare-fun p1 (Float32 Float32 Float32 Float32 Float32 Float32 Float64) Bool)
(declare-fun p2 (Float16 Float128 Float128 Float128 Float64) Bool)
(declare-fun p3 (Float16 Float64 Float128) Bool)
(declare-fun p4 (Float64 Float64 Float64 Float32 Float16 Float16) Bool)
(declare-fun p5 (Float16 Float128 Float16 Float64) Bool)
(declare-fun p6 (Float16 Float64 Float32 Float16 Float32) Bool)
(declare-fun p7 (Float32 Float32 Float32 Float128 Float32 Float32) Bool)
(declare-fun p8 (Float32 Float64) Bool)
(declare-fun p9 (Float64 Float32 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float128)
(declare-const ?float62 Float128)
(declare-const ?float63 Float32)
(declare-const ?float64 Float32)
(declare-const ?float65 Float32)
(declare-const ?float66 Float16)
(declare-const ?float67 Float64)
(declare-const ?float68 Float16)
(declare-const ?float69 Float128)
(declare-const ?float70 Float128)
(declare-const ?float71 Float16)
(declare-const ?float72 Float128)
(declare-const ?float73 Float64)
(declare-const ?float74 Float128)
(declare-const ?float75 Float128)
(declare-const ?float76 Float128)
(declare-const ?float77 Float32)
(declare-const ?float78 Float64)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b1 #b01000101110 #b1011011000100000011100001110000111001011010100101011)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b0 #b11010 #b1001011110)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b0 #b01111 #b0100011111)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b0 #b000000100100111 #b1100101101101000110001110000000011010011001000101011000110011001110110010011100111100101101001101000011101000001)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00011 #b1001011110)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b1 #b01110000 #b11011100011011010111111)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b0 #b001010011010001 #b1010111110000100000100100001001000011000100111111011011010011010010100100000111100001110011111110001111000100100)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (fp.neg ?float67)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.mul RTZ ?float92 ((_ to_fp 5 11) RNE ?float82))))
(declare-const ?float102 Float64)
(assert (= ?float102 (fp.sqrt RTN ?float81)))
(declare-const ?float103 Float64)
(assert (= ?float103 (f46 ((_ to_fp 11 53) RTN ?float88) ((_ to_fp 5 11) RTN ?float82) ?float90 ?float88)))
(declare-const ?float104 Float64)
(assert (= ?float104 (f46 ((_ to_fp 11 53) RTP ?float68) ((_ to_fp 5 11) RTN ?float103) ?float94 ((_ to_fp 15 113) RTP ?float77))))
(declare-const ?float105 Float64)
(assert (= ?float105 (f26 ?float82 ?float66 ((_ to_fp 8 24) RTP ?float101))))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.roundToIntegral RTP ?float100)))
(declare-const ?float107 Float16)
(assert (= ?float107 (f5 ((_ to_fp 5 11) RTN ?float87) ((_ to_fp 15 113) RTZ ?float90))))
(declare-const ?float108 Float128)
(assert (= ?float108 (f25 ((_ to_fp 5 11) RTP ?float77) ((_ to_fp 11 53) RTP ?float60) ?float96 ((_ to_fp 8 24) RNE ?float102) ((_ to_fp 8 24) RTN ?float84) ((_ to_fp 15 113) RTP ?float98) ((_ to_fp 8 24) RTP ?float99) ((_ to_fp 5 11) RTP ?float98) ((_ to_fp 11 53) RTZ ?float101))))
(declare-const ?float109 Float32)
(assert (= ?float109 (fp.neg ?float98)))
(declare-const ?float110 Float64)
(assert (= ?float110 (f28 ((_ to_fp 15 113) RTZ ?float93) ((_ to_fp 15 113) RTP ?float97) ((_ to_fp 11 53) RNE ?float77) ((_ to_fp 8 24) RNE ?float91))))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.neg ?float64)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.add RTP ?float104 ?float102)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.abs ?float99)))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.div RTZ ?float68 ((_ to_fp 5 11) RTP ?float110))))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.neg ?float109)))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.roundToIntegral RTP ?float103)))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.neg ?float86)))
(declare-const ?float118 Float64)
(assert (= ?float118 (f24 ((_ to_fp 5 11) RTN ?float100) ((_ to_fp 11 53) RTP ?float86) ((_ to_fp 5 11) RNE ?float65) ((_ to_fp 15 113) RTP ?float68) ?float64 ((_ to_fp 11 53) RTP ?float70) ((_ to_fp 5 11) RNE ?float78) ?float105 ((_ to_fp 5 11) RNE ?float63))))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.sqrt RNE ?float99)))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.abs ?float96)))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.roundToIntegral RTP ?float117)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.mul RTN ((_ to_fp 5 11) RTP ?float67) ?float92)))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.mul RNE ?float78 ?float80)))
(declare-const ?float124 Float128)
(assert (= ?float124 (fp.mul RTP ?float86 ((_ to_fp 15 113) RTN ?float107))))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.neg ?float78)))
(declare-const ?float126 Float128)
(assert (= ?float126 (f18 ((_ to_fp 8 24) RTP ?float91) ((_ to_fp 11 53) RTN ?float61) ((_ to_fp 8 24) RTZ ?float101))))
(declare-const ?float127 Float16)
(assert (= ?float127 (f9 ((_ to_fp 8 24) RTZ ?float60) ((_ to_fp 5 11) RTP ?float100) ((_ to_fp 11 53) RNE ?float91))))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.min ?float81 ?float100)))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.max ?float81 ((_ to_fp 11 53) RNE ?float93))))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.neg ?float62)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.roundToIntegral RNE ?float80)))
(declare-const ?float132 Float128)
(assert (= ?float132 (f31 ?float98 ((_ to_fp 8 24) RTZ ?float87) ((_ to_fp 8 24) RTZ ?float81) ((_ to_fp 5 11) RNE ?float104))))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.abs ?float102)))
(declare-const ?float134 Float64)
(assert (= ?float134 (fp.mul RTN ?float97 ?float119)))
(declare-const ?float135 Float64)
(assert (= ?float135 (fp.add RTZ ?float106 ((_ to_fp 11 53) RTZ ?float71))))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.roundToIntegral RTN ?float117)))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.abs ?float76)))
(declare-const ?float138 Float64)
(assert (= ?float138 (fp.max ?float99 ?float118)))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.sub RNE ?float91 ((_ to_fp 15 113) RTN ?float109))))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.max ((_ to_fp 15 113) RTZ ?float92) ?float132)))
(declare-const ?float141 Float32)
(assert (= ?float141 (fp.add RNE ?float115 ((_ to_fp 8 24) RTZ ?float90))))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.sqrt RTP ?float113)))
(declare-const ?float143 Float128)
(assert (= ?float143 (fp.div RTN ?float60 ?float88)))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.roundToIntegral RNE ?float115)))
(declare-const ?float145 Float32)
(assert (= ?float145 (f2 ?float101)))
(declare-const ?float146 Float64)
(assert (= ?float146 (f26 ?float63 ?float71 ?float89)))
(declare-const ?float147 Float16)
(assert (= ?float147 (f44 ((_ to_fp 8 24) RNE ?float96) ?float85 ((_ to_fp 8 24) RNE ?float80))))
(declare-const ?float148 Float64)
(assert (= ?float148 (f27 ?float101 ((_ to_fp 11 53) RTN ?float127) ((_ to_fp 15 113) RNE ?float127) ((_ to_fp 8 24) RTZ ?float84) ((_ to_fp 8 24) RNE ?float102) ((_ to_fp 8 24) RTZ ?float137) ((_ to_fp 11 53) RTN ?float61) ?float115)))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.div RTN ?float62 ((_ to_fp 15 113) RTP ?float107))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.leq ?float139 ?float60)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.leq ?float133 ?float103)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isPositive ?float85)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.eq ?float76 ?float95)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isSubnormal ?float140)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.leq ?float133 ((_ to_fp 11 53) RTN ?float60))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (p8 ?float65 ?float123)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNormal ?float70)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p6 ((_ to_fp 5 11) RTN ?float95) ((_ to_fp 11 53) RNE ?float64) ((_ to_fp 8 24) RTZ ?float95) ((_ to_fp 5 11) RTZ ?float123) ?float144)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.gt ?float63 ((_ to_fp 8 24) RTN ?float90))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.eq ?float68 ((_ to_fp 5 11) RTZ ?float141))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isPositive ?float67)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.geq ?float113 ((_ to_fp 11 53) RTZ ?float72))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.lt ((_ to_fp 11 53) RNE ?float62) ?float100)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.eq ?float67 ?float94)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isPositive ?float136)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p2 ((_ to_fp 5 11) RTP ?float134) ((_ to_fp 15 113) RNE ?float112) ((_ to_fp 15 113) RTN ?float133) ((_ to_fp 15 113) RTZ ?float94) ?float131)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.lt ?float128 ?float123)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.geq ?float62 ?float88)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNormal ?float143)))
; FINAL ASSERT
(assert (and (and (or ?bool163)) ?bool159))
(check-sat)


-- iteration 56 --
(declare-fun f0 (Float32 Float32 Float16 Float64 Float64 Float16 Float64 Float64 Float128) Float16)
(declare-fun f1 (Float64 Float16 Float128) Float16)
(declare-fun f2 (Float32 Float32 Float128 Float32 Float16 Float64 Float128) Float32)
(declare-fun f3 (Float32 Float16 Float32 Float16 Float128 Float16 Float16) Float64)
(declare-fun f4 (Float16 Float128 Float128 Float32 Float64 Float16) Float128)
(declare-fun f5 (Float16 Float128 Float32 Float32 Float16 Float16 Float128) Float128)
(declare-fun f6 (Float32 Float32 Float128) Float128)
(declare-fun f7 (Float16) Float16)
(declare-fun f8 (Float128 Float32 Float128 Float32 Float16 Float32 Float64 Float128) Float32)
(declare-fun f9 (Float16 Float64 Float32 Float32 Float32 Float32 Float64 Float16 Float128 Float16) Float32)
(declare-fun f10 (Float64 Float128 Float64 Float16 Float64 Float16 Float32 Float16 Float128 Float32) Float128)
(declare-fun f11 (Float32 Float64 Float32 Float128) Float32)
(declare-fun f12 (Float16 Float32 Float128) Float64)
(declare-fun f13 (Float64 Float128 Float16 Float128 Float32 Float128 Float32 Float16 Float16 Float64) Float128)
(declare-fun f14 (Float16 Float64 Float128) Float16)
(declare-fun f15 (Float16 Float64 Float64) Float128)
(declare-fun f16 (Float16 Float16 Float32) Float32)
(declare-fun f17 (Float128 Float32 Float32 Float32 Float64 Float16) Float16)
(declare-fun f18 (Float32 Float64 Float32 Float32 Float64 Float128 Float64 Float64 Float128 Float64) Float16)
(declare-fun f19 (Float32 Float64 Float16 Float64) Float64)
(declare-fun f20 (Float32 Float16) Float32)
(declare-fun f21 (Float32) Float32)
(declare-fun f22 (Float128 Float128 Float64 Float128 Float64 Float64 Float16) Float128)
(declare-fun f23 (Float128 Float128 Float64 Float16 Float64) Float16)
(declare-fun f24 (Float128 Float128 Float64 Float64 Float128 Float128 Float128) Float64)
(declare-fun f25 (Float16 Float32 Float128 Float64 Float16) Float32)
(declare-fun f26 (Float32) Float64)
(declare-fun f27 (Float64 Float128 Float128 Float32 Float128 Float32 Float32) Float128)
(declare-fun f28 (Float16 Float16 Float32 Float128) Float64)
(declare-fun f29 (Float32 Float16 Float16 Float32 Float32 Float64 Float64 Float16) Float16)
(declare-fun f30 (Float32 Float16 Float64) Float128)
(declare-fun f31 (Float128 Float128 Float32 Float16 Float32 Float32) Float64)
(declare-fun f32 (Float32 Float64) Float64)
(declare-fun f33 (Float16 Float64 Float16 Float128 Float128) Float64)
(declare-fun f34 (Float16 Float128 Float128 Float16 Float32 Float16 Float64 Float64 Float16) Float16)
(declare-fun f35 (Float32 Float64 Float16 Float32) Float64)
(declare-fun f36 (Float16) Float128)
(declare-fun f37 (Float16 Float32 Float32 Float64 Float16 Float128 Float64) Float32)
(declare-fun f38 (Float128 Float16) Float64)
(declare-fun f39 (Float16 Float32 Float128) Float32)
(declare-fun f40 (Float64 Float64) Float64)
(declare-fun f41 (Float32 Float64 Float32 Float16 Float16 Float32 Float32) Float16)
(declare-fun f42 (Float16 Float32 Float128 Float64 Float64 Float64) Float128)
(declare-fun f43 (Float128 Float32 Float16 Float32 Float128 Float16 Float64 Float16) Float64)
(declare-fun f44 (Float16 Float32 Float64 Float64 Float64) Float64)
(declare-fun f45 (Float16 Float64 Float128 Float64 Float128 Float32) Float32)
(declare-fun f46 (Float16 Float32) Float32)
(declare-fun f47 (Float32 Float32 Float64 Float16 Float128 Float32) Float128)
(declare-fun f48 (Float128 Float64) Float64)
(declare-fun f49 (Float16 Float128 Float128 Float32 Float32 Float16 Float64 Float16 Float16 Float128) Float32)
(declare-fun p0 (Float16) Bool)
(declare-fun p1 (Float64 Float64 Float16 Float16 Float128 Float16 Float32 Float16 Float128) Bool)
(declare-fun p2 (Float64 Float128 Float128 Float32 Float32 Float32 Float32 Float64 Float128 Float64) Bool)
(declare-fun p3 (Float64 Float32 Float64) Bool)
(declare-fun p4 (Float64) Bool)
(declare-fun p5 (Float64 Float128 Float64 Float64 Float128 Float128 Float32) Bool)
(declare-fun p6 (Float32 Float16) Bool)
(declare-fun p7 (Float32 Float128 Float64) Bool)
(declare-fun p8 (Float64 Float128 Float16 Float128) Bool)
(declare-fun p9 (Float128 Float64 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float16)
(declare-const ?float62 Float32)
(declare-const ?float63 Float64)
(declare-const ?float64 Float64)
(declare-const ?float65 Float16)
(declare-const ?float66 Float64)
(declare-const ?float67 Float128)
(declare-const ?float68 Float32)
(declare-const ?float69 Float64)
(declare-const ?float70 Float128)
(declare-const ?float71 Float32)
(declare-const ?float72 Float32)
(declare-const ?float73 Float16)
(declare-const ?float74 Float32)
(declare-const ?float75 Float16)
(declare-const ?float76 Float64)
(declare-const ?float77 Float16)
(declare-const ?float78 Float16)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b0 #b101000100011011 #b0110011101001010111000001101111001100001110100011000000000101011110011110000000101000000000110110011110011110111)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b0 #b10101 #b1110011111)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b0 #b01001100011 #b1110000110010011101001110101110100110101111010011111)))
(declare-const ?float84 Float128)
(assert (= ?float84 (fp #b0 #b011011001010011 #b0001101110100011101010010100010111001101000101000010000000001100001001000011110111010111111000001010111111111101)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b0 #b10101101001 #b1001011001100010010011011110101000101110011011110110)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b0 #b01011000 #b00011111011101011111010)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b0 #b10101 #b0001100100)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b0 #b010001000110010 #b0111111101001110000011111100110101001001011011011001110110001001101100000010001101010001100111011111011000101001)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.abs ?float74)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.neg ?float92)))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.mul RTN ?float79 ((_ to_fp 15 113) RTZ ?float65))))
(declare-const ?float103 Float64)
(assert (= ?float103 (f43 ((_ to_fp 15 113) RTZ ?float92) ((_ to_fp 8 24) RTN ?float89) ((_ to_fp 5 11) RNE ?float72) ((_ to_fp 8 24) RTZ ?float66) ((_ to_fp 15 113) RTZ ?float90) ((_ to_fp 5 11) RTP ?float90) ?float63 ((_ to_fp 5 11) RTN ?float76))))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.mul RNE ((_ to_fp 15 113) RTN ?float61) ?float98)))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.div RTZ ((_ to_fp 8 24) RTP ?float78) ?float68)))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.abs ?float62)))
(declare-const ?float107 Float128)
(assert (= ?float107 (fp.div RTP ((_ to_fp 15 113) RNE ?float74) ?float102)))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.sub RTP ((_ to_fp 8 24) RTN ?float89) ?float106)))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.mul RTN ((_ to_fp 15 113) RNE ?float66) ?float81)))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.mul RTZ ((_ to_fp 11 53) RNE ?float70) ?float63)))
(declare-const ?float111 Float128)
(assert (= ?float111 (fp.roundToIntegral RNE ?float107)))
(declare-const ?float112 Float128)
(assert (= ?float112 (fp.min ?float102 ((_ to_fp 15 113) RTN ?float77))))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.sqrt RTN ?float69)))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.sub RTP ?float100 ((_ to_fp 8 24) RTP ?float110))))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.div RTZ ((_ to_fp 15 113) RTP ?float103) ?float89)))
(declare-const ?float116 Float64)
(assert (= ?float116 (f35 ?float105 ((_ to_fp 11 53) RTZ ?float86) ((_ to_fp 5 11) RTZ ?float108) ((_ to_fp 8 24) RTP ?float103))))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.mul RTP ?float107 ?float102)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.max ?float86 ((_ to_fp 8 24) RTZ ?float92))))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.neg ?float74)))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.sqrt RTN ?float106)))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.abs ?float68)))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.abs ?float111)))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.neg ?float118)))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.abs ?float123)))
(declare-const ?float125 Float32)
(assert (= ?float125 (f20 ((_ to_fp 8 24) RNE ?float82) ?float61)))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.add RTZ ?float107 ((_ to_fp 15 113) RTZ ?float76))))
(declare-const ?float127 Float128)
(assert (= ?float127 (fp.abs ?float109)))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.add RTZ ?float111 ((_ to_fp 15 113) RTN ?float96))))
(declare-const ?float129 Float128)
(assert (= ?float129 (f22 ((_ to_fp 15 113) RNE ?float87) ((_ to_fp 15 113) RTP ?float76) ?float116 ((_ to_fp 15 113) RTN ?float105) ((_ to_fp 11 53) RTZ ?float65) ((_ to_fp 11 53) RTP ?float86) ((_ to_fp 5 11) RTZ ?float110))))
(declare-const ?float130 Float32)
(assert (= ?float130 (f9 ((_ to_fp 5 11) RNE ?float68) ((_ to_fp 11 53) RTP ?float114) ((_ to_fp 8 24) RTP ?float101) ((_ to_fp 8 24) RTZ ?float64) ?float62 ?float125 ((_ to_fp 11 53) RTN ?float94) ((_ to_fp 5 11) RTZ ?float83) ((_ to_fp 15 113) RTN ?float77) ((_ to_fp 5 11) RTN ?float106))))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.abs ?float113)))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.max ?float76 ((_ to_fp 11 53) RNE ?float68))))
(declare-const ?float133 Float128)
(assert (= ?float133 (fp.add RTZ ?float122 ?float127)))
(declare-const ?float134 Float32)
(assert (= ?float134 (fp.abs ?float108)))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.mul RNE ?float67 ((_ to_fp 15 113) RNE ?float61))))
(declare-const ?float136 Float64)
(assert (= ?float136 (f44 ((_ to_fp 5 11) RTZ ?float119) ?float130 ((_ to_fp 11 53) RTP ?float81) ((_ to_fp 11 53) RTZ ?float90) ((_ to_fp 11 53) RNE ?float84))))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.div RTZ ((_ to_fp 15 113) RTN ?float132) ?float126)))
(declare-const ?float138 Float32)
(assert (= ?float138 (fp.max ?float72 ((_ to_fp 8 24) RTP ?float65))))
(declare-const ?float139 Float32)
(assert (= ?float139 (f21 ((_ to_fp 8 24) RNE ?float70))))
(declare-const ?float140 Float64)
(assert (= ?float140 (fp.sqrt RTP ?float103)))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.sqrt RNE ?float128)))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.mul RTN ((_ to_fp 5 11) RNE ?float133) ?float61)))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.roundToIntegral RTN ?float113)))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.max ((_ to_fp 11 53) RNE ?float133) ?float66)))
(declare-const ?float145 Float128)
(assert (= ?float145 (fp.max ((_ to_fp 15 113) RTN ?float62) ?float70)))
(declare-const ?float146 Float64)
(assert (= ?float146 (f44 ((_ to_fp 5 11) RTP ?float89) ((_ to_fp 8 24) RTP ?float143) ((_ to_fp 11 53) RTP ?float100) ((_ to_fp 11 53) RTN ?float62) ((_ to_fp 11 53) RTP ?float80))))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.sub RTN ((_ to_fp 15 113) RTP ?float60) ?float115)))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.roundToIntegral RTZ ?float103)))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.max ((_ to_fp 11 53) RTZ ?float127) ?float103)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.geq ((_ to_fp 8 24) RTN ?float60) ?float90)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.geq ((_ to_fp 11 53) RTZ ?float106) ?float76)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNormal ?float139)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (p7 ((_ to_fp 8 24) RTZ ?float81) ((_ to_fp 15 113) RTZ ?float120) ?float131)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.gt ((_ to_fp 8 24) RTN ?float63) ?float80)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p0 ((_ to_fp 5 11) RNE ?float140))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (p6 ((_ to_fp 8 24) RNE ?float85) ((_ to_fp 5 11) RNE ?float76))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNaN ?float129)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.eq ((_ to_fp 11 53) RTP ?float107) ?float113)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p4 ((_ to_fp 11 53) RTZ ?float96))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNormal ?float116)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.lt ((_ to_fp 15 113) RTP ?float144) ?float115)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isZero ?float118)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isZero ?float117)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isInfinite ?float145)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.geq ((_ to_fp 11 53) RTP ?float60) ?float63)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNegative ?float128)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNaN ?float99)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNaN ?float88)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.eq ?float147 ((_ to_fp 15 113) RTN ?float124))))
; FINAL ASSERT
(assert (and (and ?bool154 (and (or ?bool151 (and (or (or ?bool169 ?bool151 ?bool154) ?bool163 (and ?bool167))) (and ?bool160 (and (and ?bool163) (and ?bool159 ?bool164)) ?bool164))) (or ?bool159 ?bool167 (or (or ?bool150 ?bool164 (and ?bool165 (or ?bool166 ?bool160 ?bool168))) (or (and (and ?bool167) ?bool168) ?bool164 (or ?bool154)) (and ?bool154 ?bool158 ?bool158))))))
(check-sat)


-- iteration 57 --
(declare-fun f0 (Float128 Float32 Float32 Float32 Float32) Float128)
(declare-fun f1 (Float64 Float32 Float16 Float16 Float16 Float128 Float64 Float16 Float64 Float128) Float32)
(declare-fun f2 (Float32 Float16 Float64 Float32 Float128) Float32)
(declare-fun f3 (Float128 Float128 Float64 Float64 Float128 Float64) Float64)
(declare-fun f4 (Float64 Float128 Float128) Float128)
(declare-fun f5 (Float16 Float128 Float32 Float32 Float16 Float32 Float128) Float128)
(declare-fun f6 (Float64 Float128) Float64)
(declare-fun f7 (Float16 Float32 Float16 Float32 Float16 Float16 Float16 Float16 Float32) Float64)
(declare-fun f8 (Float64 Float128) Float32)
(declare-fun f9 (Float32 Float128 Float32 Float128 Float128 Float32) Float16)
(declare-fun f10 (Float32 Float128 Float16 Float16 Float32 Float32 Float64 Float128 Float64) Float64)
(declare-fun f11 (Float16 Float16 Float16 Float64 Float32 Float64 Float32 Float128) Float32)
(declare-fun f12 (Float32 Float32 Float16 Float128 Float16 Float16) Float32)
(declare-fun f13 (Float16 Float32 Float128 Float128 Float16 Float128 Float64 Float128 Float16 Float32) Float128)
(declare-fun f14 (Float128) Float16)
(declare-fun f15 (Float16 Float128 Float64 Float16 Float32 Float128 Float128) Float16)
(declare-fun f16 (Float128 Float16 Float64 Float64) Float64)
(declare-fun f17 (Float16 Float32 Float128 Float32 Float64) Float16)
(declare-fun f18 (Float16 Float16 Float128 Float16 Float64) Float32)
(declare-fun f19 (Float32 Float32 Float128 Float32 Float16) Float32)
(declare-fun f20 (Float32 Float32) Float16)
(declare-fun f21 (Float16 Float16 Float32 Float32) Float16)
(declare-fun f22 (Float128 Float16 Float16 Float64 Float64 Float128 Float128 Float128 Float32 Float32) Float128)
(declare-fun f23 (Float16 Float64 Float128 Float32 Float16 Float128 Float64 Float16) Float128)
(declare-fun f24 (Float64 Float64 Float16 Float32 Float64 Float64 Float16) Float64)
(declare-fun f25 (Float64 Float16 Float16 Float32 Float32 Float16) Float64)
(declare-fun f26 (Float64) Float16)
(declare-fun f27 (Float128 Float64 Float128) Float16)
(declare-fun f28 (Float64) Float16)
(declare-fun f29 (Float128 Float16 Float64 Float128 Float32 Float128) Float32)
(declare-fun f30 (Float32 Float16 Float128 Float32 Float128 Float64 Float16) Float64)
(declare-fun f31 (Float16 Float32) Float128)
(declare-fun f32 (Float32 Float16) Float64)
(declare-fun f33 (Float128 Float32 Float128 Float128 Float128 Float16) Float128)
(declare-fun f34 (Float32 Float16) Float128)
(declare-fun f35 (Float16 Float16 Float32 Float16 Float64 Float64 Float16 Float16 Float64) Float16)
(declare-fun f36 (Float64 Float16 Float64 Float32) Float16)
(declare-fun f37 (Float16 Float32 Float16 Float128 Float64) Float32)
(declare-fun f38 (Float128 Float128 Float16 Float32 Float128 Float128 Float64 Float32 Float64 Float64) Float32)
(declare-fun f39 (Float128 Float32 Float64 Float16 Float16 Float16 Float16 Float128) Float128)
(declare-fun f40 (Float64 Float16 Float16 Float128 Float16 Float32 Float32 Float16 Float128) Float64)
(declare-fun f41 (Float32 Float64 Float32 Float32 Float16 Float32 Float16 Float16) Float32)
(declare-fun f42 (Float32 Float128 Float64 Float64 Float64 Float32 Float64 Float64 Float128) Float128)
(declare-fun f43 (Float16 Float32 Float64 Float64 Float128) Float16)
(declare-fun f44 (Float16 Float32 Float16 Float16 Float64) Float64)
(declare-fun f45 (Float64 Float16) Float16)
(declare-fun f46 (Float16 Float128 Float64) Float128)
(declare-fun f47 (Float32 Float32 Float64 Float32) Float16)
(declare-fun f48 (Float16 Float128 Float64 Float32 Float32 Float64 Float32) Float32)
(declare-fun f49 (Float64 Float16 Float64) Float64)
(declare-fun p0 (Float32 Float64 Float64 Float32 Float128 Float32) Bool)
(declare-fun p1 (Float128 Float32 Float64 Float128 Float128 Float128 Float128 Float16 Float64 Float64) Bool)
(declare-fun p2 (Float32) Bool)
(declare-fun p3 (Float16 Float64 Float128 Float32 Float64 Float32) Bool)
(declare-fun p4 (Float128 Float128 Float32 Float16) Bool)
(declare-fun p5 (Float32 Float16 Float64 Float128 Float32 Float16 Float64 Float16 Float64 Float128) Bool)
(declare-fun p6 (Float16 Float32 Float32 Float128 Float64 Float64 Float32 Float128) Bool)
(declare-fun p7 (Float128 Float32 Float16 Float64 Float32) Bool)
(declare-fun p8 (Float32 Float16 Float128 Float128 Float32) Bool)
(declare-fun p9 (Float128 Float16 Float64 Float32 Float128 Float64 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float128)
(declare-const ?float62 Float128)
(declare-const ?float63 Float64)
(declare-const ?float64 Float64)
(declare-const ?float65 Float32)
(declare-const ?float66 Float64)
(declare-const ?float67 Float32)
(declare-const ?float68 Float16)
(declare-const ?float69 Float32)
(declare-const ?float70 Float64)
(declare-const ?float71 Float32)
(declare-const ?float72 Float128)
(declare-const ?float73 Float128)
(declare-const ?float74 Float16)
(declare-const ?float75 Float16)
(declare-const ?float76 Float64)
(declare-const ?float77 Float64)
(declare-const ?float78 Float128)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b1 #b10010100101 #b0101011010100100011001100000001100011101011000111110)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b1 #b00110 #b0010001001)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b01010100000 #b0101000011000000101000011000000000111010111000010011)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float64)
(assert (= ?float92 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float64)
(assert (= ?float98 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.mul RTN ?float85 ((_ to_fp 5 11) RTN ?float61))))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.roundToIntegral RTZ ?float100)))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.sub RTP ?float93 ((_ to_fp 5 11) RNE ?float90))))
(declare-const ?float103 Float32)
(assert (= ?float103 (fp.abs ?float67)))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.mul RNE ((_ to_fp 5 11) RTZ ?float83) ?float68)))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.neg ?float104)))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.min ?float63 ?float99)))
(declare-const ?float107 Float64)
(assert (= ?float107 (fp.div RTP ?float76 ((_ to_fp 11 53) RTP ?float105))))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.abs ?float98)))
(declare-const ?float109 Float64)
(assert (= ?float109 (f16 ((_ to_fp 15 113) RTZ ?float101) ((_ to_fp 5 11) RTP ?float61) ((_ to_fp 11 53) RNE ?float95) ((_ to_fp 11 53) RTZ ?float95))))
(declare-const ?float110 Float16)
(assert (= ?float110 (f9 ((_ to_fp 8 24) RTZ ?float106) ((_ to_fp 15 113) RNE ?float87) ((_ to_fp 8 24) RTZ ?float64) ((_ to_fp 15 113) RTZ ?float109) ((_ to_fp 15 113) RTP ?float79) ((_ to_fp 8 24) RTP ?float77))))
(declare-const ?float111 Float128)
(assert (= ?float111 (fp.sub RTN ?float78 ((_ to_fp 15 113) RTN ?float95))))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.abs ?float71)))
(declare-const ?float113 Float128)
(assert (= ?float113 (f13 ?float93 ((_ to_fp 8 24) RTZ ?float109) ((_ to_fp 15 113) RNE ?float75) ((_ to_fp 15 113) RNE ?float74) ((_ to_fp 5 11) RNE ?float61) ((_ to_fp 15 113) RTP ?float66) ?float91 ((_ to_fp 15 113) RTN ?float109) ?float104 ((_ to_fp 8 24) RNE ?float78))))
(declare-const ?float114 Float64)
(assert (= ?float114 (f24 ?float81 ((_ to_fp 11 53) RNE ?float85) ((_ to_fp 5 11) RNE ?float94) ((_ to_fp 8 24) RTP ?float92) ((_ to_fp 11 53) RTP ?float79) ?float77 ?float104)))
(declare-const ?float115 Float16)
(assert (= ?float115 (f43 ((_ to_fp 5 11) RNE ?float72) ?float103 ((_ to_fp 11 53) RTN ?float104) ((_ to_fp 11 53) RTN ?float111) ((_ to_fp 15 113) RTP ?float102))))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.neg ?float105)))
(declare-const ?float117 Float128)
(assert (= ?float117 (f23 ?float75 ((_ to_fp 11 53) RTZ ?float73) ((_ to_fp 15 113) RNE ?float60) ((_ to_fp 8 24) RNE ?float91) ?float74 ((_ to_fp 15 113) RTZ ?float63) ((_ to_fp 11 53) RTZ ?float80) ((_ to_fp 5 11) RTZ ?float69))))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.div RTZ ?float110 ((_ to_fp 5 11) RTP ?float71))))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.neg ?float92)))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.abs ?float70)))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.mul RTZ ?float91 ?float64)))
(declare-const ?float122 Float64)
(assert (= ?float122 (f16 ((_ to_fp 15 113) RTZ ?float88) ((_ to_fp 5 11) RTZ ?float78) ((_ to_fp 11 53) RTZ ?float79) ?float91)))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.sqrt RTZ ?float82)))
(declare-const ?float124 Float64)
(assert (= ?float124 (f44 ((_ to_fp 5 11) RNE ?float109) ?float71 ((_ to_fp 5 11) RNE ?float66) ((_ to_fp 5 11) RTP ?float87) ((_ to_fp 11 53) RTP ?float111))))
(declare-const ?float125 Float16)
(assert (= ?float125 (fp.neg ?float101)))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.roundToIntegral RTP ?float96)))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.div RTN ((_ to_fp 5 11) RNE ?float61) ?float86)))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.roundToIntegral RTN ?float113)))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.abs ?float60)))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.sub RTP ((_ to_fp 8 24) RTZ ?float72) ?float67)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.add RTP ?float63 ((_ to_fp 11 53) RTN ?float110))))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.max ((_ to_fp 5 11) RNE ?float95) ?float80)))
(declare-const ?float133 Float16)
(assert (= ?float133 (f45 ?float121 ((_ to_fp 5 11) RTZ ?float73))))
(declare-const ?float134 Float32)
(assert (= ?float134 (fp.abs ?float84)))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.roundToIntegral RNE ?float84)))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.neg ?float113)))
(declare-const ?float137 Float16)
(assert (= ?float137 (f20 ?float112 ((_ to_fp 8 24) RTZ ?float99))))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.sub RTP ((_ to_fp 5 11) RTZ ?float87) ?float75)))
(declare-const ?float139 Float32)
(assert (= ?float139 (f29 ((_ to_fp 15 113) RTN ?float87) ((_ to_fp 5 11) RTP ?float107) ?float90 ((_ to_fp 15 113) RTP ?float121) ((_ to_fp 8 24) RTZ ?float61) ((_ to_fp 15 113) RTP ?float71))))
(declare-const ?float140 Float32)
(assert (= ?float140 (f37 ((_ to_fp 5 11) RTN ?float112) ((_ to_fp 8 24) RTP ?float121) ?float102 ((_ to_fp 15 113) RTN ?float120) ((_ to_fp 11 53) RTZ ?float117))))
(declare-const ?float141 Float16)
(assert (= ?float141 (f14 ?float72)))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.add RTN ?float64 ?float76)))
(declare-const ?float143 Float16)
(assert (= ?float143 (fp.sqrt RNE ?float110)))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.sqrt RTZ ?float115)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.min ?float120 ((_ to_fp 11 53) RTP ?float102))))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.div RTN ?float80 ((_ to_fp 5 11) RTN ?float121))))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.abs ?float134)))
(declare-const ?float148 Float32)
(assert (= ?float148 (fp.max ((_ to_fp 8 24) RTN ?float102) ?float67)))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.div RTN ?float66 ((_ to_fp 11 53) RTN ?float129))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.eq ((_ to_fp 5 11) RTP ?float131) ?float101)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p0 ((_ to_fp 8 24) RTP ?float81) ((_ to_fp 11 53) RTN ?float78) ((_ to_fp 11 53) RNE ?float110) ((_ to_fp 8 24) RTN ?float106) ((_ to_fp 15 113) RTZ ?float92) ((_ to_fp 8 24) RTN ?float113))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.geq ((_ to_fp 11 53) RTN ?float100) ?float63)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isPositive ?float65)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNormal ?float79)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.eq ?float69 ?float82)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNormal ?float122)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p3 ((_ to_fp 5 11) RTN ?float103) ?float149 ((_ to_fp 15 113) RTZ ?float66) ((_ to_fp 8 24) RTZ ?float87) ((_ to_fp 11 53) RNE ?float130) ((_ to_fp 8 24) RTP ?float115))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p5 ((_ to_fp 8 24) RTN ?float115) ?float143 ?float97 ((_ to_fp 15 113) RTZ ?float88) ((_ to_fp 8 24) RTZ ?float105) ((_ to_fp 5 11) RTN ?float134) ((_ to_fp 11 53) RNE ?float85) ((_ to_fp 5 11) RNE ?float98) ?float99 ((_ to_fp 15 113) RTN ?float138))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.geq ((_ to_fp 11 53) RNE ?float147) ?float121)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p3 ?float79 ((_ to_fp 11 53) RNE ?float144) ?float72 ((_ to_fp 8 24) RTP ?float86) ?float87 ((_ to_fp 8 24) RTN ?float64))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.geq ?float130 ?float147)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isPositive ?float75)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (p3 ((_ to_fp 5 11) RTP ?float69) ?float98 ((_ to_fp 15 113) RNE ?float127) ?float134 ((_ to_fp 11 53) RTN ?float78) ?float71)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.gt ?float110 ?float88)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p8 ((_ to_fp 8 24) RTP ?float107) ((_ to_fp 5 11) RTP ?float126) ?float61 ((_ to_fp 15 113) RTP ?float60) ((_ to_fp 8 24) RTZ ?float74))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isPositive ?float126)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isSubnormal ?float91)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.leq ((_ to_fp 5 11) RNE ?float126) ?float144)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.lt ((_ to_fp 5 11) RTZ ?float92) ?float110)))
; FINAL ASSERT
(assert (or ?bool157 ?bool150 ?bool160))
(check-sat)


-- iteration 58 --
(declare-fun f0 (Float32 Float32 Float64 Float16 Float16 Float128) Float128)
(declare-fun f1 (Float64) Float64)
(declare-fun f2 (Float16 Float128 Float64 Float64) Float16)
(declare-fun f3 (Float64 Float32 Float16 Float64 Float16 Float64) Float64)
(declare-fun f4 (Float16) Float16)
(declare-fun f5 (Float128 Float16 Float64) Float32)
(declare-fun f6 (Float64 Float128 Float64) Float16)
(declare-fun f7 (Float128 Float128 Float16 Float64 Float16 Float32) Float64)
(declare-fun f8 (Float16 Float32 Float128 Float64 Float32 Float128) Float128)
(declare-fun f9 (Float16 Float32 Float64 Float128 Float16 Float16 Float64) Float32)
(declare-fun f10 (Float16 Float32 Float16 Float16 Float32 Float16 Float16 Float128 Float32 Float16) Float32)
(declare-fun f11 (Float16 Float16 Float32 Float32 Float128 Float128 Float32) Float16)
(declare-fun f12 (Float16 Float16 Float32 Float32 Float32 Float128 Float64 Float128) Float64)
(declare-fun f13 (Float128 Float128 Float32 Float128 Float128 Float32 Float64 Float16 Float64) Float32)
(declare-fun f14 (Float128) Float128)
(declare-fun f15 (Float64 Float64) Float32)
(declare-fun f16 (Float64 Float64 Float128 Float64 Float32 Float32 Float32 Float16 Float32) Float64)
(declare-fun f17 (Float128 Float16 Float32 Float16) Float32)
(declare-fun f18 (Float32 Float16 Float128) Float128)
(declare-fun f19 (Float64 Float32 Float16) Float16)
(declare-fun f20 (Float32 Float32 Float16) Float128)
(declare-fun f21 (Float16) Float32)
(declare-fun f22 (Float16 Float32 Float128 Float64) Float128)
(declare-fun f23 (Float128 Float64 Float64 Float32 Float128) Float128)
(declare-fun f24 (Float128 Float16 Float32 Float32 Float16 Float16) Float32)
(declare-fun f25 (Float128 Float32) Float128)
(declare-fun f26 (Float16 Float32 Float32 Float16 Float64 Float128 Float128 Float16 Float32) Float64)
(declare-fun f27 (Float64 Float16 Float128 Float64 Float16 Float16 Float32 Float64 Float128) Float16)
(declare-fun f28 (Float128 Float128 Float32 Float16 Float16) Float128)
(declare-fun f29 (Float32 Float64 Float16 Float64 Float64 Float32) Float32)
(declare-fun f30 (Float128 Float128) Float128)
(declare-fun f31 (Float128) Float128)
(declare-fun f32 (Float128) Float64)
(declare-fun f33 (Float16) Float64)
(declare-fun f34 (Float16 Float16 Float64 Float64 Float16 Float64) Float32)
(declare-fun f35 (Float128 Float64 Float128) Float32)
(declare-fun f36 (Float32 Float128 Float16 Float16 Float16 Float16 Float64 Float64 Float16) Float64)
(declare-fun f37 (Float32 Float64 Float32 Float64 Float16 Float16) Float128)
(declare-fun f38 (Float64 Float64 Float128 Float16 Float128 Float128 Float16 Float32 Float128) Float16)
(declare-fun f39 (Float32) Float128)
(declare-fun f40 (Float64 Float128 Float32 Float64) Float32)
(declare-fun f41 (Float64) Float64)
(declare-fun f42 (Float64 Float16 Float64 Float16) Float128)
(declare-fun f43 (Float16 Float32 Float64 Float128 Float32 Float64 Float16 Float128 Float32) Float64)
(declare-fun f44 (Float32 Float64) Float64)
(declare-fun f45 (Float128 Float128 Float16 Float16 Float16 Float64 Float16 Float128) Float64)
(declare-fun f46 (Float16 Float64 Float128 Float64 Float16 Float16 Float32 Float128) Float32)
(declare-fun f47 (Float32 Float16 Float16 Float32 Float64) Float32)
(declare-fun f48 (Float32 Float128 Float32 Float128 Float128 Float32 Float64 Float32) Float32)
(declare-fun f49 (Float32 Float64 Float64 Float32) Float64)
(declare-fun p0 (Float64 Float128 Float64 Float64 Float32 Float32 Float32 Float128) Bool)
(declare-fun p1 (Float128 Float64) Bool)
(declare-fun p2 (Float64 Float128 Float128 Float16 Float16 Float128 Float64 Float128) Bool)
(declare-fun p3 (Float128 Float128 Float32 Float32) Bool)
(declare-fun p4 (Float128 Float128 Float128) Bool)
(declare-fun p5 (Float16 Float32 Float128 Float128 Float128) Bool)
(declare-fun p6 (Float32 Float128 Float64 Float64 Float16 Float64 Float32 Float32 Float64 Float16) Bool)
(declare-fun p7 (Float16 Float32 Float64 Float64 Float64) Bool)
(declare-fun p8 (Float32 Float64) Bool)
(declare-fun p9 (Float32 Float64 Float128 Float16 Float32 Float32 Float16 Float64 Float64 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float64)
(declare-const ?float62 Float128)
(declare-const ?float63 Float32)
(declare-const ?float64 Float16)
(declare-const ?float65 Float16)
(declare-const ?float66 Float32)
(declare-const ?float67 Float16)
(declare-const ?float68 Float64)
(declare-const ?float69 Float32)
(declare-const ?float70 Float64)
(declare-const ?float71 Float32)
(declare-const ?float72 Float128)
(declare-const ?float73 Float128)
(declare-const ?float74 Float64)
(declare-const ?float75 Float64)
(declare-const ?float76 Float128)
(declare-const ?float77 Float128)
(declare-const ?float78 Float32)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b1 #b11110010 #b11111001000000100101100)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b0 #b01110100 #b11101111010001010000111)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float90 Float128)
(assert (= ?float90 (fp #b1 #b001010111100010 #b1101010010111100010100001101110110100100001000011010000001000001110001100001111010000110100111101111111100100011)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b0 #b001101111110001 #b0101011111011010111011101101011011101111101010100101101110011010100110111101011100011100110101101010110011101000)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b1 #b10000 #b0111000111)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.roundToIntegral RTN ?float80)))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.neg ?float88)))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.div RTN ((_ to_fp 8 24) RTN ?float99) ?float98)))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.min ?float70 ?float86)))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.add RTN ?float70 ?float61)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.max ((_ to_fp 11 53) RTP ?float93) ?float86)))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.roundToIntegral RTP ?float63)))
(declare-const ?float107 Float64)
(assert (= ?float107 (f7 ((_ to_fp 15 113) RTZ ?float63) ((_ to_fp 15 113) RNE ?float67) ?float89 ?float104 ?float80 ?float66)))
(declare-const ?float108 Float16)
(assert (= ?float108 (fp.sqrt RTN ?float89)))
(declare-const ?float109 Float128)
(assert (= ?float109 (f14 ((_ to_fp 15 113) RTP ?float88))))
(declare-const ?float110 Float32)
(assert (= ?float110 (fp.max ?float106 ((_ to_fp 8 24) RTZ ?float74))))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.max ?float100 ((_ to_fp 5 11) RTZ ?float101))))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.roundToIntegral RNE ?float63)))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.neg ?float94)))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.min ((_ to_fp 5 11) RTN ?float84) ?float64)))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.min ((_ to_fp 15 113) RTZ ?float65) ?float95)))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.min ((_ to_fp 8 24) RNE ?float113) ?float82)))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.min ?float65 ((_ to_fp 5 11) RNE ?float98))))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.sqrt RTP ?float78)))
(declare-const ?float119 Float128)
(assert (= ?float119 (fp.min ((_ to_fp 15 113) RTZ ?float97) ?float93)))
(declare-const ?float120 Float64)
(assert (= ?float120 (f16 ((_ to_fp 11 53) RNE ?float99) ((_ to_fp 11 53) RTP ?float99) ((_ to_fp 15 113) RNE ?float118) ((_ to_fp 11 53) RTP ?float91) ((_ to_fp 8 24) RNE ?float76) ((_ to_fp 8 24) RTZ ?float67) ((_ to_fp 8 24) RTP ?float117) ((_ to_fp 5 11) RTZ ?float102) ((_ to_fp 8 24) RTP ?float68))))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.sub RTN ?float87 ?float87)))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.neg ?float119)))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.min ((_ to_fp 11 53) RTN ?float95) ?float96)))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.roundToIntegral RNE ?float66)))
(declare-const ?float125 Float16)
(assert (= ?float125 (fp.roundToIntegral RNE ?float65)))
(declare-const ?float126 Float16)
(assert (= ?float126 (f11 ((_ to_fp 5 11) RTZ ?float121) ((_ to_fp 5 11) RTZ ?float109) ((_ to_fp 8 24) RNE ?float119) ((_ to_fp 8 24) RTZ ?float87) ((_ to_fp 15 113) RNE ?float87) ((_ to_fp 15 113) RNE ?float117) ?float101)))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.mul RTP ((_ to_fp 5 11) RNE ?float120) ?float97)))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.abs ?float76)))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.mul RTN ?float126 ?float113)))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.neg ?float77)))
(declare-const ?float131 Float128)
(assert (= ?float131 (fp.min ?float95 ((_ to_fp 15 113) RNE ?float81))))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.sub RTP ((_ to_fp 8 24) RTP ?float100) ?float91)))
(declare-const ?float133 Float64)
(assert (= ?float133 (f3 ((_ to_fp 11 53) RNE ?float77) ?float79 ((_ to_fp 5 11) RNE ?float132) ((_ to_fp 11 53) RNE ?float88) ((_ to_fp 5 11) RTZ ?float98) ((_ to_fp 11 53) RTN ?float114))))
(declare-const ?float134 Float128)
(assert (= ?float134 (f8 ((_ to_fp 5 11) RTZ ?float61) ((_ to_fp 8 24) RTN ?float67) ?float128 ((_ to_fp 11 53) RTZ ?float67) ((_ to_fp 8 24) RTN ?float107) ((_ to_fp 15 113) RTN ?float60))))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.neg ?float92)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.sub RNE ?float117 ?float92)))
(declare-const ?float137 Float32)
(assert (= ?float137 (f40 ((_ to_fp 11 53) RTZ ?float101) ((_ to_fp 15 113) RNE ?float124) ((_ to_fp 8 24) RTP ?float86) ?float133)))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.min ?float89 ((_ to_fp 5 11) RTP ?float116))))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.sqrt RTP ?float106)))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.neg ?float126)))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.max ?float103 ((_ to_fp 11 53) RNE ?float140))))
(declare-const ?float142 Float32)
(assert (= ?float142 (fp.roundToIntegral RTP ?float137)))
(declare-const ?float143 Float128)
(assert (= ?float143 (f42 ((_ to_fp 11 53) RNE ?float129) ((_ to_fp 5 11) RTZ ?float81) ((_ to_fp 11 53) RNE ?float129) ((_ to_fp 5 11) RTN ?float83))))
(declare-const ?float144 Float128)
(assert (= ?float144 (fp.min ((_ to_fp 15 113) RTN ?float113) ?float90)))
(declare-const ?float145 Float16)
(assert (= ?float145 (f6 ((_ to_fp 11 53) RNE ?float143) ((_ to_fp 15 113) RTZ ?float79) ((_ to_fp 11 53) RTN ?float132))))
(declare-const ?float146 Float64)
(assert (= ?float146 (fp.sub RNE ((_ to_fp 11 53) RTP ?float81) ?float86)))
(declare-const ?float147 Float128)
(assert (= ?float147 (f37 ((_ to_fp 8 24) RTZ ?float108) ((_ to_fp 11 53) RTP ?float78) ?float110 ((_ to_fp 11 53) RNE ?float140) ((_ to_fp 5 11) RTN ?float84) ((_ to_fp 5 11) RTZ ?float90))))
(declare-const ?float148 Float128)
(assert (= ?float148 (f14 ((_ to_fp 15 113) RNE ?float120))))
(declare-const ?float149 Float32)
(assert (= ?float149 (fp.mul RTP ?float82 ((_ to_fp 8 24) RTP ?float80))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.gt ((_ to_fp 15 113) RTP ?float98) ?float62)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNormal ?float140)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (p6 ((_ to_fp 8 24) RTZ ?float109) ((_ to_fp 15 113) RTP ?float75) ((_ to_fp 11 53) RNE ?float112) ?float120 ?float145 ?float120 ((_ to_fp 8 24) RTP ?float103) ((_ to_fp 8 24) RTP ?float147) ((_ to_fp 11 53) RTZ ?float99) ((_ to_fp 5 11) RTN ?float133))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isInfinite ?float128)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNaN ?float123)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p5 ?float60 ((_ to_fp 8 24) RTZ ?float146) ((_ to_fp 15 113) RTP ?float100) ((_ to_fp 15 113) RNE ?float67) ?float77)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isSubnormal ?float68)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNormal ?float148)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.geq ?float97 ?float114)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.gt ?float121 ?float107)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.geq ?float72 ((_ to_fp 15 113) RNE ?float66))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isZero ?float123)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.geq ((_ to_fp 11 53) RTZ ?float140) ?float146)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isSubnormal ?float139)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.geq ((_ to_fp 15 113) RTP ?float137) ?float93)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.lt ((_ to_fp 11 53) RTP ?float148) ?float104)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p7 ((_ to_fp 5 11) RTP ?float68) ?float139 ((_ to_fp 11 53) RTP ?float117) ((_ to_fp 11 53) RTP ?float135) ((_ to_fp 11 53) RNE ?float127))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p9 ((_ to_fp 8 24) RTN ?float61) ((_ to_fp 11 53) RTZ ?float109) ((_ to_fp 15 113) RTP ?float99) ?float89 ((_ to_fp 8 24) RTZ ?float60) ((_ to_fp 8 24) RNE ?float114) ((_ to_fp 5 11) RTP ?float75) ?float107 ((_ to_fp 11 53) RTZ ?float67) ((_ to_fp 5 11) RTN ?float118))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.geq ?float103 ((_ to_fp 11 53) RTP ?float117))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNegative ?float82)))
; FINAL ASSERT
(assert (or (and (and (and (or (and ?bool154) (and (and ?bool163 ?bool158) (or ?bool162 ?bool169) ?bool163) ?bool150)) ?bool150 ?bool156) (and (and (and ?bool164) ?bool150 ?bool168) ?bool162) (or ?bool169 ?bool152)) (and (and ?bool156) ?bool151 ?bool157)))
(check-sat)


-- iteration 59 --
(declare-fun f0 (Float16 Float128 Float16 Float128) Float128)
(declare-fun f1 (Float64 Float128 Float128 Float64 Float128 Float64 Float128) Float16)
(declare-fun f2 (Float16 Float64 Float16 Float64 Float128 Float32 Float64 Float128 Float64 Float32) Float64)
(declare-fun f3 (Float64 Float128) Float16)
(declare-fun f4 (Float16 Float16 Float64 Float128 Float32 Float32) Float64)
(declare-fun f5 (Float32 Float16) Float32)
(declare-fun f6 (Float16 Float128 Float32 Float16 Float16 Float128) Float64)
(declare-fun f7 (Float16 Float16 Float128 Float64 Float32) Float32)
(declare-fun f8 (Float128 Float64) Float32)
(declare-fun f9 (Float128 Float32 Float32) Float16)
(declare-fun f10 (Float16 Float32 Float64 Float16 Float16 Float16 Float32) Float64)
(declare-fun f11 (Float64) Float128)
(declare-fun f12 (Float32 Float64 Float32 Float32 Float16 Float16) Float16)
(declare-fun f13 (Float16 Float64 Float64 Float128 Float128 Float32 Float16) Float64)
(declare-fun f14 (Float64 Float32 Float16 Float128 Float16 Float128 Float128 Float128 Float64) Float16)
(declare-fun f15 (Float128 Float128 Float64 Float128 Float128 Float16 Float32 Float16 Float32 Float128) Float64)
(declare-fun f16 (Float64 Float16 Float16 Float32 Float16 Float128) Float32)
(declare-fun f17 (Float16 Float128 Float128) Float16)
(declare-fun f18 (Float16 Float64 Float64 Float64 Float16) Float32)
(declare-fun f19 (Float64 Float32) Float32)
(declare-fun f20 (Float32 Float32 Float32 Float16 Float64 Float64 Float64) Float64)
(declare-fun f21 (Float32 Float128 Float128 Float32 Float128 Float16) Float16)
(declare-fun f22 (Float32) Float32)
(declare-fun f23 (Float64 Float64 Float64 Float64 Float64 Float64 Float32 Float64 Float64 Float128) Float32)
(declare-fun f24 (Float16 Float32 Float64 Float32 Float32 Float32) Float16)
(declare-fun f25 (Float16 Float32) Float64)
(declare-fun f26 (Float128 Float16 Float32 Float16) Float128)
(declare-fun f27 (Float16 Float32) Float128)
(declare-fun f28 (Float64 Float64 Float64 Float32) Float16)
(declare-fun f29 (Float16 Float32 Float64 Float32 Float16) Float128)
(declare-fun f30 (Float32 Float128 Float64 Float128 Float64 Float32 Float32 Float128) Float128)
(declare-fun f31 (Float64 Float32 Float64 Float128 Float32 Float16 Float64 Float64 Float128) Float64)
(declare-fun f32 (Float64 Float64 Float64 Float32 Float64 Float64 Float32 Float16 Float16 Float16) Float128)
(declare-fun f33 (Float128 Float16) Float64)
(declare-fun f34 (Float64 Float16 Float64 Float32 Float64 Float128) Float64)
(declare-fun f35 (Float32 Float64 Float32 Float128 Float32 Float16 Float16 Float128) Float16)
(declare-fun f36 (Float64 Float128 Float64 Float16 Float32 Float16 Float32 Float128 Float16 Float16) Float64)
(declare-fun f37 (Float32 Float64 Float32 Float64) Float128)
(declare-fun f38 (Float16 Float32 Float32 Float64 Float128 Float16 Float128) Float128)
(declare-fun f39 (Float128 Float128 Float16) Float128)
(declare-fun f40 (Float64 Float128 Float64 Float16 Float16 Float64 Float32 Float64) Float64)
(declare-fun f41 (Float16 Float64 Float32 Float64 Float64 Float64 Float16 Float16) Float64)
(declare-fun f42 (Float128 Float64 Float64 Float16 Float128 Float32 Float128 Float16) Float16)
(declare-fun f43 (Float64 Float32) Float64)
(declare-fun f44 (Float64 Float128 Float128 Float32 Float64 Float32 Float32 Float16 Float64 Float16) Float32)
(declare-fun f45 (Float16 Float64) Float16)
(declare-fun f46 (Float32 Float16 Float128 Float32 Float16 Float128 Float32 Float16) Float64)
(declare-fun f47 (Float128 Float16 Float32 Float128 Float16 Float32 Float16 Float128 Float32) Float64)
(declare-fun f48 (Float16 Float32 Float128 Float32 Float32 Float16 Float16 Float16 Float64) Float32)
(declare-fun f49 (Float32 Float128 Float64 Float32 Float64 Float128 Float16 Float64) Float128)
(declare-fun p0 (Float16 Float64 Float64 Float128 Float64) Bool)
(declare-fun p1 (Float32 Float64 Float32 Float128 Float64 Float32) Bool)
(declare-fun p2 (Float16 Float128 Float32 Float128 Float16 Float16) Bool)
(declare-fun p3 (Float16 Float128 Float16 Float128 Float128 Float32 Float128 Float64 Float64 Float128) Bool)
(declare-fun p4 (Float16 Float64 Float128 Float16 Float64 Float32 Float16 Float16) Bool)
(declare-fun p5 (Float128 Float32 Float128 Float128 Float64 Float64 Float128 Float128 Float16 Float128) Bool)
(declare-fun p6 (Float64 Float16 Float128 Float32 Float32 Float32 Float32 Float128) Bool)
(declare-fun p7 (Float16 Float16 Float32 Float128 Float64 Float32) Bool)
(declare-fun p8 (Float64 Float32 Float128 Float16 Float32 Float16 Float16 Float64 Float128 Float64) Bool)
(declare-fun p9 (Float16 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float16)
(declare-const ?float62 Float64)
(declare-const ?float63 Float16)
(declare-const ?float64 Float32)
(declare-const ?float65 Float16)
(declare-const ?float66 Float32)
(declare-const ?float67 Float16)
(declare-const ?float68 Float16)
(declare-const ?float69 Float16)
(declare-const ?float70 Float64)
(declare-const ?float71 Float128)
(declare-const ?float72 Float32)
(declare-const ?float73 Float128)
(declare-const ?float74 Float32)
(declare-const ?float75 Float32)
(declare-const ?float76 Float32)
(declare-const ?float77 Float16)
(declare-const ?float78 Float16)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b0 #b10101 #b1010111000)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b0 #b10111 #b1110101100)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b1 #b101010010011100 #b0110111010010111001000110010100000100100010011101100101001001110111111001111101010101110110001111010101001111001)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b1 #b11101101 #b00110000110010111000000)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b0 #b10110001111 #b1110110100001011001111100111010011111001110101011001)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b0 #b00000001 #b00000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (f20 ?float76 ((_ to_fp 8 24) RTZ ?float82) ((_ to_fp 8 24) RNE ?float90) ((_ to_fp 5 11) RTP ?float89) ((_ to_fp 11 53) RTN ?float78) ((_ to_fp 11 53) RNE ?float78) ((_ to_fp 11 53) RNE ?float94))))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.roundToIntegral RTP ?float73)))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.roundToIntegral RTP ?float83)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.sub RTP ?float102 ?float60)))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.mul RTP ((_ to_fp 11 53) RNE ?float67) ?float95)))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.min ((_ to_fp 5 11) RNE ?float66) ?float68)))
(declare-const ?float106 Float64)
(assert (= ?float106 (f36 ((_ to_fp 11 53) RTP ?float90) ((_ to_fp 15 113) RTZ ?float76) ((_ to_fp 11 53) RTZ ?float91) ((_ to_fp 5 11) RTN ?float92) ((_ to_fp 8 24) RNE ?float71) ((_ to_fp 5 11) RTP ?float64) ((_ to_fp 8 24) RNE ?float87) ((_ to_fp 15 113) RTN ?float97) ?float83 ?float69)))
(declare-const ?float107 Float16)
(assert (= ?float107 (fp.max ?float68 ?float65)))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.roundToIntegral RTZ ?float100)))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.sqrt RTZ ?float93)))
(declare-const ?float110 Float32)
(assert (= ?float110 (fp.div RNE ((_ to_fp 8 24) RTN ?float69) ?float94)))
(declare-const ?float111 Float128)
(assert (= ?float111 (fp.roundToIntegral RTP ?float91)))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.abs ?float85)))
(declare-const ?float113 Float32)
(assert (= ?float113 (f19 ((_ to_fp 11 53) RNE ?float83) ?float72)))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.sub RNE ?float76 ?float74)))
(declare-const ?float115 Float64)
(assert (= ?float115 (f33 ((_ to_fp 15 113) RTP ?float67) ((_ to_fp 5 11) RTP ?float110))))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.add RTZ ((_ to_fp 11 53) RNE ?float114) ?float100)))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.div RTP ((_ to_fp 5 11) RTN ?float91) ?float86)))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.max ?float86 ((_ to_fp 5 11) RNE ?float72))))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.sqrt RNE ?float88)))
(declare-const ?float120 Float16)
(assert (= ?float120 (f17 ?float69 ((_ to_fp 15 113) RNE ?float115) ((_ to_fp 15 113) RTZ ?float61))))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.div RTN ?float115 ((_ to_fp 11 53) RTZ ?float114))))
(declare-const ?float122 Float32)
(assert (= ?float122 (fp.max ?float75 ?float76)))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.sub RTN ?float118 ?float63)))
(declare-const ?float124 Float16)
(assert (= ?float124 (fp.mul RTP ?float105 ((_ to_fp 5 11) RNE ?float97))))
(declare-const ?float125 Float16)
(assert (= ?float125 (f17 ((_ to_fp 5 11) RTN ?float111) ((_ to_fp 15 113) RNE ?float81) ((_ to_fp 15 113) RTZ ?float117))))
(declare-const ?float126 Float64)
(assert (= ?float126 (fp.add RNE ((_ to_fp 11 53) RTP ?float118) ?float96)))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.neg ?float110)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.sqrt RTZ ?float113)))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.add RTZ ((_ to_fp 8 24) RNE ?float71) ?float75)))
(declare-const ?float130 Float64)
(assert (= ?float130 (fp.div RTN ((_ to_fp 11 53) RTP ?float127) ?float104)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.abs ?float106)))
(declare-const ?float132 Float32)
(assert (= ?float132 (f23 ?float109 ?float93 ((_ to_fp 11 53) RNE ?float129) ((_ to_fp 11 53) RTN ?float84) ((_ to_fp 11 53) RTP ?float61) ((_ to_fp 11 53) RNE ?float78) ((_ to_fp 8 24) RTP ?float100) ?float116 ?float131 ((_ to_fp 15 113) RTP ?float109))))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.roundToIntegral RNE ?float100)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.neg ?float101)))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.sqrt RTP ?float90)))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.div RTP ?float126 ((_ to_fp 11 53) RTP ?float88))))
(declare-const ?float137 Float16)
(assert (= ?float137 (f3 ((_ to_fp 11 53) RTZ ?float85) ((_ to_fp 15 113) RTP ?float90))))
(declare-const ?float138 Float64)
(assert (= ?float138 (fp.div RNE ?float104 ?float104)))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.max ((_ to_fp 5 11) RTN ?float99) ?float117)))
(declare-const ?float140 Float64)
(assert (= ?float140 (fp.min ?float126 ?float108)))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.roundToIntegral RNE ?float87)))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.max ?float84 ((_ to_fp 5 11) RTN ?float133))))
(declare-const ?float143 Float32)
(assert (= ?float143 (fp.abs ?float64)))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.max ((_ to_fp 11 53) RTZ ?float117) ?float121)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.abs ?float74)))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.add RNE ?float135 ?float63)))
(declare-const ?float147 Float64)
(assert (= ?float147 (fp.neg ?float131)))
(declare-const ?float148 Float32)
(assert (= ?float148 (fp.div RNE ((_ to_fp 8 24) RNE ?float60) ?float143)))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.div RTZ ((_ to_fp 5 11) RTN ?float140) ?float65)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.geq ?float109 ?float109)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNegative ?float137)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNaN ?float122)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.lt ((_ to_fp 5 11) RTN ?float110) ?float83)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNormal ?float64)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.gt ((_ to_fp 11 53) RTN ?float123) ?float133)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.eq ?float97 ((_ to_fp 8 24) RTP ?float125))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNegative ?float69)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.leq ?float136 ?float121)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isSubnormal ?float73)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNormal ?float121)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.leq ((_ to_fp 5 11) RNE ?float108) ?float83)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.gt ?float73 ((_ to_fp 15 113) RTN ?float72))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isZero ?float138)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isSubnormal ?float139)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.geq ?float144 ((_ to_fp 11 53) RTZ ?float135))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isInfinite ?float95)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNaN ?float67)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.eq ((_ to_fp 15 113) RTN ?float79) ?float101)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isSubnormal ?float113)))
; FINAL ASSERT
(assert (and ?bool164))
(check-sat)


-- iteration 60 --
(declare-fun f0 (Float16 Float128 Float64 Float32 Float128 Float128 Float16) Float64)
(declare-fun f1 (Float32 Float32) Float32)
(declare-fun f2 (Float64 Float64 Float128 Float16) Float32)
(declare-fun f3 (Float64 Float32 Float64) Float16)
(declare-fun f4 (Float32 Float64 Float16 Float128) Float128)
(declare-fun f5 (Float16 Float64 Float128 Float32 Float32 Float128 Float64) Float16)
(declare-fun f6 (Float64 Float64 Float64 Float16 Float64 Float16) Float16)
(declare-fun f7 (Float128 Float32) Float128)
(declare-fun f8 (Float32 Float64 Float32 Float16 Float64) Float16)
(declare-fun f9 (Float32 Float64 Float64 Float64 Float32 Float64 Float128 Float32) Float32)
(declare-fun f10 (Float64 Float32 Float64) Float32)
(declare-fun f11 (Float128 Float64 Float128 Float32 Float16 Float32 Float128 Float32) Float128)
(declare-fun f12 (Float64 Float128 Float16 Float128 Float128 Float128 Float64 Float128) Float64)
(declare-fun f13 (Float32 Float32 Float64 Float64 Float64 Float16 Float32) Float64)
(declare-fun f14 (Float32) Float64)
(declare-fun f15 (Float128 Float32 Float16 Float128) Float32)
(declare-fun f16 (Float16 Float16) Float32)
(declare-fun f17 (Float128 Float16 Float32 Float32 Float16 Float64 Float32 Float16 Float16 Float32) Float32)
(declare-fun f18 (Float64) Float64)
(declare-fun f19 (Float32 Float32 Float128) Float32)
(declare-fun f20 (Float64 Float64 Float16 Float32) Float32)
(declare-fun f21 (Float16 Float128 Float128 Float16 Float128 Float32 Float16 Float64) Float64)
(declare-fun f22 (Float128) Float32)
(declare-fun f23 (Float16) Float64)
(declare-fun f24 (Float64 Float128 Float16) Float16)
(declare-fun f25 (Float32 Float32 Float128 Float16) Float128)
(declare-fun f26 (Float128 Float128 Float16 Float128 Float64 Float16 Float128) Float64)
(declare-fun f27 (Float32 Float32 Float128) Float16)
(declare-fun f28 (Float32 Float128) Float16)
(declare-fun f29 (Float128 Float128 Float128 Float64 Float64 Float128 Float128 Float64 Float64 Float128) Float64)
(declare-fun f30 (Float128 Float32 Float32 Float16) Float64)
(declare-fun f31 (Float16 Float16 Float16 Float16 Float64 Float64 Float128 Float32 Float16) Float128)
(declare-fun f32 (Float64 Float32 Float64 Float64 Float32 Float128) Float32)
(declare-fun f33 (Float16 Float128 Float128 Float64 Float16 Float32 Float32 Float64 Float32) Float16)
(declare-fun f34 (Float64 Float128 Float128 Float64) Float128)
(declare-fun f35 (Float16 Float64) Float32)
(declare-fun f36 (Float64 Float32 Float128) Float16)
(declare-fun f37 (Float64 Float32 Float32 Float16) Float16)
(declare-fun f38 (Float32 Float64 Float16 Float32 Float128 Float16 Float32 Float64 Float16 Float32) Float64)
(declare-fun f39 (Float32 Float32 Float64 Float128 Float128 Float128 Float128) Float16)
(declare-fun f40 (Float64 Float64 Float64 Float16 Float32 Float16 Float64 Float16 Float64 Float64) Float32)
(declare-fun f41 (Float128 Float64 Float16 Float64) Float32)
(declare-fun f42 (Float128 Float32 Float16 Float64 Float16 Float128 Float128 Float64) Float16)
(declare-fun f43 (Float16 Float32 Float32 Float128 Float64 Float64 Float64 Float32) Float32)
(declare-fun f44 (Float32 Float64 Float32 Float32 Float64) Float128)
(declare-fun f45 (Float64) Float32)
(declare-fun f46 (Float32 Float64 Float64) Float16)
(declare-fun f47 (Float64 Float128 Float32 Float32) Float128)
(declare-fun f48 (Float32 Float16 Float16 Float16 Float128 Float64 Float16 Float64 Float32) Float64)
(declare-fun f49 (Float32 Float32) Float64)
(declare-fun p0 (Float32 Float128) Bool)
(declare-fun p1 (Float32 Float128 Float128 Float128 Float128 Float32 Float32 Float16 Float128) Bool)
(declare-fun p2 (Float32 Float16 Float128 Float32 Float64 Float64) Bool)
(declare-fun p3 (Float16) Bool)
(declare-fun p4 (Float32 Float64) Bool)
(declare-fun p5 (Float128 Float64 Float16 Float128 Float16 Float16) Bool)
(declare-fun p6 (Float128 Float128 Float64 Float32 Float32 Float16 Float32 Float64 Float64 Float128) Bool)
(declare-fun p7 (Float16) Bool)
(declare-fun p8 (Float128 Float32 Float64) Bool)
(declare-fun p9 (Float16 Float32 Float32 Float128 Float32 Float64 Float16 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float32)
(declare-const ?float62 Float64)
(declare-const ?float63 Float32)
(declare-const ?float64 Float16)
(declare-const ?float65 Float32)
(declare-const ?float66 Float128)
(declare-const ?float67 Float16)
(declare-const ?float68 Float16)
(declare-const ?float69 Float128)
(declare-const ?float70 Float64)
(declare-const ?float71 Float32)
(declare-const ?float72 Float64)
(declare-const ?float73 Float16)
(declare-const ?float74 Float128)
(declare-const ?float75 Float32)
(declare-const ?float76 Float64)
(declare-const ?float77 Float64)
(declare-const ?float78 Float16)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b0 #b10011011001 #b1101111110110110000010001110000111101001000010110111)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b0 #b00010 #b1001001000)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b1 #b01011001010 #b1100111001110101110110110100111000110001000110101101)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b0 #b110011101101000 #b0001110011001011000000011001100011000000011001011001011101111011101111011101110101011010100111011010001001011110)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b01011 #b1100110011)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b0 #b11110 #b0011011011)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b0 #b010100110000010 #b0100000000110111101101100100100100111111101101110011110101001100101001110001000010001100001100110011110001101100)))
(declare-const ?float98 Float64)
(assert (= ?float98 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (fp.min ?float98 ((_ to_fp 11 53) RTP ?float92))))
(declare-const ?float101 Float32)
(assert (= ?float101 (f19 ?float87 ((_ to_fp 8 24) RTP ?float94) ((_ to_fp 15 113) RTN ?float64))))
(declare-const ?float102 Float32)
(assert (= ?float102 (f20 ((_ to_fp 11 53) RTP ?float60) ((_ to_fp 11 53) RTZ ?float94) ((_ to_fp 5 11) RTN ?float98) ?float65)))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.max ((_ to_fp 11 53) RTZ ?float69) ?float70)))
(declare-const ?float104 Float16)
(assert (= ?float104 (f42 ?float66 ((_ to_fp 8 24) RTZ ?float88) ((_ to_fp 5 11) RTP ?float87) ((_ to_fp 11 53) RTP ?float83) ((_ to_fp 5 11) RTN ?float76) ((_ to_fp 15 113) RTZ ?float76) ?float66 ?float90)))
(declare-const ?float105 Float32)
(assert (= ?float105 (f16 ((_ to_fp 5 11) RTN ?float98) ((_ to_fp 5 11) RTZ ?float77))))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.roundToIntegral RTP ?float102)))
(declare-const ?float107 Float64)
(assert (= ?float107 (fp.min ?float100 ?float72)))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.mul RTN ((_ to_fp 8 24) RNE ?float107) ?float84)))
(declare-const ?float109 Float16)
(assert (= ?float109 (f28 ((_ to_fp 8 24) RNE ?float72) ?float74)))
(declare-const ?float110 Float64)
(assert (= ?float110 (f14 ?float84)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.roundToIntegral RNE ?float104)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.abs ?float77)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.sub RTZ ((_ to_fp 11 53) RTN ?float108) ?float80)))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.sub RTN ((_ to_fp 5 11) RTZ ?float77) ?float67)))
(declare-const ?float115 Float128)
(assert (= ?float115 (f11 ((_ to_fp 15 113) RTN ?float100) ((_ to_fp 11 53) RTP ?float64) ((_ to_fp 15 113) RTP ?float87) ((_ to_fp 8 24) RTP ?float69) ((_ to_fp 5 11) RTZ ?float100) ((_ to_fp 8 24) RNE ?float91) ((_ to_fp 15 113) RTZ ?float93) ?float71)))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.abs ?float60)))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.abs ?float92)))
(declare-const ?float118 Float128)
(assert (= ?float118 (f7 ((_ to_fp 15 113) RTZ ?float79) ((_ to_fp 8 24) RTN ?float81))))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.neg ?float117)))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.min ?float103 ?float76)))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.div RTP ?float75 ?float101)))
(declare-const ?float122 Float64)
(assert (= ?float122 (fp.sub RNE ?float88 ((_ to_fp 11 53) RTP ?float92))))
(declare-const ?float123 Float128)
(assert (= ?float123 (fp.neg ?float69)))
(declare-const ?float124 Float32)
(assert (= ?float124 (f2 ?float88 ((_ to_fp 11 53) RTP ?float119) ((_ to_fp 15 113) RTP ?float102) ((_ to_fp 5 11) RTP ?float70))))
(declare-const ?float125 Float32)
(assert (= ?float125 (f40 ((_ to_fp 11 53) RNE ?float121) ((_ to_fp 11 53) RTN ?float63) ((_ to_fp 11 53) RNE ?float119) ((_ to_fp 5 11) RTN ?float90) ((_ to_fp 8 24) RNE ?float62) ((_ to_fp 5 11) RTZ ?float112) ((_ to_fp 11 53) RTN ?float74) ?float78 ((_ to_fp 11 53) RNE ?float116) ?float86)))
(declare-const ?float126 Float16)
(assert (= ?float126 (fp.max ?float73 ((_ to_fp 5 11) RTN ?float123))))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.mul RTN ((_ to_fp 5 11) RTP ?float91) ?float85)))
(declare-const ?float128 Float16)
(assert (= ?float128 (fp.add RNE ?float126 ((_ to_fp 5 11) RTN ?float120))))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.abs ?float110)))
(declare-const ?float130 Float32)
(assert (= ?float130 (f41 ((_ to_fp 15 113) RTZ ?float106) ((_ to_fp 11 53) RTN ?float114) ((_ to_fp 5 11) RNE ?float105) ((_ to_fp 11 53) RNE ?float73))))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.sub RTP ?float77 ((_ to_fp 11 53) RNE ?float104))))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.roundToIntegral RTZ ?float107)))
(declare-const ?float133 Float128)
(assert (= ?float133 (f25 ((_ to_fp 8 24) RTZ ?float107) ((_ to_fp 8 24) RNE ?float114) ?float74 ((_ to_fp 5 11) RNE ?float65))))
(declare-const ?float134 Float32)
(assert (= ?float134 (f15 ((_ to_fp 15 113) RTZ ?float71) ((_ to_fp 8 24) RTZ ?float89) ?float68 ((_ to_fp 15 113) RTP ?float70))))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.min ?float84 ?float65)))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.mul RNE ((_ to_fp 11 53) RNE ?float117) ?float81)))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.add RTP ?float130 ((_ to_fp 8 24) RTP ?float110))))
(declare-const ?float138 Float64)
(assert (= ?float138 (f21 ((_ to_fp 5 11) RTN ?float125) ?float69 ((_ to_fp 15 113) RTN ?float104) ?float109 ((_ to_fp 15 113) RTZ ?float102) ?float102 ((_ to_fp 5 11) RTZ ?float96) ?float120)))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.neg ?float122)))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.min ?float74 ?float123)))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.sub RTP ?float118 ((_ to_fp 15 113) RTP ?float60))))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.neg ?float73)))
(declare-const ?float143 Float32)
(assert (= ?float143 (fp.min ((_ to_fp 8 24) RTP ?float136) ?float61)))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.max ?float82 ?float94)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.abs ?float112)))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.sqrt RTZ ?float106)))
(declare-const ?float147 Float64)
(assert (= ?float147 (fp.abs ?float79)))
(declare-const ?float148 Float64)
(assert (= ?float148 (f30 ((_ to_fp 15 113) RNE ?float78) ((_ to_fp 8 24) RTN ?float127) ((_ to_fp 8 24) RNE ?float73) ((_ to_fp 5 11) RTZ ?float93))))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.sqrt RNE ?float140)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.lt ((_ to_fp 11 53) RNE ?float127) ?float147)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.leq ?float128 ((_ to_fp 5 11) RNE ?float140))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.lt ((_ to_fp 11 53) RTN ?float111) ?float132)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNegative ?float115)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.eq ?float135 ?float95)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.gt ((_ to_fp 8 24) RNE ?float62) ?float87)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isPositive ?float70)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isInfinite ?float120)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.eq ?float102 ((_ to_fp 8 24) RNE ?float62))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isNormal ?float66)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p6 ((_ to_fp 15 113) RTZ ?float73) ((_ to_fp 15 113) RTZ ?float73) ((_ to_fp 11 53) RTZ ?float85) ((_ to_fp 8 24) RTN ?float80) ((_ to_fp 8 24) RTZ ?float78) ((_ to_fp 5 11) RTZ ?float146) ((_ to_fp 8 24) RTP ?float99) ((_ to_fp 11 53) RTN ?float106) ?float136 ((_ to_fp 15 113) RTP ?float102))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNaN ?float105)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isSubnormal ?float83)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (p6 ((_ to_fp 15 113) RTP ?float122) ((_ to_fp 15 113) RTN ?float78) ((_ to_fp 11 53) RTN ?float78) ((_ to_fp 8 24) RTN ?float62) ((_ to_fp 8 24) RTP ?float76) ((_ to_fp 5 11) RNE ?float80) ((_ to_fp 8 24) RTN ?float77) ((_ to_fp 11 53) RTZ ?float149) ?float79 ?float140)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isPositive ?float60)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.geq ((_ to_fp 5 11) RTZ ?float148) ?float111)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNegative ?float146)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p4 ((_ to_fp 8 24) RTN ?float78) ((_ to_fp 11 53) RTN ?float97))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isInfinite ?float93)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p3 ?float119)))
; FINAL ASSERT
(assert (or (and ?bool153 (and ?bool162 ?bool150))))
(check-sat)


-- iteration 61 --
(declare-fun f0 (Float16 Float128 Float32 Float64) Float32)
(declare-fun f1 (Float128 Float16 Float16 Float64 Float128 Float16 Float16 Float16 Float128) Float32)
(declare-fun f2 (Float16 Float128 Float32 Float32 Float16 Float64 Float64 Float128) Float64)
(declare-fun f3 (Float128 Float16 Float32 Float32 Float128) Float128)
(declare-fun f4 (Float32) Float32)
(declare-fun f5 (Float32) Float16)
(declare-fun f6 (Float128 Float16 Float128 Float64 Float32 Float64 Float16) Float32)
(declare-fun f7 (Float64 Float64 Float64 Float128 Float16 Float128) Float64)
(declare-fun f8 (Float32 Float32 Float16 Float32 Float64) Float64)
(declare-fun f9 (Float32 Float16 Float128 Float32 Float16 Float64 Float64 Float32) Float64)
(declare-fun f10 (Float128 Float16 Float32 Float16 Float128 Float32 Float16) Float16)
(declare-fun f11 (Float128 Float16 Float32 Float128 Float32 Float32) Float128)
(declare-fun f12 (Float16 Float64 Float128) Float16)
(declare-fun f13 (Float32 Float32 Float64 Float16 Float16 Float64 Float16) Float16)
(declare-fun f14 (Float16 Float128 Float16 Float32 Float16 Float64 Float16 Float16 Float128) Float64)
(declare-fun f15 (Float32 Float32 Float32) Float16)
(declare-fun f16 (Float64 Float32 Float128 Float64 Float128 Float128 Float16 Float128 Float64 Float32) Float64)
(declare-fun f17 (Float64 Float32 Float64 Float64 Float32 Float32 Float64 Float128) Float128)
(declare-fun f18 (Float128 Float64 Float128 Float64 Float32 Float128 Float128 Float64 Float16) Float32)
(declare-fun f19 (Float32 Float128 Float128 Float32 Float16 Float16 Float64 Float64) Float64)
(declare-fun f20 (Float16 Float64 Float16 Float32 Float128) Float16)
(declare-fun f21 (Float32 Float16 Float16 Float16 Float16 Float32) Float16)
(declare-fun f22 (Float128 Float64) Float64)
(declare-fun f23 (Float32 Float32 Float32 Float64 Float16 Float32 Float32 Float128 Float128) Float32)
(declare-fun f24 (Float64 Float128 Float128 Float16 Float128 Float128) Float64)
(declare-fun f25 (Float16 Float32 Float64 Float64 Float16) Float32)
(declare-fun f26 (Float32 Float16) Float16)
(declare-fun f27 (Float16 Float32 Float16 Float32) Float16)
(declare-fun f28 (Float16 Float128 Float64 Float16 Float16 Float16 Float16 Float128 Float128 Float16) Float64)
(declare-fun f29 (Float32 Float128 Float64 Float32 Float16 Float16 Float32 Float64 Float64) Float64)
(declare-fun f30 (Float32 Float64 Float32 Float16 Float16 Float128 Float128 Float64 Float64) Float16)
(declare-fun f31 (Float32) Float16)
(declare-fun f32 (Float16 Float16 Float32 Float64 Float128 Float32 Float128) Float32)
(declare-fun f33 (Float128 Float64 Float128 Float128 Float32 Float128 Float128 Float64) Float64)
(declare-fun f34 (Float16 Float32 Float64 Float32 Float32 Float64 Float32 Float32) Float64)
(declare-fun f35 (Float32 Float64 Float32 Float128 Float64 Float128 Float16 Float64 Float16) Float16)
(declare-fun f36 (Float64 Float64 Float64 Float128 Float64) Float32)
(declare-fun f37 (Float16 Float128 Float128 Float32 Float32 Float32 Float128 Float128) Float32)
(declare-fun f38 (Float128 Float64 Float64 Float64 Float64 Float32 Float32 Float16) Float64)
(declare-fun f39 (Float16 Float32) Float128)
(declare-fun f40 (Float16 Float32 Float64 Float128 Float32) Float16)
(declare-fun f41 (Float128 Float16 Float16 Float64 Float32 Float64 Float64) Float32)
(declare-fun f42 (Float64 Float64) Float64)
(declare-fun f43 (Float128 Float32 Float16 Float128 Float64 Float128 Float32 Float128 Float16 Float64) Float64)
(declare-fun f44 (Float16 Float16 Float32 Float16 Float64 Float64 Float128 Float16) Float128)
(declare-fun f45 (Float32 Float32 Float64 Float16 Float32 Float128 Float128 Float128 Float32 Float16) Float32)
(declare-fun f46 (Float16 Float16 Float128 Float64) Float32)
(declare-fun f47 (Float128 Float16) Float128)
(declare-fun f48 (Float64 Float64) Float16)
(declare-fun f49 (Float64 Float64 Float64) Float64)
(declare-fun p0 (Float16) Bool)
(declare-fun p1 (Float128 Float32 Float128 Float128 Float128 Float32) Bool)
(declare-fun p2 (Float128) Bool)
(declare-fun p3 (Float128 Float16 Float128 Float128) Bool)
(declare-fun p4 (Float64 Float128 Float128 Float128 Float64 Float32 Float32) Bool)
(declare-fun p5 (Float64 Float128 Float32 Float32 Float128 Float32 Float128 Float16 Float64) Bool)
(declare-fun p6 (Float128) Bool)
(declare-fun p7 (Float16 Float128 Float64 Float16) Bool)
(declare-fun p8 (Float128 Float128 Float128) Bool)
(declare-fun p9 (Float128 Float16 Float32 Float16 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float32)
(declare-const ?float62 Float32)
(declare-const ?float63 Float16)
(declare-const ?float64 Float64)
(declare-const ?float65 Float16)
(declare-const ?float66 Float64)
(declare-const ?float67 Float32)
(declare-const ?float68 Float16)
(declare-const ?float69 Float128)
(declare-const ?float70 Float128)
(declare-const ?float71 Float64)
(declare-const ?float72 Float32)
(declare-const ?float73 Float128)
(declare-const ?float74 Float32)
(declare-const ?float75 Float128)
(declare-const ?float76 Float64)
(declare-const ?float77 Float32)
(declare-const ?float78 Float128)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float128)
(assert (= ?float83 (fp #b0 #b110110110000111 #b1101110110010110011100101110001000001000100101001100010010111011001001110011101010100000010101101111111011111010)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b1 #b01101101001 #b0000111111010011111101110101000001100100011110001101)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b1 #b111100011101110 #b1100011010100001000100011000011111111110101010100111111011110010110000111100000000010111011000100001101110101111)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b1 #b00001 #b0000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (f45 ((_ to_fp 8 24) RTN ?float65) ?float72 ((_ to_fp 11 53) RNE ?float92) ((_ to_fp 5 11) RTN ?float77) ((_ to_fp 8 24) RTN ?float89) ((_ to_fp 15 113) RTP ?float92) ?float93 ((_ to_fp 15 113) RNE ?float72) ((_ to_fp 8 24) RTP ?float65) ((_ to_fp 5 11) RTP ?float89))))
(declare-const ?float101 Float64)
(assert (= ?float101 (f28 ((_ to_fp 5 11) RNE ?float94) ((_ to_fp 15 113) RTP ?float64) ?float85 ((_ to_fp 5 11) RNE ?float79) ((_ to_fp 5 11) RTP ?float85) ((_ to_fp 5 11) RTZ ?float67) ((_ to_fp 5 11) RTZ ?float95) ((_ to_fp 15 113) RNE ?float88) ?float70 ((_ to_fp 5 11) RNE ?float61))))
(declare-const ?float102 Float64)
(assert (= ?float102 (fp.abs ?float88)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.add RTN ?float87 ((_ to_fp 5 11) RTP ?float74))))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.min ?float74 ((_ to_fp 8 24) RTZ ?float88))))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.neg ?float86)))
(declare-const ?float106 Float64)
(assert (= ?float106 (f14 ?float68 ((_ to_fp 15 113) RTP ?float60) ((_ to_fp 5 11) RTN ?float75) ((_ to_fp 8 24) RTP ?float68) ((_ to_fp 5 11) RTZ ?float93) ((_ to_fp 11 53) RNE ?float72) ((_ to_fp 5 11) RTN ?float86) ?float99 ?float79)))
(declare-const ?float107 Float128)
(assert (= ?float107 (fp.min ((_ to_fp 15 113) RTP ?float99) ?float73)))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.neg ?float91)))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.roundToIntegral RTN ?float68)))
(declare-const ?float110 Float16)
(assert (= ?float110 (f35 ((_ to_fp 8 24) RTP ?float73) ((_ to_fp 11 53) RNE ?float63) ((_ to_fp 8 24) RTN ?float65) ?float73 ?float64 ((_ to_fp 15 113) RTP ?float101) ?float103 ((_ to_fp 11 53) RNE ?float92) ((_ to_fp 5 11) RTP ?float78))))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.sqrt RNE ?float108)))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.mul RTP ?float111 ((_ to_fp 8 24) RTZ ?float68))))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.add RTZ ?float74 ?float74)))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.abs ?float100)))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.div RNE ?float74 ((_ to_fp 8 24) RNE ?float81))))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.roundToIntegral RTZ ?float74)))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.add RTZ ?float85 ?float90)))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.min ((_ to_fp 5 11) RTP ?float106) ?float92)))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.roundToIntegral RTZ ?float117)))
(declare-const ?float120 Float32)
(assert (= ?float120 (f18 ((_ to_fp 15 113) RTZ ?float109) ((_ to_fp 11 53) RTP ?float63) ((_ to_fp 15 113) RNE ?float86) ((_ to_fp 11 53) RTZ ?float61) ?float60 ((_ to_fp 15 113) RNE ?float87) ((_ to_fp 15 113) RNE ?float102) ((_ to_fp 11 53) RTP ?float107) ((_ to_fp 5 11) RTN ?float64))))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.mul RTN ?float81 ?float76)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.sqrt RTN ?float118)))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.sqrt RTN ?float76)))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.min ?float90 ?float101)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.max ((_ to_fp 8 24) RTP ?float65) ?float62)))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.min ((_ to_fp 8 24) RNE ?float88) ?float111)))
(declare-const ?float127 Float64)
(assert (= ?float127 (fp.abs ?float81)))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.roundToIntegral RTZ ?float75)))
(declare-const ?float129 Float128)
(assert (= ?float129 (fp.sub RTP ?float98 ?float75)))
(declare-const ?float130 Float16)
(assert (= ?float130 (f10 ((_ to_fp 15 113) RTZ ?float86) ((_ to_fp 5 11) RTN ?float115) ?float120 ((_ to_fp 5 11) RTP ?float67) ((_ to_fp 15 113) RTN ?float91) ?float114 ((_ to_fp 5 11) RTP ?float112))))
(declare-const ?float131 Float16)
(assert (= ?float131 (f5 ((_ to_fp 8 24) RTZ ?float75))))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.add RTN ?float120 ?float84)))
(declare-const ?float133 Float128)
(assert (= ?float133 (fp.min ?float129 ((_ to_fp 15 113) RTP ?float90))))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.min ?float73 ((_ to_fp 15 113) RTZ ?float92))))
(declare-const ?float135 Float64)
(assert (= ?float135 (fp.abs ?float105)))
(declare-const ?float136 Float32)
(assert (= ?float136 (fp.roundToIntegral RTZ ?float112)))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.add RTP ?float81 ((_ to_fp 11 53) RTP ?float60))))
(declare-const ?float138 Float64)
(assert (= ?float138 (fp.sub RNE ?float117 ((_ to_fp 11 53) RTN ?float75))))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.mul RTP ?float87 ((_ to_fp 5 11) RTP ?float73))))
(declare-const ?float140 Float64)
(assert (= ?float140 (fp.mul RNE ?float105 ?float82)))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.neg ?float110)))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.add RNE ?float127 ?float81)))
(declare-const ?float143 Float128)
(assert (= ?float143 (fp.min ((_ to_fp 15 113) RTZ ?float115) ?float75)))
(declare-const ?float144 Float64)
(assert (= ?float144 (f7 ?float64 ((_ to_fp 11 53) RTN ?float99) ((_ to_fp 11 53) RTN ?float133) ((_ to_fp 15 113) RNE ?float141) ((_ to_fp 5 11) RTN ?float74) ?float93)))
(declare-const ?float145 Float128)
(assert (= ?float145 (fp.neg ?float129)))
(declare-const ?float146 Float64)
(assert (= ?float146 (f19 ((_ to_fp 8 24) RTP ?float70) ((_ to_fp 15 113) RTN ?float105) ((_ to_fp 15 113) RTZ ?float116) ((_ to_fp 8 24) RTP ?float121) ((_ to_fp 5 11) RNE ?float117) ((_ to_fp 5 11) RTP ?float60) ((_ to_fp 11 53) RTP ?float92) ?float90)))
(declare-const ?float147 Float64)
(assert (= ?float147 (f16 ?float71 ((_ to_fp 8 24) RTP ?float121) ((_ to_fp 15 113) RTP ?float124) ?float135 ((_ to_fp 15 113) RTN ?float72) ((_ to_fp 15 113) RTN ?float66) ?float99 ?float134 ((_ to_fp 11 53) RNE ?float74) ((_ to_fp 8 24) RTZ ?float141))))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.mul RTP ((_ to_fp 11 53) RTP ?float63) ?float123)))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.max ((_ to_fp 11 53) RTN ?float70) ?float124)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p2 ?float78)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.geq ?float78 ((_ to_fp 15 113) RTP ?float76))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNegative ?float99)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isSubnormal ?float116)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.eq ((_ to_fp 5 11) RTN ?float149) ?float68)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p6 ((_ to_fp 15 113) RTZ ?float99))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isInfinite ?float74)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNormal ?float91)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p4 ((_ to_fp 11 53) RTP ?float112) ((_ to_fp 15 113) RTN ?float146) ((_ to_fp 15 113) RTZ ?float131) ((_ to_fp 15 113) RNE ?float132) ?float85 ((_ to_fp 8 24) RTZ ?float131) ?float112)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p1 ((_ to_fp 15 113) RTP ?float141) ((_ to_fp 8 24) RTZ ?float66) ((_ to_fp 15 113) RTN ?float65) ((_ to_fp 15 113) RTZ ?float92) ((_ to_fp 15 113) RTP ?float112) ((_ to_fp 8 24) RTP ?float133))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNegative ?float76)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.leq ((_ to_fp 5 11) RTP ?float82) ?float130)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.leq ((_ to_fp 15 113) RTN ?float87) ?float83)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isSubnormal ?float94)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.gt ?float79 ((_ to_fp 15 113) RTN ?float100))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p2 ((_ to_fp 15 113) RTN ?float99))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p5 ?float88 ((_ to_fp 15 113) RNE ?float127) ((_ to_fp 8 24) RNE ?float83) ((_ to_fp 8 24) RNE ?float135) ((_ to_fp 15 113) RNE ?float132) ?float77 ((_ to_fp 15 113) RTN ?float74) ((_ to_fp 5 11) RTZ ?float69) ?float105)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.geq ((_ to_fp 15 113) RNE ?float101) ?float98)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isInfinite ?float128)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isSubnormal ?float123)))
; FINAL ASSERT
(assert (or ?bool157 ?bool159 ?bool167))
(check-sat)


-- iteration 62 --
(declare-fun f0 (Float64) Float32)
(declare-fun f1 (Float16 Float32 Float128 Float16 Float128) Float64)
(declare-fun f2 (Float64) Float128)
(declare-fun f3 (Float16 Float128 Float64 Float32 Float64 Float128 Float32 Float64 Float64) Float16)
(declare-fun f4 (Float16 Float32 Float16 Float16 Float128 Float16 Float32 Float16 Float32) Float128)
(declare-fun f5 (Float16 Float64 Float16 Float64 Float16) Float16)
(declare-fun f6 (Float32 Float64 Float64) Float32)
(declare-fun f7 (Float128 Float32 Float16 Float16 Float64) Float64)
(declare-fun f8 (Float128 Float128 Float64 Float32) Float128)
(declare-fun f9 (Float32 Float128 Float128 Float64 Float16 Float16 Float32 Float128 Float128 Float64) Float128)
(declare-fun f10 (Float128 Float128 Float128 Float128 Float32 Float16 Float64 Float32 Float16) Float64)
(declare-fun f11 (Float128) Float64)
(declare-fun f12 (Float64 Float16) Float32)
(declare-fun f13 (Float32) Float64)
(declare-fun f14 (Float16 Float128 Float32 Float64 Float32 Float16 Float64 Float64 Float32 Float16) Float128)
(declare-fun f15 (Float32 Float64 Float64 Float32 Float16 Float16 Float32 Float128 Float32) Float16)
(declare-fun f16 (Float128) Float32)
(declare-fun f17 (Float64 Float16 Float128 Float128 Float16 Float64 Float128 Float16 Float32 Float128) Float128)
(declare-fun f18 (Float128 Float128 Float16 Float128 Float64 Float128 Float32 Float128 Float128 Float16) Float16)
(declare-fun f19 (Float128) Float128)
(declare-fun f20 (Float64 Float32 Float32) Float32)
(declare-fun f21 (Float64 Float32 Float16 Float32 Float16 Float128 Float16 Float32 Float16 Float64) Float64)
(declare-fun f22 (Float32 Float32 Float16) Float128)
(declare-fun f23 (Float64) Float64)
(declare-fun f24 (Float32 Float32 Float128 Float128 Float16 Float32 Float16 Float64 Float128 Float16) Float128)
(declare-fun f25 (Float16 Float32 Float128 Float64 Float16 Float64 Float32 Float128) Float16)
(declare-fun f26 (Float16 Float16 Float32 Float32 Float16 Float16) Float64)
(declare-fun f27 (Float128 Float128 Float128 Float64 Float64) Float16)
(declare-fun f28 (Float16) Float16)
(declare-fun f29 (Float128) Float32)
(declare-fun f30 (Float128 Float32) Float128)
(declare-fun f31 (Float128 Float64 Float16) Float128)
(declare-fun f32 (Float64 Float32 Float32 Float16 Float32 Float64 Float32) Float64)
(declare-fun f33 (Float128 Float32 Float16 Float64 Float32) Float64)
(declare-fun f34 (Float32 Float128) Float32)
(declare-fun f35 (Float16 Float32 Float64 Float32 Float128 Float16 Float128 Float64 Float16 Float128) Float128)
(declare-fun f36 (Float16) Float16)
(declare-fun f37 (Float64 Float32 Float128 Float16 Float16 Float64 Float16) Float128)
(declare-fun f38 (Float64 Float32) Float128)
(declare-fun f39 (Float32 Float128 Float16 Float64 Float16 Float128 Float16 Float128 Float64) Float16)
(declare-fun f40 (Float32) Float64)
(declare-fun f41 (Float32 Float64 Float16 Float128 Float32 Float64 Float16 Float128 Float32 Float64) Float16)
(declare-fun f42 (Float16 Float128 Float64) Float128)
(declare-fun f43 (Float128 Float128 Float32 Float32 Float128 Float32 Float32 Float32) Float16)
(declare-fun f44 (Float16 Float32 Float16 Float32) Float16)
(declare-fun f45 (Float64) Float128)
(declare-fun f46 (Float16 Float32 Float32 Float16 Float32 Float32) Float128)
(declare-fun f47 (Float128 Float128 Float128 Float64 Float64 Float128 Float64 Float32) Float32)
(declare-fun f48 (Float128 Float64 Float32 Float32) Float32)
(declare-fun f49 (Float64 Float32 Float16 Float128 Float128 Float128 Float128) Float16)
(declare-fun p0 (Float32 Float32 Float64 Float32 Float32) Bool)
(declare-fun p1 (Float32 Float16 Float64 Float32 Float128 Float64 Float32 Float16 Float128) Bool)
(declare-fun p2 (Float32 Float16 Float128 Float32) Bool)
(declare-fun p3 (Float16 Float32 Float128 Float64 Float128 Float128 Float64) Bool)
(declare-fun p4 (Float128 Float32 Float64 Float16 Float64 Float32 Float64 Float64 Float128 Float32) Bool)
(declare-fun p5 (Float16 Float32 Float16 Float16 Float16 Float64 Float128 Float16) Bool)
(declare-fun p6 (Float128 Float32) Bool)
(declare-fun p7 (Float16 Float16 Float128 Float16 Float64 Float16) Bool)
(declare-fun p8 (Float128 Float32 Float64 Float64 Float32 Float32 Float32) Bool)
(declare-fun p9 (Float16 Float64 Float16 Float32 Float128 Float32 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float16)
(declare-const ?float62 Float128)
(declare-const ?float63 Float32)
(declare-const ?float64 Float16)
(declare-const ?float65 Float32)
(declare-const ?float66 Float32)
(declare-const ?float67 Float64)
(declare-const ?float68 Float64)
(declare-const ?float69 Float16)
(declare-const ?float70 Float64)
(declare-const ?float71 Float32)
(declare-const ?float72 Float16)
(declare-const ?float73 Float16)
(declare-const ?float74 Float32)
(declare-const ?float75 Float64)
(declare-const ?float76 Float16)
(declare-const ?float77 Float32)
(declare-const ?float78 Float32)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float128)
(assert (= ?float83 (fp #b0 #b011000001000110 #b1011000000100011000110101101110000010011010000000000001001100010111000001111101011000010110111110000110101101011)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float64)
(assert (= ?float92 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (fp.neg ?float92)))
(declare-const ?float101 Float64)
(assert (= ?float101 (fp.sub RTZ ((_ to_fp 11 53) RNE ?float98) ?float75)))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.max ((_ to_fp 15 113) RTN ?float92) ?float62)))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.add RTP ?float92 ?float60)))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.max ?float102 ?float82)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.roundToIntegral RNE ?float88)))
(declare-const ?float106 Float16)
(assert (= ?float106 (fp.roundToIntegral RTN ?float84)))
(declare-const ?float107 Float64)
(assert (= ?float107 (f33 ?float83 ((_ to_fp 8 24) RNE ?float81) ?float81 ((_ to_fp 11 53) RTZ ?float61) ((_ to_fp 8 24) RTZ ?float64))))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.add RNE ?float67 ((_ to_fp 11 53) RTP ?float83))))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.neg ?float105)))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.div RNE ((_ to_fp 5 11) RTP ?float66) ?float76)))
(declare-const ?float111 Float64)
(assert (= ?float111 (f32 ?float70 ((_ to_fp 8 24) RTP ?float95) ((_ to_fp 8 24) RNE ?float109) ?float73 ((_ to_fp 8 24) RNE ?float83) ((_ to_fp 11 53) RTN ?float102) ((_ to_fp 8 24) RTZ ?float84))))
(declare-const ?float112 Float128)
(assert (= ?float112 (fp.sub RTN ?float62 ((_ to_fp 15 113) RNE ?float107))))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.min ?float61 ?float93)))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.neg ?float76)))
(declare-const ?float115 Float16)
(assert (= ?float115 (fp.sqrt RTP ?float76)))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.max ((_ to_fp 11 53) RTN ?float65) ?float75)))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.sqrt RNE ?float86)))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.sqrt RNE ?float82)))
(declare-const ?float119 Float128)
(assert (= ?float119 (fp.mul RTZ ((_ to_fp 15 113) RTZ ?float63) ?float85)))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.max ?float92 ?float70)))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.mul RNE ((_ to_fp 5 11) RTZ ?float99) ?float93)))
(declare-const ?float122 Float64)
(assert (= ?float122 (fp.sub RTN ((_ to_fp 11 53) RTP ?float98) ?float107)))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.abs ?float68)))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.div RNE ?float67 ((_ to_fp 11 53) RTN ?float81))))
(declare-const ?float125 Float128)
(assert (= ?float125 (fp.add RTP ((_ to_fp 15 113) RTZ ?float122) ?float102)))
(declare-const ?float126 Float16)
(assert (= ?float126 (fp.sqrt RNE ?float114)))
(declare-const ?float127 Float64)
(assert (= ?float127 (fp.max ?float95 ?float92)))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.max ((_ to_fp 11 53) RTP ?float77) ?float124)))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.mul RTN ?float111 ((_ to_fp 11 53) RTZ ?float74))))
(declare-const ?float130 Float64)
(assert (= ?float130 (fp.mul RNE ((_ to_fp 11 53) RTP ?float119) ?float103)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.neg ?float70)))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.max ?float82 ((_ to_fp 15 113) RTP ?float77))))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.max ((_ to_fp 11 53) RNE ?float81) ?float109)))
(declare-const ?float134 Float32)
(assert (= ?float134 (fp.div RNE ?float65 ((_ to_fp 8 24) RNE ?float105))))
(declare-const ?float135 Float64)
(assert (= ?float135 (fp.neg ?float101)))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.sub RNE ?float128 ?float94)))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.roundToIntegral RTP ?float83)))
(declare-const ?float138 Float64)
(assert (= ?float138 (fp.roundToIntegral RTZ ?float116)))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.max ((_ to_fp 15 113) RTZ ?float71) ?float85)))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.min ?float81 ((_ to_fp 5 11) RTZ ?float120))))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.sub RNE ?float122 ?float67)))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.min ?float102 ((_ to_fp 15 113) RTP ?float100))))
(declare-const ?float143 Float64)
(assert (= ?float143 (f32 ((_ to_fp 11 53) RNE ?float96) ((_ to_fp 8 24) RTP ?float115) ((_ to_fp 8 24) RTZ ?float130) ((_ to_fp 5 11) RTP ?float78) ?float66 ?float120 ?float65)))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.add RTN ((_ to_fp 11 53) RNE ?float61) ?float131)))
(declare-const ?float145 Float64)
(assert (= ?float145 (f7 ((_ to_fp 15 113) RTN ?float120) ?float71 ((_ to_fp 5 11) RTZ ?float105) ((_ to_fp 5 11) RTZ ?float144) ?float136)))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.mul RNE ?float93 ?float140)))
(declare-const ?float147 Float64)
(assert (= ?float147 (fp.add RTN ?float143 ?float130)))
(declare-const ?float148 Float128)
(assert (= ?float148 (fp.min ?float112 ?float80)))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.abs ?float108)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isPositive ?float75)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.eq ?float136 ((_ to_fp 11 53) RTP ?float137))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNegative ?float133)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isInfinite ?float74)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNormal ?float149)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isSubnormal ?float62)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (p8 ?float139 ((_ to_fp 8 24) RTZ ?float124) ?float131 ((_ to_fp 11 53) RTN ?float112) ((_ to_fp 8 24) RTZ ?float108) ((_ to_fp 8 24) RTP ?float110) ((_ to_fp 8 24) RNE ?float117))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.geq ?float115 ?float64)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isPositive ?float82)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.leq ?float64 ((_ to_fp 5 11) RTP ?float104))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p4 ((_ to_fp 15 113) RNE ?float110) ((_ to_fp 8 24) RTZ ?float81) ((_ to_fp 11 53) RTP ?float86) ((_ to_fp 5 11) RTN ?float97) ((_ to_fp 11 53) RTP ?float72) ((_ to_fp 8 24) RTN ?float94) ?float149 ((_ to_fp 11 53) RNE ?float102) ((_ to_fp 15 113) RTP ?float77) ((_ to_fp 8 24) RTP ?float148))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isPositive ?float68)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (p8 ((_ to_fp 15 113) RNE ?float86) ((_ to_fp 8 24) RTN ?float131) ((_ to_fp 11 53) RTN ?float84) ((_ to_fp 11 53) RTP ?float90) ((_ to_fp 8 24) RTN ?float106) ((_ to_fp 8 24) RTN ?float92) ((_ to_fp 8 24) RTN ?float127))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.eq ?float140 ((_ to_fp 5 11) RTN ?float91))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isNormal ?float61)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p2 ((_ to_fp 8 24) RTN ?float69) ((_ to_fp 5 11) RTN ?float144) ?float104 ((_ to_fp 8 24) RTZ ?float148))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.geq ?float120 ((_ to_fp 11 53) RTP ?float72))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p9 ((_ to_fp 5 11) RTN ?float80) ?float144 ?float72 ((_ to_fp 8 24) RTP ?float64) ((_ to_fp 15 113) RNE ?float65) ((_ to_fp 8 24) RNE ?float149) ?float113)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (p4 ((_ to_fp 15 113) RTP ?float81) ((_ to_fp 8 24) RTP ?float112) ((_ to_fp 11 53) RNE ?float71) ((_ to_fp 5 11) RTZ ?float108) ((_ to_fp 11 53) RTN ?float140) ((_ to_fp 8 24) RNE ?float67) ((_ to_fp 11 53) RTZ ?float104) ((_ to_fp 11 53) RTN ?float80) ((_ to_fp 15 113) RNE ?float73) ((_ to_fp 8 24) RTZ ?float147))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.geq ((_ to_fp 15 113) RTZ ?float96) ?float83)))
; FINAL ASSERT
(assert (or ?bool169 ?bool151))
(check-sat)


-- iteration 63 --
(declare-fun f0 (Float64 Float128 Float32) Float32)
(declare-fun f1 (Float128 Float32 Float32) Float128)
(declare-fun f2 (Float16) Float64)
(declare-fun f3 (Float128 Float16 Float16 Float128 Float16 Float16 Float128) Float64)
(declare-fun f4 (Float32) Float64)
(declare-fun f5 (Float16 Float128 Float16 Float32 Float32) Float32)
(declare-fun f6 (Float128 Float32 Float32 Float128) Float32)
(declare-fun f7 (Float16 Float16 Float128 Float16 Float16) Float16)
(declare-fun f8 (Float16 Float128 Float32 Float16 Float32 Float64 Float16 Float64) Float16)
(declare-fun f9 (Float64 Float64 Float128 Float16 Float32 Float128 Float128 Float64 Float16 Float32) Float16)
(declare-fun f10 (Float16 Float32 Float32 Float32 Float128) Float128)
(declare-fun f11 (Float32 Float32 Float64 Float128 Float16 Float128 Float128 Float64) Float16)
(declare-fun f12 (Float128 Float64 Float64 Float64 Float16 Float128 Float16 Float64) Float64)
(declare-fun f13 (Float128 Float32 Float32 Float64 Float128 Float128 Float64 Float32) Float128)
(declare-fun f14 (Float32 Float16) Float32)
(declare-fun f15 (Float32 Float16 Float16) Float16)
(declare-fun f16 (Float16 Float16 Float16 Float128 Float16 Float32) Float16)
(declare-fun f17 (Float16 Float32 Float64 Float16 Float64 Float32 Float16 Float32) Float16)
(declare-fun f18 (Float64 Float16 Float32 Float128 Float128 Float32 Float64 Float32 Float32 Float32) Float128)
(declare-fun f19 (Float128 Float128 Float64 Float128 Float16 Float32 Float16 Float32 Float128 Float16) Float32)
(declare-fun f20 (Float16) Float128)
(declare-fun f21 (Float16 Float16 Float32) Float64)
(declare-fun f22 (Float16 Float32) Float16)
(declare-fun f23 (Float128 Float128 Float16 Float16) Float128)
(declare-fun f24 (Float128 Float128 Float64 Float16 Float64 Float16) Float16)
(declare-fun f25 (Float64) Float16)
(declare-fun f26 (Float128) Float64)
(declare-fun f27 (Float32 Float128 Float64 Float64 Float32 Float32) Float128)
(declare-fun f28 (Float32 Float64 Float128 Float16 Float128 Float128 Float16 Float128) Float64)
(declare-fun f29 (Float64 Float16 Float64) Float64)
(declare-fun f30 (Float128 Float16 Float32 Float128 Float128 Float16 Float128) Float32)
(declare-fun f31 (Float32 Float128 Float128 Float64 Float32 Float16) Float64)
(declare-fun f32 (Float16 Float16 Float16 Float64 Float128 Float32) Float16)
(declare-fun f33 (Float64 Float32) Float16)
(declare-fun f34 (Float16 Float64 Float32) Float128)
(declare-fun f35 (Float64 Float16 Float64 Float16 Float32 Float32 Float32 Float32) Float64)
(declare-fun f36 (Float32) Float128)
(declare-fun f37 (Float64 Float128 Float16 Float128 Float64 Float128 Float128) Float128)
(declare-fun f38 (Float64 Float128 Float64 Float64 Float16 Float64 Float128 Float128) Float128)
(declare-fun f39 (Float16 Float128) Float64)
(declare-fun f40 (Float16 Float64 Float64 Float128) Float64)
(declare-fun f41 (Float64 Float64 Float32 Float64 Float32 Float32 Float16 Float16 Float128) Float16)
(declare-fun f42 (Float16 Float32 Float32 Float128 Float32 Float16 Float64 Float64) Float16)
(declare-fun f43 (Float16 Float64 Float32 Float128 Float16 Float128 Float32 Float32 Float64 Float32) Float64)
(declare-fun f44 (Float128 Float16 Float32 Float16 Float128) Float64)
(declare-fun f45 (Float16 Float128 Float128 Float128 Float16 Float128 Float16 Float16 Float64) Float32)
(declare-fun f46 (Float16 Float64 Float64) Float32)
(declare-fun f47 (Float128 Float32 Float128 Float32 Float16 Float64 Float64 Float128) Float32)
(declare-fun f48 (Float16 Float16 Float128 Float64 Float128 Float32 Float16 Float16 Float32 Float16) Float16)
(declare-fun f49 (Float32 Float32 Float16 Float16 Float128 Float128 Float16 Float64 Float64 Float32) Float64)
(declare-fun p0 (Float64 Float32) Bool)
(declare-fun p1 (Float128 Float32 Float16 Float64 Float128 Float128 Float16 Float128 Float16) Bool)
(declare-fun p2 (Float32 Float16 Float32 Float64 Float16 Float128) Bool)
(declare-fun p3 (Float128 Float16 Float32 Float16) Bool)
(declare-fun p4 (Float128 Float16 Float128 Float64 Float64) Bool)
(declare-fun p5 (Float16 Float32 Float64 Float16) Bool)
(declare-fun p6 (Float32) Bool)
(declare-fun p7 (Float32) Bool)
(declare-fun p8 (Float16 Float64 Float16 Float64 Float128 Float64 Float32 Float64) Bool)
(declare-fun p9 (Float16 Float32 Float16 Float32 Float64 Float32 Float32 Float64 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float128)
(declare-const ?float62 Float64)
(declare-const ?float63 Float128)
(declare-const ?float64 Float128)
(declare-const ?float65 Float64)
(declare-const ?float66 Float16)
(declare-const ?float67 Float16)
(declare-const ?float68 Float64)
(declare-const ?float69 Float64)
(declare-const ?float70 Float64)
(declare-const ?float71 Float16)
(declare-const ?float72 Float32)
(declare-const ?float73 Float16)
(declare-const ?float74 Float128)
(declare-const ?float75 Float64)
(declare-const ?float76 Float32)
(declare-const ?float77 Float128)
(declare-const ?float78 Float128)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b1 #b10110010 #b10100101000000110010100)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b1 #b00100 #b1011101010)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b1 #b010110011000010 #b1000010101101011100000111100100000111011011001111000010110111111100001011011000000101001111101011101011000010010)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float84 Float128)
(assert (= ?float84 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (fp.min ?float82 ((_ to_fp 15 113) RTN ?float97))))
(declare-const ?float101 Float64)
(assert (= ?float101 (fp.div RTP ?float94 ((_ to_fp 11 53) RTZ ?float91))))
(declare-const ?float102 Float64)
(assert (= ?float102 (fp.abs ?float90)))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.abs ?float90)))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.div RTN ((_ to_fp 11 53) RNE ?float84) ?float69)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.sub RTP ?float65 ?float62)))
(declare-const ?float106 Float128)
(assert (= ?float106 (f34 ?float85 ((_ to_fp 11 53) RTP ?float98) ?float89)))
(declare-const ?float107 Float64)
(assert (= ?float107 (fp.max ?float97 ?float99)))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.abs ?float93)))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.abs ?float62)))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.abs ?float78)))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.abs ?float98)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.mul RTP ((_ to_fp 11 53) RNE ?float76) ?float69)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.sqrt RNE ?float112)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.min ?float105 ?float113)))
(declare-const ?float115 Float64)
(assert (= ?float115 (f26 ((_ to_fp 15 113) RTP ?float76))))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.sub RTZ ?float87 ?float88)))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.neg ?float79)))
(declare-const ?float118 Float128)
(assert (= ?float118 (f36 ((_ to_fp 8 24) RTN ?float92))))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.div RTZ ?float87 ?float87)))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.div RNE ((_ to_fp 15 113) RTN ?float102) ?float74)))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.add RNE ((_ to_fp 5 11) RTN ?float63) ?float73)))
(declare-const ?float122 Float32)
(assert (= ?float122 (fp.roundToIntegral RNE ?float98)))
(declare-const ?float123 Float128)
(assert (= ?float123 (fp.roundToIntegral RTN ?float61)))
(declare-const ?float124 Float16)
(assert (= ?float124 (f42 ((_ to_fp 5 11) RTZ ?float65) ((_ to_fp 8 24) RTN ?float112) ((_ to_fp 8 24) RTP ?float97) ?float110 ((_ to_fp 8 24) RTZ ?float81) ((_ to_fp 5 11) RTZ ?float80) ((_ to_fp 11 53) RNE ?float82) ((_ to_fp 11 53) RTZ ?float120))))
(declare-const ?float125 Float128)
(assert (= ?float125 (fp.mul RTN ?float92 ((_ to_fp 15 113) RNE ?float68))))
(declare-const ?float126 Float64)
(assert (= ?float126 (fp.div RTZ ?float69 ((_ to_fp 11 53) RNE ?float120))))
(declare-const ?float127 Float16)
(assert (= ?float127 (f25 ((_ to_fp 11 53) RNE ?float88))))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.neg ?float78)))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.sub RTN ((_ to_fp 11 53) RTZ ?float128) ?float112)))
(declare-const ?float130 Float128)
(assert (= ?float130 (f34 ((_ to_fp 5 11) RTP ?float96) ((_ to_fp 11 53) RTZ ?float120) ((_ to_fp 8 24) RTP ?float92))))
(declare-const ?float131 Float64)
(assert (= ?float131 (f44 ((_ to_fp 15 113) RTP ?float129) ((_ to_fp 5 11) RTP ?float78) ((_ to_fp 8 24) RTP ?float120) ((_ to_fp 5 11) RTZ ?float68) ?float110)))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.div RTP ((_ to_fp 5 11) RNE ?float95) ?float79)))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.div RTZ ((_ to_fp 11 53) RNE ?float71) ?float112)))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.sqrt RNE ?float66)))
(declare-const ?float135 Float64)
(assert (= ?float135 (fp.abs ?float129)))
(declare-const ?float136 Float128)
(assert (= ?float136 (f34 ((_ to_fp 5 11) RTN ?float103) ?float65 ((_ to_fp 8 24) RTN ?float84))))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.add RTZ ?float114 ?float65)))
(declare-const ?float138 Float64)
(assert (= ?float138 (fp.add RNE ((_ to_fp 11 53) RTZ ?float76) ?float137)))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.add RNE ?float122 ((_ to_fp 8 24) RTP ?float73))))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.max ((_ to_fp 8 24) RTN ?float138) ?float88)))
(declare-const ?float141 Float64)
(assert (= ?float141 (f35 ((_ to_fp 11 53) RTZ ?float130) ((_ to_fp 5 11) RTN ?float113) ((_ to_fp 11 53) RTN ?float74) ((_ to_fp 5 11) RTZ ?float113) ((_ to_fp 8 24) RTN ?float65) ((_ to_fp 8 24) RTP ?float117) ((_ to_fp 8 24) RTN ?float134) ((_ to_fp 8 24) RTZ ?float124))))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.mul RTN ?float118 ((_ to_fp 15 113) RTN ?float140))))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.mul RNE ((_ to_fp 11 53) RTZ ?float93) ?float126)))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.min ((_ to_fp 8 24) RTP ?float134) ?float98)))
(declare-const ?float145 Float16)
(assert (= ?float145 (fp.max ?float79 ?float86)))
(declare-const ?float146 Float64)
(assert (= ?float146 (fp.sub RTN ?float109 ?float75)))
(declare-const ?float147 Float128)
(assert (= ?float147 (f20 ((_ to_fp 5 11) RTN ?float97))))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.max ((_ to_fp 5 11) RTP ?float108) ?float79)))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.min ?float118 ((_ to_fp 15 113) RTN ?float103))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isZero ?float67)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.geq ?float142 ?float84)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isZero ?float103)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (p7 ((_ to_fp 8 24) RTZ ?float132))))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNaN ?float86)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isNormal ?float63)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.eq ((_ to_fp 5 11) RTZ ?float111) ?float67)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.lt ((_ to_fp 15 113) RTP ?float90) ?float95)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p1 ((_ to_fp 15 113) RNE ?float60) ((_ to_fp 8 24) RNE ?float100) ((_ to_fp 5 11) RTP ?float125) ?float94 ((_ to_fp 15 113) RTP ?float138) ((_ to_fp 15 113) RTN ?float94) ((_ to_fp 5 11) RTN ?float115) ((_ to_fp 15 113) RNE ?float86) ?float127)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.geq ?float120 ((_ to_fp 15 113) RTP ?float65))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isSubnormal ?float85)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isZero ?float145)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNaN ?float74)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isZero ?float115)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isSubnormal ?float118)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.lt ?float115 ((_ to_fp 11 53) RTN ?float122))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isSubnormal ?float67)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.eq ?float62 ((_ to_fp 11 53) RTP ?float63))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.lt ?float89 ((_ to_fp 8 24) RTN ?float107))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNormal ?float147)))
; FINAL ASSERT
(assert (or (or (and (or ?bool164) (or (and (and ?bool167)) (or ?bool150)) ?bool160) ?bool160) (and ?bool161 ?bool162) (or (and (or ?bool152 ?bool156 (or ?bool153))))))
(check-sat)


-- iteration 64 --
(declare-fun f0 (Float128 Float16 Float32 Float32 Float32 Float64) Float64)
(declare-fun f1 (Float64 Float64 Float16 Float32 Float16) Float32)
(declare-fun f2 (Float128 Float64) Float32)
(declare-fun f3 (Float64 Float128 Float16 Float32 Float64 Float64 Float128) Float32)
(declare-fun f4 (Float64 Float16 Float64 Float64 Float128 Float16 Float64) Float32)
(declare-fun f5 (Float16 Float16 Float32 Float32) Float32)
(declare-fun f6 (Float16 Float64 Float64 Float64 Float128 Float16) Float32)
(declare-fun f7 (Float32) Float32)
(declare-fun f8 (Float16 Float64 Float128 Float64) Float64)
(declare-fun f9 (Float64 Float128 Float128 Float128 Float128 Float64 Float16) Float64)
(declare-fun f10 (Float16 Float32 Float128) Float128)
(declare-fun f11 (Float128 Float128 Float128 Float16 Float16 Float64 Float32 Float64 Float32) Float16)
(declare-fun f12 (Float64 Float128 Float64 Float64) Float16)
(declare-fun f13 (Float64 Float128 Float16 Float128 Float16 Float16 Float16 Float128) Float64)
(declare-fun f14 (Float16) Float32)
(declare-fun f15 (Float16 Float64 Float16 Float16 Float32 Float32 Float128) Float64)
(declare-fun f16 (Float64 Float32 Float64 Float16 Float64 Float32 Float128 Float128 Float16 Float16) Float64)
(declare-fun f17 (Float128 Float32 Float64 Float16 Float128 Float32 Float16 Float128 Float128 Float32) Float16)
(declare-fun f18 (Float128 Float32) Float128)
(declare-fun f19 (Float128) Float16)
(declare-fun f20 (Float32 Float64 Float64 Float32 Float64 Float128 Float128 Float64) Float32)
(declare-fun f21 (Float64 Float32 Float16 Float128 Float16) Float128)
(declare-fun f22 (Float64 Float16 Float16 Float32 Float32 Float32 Float16 Float128 Float128 Float32) Float128)
(declare-fun f23 (Float32 Float16 Float16 Float64 Float128 Float64 Float32 Float128 Float16) Float128)
(declare-fun f24 (Float64 Float16 Float128 Float32) Float32)
(declare-fun f25 (Float32) Float128)
(declare-fun f26 (Float64 Float128 Float32 Float128) Float16)
(declare-fun f27 (Float64 Float64 Float64 Float64 Float32 Float32 Float32 Float64 Float16) Float32)
(declare-fun f28 (Float64 Float32 Float64 Float32 Float64 Float16 Float32 Float128 Float64) Float128)
(declare-fun f29 (Float64 Float32 Float128 Float16 Float32 Float64 Float128 Float16) Float128)
(declare-fun f30 (Float64 Float128 Float64 Float128 Float32 Float128 Float128) Float16)
(declare-fun f31 (Float32 Float128 Float32) Float128)
(declare-fun f32 (Float64 Float16 Float64 Float16 Float32 Float64 Float16 Float64) Float128)
(declare-fun f33 (Float32 Float64 Float16 Float16 Float16 Float64 Float32 Float32 Float64) Float16)
(declare-fun f34 (Float128 Float32 Float16 Float16 Float64 Float16 Float16 Float64 Float16) Float16)
(declare-fun f35 (Float16) Float32)
(declare-fun f36 (Float64) Float64)
(declare-fun f37 (Float64 Float16 Float16 Float64) Float16)
(declare-fun f38 (Float64) Float64)
(declare-fun f39 (Float64 Float128 Float32 Float128 Float16 Float64) Float16)
(declare-fun f40 (Float32 Float16 Float16 Float128 Float128 Float128 Float16) Float16)
(declare-fun f41 (Float32 Float16 Float32 Float16 Float32) Float32)
(declare-fun f42 (Float16 Float64 Float64 Float64 Float64 Float16 Float128) Float128)
(declare-fun f43 (Float32 Float16 Float32 Float16 Float64 Float128 Float16 Float64 Float128) Float64)
(declare-fun f44 (Float128 Float64) Float64)
(declare-fun f45 (Float32 Float128 Float16 Float128 Float16 Float16 Float16 Float32 Float128 Float64) Float16)
(declare-fun f46 (Float128 Float128 Float32 Float32 Float32 Float16 Float64 Float32 Float16 Float32) Float16)
(declare-fun f47 (Float32 Float16 Float128 Float16 Float64 Float64 Float32) Float64)
(declare-fun f48 (Float32 Float128 Float16 Float16 Float16 Float16) Float128)
(declare-fun f49 (Float64 Float32 Float64 Float32) Float128)
(declare-fun p0 (Float32 Float128 Float64) Bool)
(declare-fun p1 (Float16 Float16) Bool)
(declare-fun p2 (Float64 Float64 Float32 Float64 Float32) Bool)
(declare-fun p3 (Float16 Float128 Float32) Bool)
(declare-fun p4 (Float64 Float32 Float64) Bool)
(declare-fun p5 (Float32) Bool)
(declare-fun p6 (Float64) Bool)
(declare-fun p7 (Float128 Float128 Float16 Float32 Float128 Float64 Float64 Float32 Float32 Float16) Bool)
(declare-fun p8 (Float128 Float64 Float16 Float128 Float128 Float32 Float32) Bool)
(declare-fun p9 (Float64 Float64 Float64 Float64 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float64)
(declare-const ?float62 Float128)
(declare-const ?float63 Float64)
(declare-const ?float64 Float64)
(declare-const ?float65 Float32)
(declare-const ?float66 Float32)
(declare-const ?float67 Float32)
(declare-const ?float68 Float128)
(declare-const ?float69 Float32)
(declare-const ?float70 Float128)
(declare-const ?float71 Float64)
(declare-const ?float72 Float32)
(declare-const ?float73 Float32)
(declare-const ?float74 Float16)
(declare-const ?float75 Float128)
(declare-const ?float76 Float128)
(declare-const ?float77 Float64)
(declare-const ?float78 Float32)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float83 Float128)
(assert (= ?float83 (fp #b1 #b001110010110011 #b0011111011101001000111010001011111011101010110010000100000011001110000000101110111000111110111100110110001110001)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b0 #b11101011 #b01101001010110001010011)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.div RTZ ?float96 ?float73)))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.sqrt RNE ?float65)))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.add RTZ ?float76 ((_ to_fp 15 113) RTN ?float80))))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.min ((_ to_fp 11 53) RNE ?float80) ?float87)))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.mul RTZ ((_ to_fp 11 53) RNE ?float74) ?float88)))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.div RTN ((_ to_fp 8 24) RTZ ?float64) ?float94)))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.add RNE ?float105 ?float100)))
(declare-const ?float107 Float16)
(assert (= ?float107 (fp.div RNE ?float84 ((_ to_fp 5 11) RTN ?float60))))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.div RTZ ?float100 ((_ to_fp 8 24) RTZ ?float89))))
(declare-const ?float109 Float16)
(assert (= ?float109 (f40 ((_ to_fp 8 24) RTZ ?float77) ((_ to_fp 5 11) RTN ?float65) ((_ to_fp 5 11) RTZ ?float87) ((_ to_fp 15 113) RTZ ?float98) ?float68 ?float83 ((_ to_fp 5 11) RNE ?float63))))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.add RTZ ((_ to_fp 11 53) RTZ ?float101) ?float89)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.neg ?float80)))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.max ?float74 ?float109)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.neg ?float104)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.sqrt RTZ ?float110)))
(declare-const ?float115 Float32)
(assert (= ?float115 (f1 ((_ to_fp 11 53) RTP ?float78) ((_ to_fp 11 53) RTP ?float86) ((_ to_fp 5 11) RTN ?float66) ((_ to_fp 8 24) RTZ ?float112) ?float107)))
(declare-const ?float116 Float16)
(assert (= ?float116 (f46 ((_ to_fp 15 113) RTP ?float104) ?float85 ((_ to_fp 8 24) RTZ ?float88) ?float69 ((_ to_fp 8 24) RTZ ?float112) ?float109 ((_ to_fp 11 53) RNE ?float65) ((_ to_fp 8 24) RTZ ?float102) ((_ to_fp 5 11) RNE ?float70) ((_ to_fp 8 24) RTN ?float103))))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.sqrt RTZ ?float74)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.sub RTZ ?float65 ?float108)))
(declare-const ?float119 Float32)
(assert (= ?float119 (f1 ((_ to_fp 11 53) RNE ?float100) ((_ to_fp 11 53) RTZ ?float68) ((_ to_fp 5 11) RTZ ?float87) ?float67 ((_ to_fp 5 11) RTZ ?float96))))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.sub RTZ ?float119 ((_ to_fp 8 24) RNE ?float86))))
(declare-const ?float121 Float128)
(assert (= ?float121 (f22 ((_ to_fp 11 53) RTP ?float75) ?float112 ((_ to_fp 5 11) RNE ?float66) ((_ to_fp 8 24) RTN ?float91) ?float115 ?float67 ?float84 ((_ to_fp 15 113) RNE ?float115) ?float86 ?float73)))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.sub RTZ ?float70 ((_ to_fp 15 113) RTN ?float91))))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.div RTN ((_ to_fp 8 24) RNE ?float61) ?float118)))
(declare-const ?float124 Float128)
(assert (= ?float124 (fp.min ((_ to_fp 15 113) RTZ ?float110) ?float83)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.div RTP ((_ to_fp 8 24) RNE ?float93) ?float78)))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.min ?float86 ((_ to_fp 15 113) RTP ?float107))))
(declare-const ?float127 Float32)
(assert (= ?float127 (f6 ((_ to_fp 5 11) RTZ ?float68) ((_ to_fp 11 53) RTN ?float86) ((_ to_fp 11 53) RTP ?float94) ((_ to_fp 11 53) RNE ?float105) ((_ to_fp 15 113) RTN ?float107) ((_ to_fp 5 11) RTZ ?float62))))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.div RTN ?float72 ((_ to_fp 8 24) RTZ ?float92))))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.div RTZ ?float114 ?float113)))
(declare-const ?float130 Float32)
(assert (= ?float130 (f5 ?float95 ((_ to_fp 5 11) RTN ?float67) ?float123 ?float125)))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.roundToIntegral RNE ?float92)))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.abs ?float70)))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.sub RTN ?float89 ?float71)))
(declare-const ?float134 Float128)
(assert (= ?float134 (f29 ((_ to_fp 11 53) RNE ?float72) ((_ to_fp 8 24) RNE ?float74) ((_ to_fp 15 113) RTP ?float98) ?float131 ((_ to_fp 8 24) RNE ?float99) ((_ to_fp 11 53) RTP ?float81) ((_ to_fp 15 113) RTP ?float92) ((_ to_fp 5 11) RTZ ?float70))))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.sqrt RNE ?float70)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.add RNE ?float79 ?float80)))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.add RTZ ?float135 ?float85)))
(declare-const ?float138 Float32)
(assert (= ?float138 (fp.div RTN ((_ to_fp 8 24) RTZ ?float85) ?float69)))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.roundToIntegral RTP ?float73)))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.sub RNE ((_ to_fp 15 113) RNE ?float117) ?float86)))
(declare-const ?float141 Float32)
(assert (= ?float141 (fp.neg ?float105)))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.max ?float83 ?float70)))
(declare-const ?float143 Float32)
(assert (= ?float143 (fp.roundToIntegral RTP ?float120)))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.div RTZ ((_ to_fp 5 11) RTN ?float60) ?float74)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.sub RTZ ?float129 ((_ to_fp 11 53) RTN ?float125))))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.abs ?float62)))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.min ?float123 ((_ to_fp 8 24) RNE ?float129))))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.div RTZ ?float63 ?float87)))
(declare-const ?float149 Float64)
(assert (= ?float149 (f43 ?float143 ((_ to_fp 5 11) RTZ ?float62) ?float72 ?float80 ?float61 ((_ to_fp 15 113) RTZ ?float117) ((_ to_fp 5 11) RTP ?float96) ((_ to_fp 11 53) RNE ?float115) ((_ to_fp 15 113) RTP ?float118))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.geq ((_ to_fp 15 113) RNE ?float149) ?float122)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.eq ?float81 ((_ to_fp 15 113) RNE ?float97))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.lt ((_ to_fp 8 24) RTZ ?float124) ?float128)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.leq ?float118 ((_ to_fp 8 24) RTP ?float144))))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNegative ?float138)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.gt ((_ to_fp 11 53) RTZ ?float118) ?float63)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.geq ?float106 ((_ to_fp 8 24) RNE ?float129))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNegative ?float119)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p1 ((_ to_fp 5 11) RNE ?float115) ?float144)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isInfinite ?float93)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isSubnormal ?float84)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.lt ((_ to_fp 8 24) RTN ?float87) ?float147)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNaN ?float80)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isInfinite ?float148)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isNormal ?float119)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.lt ?float140 ?float121)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNegative ?float84)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isInfinite ?float99)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isInfinite ?float63)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isInfinite ?float65)))
; FINAL ASSERT
(assert (and ?bool160 (or ?bool157 (and (or ?bool163) ?bool160) (or ?bool161 (or (and (or (or ?bool162 ?bool169) ?bool157) ?bool156 ?bool154) (or ?bool159) (and ?bool162 ?bool168 (and (and ?bool151 ?bool157) (or ?bool155 ?bool150 ?bool164) (or ?bool161)))))) (or (or (or ?bool165 ?bool155 (or ?bool156)) ?bool162) (or (or (and ?bool161 (and (or ?bool161 ?bool153 ?bool163))) (or (and ?bool152) ?bool159)) ?bool166 (or (and (and ?bool155) (and ?bool157 ?bool160) ?bool155))))))
(check-sat)


-- iteration 65 --
(declare-fun f0 (Float16 Float128 Float32 Float16 Float64 Float32 Float64) Float64)
(declare-fun f1 (Float128 Float128 Float16 Float128 Float128 Float32) Float128)
(declare-fun f2 (Float128 Float64 Float64 Float16 Float16 Float16 Float128 Float128) Float16)
(declare-fun f3 (Float16 Float32 Float32 Float128 Float16 Float32) Float128)
(declare-fun f4 (Float64 Float64 Float64 Float128 Float64 Float16 Float64) Float16)
(declare-fun f5 (Float16) Float16)
(declare-fun f6 (Float64 Float32 Float128 Float16 Float64 Float64) Float128)
(declare-fun f7 (Float16 Float64 Float32 Float64) Float16)
(declare-fun f8 (Float64 Float32 Float64) Float128)
(declare-fun f9 (Float64 Float64 Float64 Float16 Float16 Float64 Float64) Float128)
(declare-fun f10 (Float16 Float16 Float64 Float128 Float64 Float16 Float64 Float16 Float64) Float16)
(declare-fun f11 (Float32 Float128) Float16)
(declare-fun f12 (Float64 Float128) Float64)
(declare-fun f13 (Float64 Float64 Float32 Float16 Float64 Float16 Float128 Float32 Float128 Float64) Float32)
(declare-fun f14 (Float64 Float32 Float16) Float64)
(declare-fun f15 (Float32 Float32 Float32 Float16 Float32 Float128 Float128) Float16)
(declare-fun f16 (Float16 Float16 Float16 Float32) Float32)
(declare-fun f17 (Float128 Float128 Float16 Float16 Float32) Float32)
(declare-fun f18 (Float64 Float128 Float64 Float128 Float128 Float64 Float128 Float16 Float32 Float32) Float128)
(declare-fun f19 (Float16 Float128 Float16 Float32 Float32 Float128 Float64 Float16 Float16) Float64)
(declare-fun f20 (Float64 Float16 Float16 Float16) Float16)
(declare-fun f21 (Float16 Float64 Float32 Float32 Float128 Float128 Float32 Float64 Float32 Float128) Float32)
(declare-fun f22 (Float16 Float64 Float32 Float32 Float128 Float32 Float64) Float128)
(declare-fun f23 (Float16 Float128) Float128)
(declare-fun f24 (Float128 Float128 Float64 Float32 Float64 Float128 Float32 Float128 Float64) Float128)
(declare-fun f25 (Float16 Float128 Float64 Float128 Float32 Float32) Float128)
(declare-fun f26 (Float32 Float64 Float32 Float32 Float32 Float32 Float64) Float64)
(declare-fun f27 (Float32 Float16 Float64 Float64 Float16 Float128 Float128 Float64) Float16)
(declare-fun f28 (Float16 Float128 Float32 Float128 Float32 Float128 Float64 Float16 Float64) Float32)
(declare-fun f29 (Float32 Float16 Float128 Float128 Float128 Float64 Float32) Float16)
(declare-fun f30 (Float64 Float128 Float16 Float16 Float32 Float16 Float64 Float64 Float128 Float128) Float32)
(declare-fun f31 (Float32 Float128 Float128 Float64 Float32) Float32)
(declare-fun f32 (Float128 Float128) Float16)
(declare-fun f33 (Float32 Float32) Float128)
(declare-fun f34 (Float128 Float16 Float32 Float32 Float32 Float16 Float16 Float32 Float16) Float128)
(declare-fun f35 (Float128 Float64 Float16 Float32) Float128)
(declare-fun f36 (Float16) Float128)
(declare-fun f37 (Float128 Float64 Float128 Float64) Float32)
(declare-fun f38 (Float32 Float64 Float16 Float128 Float16) Float32)
(declare-fun f39 (Float128 Float32 Float128 Float64 Float32 Float128 Float128 Float32 Float32) Float16)
(declare-fun f40 (Float32 Float128) Float128)
(declare-fun f41 (Float64 Float32 Float64 Float64 Float128 Float32) Float128)
(declare-fun f42 (Float64 Float128 Float32 Float128 Float128) Float32)
(declare-fun f43 (Float64 Float16 Float64 Float16 Float32) Float64)
(declare-fun f44 (Float64 Float32 Float16) Float16)
(declare-fun f45 (Float64 Float16 Float16 Float64 Float16 Float128) Float128)
(declare-fun f46 (Float16 Float32 Float64 Float32 Float32 Float128 Float16 Float16 Float16) Float32)
(declare-fun f47 (Float64 Float64 Float32 Float32) Float32)
(declare-fun f48 (Float16 Float128 Float128) Float32)
(declare-fun f49 (Float16 Float128) Float32)
(declare-fun p0 (Float16 Float32) Bool)
(declare-fun p1 (Float64 Float64 Float64 Float32 Float32) Bool)
(declare-fun p2 (Float128 Float32 Float16 Float16 Float16) Bool)
(declare-fun p3 (Float64 Float64 Float16 Float32 Float32 Float64 Float32 Float16) Bool)
(declare-fun p4 (Float128 Float16 Float32 Float32) Bool)
(declare-fun p5 (Float16 Float128 Float128 Float32 Float16 Float32) Bool)
(declare-fun p6 (Float128) Bool)
(declare-fun p7 (Float64 Float32 Float16 Float128 Float16 Float32) Bool)
(declare-fun p8 (Float64 Float32 Float16 Float128 Float32 Float64) Bool)
(declare-fun p9 (Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float64)
(declare-const ?float62 Float32)
(declare-const ?float63 Float16)
(declare-const ?float64 Float64)
(declare-const ?float65 Float128)
(declare-const ?float66 Float16)
(declare-const ?float67 Float128)
(declare-const ?float68 Float128)
(declare-const ?float69 Float16)
(declare-const ?float70 Float64)
(declare-const ?float71 Float128)
(declare-const ?float72 Float128)
(declare-const ?float73 Float32)
(declare-const ?float74 Float32)
(declare-const ?float75 Float64)
(declare-const ?float76 Float64)
(declare-const ?float77 Float16)
(declare-const ?float78 Float32)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float128)
(assert (= ?float84 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b0 #b11000010101 #b1010101000011111010110100101101110111001010010011010)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.neg ?float77)))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.max ((_ to_fp 8 24) RTP ?float94) ?float74)))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.mul RTN ?float89 ((_ to_fp 5 11) RTN ?float76))))
(declare-const ?float103 Float32)
(assert (= ?float103 (fp.min ((_ to_fp 8 24) RTZ ?float99) ?float101)))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.min ?float69 ?float90)))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.mul RTZ ?float92 ((_ to_fp 8 24) RNE ?float102))))
(declare-const ?float106 Float16)
(assert (= ?float106 (fp.min ?float88 ?float69)))
(declare-const ?float107 Float64)
(assert (= ?float107 (fp.abs ?float83)))
(declare-const ?float108 Float16)
(assert (= ?float108 (fp.sub RNE ?float91 ?float88)))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.abs ?float98)))
(declare-const ?float110 Float32)
(assert (= ?float110 (fp.add RTZ ?float92 ((_ to_fp 8 24) RTN ?float61))))
(declare-const ?float111 Float128)
(assert (= ?float111 (fp.max ((_ to_fp 15 113) RTN ?float60) ?float68)))
(declare-const ?float112 Float128)
(assert (= ?float112 (fp.neg ?float67)))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.roundToIntegral RTN ?float94)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.roundToIntegral RTP ?float75)))
(declare-const ?float115 Float32)
(assert (= ?float115 (f38 ((_ to_fp 8 24) RTP ?float99) ?float96 ?float100 ((_ to_fp 15 113) RTZ ?float105) ((_ to_fp 5 11) RTN ?float76))))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.mul RTP ?float91 ((_ to_fp 5 11) RTZ ?float114))))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.sqrt RNE ?float112)))
(declare-const ?float118 Float64)
(assert (= ?float118 (fp.neg ?float82)))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.div RTZ ((_ to_fp 8 24) RTP ?float89) ?float115)))
(declare-const ?float120 Float16)
(assert (= ?float120 (f32 ((_ to_fp 15 113) RNE ?float98) ?float68)))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.mul RTZ ?float95 ((_ to_fp 5 11) RTZ ?float97))))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.add RTN ((_ to_fp 5 11) RTN ?float85) ?float69)))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.sub RTN ?float113 ?float90)))
(declare-const ?float124 Float128)
(assert (= ?float124 (fp.min ((_ to_fp 15 113) RTP ?float104) ?float65)))
(declare-const ?float125 Float16)
(assert (= ?float125 (f20 ((_ to_fp 11 53) RNE ?float109) ((_ to_fp 5 11) RTZ ?float110) ((_ to_fp 5 11) RNE ?float115) ((_ to_fp 5 11) RTP ?float74))))
(declare-const ?float126 Float128)
(assert (= ?float126 (f6 ((_ to_fp 11 53) RTN ?float80) ((_ to_fp 8 24) RTN ?float85) ((_ to_fp 15 113) RTN ?float82) ((_ to_fp 5 11) RTN ?float111) ((_ to_fp 11 53) RTP ?float90) ((_ to_fp 11 53) RTN ?float101))))
(declare-const ?float127 Float128)
(assert (= ?float127 (fp.neg ?float80)))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.add RTN ?float86 ?float85)))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.sub RNE ?float88 ?float106)))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.roundToIntegral RTZ ?float91)))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.mul RNE ((_ to_fp 5 11) RTN ?float83) ?float109)))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.div RTN ?float63 ?float129)))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.neg ?float88)))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.roundToIntegral RTZ ?float123)))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.abs ?float91)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.min ?float109 ?float113)))
(declare-const ?float137 Float32)
(assert (= ?float137 (f16 ?float131 ((_ to_fp 5 11) RTP ?float74) ?float133 ((_ to_fp 8 24) RTP ?float134))))
(declare-const ?float138 Float64)
(assert (= ?float138 (f12 ?float107 ?float112)))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.roundToIntegral RTP ?float101)))
(declare-const ?float140 Float64)
(assert (= ?float140 (fp.sqrt RTP ?float86)))
(declare-const ?float141 Float32)
(assert (= ?float141 (fp.sub RTZ ?float78 ?float139)))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.max ?float91 ?float116)))
(declare-const ?float143 Float128)
(assert (= ?float143 (fp.sub RNE ?float68 ?float117)))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.sqrt RNE ?float90)))
(declare-const ?float145 Float16)
(assert (= ?float145 (fp.div RTN ((_ to_fp 5 11) RTP ?float80) ?float106)))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.add RTP ((_ to_fp 15 113) RTN ?float77) ?float143)))
(declare-const ?float147 Float128)
(assert (= ?float147 (f18 ((_ to_fp 11 53) RTZ ?float71) ((_ to_fp 15 113) RTP ?float101) ((_ to_fp 11 53) RNE ?float144) ((_ to_fp 15 113) RTZ ?float63) ((_ to_fp 15 113) RTZ ?float104) ((_ to_fp 11 53) RTZ ?float124) ((_ to_fp 15 113) RTN ?float82) ((_ to_fp 5 11) RNE ?float137) ((_ to_fp 8 24) RTN ?float114) ((_ to_fp 8 24) RTP ?float131))))
(declare-const ?float148 Float128)
(assert (= ?float148 (f25 ((_ to_fp 5 11) RTN ?float87) ?float99 ?float82 ((_ to_fp 15 113) RTZ ?float63) ?float103 ((_ to_fp 8 24) RTN ?float129))))
(declare-const ?float149 Float32)
(assert (= ?float149 (fp.abs ?float74)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isNormal ?float101)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNormal ?float68)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isPositive ?float143)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isInfinite ?float127)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNaN ?float140)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isSubnormal ?float106)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNegative ?float105)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.gt ?float131 ((_ to_fp 5 11) RTZ ?float119))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p8 ((_ to_fp 11 53) RTN ?float81) ?float73 ((_ to_fp 5 11) RNE ?float137) ?float97 ((_ to_fp 8 24) RTN ?float128) ((_ to_fp 11 53) RTN ?float122))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.eq ((_ to_fp 5 11) RTP ?float117) ?float100)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p1 ((_ to_fp 11 53) RTP ?float105) ((_ to_fp 11 53) RTN ?float108) ?float138 ((_ to_fp 8 24) RTZ ?float113) ((_ to_fp 8 24) RTP ?float99))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.geq ?float81 ((_ to_fp 8 24) RTZ ?float77))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isSubnormal ?float100)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isPositive ?float105)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.leq ?float106 ?float129)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isPositive ?float110)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isSubnormal ?float90)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isPositive ?float67)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isPositive ?float135)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isZero ?float106)))
; FINAL ASSERT
(assert (or ?bool150 (and (or (or (or (and (and ?bool167))) ?bool161) ?bool166 (or ?bool160)) ?bool155)))
(check-sat)


-- iteration 66 --
(declare-fun f0 (Float16 Float128 Float16 Float16 Float64) Float32)
(declare-fun f1 (Float128 Float32 Float128 Float128 Float16 Float16 Float128) Float128)
(declare-fun f2 (Float16 Float64 Float128 Float64 Float64) Float64)
(declare-fun f3 (Float16 Float32 Float128 Float64) Float16)
(declare-fun f4 (Float32 Float16 Float64 Float64 Float16 Float128 Float32 Float16 Float64) Float64)
(declare-fun f5 (Float32) Float64)
(declare-fun f6 (Float16 Float64 Float64 Float16 Float128 Float128 Float32) Float64)
(declare-fun f7 (Float64 Float16 Float64 Float128 Float128 Float16) Float32)
(declare-fun f8 (Float128 Float32 Float16 Float128) Float128)
(declare-fun f9 (Float128 Float16 Float64) Float32)
(declare-fun f10 (Float16 Float128) Float64)
(declare-fun f11 (Float128 Float128 Float16 Float16) Float128)
(declare-fun f12 (Float128) Float64)
(declare-fun f13 (Float16 Float128 Float16 Float32 Float32) Float16)
(declare-fun f14 (Float128 Float16 Float16 Float64) Float16)
(declare-fun f15 (Float32) Float128)
(declare-fun f16 (Float16 Float64 Float32 Float64) Float16)
(declare-fun f17 (Float16 Float32 Float16 Float128 Float128 Float64) Float128)
(declare-fun f18 (Float32 Float128 Float32 Float16 Float32 Float32 Float128 Float64 Float32) Float64)
(declare-fun f19 (Float32) Float128)
(declare-fun f20 (Float64 Float16 Float16 Float32 Float16 Float32 Float16 Float32 Float64) Float16)
(declare-fun f21 (Float16 Float64) Float32)
(declare-fun f22 (Float64 Float16 Float128 Float16 Float128 Float64) Float64)
(declare-fun f23 (Float64 Float32 Float64 Float128 Float16 Float128 Float32 Float128 Float64 Float16) Float64)
(declare-fun f24 (Float32 Float16 Float32 Float64 Float16 Float128 Float64 Float64 Float64 Float128) Float32)
(declare-fun f25 (Float16 Float32 Float64 Float64 Float128 Float16 Float16) Float64)
(declare-fun f26 (Float32 Float32 Float64 Float64 Float128 Float16 Float128) Float64)
(declare-fun f27 (Float64 Float128 Float128) Float128)
(declare-fun f28 (Float64 Float32 Float64 Float128) Float32)
(declare-fun f29 (Float128 Float16 Float128 Float16 Float128) Float128)
(declare-fun f30 (Float16 Float16 Float32 Float128 Float64 Float32 Float16 Float64 Float128 Float32) Float16)
(declare-fun f31 (Float16) Float64)
(declare-fun f32 (Float128 Float64 Float16 Float128) Float64)
(declare-fun f33 (Float128 Float32 Float16 Float16) Float128)
(declare-fun f34 (Float128 Float128 Float32 Float16 Float32) Float128)
(declare-fun f35 (Float16 Float128 Float32 Float128 Float16 Float32) Float64)
(declare-fun f36 (Float128 Float128 Float64 Float128 Float128) Float16)
(declare-fun f37 (Float128 Float128 Float32 Float128 Float64 Float64) Float64)
(declare-fun f38 (Float128 Float128 Float64) Float128)
(declare-fun f39 (Float128 Float128 Float128 Float16 Float64 Float128 Float16 Float16 Float16 Float128) Float16)
(declare-fun f40 (Float16 Float64 Float32 Float128 Float32) Float16)
(declare-fun f41 (Float32 Float32 Float128 Float32 Float128 Float64 Float32 Float128) Float16)
(declare-fun f42 (Float16 Float128 Float16 Float128 Float16 Float32) Float32)
(declare-fun f43 (Float16 Float16 Float128 Float128 Float32 Float128 Float16 Float128 Float16 Float16) Float32)
(declare-fun f44 (Float64) Float64)
(declare-fun f45 (Float16 Float32 Float128 Float128) Float64)
(declare-fun f46 (Float16 Float64 Float64) Float16)
(declare-fun f47 (Float64) Float16)
(declare-fun f48 (Float128 Float128 Float64 Float16 Float128 Float128 Float16) Float64)
(declare-fun f49 (Float64 Float16 Float32) Float16)
(declare-fun p0 (Float32 Float16 Float16 Float16) Bool)
(declare-fun p1 (Float128 Float128) Bool)
(declare-fun p2 (Float64) Bool)
(declare-fun p3 (Float128 Float128 Float64 Float128 Float128 Float128 Float128 Float32 Float16) Bool)
(declare-fun p4 (Float128 Float32 Float64 Float64 Float64 Float128 Float32 Float32) Bool)
(declare-fun p5 (Float128 Float64 Float64 Float16 Float128 Float16 Float16) Bool)
(declare-fun p6 (Float16 Float16 Float16) Bool)
(declare-fun p7 (Float128 Float32 Float32) Bool)
(declare-fun p8 (Float64) Bool)
(declare-fun p9 (Float32 Float32 Float128 Float128 Float128 Float128 Float128 Float64 Float32 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float64)
(declare-const ?float62 Float32)
(declare-const ?float63 Float16)
(declare-const ?float64 Float32)
(declare-const ?float65 Float16)
(declare-const ?float66 Float128)
(declare-const ?float67 Float16)
(declare-const ?float68 Float32)
(declare-const ?float69 Float16)
(declare-const ?float70 Float128)
(declare-const ?float71 Float64)
(declare-const ?float72 Float32)
(declare-const ?float73 Float32)
(declare-const ?float74 Float128)
(declare-const ?float75 Float64)
(declare-const ?float76 Float64)
(declare-const ?float77 Float16)
(declare-const ?float78 Float16)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b0 #b01010110 #b11111110011101101100010)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (fp.div RNE ?float95 ((_ to_fp 15 113) RTP ?float67))))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.abs ?float70)))
(declare-const ?float102 Float64)
(assert (= ?float102 (fp.sub RTP ((_ to_fp 11 53) RNE ?float80) ?float91)))
(declare-const ?float103 Float64)
(assert (= ?float103 (f22 ?float89 ((_ to_fp 5 11) RTP ?float95) ((_ to_fp 15 113) RTN ?float96) ((_ to_fp 5 11) RNE ?float91) ((_ to_fp 15 113) RNE ?float78) ((_ to_fp 11 53) RTP ?float62))))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.sqrt RTZ ?float73)))
(declare-const ?float105 Float128)
(assert (= ?float105 (f8 ?float74 ((_ to_fp 8 24) RTN ?float78) ((_ to_fp 5 11) RNE ?float87) ((_ to_fp 15 113) RTZ ?float91))))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.abs ?float83)))
(declare-const ?float107 Float128)
(assert (= ?float107 (fp.sqrt RTZ ?float74)))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.add RTZ ?float61 ((_ to_fp 11 53) RTZ ?float77))))
(declare-const ?float109 Float64)
(assert (= ?float109 (f45 ((_ to_fp 5 11) RTN ?float60) ((_ to_fp 8 24) RTN ?float87) ((_ to_fp 15 113) RNE ?float65) ((_ to_fp 15 113) RTN ?float60))))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.neg ?float93)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.max ((_ to_fp 5 11) RTZ ?float107) ?float67)))
(declare-const ?float112 Float128)
(assert (= ?float112 (fp.min ?float87 ((_ to_fp 15 113) RTZ ?float78))))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.roundToIntegral RTZ ?float78)))
(declare-const ?float114 Float128)
(assert (= ?float114 (fp.max ?float74 ((_ to_fp 15 113) RNE ?float106))))
(declare-const ?float115 Float32)
(assert (= ?float115 (f24 ((_ to_fp 8 24) RTZ ?float102) ((_ to_fp 5 11) RTP ?float95) ?float60 ((_ to_fp 11 53) RNE ?float64) ?float77 ((_ to_fp 15 113) RNE ?float71) ((_ to_fp 11 53) RNE ?float101) ((_ to_fp 11 53) RNE ?float93) ((_ to_fp 11 53) RNE ?float66) ((_ to_fp 15 113) RTN ?float73))))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.sqrt RNE ?float108)))
(declare-const ?float117 Float64)
(assert (= ?float117 (f35 ?float67 ((_ to_fp 15 113) RTP ?float79) ((_ to_fp 8 24) RTP ?float69) ?float98 ((_ to_fp 5 11) RTZ ?float84) ((_ to_fp 8 24) RTP ?float67))))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.div RTZ ((_ to_fp 5 11) RNE ?float68) ?float92)))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.neg ?float73)))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.max ((_ to_fp 11 53) RTN ?float97) ?float91)))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.neg ?float80)))
(declare-const ?float122 Float32)
(assert (= ?float122 (fp.neg ?float80)))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.abs ?float99)))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.abs ?float62)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.max ?float121 ((_ to_fp 8 24) RNE ?float95))))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.min ?float104 ?float90)))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.sqrt RTZ ?float125)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.min ?float60 ?float62)))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.mul RTZ ((_ to_fp 11 53) RTZ ?float111) ?float117)))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.div RTN ((_ to_fp 5 11) RTZ ?float112) ?float93)))
(declare-const ?float131 Float32)
(assert (= ?float131 (fp.abs ?float60)))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.mul RTP ((_ to_fp 8 24) RTZ ?float130) ?float72)))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.sqrt RTP ?float110)))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.div RTN ?float111 ?float85)))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.max ?float119 ?float96)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.max ((_ to_fp 5 11) RTZ ?float125) ?float78)))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.sqrt RTZ ?float68)))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.sub RTP ?float113 ?float133)))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.neg ?float88)))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.roundToIntegral RTN ?float126)))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.min ?float136 ?float82)))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.neg ?float91)))
(declare-const ?float143 Float16)
(assert (= ?float143 (f47 ((_ to_fp 11 53) RTN ?float73))))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.sqrt RNE ?float121)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.neg ?float72)))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.add RTZ ?float100 ((_ to_fp 15 113) RTZ ?float76))))
(declare-const ?float147 Float16)
(assert (= ?float147 (fp.roundToIntegral RTZ ?float113)))
(declare-const ?float148 Float32)
(assert (= ?float148 (fp.sub RTZ ?float115 ?float73)))
(declare-const ?float149 Float32)
(assert (= ?float149 (fp.max ?float72 ((_ to_fp 8 24) RNE ?float112))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.leq ?float88 ?float107)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isSubnormal ?float91)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isPositive ?float76)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (p8 ((_ to_fp 11 53) RTN ?float94))))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isInfinite ?float65)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isZero ?float143)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.gt ?float129 ?float76)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.geq ?float117 ((_ to_fp 11 53) RTZ ?float127))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNegative ?float143)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isNormal ?float98)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isPositive ?float113)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.gt ((_ to_fp 5 11) RNE ?float121) ?float118)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (p8 ?float102)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (p8 ((_ to_fp 11 53) RTN ?float66))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isInfinite ?float73)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isZero ?float82)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.lt ?float136 ?float147)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isPositive ?float111)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.gt ?float148 ((_ to_fp 8 24) RTZ ?float65))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isZero ?float64)))
; FINAL ASSERT
(assert (and (or ?bool159 ?bool157 ?bool150) ?bool164))
(check-sat)


-- iteration 67 --
(declare-fun f0 (Float128 Float16 Float16 Float16) Float16)
(declare-fun f1 (Float128 Float32 Float128 Float32 Float128 Float16 Float16 Float16) Float64)
(declare-fun f2 (Float64 Float64 Float16 Float128 Float16 Float32 Float64) Float64)
(declare-fun f3 (Float16 Float128 Float128 Float128 Float16 Float16 Float16 Float16) Float16)
(declare-fun f4 (Float32 Float128 Float16 Float32 Float128 Float64 Float64 Float32 Float128) Float64)
(declare-fun f5 (Float32 Float16 Float32 Float16 Float64 Float128) Float32)
(declare-fun f6 (Float128 Float64 Float32 Float16 Float64 Float64 Float16 Float128) Float128)
(declare-fun f7 (Float128 Float32 Float16 Float32) Float32)
(declare-fun f8 (Float128 Float64 Float16 Float16 Float64 Float128 Float128) Float64)
(declare-fun f9 (Float128 Float32 Float64 Float32 Float32 Float128 Float64 Float64) Float64)
(declare-fun f10 (Float16 Float32 Float64 Float16 Float16 Float16 Float64) Float64)
(declare-fun f11 (Float64 Float64 Float16 Float128 Float32 Float64 Float64 Float128 Float64 Float64) Float16)
(declare-fun f12 (Float128 Float64 Float32 Float64) Float16)
(declare-fun f13 (Float32 Float64 Float32 Float128 Float64 Float64 Float128 Float64 Float128) Float32)
(declare-fun f14 (Float64 Float32 Float16 Float16 Float64 Float16 Float64 Float64) Float128)
(declare-fun f15 (Float64 Float16 Float32 Float16 Float128 Float16 Float128 Float32) Float64)
(declare-fun f16 (Float32 Float16 Float32 Float128) Float128)
(declare-fun f17 (Float128 Float16 Float16 Float64 Float128 Float16 Float128 Float16 Float128 Float64) Float32)
(declare-fun f18 (Float32 Float32 Float16 Float128 Float32) Float16)
(declare-fun f19 (Float32 Float32 Float64 Float32 Float64 Float128) Float16)
(declare-fun f20 (Float16 Float16 Float128 Float64 Float64 Float16 Float128 Float16) Float16)
(declare-fun f21 (Float16 Float32 Float64 Float16 Float128 Float32 Float64 Float32 Float64 Float16) Float64)
(declare-fun f22 (Float64 Float32) Float128)
(declare-fun f23 (Float128) Float64)
(declare-fun f24 (Float16 Float32 Float128 Float32 Float128 Float16 Float64 Float64) Float64)
(declare-fun f25 (Float128 Float16 Float16 Float128) Float64)
(declare-fun f26 (Float32 Float128 Float16 Float128 Float32 Float16 Float128 Float16 Float32 Float64) Float16)
(declare-fun f27 (Float32 Float64 Float32 Float32 Float64 Float128 Float32 Float64 Float64) Float32)
(declare-fun f28 (Float16 Float32 Float128 Float32 Float64 Float32 Float128 Float128) Float32)
(declare-fun f29 (Float16 Float64 Float32 Float128 Float128 Float64 Float64 Float128 Float128) Float32)
(declare-fun f30 (Float128 Float128 Float16) Float16)
(declare-fun f31 (Float64 Float32 Float64 Float32 Float128 Float64 Float16 Float128 Float32) Float64)
(declare-fun f32 (Float64 Float128 Float128 Float32 Float32 Float128) Float32)
(declare-fun f33 (Float128 Float16 Float16) Float128)
(declare-fun f34 (Float128 Float32 Float16 Float64) Float128)
(declare-fun f35 (Float64) Float16)
(declare-fun f36 (Float32 Float16) Float64)
(declare-fun f37 (Float16 Float16 Float16 Float32 Float64 Float128 Float64 Float16 Float16) Float16)
(declare-fun f38 (Float16 Float64 Float128 Float32 Float16 Float32) Float16)
(declare-fun f39 (Float64 Float16 Float128 Float32 Float16 Float16) Float64)
(declare-fun f40 (Float32 Float16 Float32 Float16 Float128 Float64 Float64) Float16)
(declare-fun f41 (Float64 Float128 Float16 Float16 Float64 Float32 Float64) Float128)
(declare-fun f42 (Float128 Float32 Float64 Float128 Float32 Float16 Float64 Float16 Float32 Float16) Float64)
(declare-fun f43 (Float64 Float16 Float128 Float16 Float128 Float16 Float128 Float16 Float128) Float32)
(declare-fun f44 (Float16 Float16 Float64) Float64)
(declare-fun f45 (Float128 Float64 Float64 Float32 Float128 Float64 Float128 Float128 Float128) Float128)
(declare-fun f46 (Float16) Float64)
(declare-fun f47 (Float32 Float128 Float64 Float32 Float16 Float64 Float16) Float32)
(declare-fun f48 (Float128 Float16 Float16 Float128 Float128 Float16 Float32 Float128 Float64) Float128)
(declare-fun f49 (Float32 Float32 Float128 Float16 Float16 Float32 Float64 Float16 Float128 Float16) Float64)
(declare-fun p0 (Float128) Bool)
(declare-fun p1 (Float16 Float32 Float16 Float128 Float16 Float64 Float64) Bool)
(declare-fun p2 (Float64 Float16 Float128) Bool)
(declare-fun p3 (Float64 Float32 Float16 Float16 Float64 Float128 Float128) Bool)
(declare-fun p4 (Float128) Bool)
(declare-fun p5 (Float16 Float64 Float16 Float16 Float128 Float128) Bool)
(declare-fun p6 (Float16 Float128 Float64) Bool)
(declare-fun p7 (Float128) Bool)
(declare-fun p8 (Float128 Float64 Float128 Float128 Float32 Float128 Float128 Float16 Float32 Float32) Bool)
(declare-fun p9 (Float16 Float32 Float64 Float64 Float32 Float64 Float16 Float64 Float64 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float64)
(declare-const ?float62 Float64)
(declare-const ?float63 Float32)
(declare-const ?float64 Float16)
(declare-const ?float65 Float16)
(declare-const ?float66 Float128)
(declare-const ?float67 Float128)
(declare-const ?float68 Float64)
(declare-const ?float69 Float32)
(declare-const ?float70 Float16)
(declare-const ?float71 Float128)
(declare-const ?float72 Float128)
(declare-const ?float73 Float64)
(declare-const ?float74 Float32)
(declare-const ?float75 Float128)
(declare-const ?float76 Float128)
(declare-const ?float77 Float128)
(declare-const ?float78 Float64)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b1 #b000110000111100 #b1010000100111011110000101000110000101010010111111101011110010100101111101111101111010000101011000110100111010110)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b11000 #b1100111010)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float98 Float64)
(assert (= ?float98 (fp #b0 #b10010111010 #b1101101000011101001000010001001110101000100100011100)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (fp.sqrt RTN ?float88)))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.mul RTN ?float63 ?float91)))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.roundToIntegral RTN ?float101)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.max ?float87 ?float84)))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.sub RTP ((_ to_fp 15 113) RTN ?float92) ?float100)))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.min ((_ to_fp 5 11) RTN ?float72) ?float70)))
(declare-const ?float106 Float16)
(assert (= ?float106 (f0 ((_ to_fp 15 113) RTZ ?float74) ((_ to_fp 5 11) RNE ?float101) ((_ to_fp 5 11) RTZ ?float76) ((_ to_fp 5 11) RNE ?float78))))
(declare-const ?float107 Float16)
(assert (= ?float107 (fp.max ?float82 ((_ to_fp 5 11) RTZ ?float93))))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.sqrt RNE ?float61)))
(declare-const ?float109 Float16)
(assert (= ?float109 (f3 ((_ to_fp 5 11) RTZ ?float75) ((_ to_fp 15 113) RTN ?float98) ((_ to_fp 15 113) RNE ?float63) ?float77 ((_ to_fp 5 11) RTZ ?float66) ?float87 ((_ to_fp 5 11) RNE ?float94) ?float64)))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.add RTP ((_ to_fp 15 113) RTZ ?float80) ?float72)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.roundToIntegral RNE ?float70)))
(declare-const ?float112 Float16)
(assert (= ?float112 (f20 ?float111 ((_ to_fp 5 11) RTN ?float66) ?float71 ((_ to_fp 11 53) RTP ?float92) ((_ to_fp 11 53) RNE ?float64) ((_ to_fp 5 11) RTN ?float63) ((_ to_fp 15 113) RTN ?float97) ?float92)))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.roundToIntegral RTZ ?float106)))
(declare-const ?float114 Float128)
(assert (= ?float114 (fp.min ((_ to_fp 15 113) RTP ?float87) ?float104)))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.neg ?float100)))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.sqrt RTN ?float97)))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.div RNE ?float105 ((_ to_fp 5 11) RTP ?float88))))
(declare-const ?float118 Float128)
(assert (= ?float118 (f22 ((_ to_fp 11 53) RTN ?float75) ((_ to_fp 8 24) RTN ?float115))))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.mul RTZ ?float107 ?float103)))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.abs ?float71)))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.neg ?float64)))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.sub RTP ((_ to_fp 15 113) RNE ?float74) ?float71)))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.neg ?float119)))
(declare-const ?float124 Float16)
(assert (= ?float124 (f0 ((_ to_fp 15 113) RTZ ?float91) ?float84 ((_ to_fp 5 11) RTZ ?float114) ((_ to_fp 5 11) RNE ?float91))))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.neg ?float63)))
(declare-const ?float126 Float32)
(assert (= ?float126 (f5 ((_ to_fp 8 24) RNE ?float72) ((_ to_fp 5 11) RTP ?float77) ((_ to_fp 8 24) RTP ?float96) ((_ to_fp 5 11) RNE ?float66) ((_ to_fp 11 53) RNE ?float64) ((_ to_fp 15 113) RNE ?float81))))
(declare-const ?float127 Float128)
(assert (= ?float127 (fp.min ?float75 ((_ to_fp 15 113) RTZ ?float70))))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.div RTN ((_ to_fp 15 113) RTN ?float119) ?float120)))
(declare-const ?float129 Float64)
(assert (= ?float129 (f25 ?float77 ?float123 ((_ to_fp 5 11) RTN ?float90) ((_ to_fp 15 113) RTP ?float82))))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.min ?float116 ?float109)))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.roundToIntegral RNE ?float105)))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.sub RTZ ?float95 ((_ to_fp 8 24) RTP ?float117))))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.add RTN ?float109 ?float121)))
(declare-const ?float134 Float128)
(assert (= ?float134 (f14 ((_ to_fp 11 53) RTP ?float113) ((_ to_fp 8 24) RTP ?float100) ((_ to_fp 5 11) RTP ?float128) ((_ to_fp 5 11) RTZ ?float78) ((_ to_fp 11 53) RTN ?float127) ((_ to_fp 5 11) RTZ ?float102) ?float94 ((_ to_fp 11 53) RNE ?float89))))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.abs ?float83)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.min ?float105 ((_ to_fp 5 11) RTZ ?float114))))
(declare-const ?float137 Float32)
(assert (= ?float137 (f13 ((_ to_fp 8 24) RTN ?float64) ((_ to_fp 11 53) RTP ?float102) ((_ to_fp 8 24) RNE ?float119) ((_ to_fp 15 113) RTN ?float87) ((_ to_fp 11 53) RNE ?float130) ((_ to_fp 11 53) RTP ?float69) ?float104 ?float94 ?float128)))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.min ?float130 ((_ to_fp 5 11) RTP ?float118))))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.neg ?float118)))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.sqrt RTZ ?float122)))
(declare-const ?float141 Float32)
(assert (= ?float141 (fp.max ((_ to_fp 8 24) RNE ?float112) ?float95)))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.add RTN ?float117 ((_ to_fp 5 11) RTZ ?float118))))
(declare-const ?float143 Float32)
(assert (= ?float143 (fp.add RTP ?float126 ((_ to_fp 8 24) RTZ ?float79))))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.mul RTZ ?float86 ?float64)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.div RTZ ?float83 ?float63)))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.min ((_ to_fp 15 113) RTZ ?float124) ?float60)))
(declare-const ?float147 Float64)
(assert (= ?float147 (fp.sub RNE ((_ to_fp 11 53) RNE ?float101) ?float62)))
(declare-const ?float148 Float16)
(assert (= ?float148 (f20 ?float130 ((_ to_fp 5 11) RTZ ?float128) ?float122 ?float85 ((_ to_fp 11 53) RTN ?float93) ?float138 ((_ to_fp 15 113) RTZ ?float123) ?float70)))
(declare-const ?float149 Float32)
(assert (= ?float149 (fp.roundToIntegral RTP ?float125)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.leq ?float97 ((_ to_fp 5 11) RTN ?float80))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNaN ?float74)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (p9 ((_ to_fp 5 11) RTN ?float68) ((_ to_fp 8 24) RTN ?float129) ((_ to_fp 11 53) RTP ?float110) ((_ to_fp 11 53) RNE ?float118) ((_ to_fp 8 24) RTZ ?float96) ((_ to_fp 11 53) RTN ?float111) ?float148 ?float99 ((_ to_fp 11 53) RTP ?float132) ((_ to_fp 15 113) RTP ?float141))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (p0 ((_ to_fp 15 113) RTN ?float109))))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p1 ((_ to_fp 5 11) RTZ ?float93) ((_ to_fp 8 24) RTZ ?float106) ?float142 ((_ to_fp 15 113) RTN ?float119) ((_ to_fp 5 11) RTZ ?float71) ((_ to_fp 11 53) RNE ?float138) ((_ to_fp 11 53) RTN ?float112))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.gt ?float148 ?float96)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNormal ?float74)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNaN ?float146)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p1 ((_ to_fp 5 11) RTP ?float90) ((_ to_fp 8 24) RNE ?float112) ((_ to_fp 5 11) RTP ?float95) ((_ to_fp 15 113) RNE ?float141) ((_ to_fp 5 11) RTZ ?float74) ((_ to_fp 11 53) RTP ?float70) ((_ to_fp 11 53) RTP ?float88))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isZero ?float106)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p2 ((_ to_fp 11 53) RNE ?float134) ((_ to_fp 5 11) RTN ?float88) ((_ to_fp 15 113) RNE ?float90))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (p9 ?float70 ((_ to_fp 8 24) RNE ?float100) ((_ to_fp 11 53) RTZ ?float100) ((_ to_fp 11 53) RTP ?float72) ((_ to_fp 8 24) RTN ?float71) ((_ to_fp 11 53) RTP ?float119) ((_ to_fp 5 11) RTP ?float114) ((_ to_fp 11 53) RTP ?float124) ((_ to_fp 11 53) RNE ?float146) ((_ to_fp 15 113) RTZ ?float112))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNegative ?float83)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (p3 ((_ to_fp 11 53) RTP ?float63) ((_ to_fp 8 24) RNE ?float124) ?float84 ?float81 ?float98 ((_ to_fp 15 113) RTZ ?float63) ((_ to_fp 15 113) RTZ ?float68))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (p3 ((_ to_fp 11 53) RTZ ?float109) ((_ to_fp 8 24) RTN ?float108) ?float86 ((_ to_fp 5 11) RNE ?float114) ((_ to_fp 11 53) RTZ ?float143) ((_ to_fp 15 113) RTN ?float83) ((_ to_fp 15 113) RTZ ?float97))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.gt ?float88 ((_ to_fp 15 113) RNE ?float101))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.eq ((_ to_fp 5 11) RNE ?float76) ?float131)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isPositive ?float149)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isZero ?float93)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isSubnormal ?float81)))
; FINAL ASSERT
(assert (or ?bool150 ?bool154 ?bool154))
(check-sat)


-- iteration 68 --
(declare-fun f0 (Float32) Float64)
(declare-fun f1 (Float16 Float32 Float32 Float32 Float16 Float64 Float128 Float64) Float16)
(declare-fun f2 (Float32 Float16 Float128 Float64 Float64) Float64)
(declare-fun f3 (Float32 Float16 Float32) Float16)
(declare-fun f4 (Float32 Float16 Float32 Float32 Float64) Float16)
(declare-fun f5 (Float64 Float32) Float16)
(declare-fun f6 (Float128 Float16 Float128 Float16 Float32 Float32) Float64)
(declare-fun f7 (Float128 Float16 Float64 Float64 Float16 Float128 Float128 Float128 Float128 Float32) Float32)
(declare-fun f8 (Float32 Float16 Float128 Float128 Float128 Float16 Float64 Float32 Float128 Float64) Float128)
(declare-fun f9 (Float32 Float16 Float32 Float16 Float16 Float32 Float128) Float64)
(declare-fun f10 (Float32 Float64 Float32 Float128 Float128) Float16)
(declare-fun f11 (Float32 Float64) Float128)
(declare-fun f12 (Float64 Float64 Float64) Float16)
(declare-fun f13 (Float16 Float16) Float16)
(declare-fun f14 (Float128 Float64 Float16) Float128)
(declare-fun f15 (Float32 Float64 Float16 Float32 Float128 Float32 Float64 Float32) Float128)
(declare-fun f16 (Float128 Float32 Float16 Float16 Float32 Float32 Float16 Float32) Float16)
(declare-fun f17 (Float64 Float128) Float16)
(declare-fun f18 (Float128 Float64) Float32)
(declare-fun f19 (Float16 Float64 Float128 Float128 Float16 Float64 Float64 Float64 Float128 Float16) Float32)
(declare-fun f20 (Float32 Float128 Float128 Float128) Float64)
(declare-fun f21 (Float16) Float32)
(declare-fun f22 (Float64 Float32 Float32 Float64 Float64 Float32) Float64)
(declare-fun f23 (Float16 Float64 Float32 Float128 Float64 Float32 Float64) Float32)
(declare-fun f24 (Float16 Float16 Float64 Float16 Float32 Float64 Float16) Float128)
(declare-fun f25 (Float16 Float32 Float16 Float128 Float16 Float128) Float64)
(declare-fun f26 (Float16) Float64)
(declare-fun f27 (Float16 Float32 Float32 Float64 Float32) Float128)
(declare-fun f28 (Float32 Float128 Float128 Float32 Float16 Float128 Float32 Float32 Float64) Float128)
(declare-fun f29 (Float128 Float32) Float16)
(declare-fun f30 (Float32 Float16) Float32)
(declare-fun f31 (Float64 Float16) Float64)
(declare-fun f32 (Float128 Float16 Float16 Float32 Float16 Float128) Float64)
(declare-fun f33 (Float128 Float64 Float16) Float32)
(declare-fun f34 (Float32 Float16 Float64 Float64 Float16 Float16) Float16)
(declare-fun f35 (Float64 Float64 Float32 Float64 Float128 Float16 Float32) Float32)
(declare-fun f36 (Float32 Float128 Float32 Float128 Float32 Float64) Float32)
(declare-fun f37 (Float16 Float128) Float32)
(declare-fun f38 (Float64 Float128 Float16) Float128)
(declare-fun f39 (Float64 Float32 Float16 Float32 Float128 Float16) Float128)
(declare-fun f40 (Float64 Float16) Float16)
(declare-fun f41 (Float64) Float32)
(declare-fun f42 (Float32 Float16 Float64 Float16 Float64) Float32)
(declare-fun f43 (Float128 Float64 Float32 Float16 Float64 Float64 Float64 Float16 Float16) Float128)
(declare-fun f44 (Float16 Float128 Float128 Float64 Float128 Float16 Float32 Float128) Float32)
(declare-fun f45 (Float32 Float128 Float32 Float64) Float128)
(declare-fun f46 (Float16 Float32 Float32 Float32 Float64) Float64)
(declare-fun f47 (Float32 Float64 Float16) Float16)
(declare-fun f48 (Float64 Float64 Float128 Float64 Float128) Float64)
(declare-fun f49 (Float16 Float64 Float32 Float16) Float16)
(declare-fun p0 (Float32 Float16 Float32 Float64 Float16) Bool)
(declare-fun p1 (Float32 Float128 Float16 Float16) Bool)
(declare-fun p2 (Float128 Float16 Float128 Float128 Float64 Float16 Float16) Bool)
(declare-fun p3 (Float16) Bool)
(declare-fun p4 (Float128 Float64 Float16 Float16) Bool)
(declare-fun p5 (Float128) Bool)
(declare-fun p6 (Float64 Float32 Float128 Float64 Float16 Float64 Float128 Float128 Float128 Float16) Bool)
(declare-fun p7 (Float64 Float16 Float16 Float32 Float128 Float64 Float64 Float128 Float16 Float32) Bool)
(declare-fun p8 (Float64) Bool)
(declare-fun p9 (Float32 Float64 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float16)
(declare-const ?float62 Float16)
(declare-const ?float63 Float16)
(declare-const ?float64 Float64)
(declare-const ?float65 Float16)
(declare-const ?float66 Float128)
(declare-const ?float67 Float64)
(declare-const ?float68 Float32)
(declare-const ?float69 Float32)
(declare-const ?float70 Float64)
(declare-const ?float71 Float64)
(declare-const ?float72 Float128)
(declare-const ?float73 Float32)
(declare-const ?float74 Float32)
(declare-const ?float75 Float128)
(declare-const ?float76 Float128)
(declare-const ?float77 Float16)
(declare-const ?float78 Float64)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b1 #b10010011011 #b1010101101111011111001011100000101000011010001110100)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b0 #b01110010 #b10110001000011010001101)))
(declare-const ?float83 Float128)
(assert (= ?float83 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b0 #b011011011100000 #b1101001011100011110100100000110100001110010011001110111110001111111011100110111111001100010101010001101100101110)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float98 Float64)
(assert (= ?float98 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.neg ?float81)))
(declare-const ?float101 Float16)
(assert (= ?float101 (f13 ((_ to_fp 5 11) RNE ?float60) ((_ to_fp 5 11) RTN ?float88))))
(declare-const ?float102 Float32)
(assert (= ?float102 (f19 ((_ to_fp 5 11) RTP ?float75) ((_ to_fp 11 53) RNE ?float62) ((_ to_fp 15 113) RTN ?float69) ?float72 ?float63 ?float93 ((_ to_fp 11 53) RTN ?float75) ((_ to_fp 11 53) RTP ?float79) ((_ to_fp 15 113) RTN ?float90) ((_ to_fp 5 11) RTZ ?float84))))
(declare-const ?float103 Float32)
(assert (= ?float103 (fp.neg ?float73)))
(declare-const ?float104 Float16)
(assert (= ?float104 (f3 ((_ to_fp 8 24) RNE ?float91) ((_ to_fp 5 11) RTP ?float91) ?float86)))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.sqrt RTP ?float62)))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.sqrt RTN ?float78)))
(declare-const ?float107 Float16)
(assert (= ?float107 (f3 ((_ to_fp 8 24) RTP ?float85) ((_ to_fp 5 11) RNE ?float99) ?float74)))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.add RTP ?float102 ((_ to_fp 8 24) RTP ?float61))))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.mul RTZ ?float75 ?float75)))
(declare-const ?float110 Float32)
(assert (= ?float110 (fp.max ?float68 ?float86)))
(declare-const ?float111 Float64)
(assert (= ?float111 (f32 ((_ to_fp 15 113) RTZ ?float87) ?float92 ((_ to_fp 5 11) RNE ?float73) ?float110 ?float62 ((_ to_fp 15 113) RNE ?float110))))
(declare-const ?float112 Float128)
(assert (= ?float112 (fp.abs ?float76)))
(declare-const ?float113 Float128)
(assert (= ?float113 (f39 ((_ to_fp 11 53) RTZ ?float86) ?float102 ((_ to_fp 5 11) RTP ?float94) ((_ to_fp 8 24) RTP ?float101) ((_ to_fp 15 113) RNE ?float68) ?float61)))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.abs ?float107)))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.sub RTP ?float80 ?float106)))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.max ((_ to_fp 5 11) RTZ ?float85) ?float77)))
(declare-const ?float117 Float128)
(assert (= ?float117 (f15 ((_ to_fp 8 24) RTN ?float96) ((_ to_fp 11 53) RTN ?float107) ((_ to_fp 5 11) RTZ ?float84) ?float69 ((_ to_fp 15 113) RTP ?float74) ((_ to_fp 8 24) RTZ ?float88) ((_ to_fp 11 53) RNE ?float60) ((_ to_fp 8 24) RTP ?float77))))
(declare-const ?float118 Float32)
(assert (= ?float118 (f23 ((_ to_fp 5 11) RNE ?float108) ((_ to_fp 11 53) RTP ?float114) ((_ to_fp 8 24) RTN ?float76) ?float88 ((_ to_fp 11 53) RTN ?float61) ((_ to_fp 8 24) RNE ?float83) ((_ to_fp 11 53) RTN ?float103))))
(declare-const ?float119 Float128)
(assert (= ?float119 (fp.mul RTZ ?float109 ?float66)))
(declare-const ?float120 Float64)
(assert (= ?float120 (f0 ((_ to_fp 8 24) RTN ?float92))))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.min ((_ to_fp 15 113) RTZ ?float63) ?float94)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.div RTP ?float104 ?float101)))
(declare-const ?float123 Float16)
(assert (= ?float123 (f1 ?float62 ((_ to_fp 8 24) RNE ?float77) ((_ to_fp 8 24) RTP ?float117) ?float102 ((_ to_fp 5 11) RNE ?float109) ((_ to_fp 11 53) RNE ?float65) ((_ to_fp 15 113) RTN ?float65) ((_ to_fp 11 53) RNE ?float63))))
(declare-const ?float124 Float128)
(assert (= ?float124 (fp.add RTZ ((_ to_fp 15 113) RNE ?float97) ?float76)))
(declare-const ?float125 Float128)
(assert (= ?float125 (fp.neg ?float124)))
(declare-const ?float126 Float64)
(assert (= ?float126 (fp.add RTP ((_ to_fp 11 53) RNE ?float76) ?float93)))
(declare-const ?float127 Float16)
(assert (= ?float127 (f16 ?float109 ?float86 ((_ to_fp 5 11) RTN ?float93) ?float116 ?float82 ((_ to_fp 8 24) RTZ ?float115) ((_ to_fp 5 11) RTP ?float64) ((_ to_fp 8 24) RTZ ?float89))))
(declare-const ?float128 Float32)
(assert (= ?float128 (f21 ((_ to_fp 5 11) RNE ?float108))))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.min ?float98 ((_ to_fp 11 53) RTN ?float104))))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.abs ?float124)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.min ?float115 ((_ to_fp 11 53) RTZ ?float107))))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.sub RTN ?float60 ((_ to_fp 8 24) RNE ?float76))))
(declare-const ?float133 Float128)
(assert (= ?float133 (f24 ?float81 ((_ to_fp 5 11) RTZ ?float132) ((_ to_fp 11 53) RTZ ?float84) ?float87 ((_ to_fp 8 24) RNE ?float109) ?float131 ((_ to_fp 5 11) RTN ?float130))))
(declare-const ?float134 Float32)
(assert (= ?float134 (f41 ?float64)))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.add RTP ?float102 ((_ to_fp 8 24) RTP ?float101))))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.roundToIntegral RTN ?float63)))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.neg ?float107)))
(declare-const ?float138 Float32)
(assert (= ?float138 (fp.add RTN ((_ to_fp 8 24) RTP ?float107) ?float68)))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.max ((_ to_fp 5 11) RNE ?float95) ?float116)))
(declare-const ?float140 Float32)
(assert (= ?float140 (f37 ((_ to_fp 5 11) RNE ?float82) ((_ to_fp 15 113) RNE ?float77))))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.neg ?float77)))
(declare-const ?float142 Float32)
(assert (= ?float142 (fp.roundToIntegral RTZ ?float86)))
(declare-const ?float143 Float16)
(assert (= ?float143 (fp.abs ?float101)))
(declare-const ?float144 Float32)
(assert (= ?float144 (f30 ((_ to_fp 8 24) RTP ?float127) ?float107)))
(declare-const ?float145 Float32)
(assert (= ?float145 (f41 ((_ to_fp 11 53) RTZ ?float73))))
(declare-const ?float146 Float64)
(assert (= ?float146 (f0 ?float145)))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.max ?float133 ?float76)))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.roundToIntegral RTZ ?float101)))
(declare-const ?float149 Float32)
(assert (= ?float149 (f7 ?float117 ((_ to_fp 5 11) RTN ?float106) ((_ to_fp 11 53) RTZ ?float75) ((_ to_fp 11 53) RTZ ?float82) ?float139 ((_ to_fp 15 113) RTZ ?float115) ((_ to_fp 15 113) RTZ ?float102) ((_ to_fp 15 113) RTN ?float140) ?float133 ((_ to_fp 8 24) RTN ?float104))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.eq ?float80 ((_ to_fp 11 53) RNE ?float74))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isPositive ?float101)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.eq ?float110 ((_ to_fp 8 24) RTN ?float64))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNormal ?float105)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p7 ((_ to_fp 11 53) RTZ ?float73) ((_ to_fp 5 11) RTP ?float121) ?float65 ((_ to_fp 8 24) RNE ?float115) ?float66 ?float96 ((_ to_fp 11 53) RTN ?float121) ((_ to_fp 15 113) RNE ?float135) ?float114 ((_ to_fp 8 24) RTP ?float143))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isNormal ?float111)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isZero ?float140)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNaN ?float134)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isInfinite ?float71)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isNormal ?float60)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isZero ?float75)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (p9 ((_ to_fp 8 24) RTP ?float92) ((_ to_fp 11 53) RNE ?float88) ?float148)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNegative ?float87)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isInfinite ?float76)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.leq ?float88 ((_ to_fp 15 113) RNE ?float128))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.geq ((_ to_fp 15 113) RTZ ?float111) ?float130)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p2 ?float95 ((_ to_fp 5 11) RNE ?float83) ((_ to_fp 15 113) RTP ?float132) ((_ to_fp 15 113) RNE ?float90) ((_ to_fp 11 53) RTP ?float136) ((_ to_fp 5 11) RTN ?float64) ((_ to_fp 5 11) RTP ?float130))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isSubnormal ?float129)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNaN ?float124)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNaN ?float96)))
; FINAL ASSERT
(assert (or (and ?bool153) (or ?bool156 (or ?bool166 (and (and ?bool168 (and ?bool159 ?bool163)) ?bool153) (or ?bool165 ?bool166 ?bool158)) (and ?bool150 (or (or (or (and ?bool154 ?bool153)) ?bool165 (or (and ?bool166 ?bool151) ?bool162 (or ?bool162 ?bool160 ?bool159))) ?bool150 ?bool159))) (or (or (and ?bool163 (or ?bool157 ?bool168))) (or (and (and (and (and ?bool169 ?bool168 ?bool165) ?bool150 ?bool153) ?bool150) ?bool159 (and (or ?bool153 (or ?bool168 ?bool156 ?bool160)) (or ?bool157 (or ?bool162)) (or ?bool159)))))))
(check-sat)


-- iteration 69 --
(declare-fun f0 (Float16 Float128 Float128) Float16)
(declare-fun f1 (Float16 Float16 Float128 Float16 Float64) Float32)
(declare-fun f2 (Float16 Float32 Float64 Float128 Float128) Float128)
(declare-fun f3 (Float64 Float32 Float32) Float16)
(declare-fun f4 (Float128 Float16 Float16 Float16 Float16 Float128 Float64) Float128)
(declare-fun f5 (Float32 Float64 Float16 Float64 Float64 Float128) Float32)
(declare-fun f6 (Float32 Float32 Float16) Float64)
(declare-fun f7 (Float16) Float32)
(declare-fun f8 (Float32 Float32 Float16 Float128 Float16 Float64 Float32) Float128)
(declare-fun f9 (Float128 Float32 Float64 Float16) Float128)
(declare-fun f10 (Float32 Float64 Float64 Float128 Float64) Float32)
(declare-fun f11 (Float128 Float32 Float32 Float32 Float16 Float128 Float32 Float32) Float16)
(declare-fun f12 (Float128 Float16 Float32 Float16 Float128) Float64)
(declare-fun f13 (Float128 Float64 Float128 Float128 Float128 Float64 Float32 Float64 Float32) Float128)
(declare-fun f14 (Float16 Float32 Float64 Float32) Float128)
(declare-fun f15 (Float128 Float32 Float16 Float16 Float64 Float128 Float64 Float32) Float16)
(declare-fun f16 (Float32 Float64 Float64) Float64)
(declare-fun f17 (Float16 Float64 Float64 Float32 Float32 Float128 Float128 Float32 Float128) Float32)
(declare-fun f18 (Float64 Float64 Float32 Float128 Float32 Float32) Float32)
(declare-fun f19 (Float32 Float64 Float16 Float64) Float128)
(declare-fun f20 (Float128 Float32 Float32 Float16 Float32 Float64) Float32)
(declare-fun f21 (Float64 Float64 Float32 Float16 Float128 Float16) Float128)
(declare-fun f22 (Float16 Float16 Float128) Float16)
(declare-fun f23 (Float16 Float64 Float128 Float128) Float32)
(declare-fun f24 (Float32 Float128 Float16) Float128)
(declare-fun f25 (Float128 Float128 Float64 Float128) Float128)
(declare-fun f26 (Float64 Float128 Float32 Float16 Float64 Float64 Float32 Float128 Float128) Float128)
(declare-fun f27 (Float16 Float64 Float64) Float128)
(declare-fun f28 (Float64 Float16 Float128) Float64)
(declare-fun f29 (Float16) Float32)
(declare-fun f30 (Float32 Float32 Float32 Float32 Float32 Float128 Float32 Float64 Float16) Float16)
(declare-fun f31 (Float32 Float128 Float128 Float32) Float16)
(declare-fun f32 (Float64) Float128)
(declare-fun f33 (Float64 Float64 Float64 Float16 Float128 Float128) Float64)
(declare-fun f34 (Float64 Float16 Float32 Float128 Float32 Float64 Float16 Float16 Float16) Float32)
(declare-fun f35 (Float64 Float128 Float64 Float128) Float16)
(declare-fun f36 (Float32 Float128) Float128)
(declare-fun f37 (Float32 Float64) Float128)
(declare-fun f38 (Float64 Float32 Float32 Float128 Float16 Float64 Float128 Float32 Float64 Float32) Float32)
(declare-fun f39 (Float16 Float16) Float32)
(declare-fun f40 (Float128 Float64 Float128 Float32 Float128 Float128 Float64 Float16) Float128)
(declare-fun f41 (Float64 Float16 Float128 Float16 Float32) Float32)
(declare-fun f42 (Float64 Float128 Float32 Float64 Float32 Float64 Float128 Float128) Float32)
(declare-fun f43 (Float128 Float16 Float32) Float64)
(declare-fun f44 (Float128 Float32 Float64 Float128 Float64 Float32 Float16) Float16)
(declare-fun f45 (Float16 Float64 Float32 Float32 Float32 Float128 Float128 Float16 Float32) Float128)
(declare-fun f46 (Float128 Float64) Float64)
(declare-fun f47 (Float128 Float32 Float16 Float16 Float128 Float64 Float32 Float64) Float32)
(declare-fun f48 (Float16 Float128 Float32 Float16 Float64 Float64 Float16) Float16)
(declare-fun f49 (Float16 Float16 Float128 Float32 Float32 Float64 Float16 Float32) Float128)
(declare-fun p0 (Float128 Float32 Float32) Bool)
(declare-fun p1 (Float128 Float32 Float16 Float16) Bool)
(declare-fun p2 (Float64 Float16 Float32 Float64 Float64 Float128 Float64 Float16) Bool)
(declare-fun p3 (Float128 Float16 Float16 Float128) Bool)
(declare-fun p4 (Float128 Float16 Float64 Float128 Float32 Float128 Float32) Bool)
(declare-fun p5 (Float32 Float64 Float32 Float16 Float64 Float128 Float128 Float64 Float128 Float64) Bool)
(declare-fun p6 (Float128 Float16 Float32 Float32 Float16 Float16 Float16 Float32) Bool)
(declare-fun p7 (Float16 Float32 Float64 Float16 Float128 Float64 Float16 Float32 Float32) Bool)
(declare-fun p8 (Float32) Bool)
(declare-fun p9 (Float32 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float64)
(declare-const ?float62 Float32)
(declare-const ?float63 Float128)
(declare-const ?float64 Float64)
(declare-const ?float65 Float16)
(declare-const ?float66 Float128)
(declare-const ?float67 Float16)
(declare-const ?float68 Float128)
(declare-const ?float69 Float32)
(declare-const ?float70 Float64)
(declare-const ?float71 Float128)
(declare-const ?float72 Float16)
(declare-const ?float73 Float16)
(declare-const ?float74 Float64)
(declare-const ?float75 Float128)
(declare-const ?float76 Float32)
(declare-const ?float77 Float16)
(declare-const ?float78 Float16)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b0 #b011111011000010 #b0110011001001001111001011011011000001011011111101100011010110100000111001000100010000000110001001110011111010011)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b0 #b11001111001 #b1010110011010101001111000101010100010111110101010101)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float90 Float128)
(assert (= ?float90 (fp #b1 #b010010000001001 #b1111110001111011101100001110001110000000100000110100100111101011110110011011101000110100010011011011101101001100)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b1 #b10000000111 #b0011111001001010100000111000111101100110011101101110)))
(declare-const ?float98 Float64)
(assert (= ?float98 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (fp.sqrt RTN ?float71)))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.min ?float69 ?float76)))
(declare-const ?float102 Float32)
(assert (= ?float102 (f18 ?float64 ((_ to_fp 11 53) RTZ ?float75) ?float101 ((_ to_fp 15 113) RTN ?float83) ((_ to_fp 8 24) RTP ?float99) ?float94)))
(declare-const ?float103 Float32)
(assert (= ?float103 (fp.sqrt RTP ?float101)))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.neg ?float92)))
(declare-const ?float105 Float128)
(assert (= ?float105 (fp.div RTZ ((_ to_fp 15 113) RTZ ?float78) ?float75)))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.div RTN ?float88 ?float60)))
(declare-const ?float107 Float32)
(assert (= ?float107 (f39 ((_ to_fp 5 11) RTZ ?float86) ((_ to_fp 5 11) RTP ?float89))))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.mul RTP ?float86 ?float62)))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.sub RNE ?float64 ((_ to_fp 11 53) RNE ?float78))))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.sqrt RTP ?float63)))
(declare-const ?float111 Float128)
(assert (= ?float111 (fp.max ((_ to_fp 15 113) RNE ?float107) ?float60)))
(declare-const ?float112 Float16)
(assert (= ?float112 (f3 ((_ to_fp 11 53) RTN ?float84) ((_ to_fp 8 24) RTP ?float84) ?float76)))
(declare-const ?float113 Float32)
(assert (= ?float113 (f42 ((_ to_fp 11 53) RTN ?float90) ?float111 ((_ to_fp 8 24) RTP ?float93) ((_ to_fp 11 53) RTP ?float78) ((_ to_fp 8 24) RNE ?float78) ((_ to_fp 11 53) RTN ?float102) ?float63 ?float82)))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.roundToIntegral RTZ ?float81)))
(declare-const ?float115 Float128)
(assert (= ?float115 (f8 ((_ to_fp 8 24) RTN ?float73) ((_ to_fp 8 24) RNE ?float105) ((_ to_fp 5 11) RTP ?float90) ?float104 ?float65 ((_ to_fp 11 53) RTZ ?float106) ?float107)))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.neg ?float93)))
(declare-const ?float117 Float32)
(assert (= ?float117 (f20 ((_ to_fp 15 113) RNE ?float107) ?float62 ((_ to_fp 8 24) RNE ?float64) ((_ to_fp 5 11) RTP ?float86) ?float62 ((_ to_fp 11 53) RTN ?float85))))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.min ?float84 ?float65)))
(declare-const ?float119 Float16)
(assert (= ?float119 (f31 ((_ to_fp 8 24) RTN ?float65) ((_ to_fp 15 113) RTP ?float86) ((_ to_fp 15 113) RTP ?float74) ((_ to_fp 8 24) RTZ ?float72))))
(declare-const ?float120 Float16)
(assert (= ?float120 (fp.min ?float118 ((_ to_fp 5 11) RTN ?float107))))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.mul RNE ((_ to_fp 5 11) RTN ?float83) ?float77)))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.neg ?float104)))
(declare-const ?float123 Float128)
(assert (= ?float123 (fp.max ((_ to_fp 15 113) RTN ?float72) ?float90)))
(declare-const ?float124 Float128)
(assert (= ?float124 (fp.mul RTZ ((_ to_fp 15 113) RTZ ?float86) ?float100)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.max ?float94 ?float91)))
(declare-const ?float126 Float16)
(assert (= ?float126 (fp.sub RTN ((_ to_fp 5 11) RNE ?float86) ?float96)))
(declare-const ?float127 Float32)
(assert (= ?float127 (f39 ((_ to_fp 5 11) RNE ?float95) ((_ to_fp 5 11) RTZ ?float99))))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.div RTZ ?float108 ?float103)))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.abs ?float69)))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.div RNE ((_ to_fp 5 11) RTN ?float108) ?float67)))
(declare-const ?float131 Float32)
(assert (= ?float131 (fp.neg ?float108)))
(declare-const ?float132 Float128)
(assert (= ?float132 (f14 ((_ to_fp 5 11) RTP ?float116) ((_ to_fp 8 24) RTZ ?float126) ((_ to_fp 11 53) RTP ?float105) ?float94)))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.abs ?float67)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.abs ?float111)))
(declare-const ?float135 Float128)
(assert (= ?float135 (f49 ?float121 ((_ to_fp 5 11) RTP ?float62) ((_ to_fp 15 113) RTP ?float95) ((_ to_fp 8 24) RTN ?float92) ((_ to_fp 8 24) RTZ ?float83) ((_ to_fp 11 53) RTN ?float123) ((_ to_fp 5 11) RTN ?float89) ((_ to_fp 8 24) RTP ?float109))))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.sqrt RTN ?float70)))
(declare-const ?float137 Float16)
(assert (= ?float137 (f11 ?float71 ((_ to_fp 8 24) RTP ?float121) ((_ to_fp 8 24) RTZ ?float96) ((_ to_fp 8 24) RTN ?float63) ((_ to_fp 5 11) RTZ ?float100) ((_ to_fp 15 113) RTP ?float93) ((_ to_fp 8 24) RTP ?float121) ((_ to_fp 8 24) RTP ?float134))))
(declare-const ?float138 Float32)
(assert (= ?float138 (f23 ((_ to_fp 5 11) RTZ ?float98) ((_ to_fp 11 53) RTZ ?float94) ?float66 ((_ to_fp 15 113) RTN ?float61))))
(declare-const ?float139 Float128)
(assert (= ?float139 (f26 ((_ to_fp 11 53) RTZ ?float124) ((_ to_fp 15 113) RTP ?float101) ((_ to_fp 8 24) RTZ ?float112) ((_ to_fp 5 11) RTP ?float68) ((_ to_fp 11 53) RNE ?float106) ((_ to_fp 11 53) RNE ?float80) ((_ to_fp 8 24) RTN ?float82) ?float123 ((_ to_fp 15 113) RTN ?float138))))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.max ?float102 ?float86)))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.div RTP ?float99 ((_ to_fp 11 53) RTZ ?float60))))
(declare-const ?float142 Float32)
(assert (= ?float142 (f18 ((_ to_fp 11 53) RNE ?float86) ?float64 ?float113 ((_ to_fp 15 113) RTZ ?float76) ((_ to_fp 8 24) RTZ ?float68) ?float89)))
(declare-const ?float143 Float16)
(assert (= ?float143 (fp.div RTN ((_ to_fp 5 11) RTZ ?float131) ?float120)))
(declare-const ?float144 Float16)
(assert (= ?float144 (f3 ?float109 ((_ to_fp 8 24) RTZ ?float130) ((_ to_fp 8 24) RTP ?float114))))
(declare-const ?float145 Float128)
(assert (= ?float145 (f9 ((_ to_fp 15 113) RTP ?float140) ((_ to_fp 8 24) RNE ?float122) ((_ to_fp 11 53) RTZ ?float85) ((_ to_fp 5 11) RTN ?float60))))
(declare-const ?float146 Float128)
(assert (= ?float146 (f37 ?float113 ((_ to_fp 11 53) RTZ ?float94))))
(declare-const ?float147 Float16)
(assert (= ?float147 (f31 ((_ to_fp 8 24) RTP ?float145) ?float124 ((_ to_fp 15 113) RTP ?float127) ((_ to_fp 8 24) RNE ?float114))))
(declare-const ?float148 Float32)
(assert (= ?float148 (fp.div RTN ?float79 ?float91)))
(declare-const ?float149 Float128)
(assert (= ?float149 (f49 ((_ to_fp 5 11) RNE ?float145) ((_ to_fp 5 11) RNE ?float86) ((_ to_fp 15 113) RTZ ?float130) ((_ to_fp 8 24) RNE ?float119) ((_ to_fp 8 24) RNE ?float61) ((_ to_fp 11 53) RTN ?float100) ?float65 ((_ to_fp 8 24) RTZ ?float72))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isSubnormal ?float80)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isPositive ?float140)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.leq ((_ to_fp 15 113) RTZ ?float95) ?float145)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.geq ?float93 ((_ to_fp 11 53) RTP ?float142))))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.eq ((_ to_fp 11 53) RTP ?float94) ?float61)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p2 ((_ to_fp 11 53) RNE ?float63) ((_ to_fp 5 11) RTP ?float102) ?float138 ((_ to_fp 11 53) RTP ?float114) ((_ to_fp 11 53) RNE ?float113) ((_ to_fp 15 113) RTN ?float137) ((_ to_fp 11 53) RTZ ?float117) ((_ to_fp 5 11) RTP ?float94))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.leq ((_ to_fp 5 11) RTZ ?float60) ?float144)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.geq ((_ to_fp 5 11) RNE ?float125) ?float144)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.geq ?float128 ((_ to_fp 8 24) RNE ?float65))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isInfinite ?float140)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.eq ?float89 ((_ to_fp 8 24) RNE ?float130))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (p5 ((_ to_fp 8 24) RTZ ?float110) ((_ to_fp 11 53) RTN ?float120) ((_ to_fp 8 24) RTP ?float81) ((_ to_fp 5 11) RTN ?float75) ((_ to_fp 11 53) RTN ?float72) ((_ to_fp 15 113) RNE ?float67) ?float110 ((_ to_fp 11 53) RTN ?float90) ?float71 ((_ to_fp 11 53) RTP ?float78))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (p1 ((_ to_fp 15 113) RNE ?float79) ((_ to_fp 8 24) RNE ?float83) ((_ to_fp 5 11) RTZ ?float117) ((_ to_fp 5 11) RNE ?float149))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isPositive ?float97)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.leq ?float137 ((_ to_fp 5 11) RNE ?float92))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isPositive ?float66)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p0 ?float123 ?float62 ?float127)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.eq ((_ to_fp 15 113) RNE ?float148) ?float66)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNormal ?float66)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isSubnormal ?float126)))
; FINAL ASSERT
(assert (and ?bool162 ?bool156 ?bool169))
(check-sat)


-- iteration 70 --
(declare-fun f0 (Float128 Float32 Float64) Float16)
(declare-fun f1 (Float128 Float64) Float32)
(declare-fun f2 (Float16 Float64 Float32) Float16)
(declare-fun f3 (Float32 Float16 Float64 Float32 Float16 Float128) Float64)
(declare-fun f4 (Float64 Float64) Float16)
(declare-fun f5 (Float64 Float128) Float32)
(declare-fun f6 (Float16 Float32 Float16 Float32 Float32) Float128)
(declare-fun f7 (Float16 Float64 Float128 Float16 Float64 Float16 Float128) Float128)
(declare-fun f8 (Float128 Float32 Float128 Float64) Float64)
(declare-fun f9 (Float16) Float64)
(declare-fun f10 (Float16 Float64 Float64 Float32 Float64 Float128) Float128)
(declare-fun f11 (Float16 Float128 Float128 Float16 Float32 Float128 Float16 Float64 Float64 Float32) Float128)
(declare-fun f12 (Float64) Float32)
(declare-fun f13 (Float32 Float32 Float64 Float32 Float128 Float64 Float32 Float16) Float64)
(declare-fun f14 (Float128 Float64 Float32 Float64 Float128 Float16) Float128)
(declare-fun f15 (Float128 Float32 Float16 Float16 Float64 Float128 Float32 Float64 Float16) Float128)
(declare-fun f16 (Float64) Float64)
(declare-fun f17 (Float16 Float64) Float16)
(declare-fun f18 (Float32 Float16 Float128 Float32) Float16)
(declare-fun f19 (Float128 Float128 Float32 Float16 Float128 Float16) Float128)
(declare-fun f20 (Float64 Float16 Float128 Float128 Float16 Float64 Float128 Float128 Float64) Float128)
(declare-fun f21 (Float64) Float64)
(declare-fun f22 (Float128 Float32 Float16 Float128 Float32 Float16 Float32 Float16 Float32) Float128)
(declare-fun f23 (Float32 Float128) Float16)
(declare-fun f24 (Float32) Float32)
(declare-fun f25 (Float64 Float32 Float64 Float16) Float32)
(declare-fun f26 (Float32 Float128 Float32) Float32)
(declare-fun f27 (Float64 Float64 Float32 Float128 Float16) Float128)
(declare-fun f28 (Float128 Float32) Float128)
(declare-fun f29 (Float64 Float128 Float128 Float32 Float32 Float16) Float16)
(declare-fun f30 (Float64 Float16) Float16)
(declare-fun f31 (Float32 Float128 Float64 Float16 Float64 Float32 Float32 Float16 Float64 Float64) Float32)
(declare-fun f32 (Float128 Float64 Float64 Float16 Float128 Float16 Float64) Float16)
(declare-fun f33 (Float128 Float32) Float128)
(declare-fun f34 (Float128 Float128 Float64 Float32 Float128 Float16 Float32 Float16 Float32 Float32) Float64)
(declare-fun f35 (Float32 Float128 Float128 Float128 Float64 Float32 Float128 Float32) Float16)
(declare-fun f36 (Float128 Float16 Float64 Float32 Float16) Float128)
(declare-fun f37 (Float64 Float64 Float32 Float128 Float64 Float64 Float64 Float32 Float64) Float16)
(declare-fun f38 (Float64 Float128 Float32 Float32 Float32) Float64)
(declare-fun f39 (Float64 Float16 Float16 Float32 Float16 Float16 Float64) Float64)
(declare-fun f40 (Float32 Float16 Float16 Float16) Float32)
(declare-fun f41 (Float64 Float32 Float32) Float16)
(declare-fun f42 (Float64 Float64 Float64 Float64 Float64 Float64 Float64 Float32 Float32 Float16) Float128)
(declare-fun f43 (Float32 Float64 Float128 Float32 Float64 Float128 Float64 Float32) Float128)
(declare-fun f44 (Float16 Float128 Float64 Float32 Float64 Float128 Float128 Float64 Float64) Float128)
(declare-fun f45 (Float16 Float64 Float32 Float64 Float16 Float64) Float32)
(declare-fun f46 (Float16 Float16 Float128 Float16 Float32 Float128 Float128 Float128 Float16) Float64)
(declare-fun f47 (Float64 Float32 Float128 Float128 Float128) Float64)
(declare-fun f48 (Float64 Float64 Float128 Float16 Float16 Float32 Float32) Float64)
(declare-fun f49 (Float32 Float64 Float16 Float64 Float16 Float32) Float32)
(declare-fun p0 (Float64 Float16) Bool)
(declare-fun p1 (Float128 Float32 Float16 Float128 Float64 Float128 Float16 Float16) Bool)
(declare-fun p2 (Float128 Float32 Float16 Float32 Float64 Float32) Bool)
(declare-fun p3 (Float16 Float16 Float64 Float128 Float128 Float64) Bool)
(declare-fun p4 (Float32 Float16 Float64) Bool)
(declare-fun p5 (Float64) Bool)
(declare-fun p6 (Float128 Float64 Float16) Bool)
(declare-fun p7 (Float64 Float16 Float128 Float16 Float128 Float32 Float16 Float128 Float128 Float32) Bool)
(declare-fun p8 (Float64 Float128 Float64 Float16 Float64 Float128 Float128) Bool)
(declare-fun p9 (Float64 Float32 Float16 Float64 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float64)
(declare-const ?float62 Float16)
(declare-const ?float63 Float64)
(declare-const ?float64 Float64)
(declare-const ?float65 Float128)
(declare-const ?float66 Float32)
(declare-const ?float67 Float16)
(declare-const ?float68 Float16)
(declare-const ?float69 Float16)
(declare-const ?float70 Float64)
(declare-const ?float71 Float32)
(declare-const ?float72 Float64)
(declare-const ?float73 Float32)
(declare-const ?float74 Float16)
(declare-const ?float75 Float64)
(declare-const ?float76 Float32)
(declare-const ?float77 Float32)
(declare-const ?float78 Float128)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b1 #b10111 #b1001001001)))
(declare-const ?float83 Float128)
(assert (= ?float83 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float84 Float128)
(assert (= ?float84 (fp #b1 #b011111101110111 #b0011010011100001011000011010111000001001011001100101101011100101001011001010001000001100000111011011011101100000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b0 #b00100 #b0010110111)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float98 Float64)
(assert (= ?float98 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b0 #b11110 #b1100101100)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.add RTN ?float76 ((_ to_fp 8 24) RNE ?float74))))
(declare-const ?float101 Float128)
(assert (= ?float101 (f19 ((_ to_fp 15 113) RTP ?float63) ((_ to_fp 15 113) RTN ?float74) ((_ to_fp 8 24) RTP ?float92) ((_ to_fp 5 11) RNE ?float65) ((_ to_fp 15 113) RTN ?float61) ((_ to_fp 5 11) RTN ?float70))))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.neg ?float83)))
(declare-const ?float103 Float16)
(assert (= ?float103 (f0 ((_ to_fp 15 113) RTN ?float99) ((_ to_fp 8 24) RNE ?float65) ((_ to_fp 11 53) RTZ ?float67))))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.add RTZ ((_ to_fp 15 113) RTN ?float81) ?float87)))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.div RTN ?float100 ((_ to_fp 8 24) RTP ?float80))))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.sqrt RTP ?float71)))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.sqrt RTZ ?float89)))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.mul RNE ((_ to_fp 11 53) RTN ?float106) ?float93)))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.mul RTZ ?float82 ((_ to_fp 5 11) RTP ?float65))))
(declare-const ?float110 Float32)
(assert (= ?float110 (f40 ?float97 ?float60 ((_ to_fp 5 11) RTZ ?float91) ?float67)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.min ?float109 ?float109)))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.div RTP ?float111 ?float111)))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.div RTN ((_ to_fp 8 24) RTZ ?float78) ?float90)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.abs ?float63)))
(declare-const ?float115 Float16)
(assert (= ?float115 (f18 ?float66 ((_ to_fp 5 11) RTZ ?float104) ((_ to_fp 15 113) RNE ?float68) ((_ to_fp 8 24) RTP ?float88))))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.mul RTP ?float64 ((_ to_fp 11 53) RTN ?float65))))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.mul RTZ ((_ to_fp 11 53) RTP ?float112) ?float116)))
(declare-const ?float118 Float64)
(assert (= ?float118 (fp.abs ?float72)))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.min ((_ to_fp 11 53) RTP ?float65) ?float118)))
(declare-const ?float120 Float32)
(assert (= ?float120 (f25 ((_ to_fp 11 53) RTP ?float79) ((_ to_fp 8 24) RNE ?float111) ((_ to_fp 11 53) RTZ ?float115) ?float99)))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.max ?float111 ((_ to_fp 5 11) RTZ ?float65))))
(declare-const ?float122 Float32)
(assert (= ?float122 (fp.neg ?float71)))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.max ((_ to_fp 8 24) RTN ?float87) ?float113)))
(declare-const ?float124 Float16)
(assert (= ?float124 (fp.neg ?float112)))
(declare-const ?float125 Float128)
(assert (= ?float125 (fp.roundToIntegral RNE ?float92)))
(declare-const ?float126 Float16)
(assert (= ?float126 (fp.neg ?float81)))
(declare-const ?float127 Float128)
(assert (= ?float127 (fp.add RTZ ?float91 ?float102)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.sub RNE ((_ to_fp 8 24) RTZ ?float115) ?float120)))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.mul RTP ((_ to_fp 8 24) RNE ?float98) ?float86)))
(declare-const ?float130 Float64)
(assert (= ?float130 (fp.roundToIntegral RTZ ?float94)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.sqrt RTN ?float64)))
(declare-const ?float132 Float16)
(assert (= ?float132 (f29 ((_ to_fp 11 53) RTZ ?float91) ((_ to_fp 15 113) RTN ?float69) ((_ to_fp 15 113) RNE ?float61) ((_ to_fp 8 24) RNE ?float115) ((_ to_fp 8 24) RTN ?float62) ((_ to_fp 5 11) RTP ?float91))))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.roundToIntegral RTZ ?float111)))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.max ?float81 ((_ to_fp 5 11) RTZ ?float94))))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.sub RNE ?float71 ?float110)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.roundToIntegral RNE ?float126)))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.sqrt RTP ?float95)))
(declare-const ?float138 Float32)
(assert (= ?float138 (fp.neg ?float100)))
(declare-const ?float139 Float32)
(assert (= ?float139 (f49 ((_ to_fp 8 24) RNE ?float94) ?float64 ?float82 ((_ to_fp 11 53) RNE ?float103) ((_ to_fp 5 11) RTP ?float135) ((_ to_fp 8 24) RNE ?float137))))
(declare-const ?float140 Float128)
(assert (= ?float140 (f7 ((_ to_fp 5 11) RNE ?float72) ((_ to_fp 11 53) RNE ?float83) ?float65 ((_ to_fp 5 11) RNE ?float92) ((_ to_fp 11 53) RNE ?float78) ((_ to_fp 5 11) RNE ?float118) ?float83)))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.max ((_ to_fp 5 11) RTZ ?float77) ?float124)))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.div RTZ ?float67 ((_ to_fp 5 11) RTZ ?float64))))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.roundToIntegral RTP ?float75)))
(declare-const ?float144 Float32)
(assert (= ?float144 (f25 ((_ to_fp 11 53) RTZ ?float139) ?float90 ((_ to_fp 11 53) RNE ?float125) ((_ to_fp 5 11) RTZ ?float88))))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.max ?float123 ?float96)))
(declare-const ?float146 Float64)
(assert (= ?float146 (f21 ?float70)))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.max ((_ to_fp 15 113) RTZ ?float121) ?float125)))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.sub RTN ?float126 ?float62)))
(declare-const ?float149 Float32)
(assert (= ?float149 (fp.neg ?float71)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.lt ?float127 ?float92)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isInfinite ?float117)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (p9 ((_ to_fp 11 53) RTP ?float104) ((_ to_fp 8 24) RTN ?float131) ?float136 ((_ to_fp 11 53) RTP ?float115) ((_ to_fp 5 11) RTZ ?float139))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (p2 ((_ to_fp 15 113) RTZ ?float129) ?float96 ?float132 ((_ to_fp 8 24) RNE ?float140) ((_ to_fp 11 53) RTZ ?float144) ((_ to_fp 8 24) RTZ ?float140))))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isZero ?float76)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isNaN ?float63)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNegative ?float115)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNaN ?float79)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.geq ?float135 ?float86)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isNormal ?float111)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isSubnormal ?float142)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNaN ?float142)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (p6 ((_ to_fp 15 113) RTZ ?float110) ((_ to_fp 11 53) RNE ?float103) ((_ to_fp 5 11) RTP ?float123))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isPositive ?float144)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.gt ?float67 ((_ to_fp 5 11) RNE ?float106))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.lt ((_ to_fp 11 53) RTP ?float84) ?float94)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p1 ((_ to_fp 15 113) RTZ ?float126) ?float149 ?float124 ((_ to_fp 15 113) RNE ?float109) ((_ to_fp 11 53) RTZ ?float90) ?float102 ?float109 ?float85)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.leq ?float132 ?float60)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isInfinite ?float72)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isSubnormal ?float124)))
; FINAL ASSERT
(assert (and ?bool152 ?bool162))
(check-sat)


-- iteration 71 --
(declare-fun f0 (Float32 Float16 Float32 Float128 Float64) Float64)
(declare-fun f1 (Float64 Float32 Float128 Float32 Float64 Float64 Float64 Float64 Float16) Float64)
(declare-fun f2 (Float64 Float64 Float16 Float32 Float16 Float32 Float16 Float64 Float16 Float128) Float16)
(declare-fun f3 (Float32 Float16 Float16 Float64 Float64) Float128)
(declare-fun f4 (Float128 Float32 Float64 Float64 Float128 Float128 Float128 Float64 Float32 Float16) Float16)
(declare-fun f5 (Float32 Float32 Float32 Float32 Float16 Float32 Float32) Float64)
(declare-fun f6 (Float16) Float64)
(declare-fun f7 (Float64 Float64) Float64)
(declare-fun f8 (Float32 Float32 Float128 Float128 Float32 Float32 Float128 Float64 Float16) Float16)
(declare-fun f9 (Float32 Float64 Float64 Float64 Float32 Float16) Float16)
(declare-fun f10 (Float64 Float32 Float64) Float32)
(declare-fun f11 (Float16 Float64) Float128)
(declare-fun f12 (Float16 Float32 Float128 Float16 Float32 Float16 Float64) Float64)
(declare-fun f13 (Float16 Float32) Float128)
(declare-fun f14 (Float16 Float16 Float64 Float64) Float16)
(declare-fun f15 (Float32 Float16 Float64 Float128 Float16 Float64) Float32)
(declare-fun f16 (Float64 Float16 Float64 Float64 Float64 Float32 Float32 Float32 Float128) Float32)
(declare-fun f17 (Float128 Float128 Float16 Float32 Float16 Float128) Float128)
(declare-fun f18 (Float128 Float64 Float128 Float128 Float16 Float64) Float32)
(declare-fun f19 (Float16 Float128 Float32 Float16 Float32 Float16 Float32) Float32)
(declare-fun f20 (Float64 Float64 Float64 Float32 Float128) Float64)
(declare-fun f21 (Float16 Float32 Float32 Float128 Float64 Float128 Float32 Float16 Float16) Float64)
(declare-fun f22 (Float16 Float16) Float32)
(declare-fun f23 (Float64 Float16) Float16)
(declare-fun f24 (Float16 Float128 Float128 Float32 Float32) Float16)
(declare-fun f25 (Float64 Float64 Float128 Float64 Float16 Float16 Float32) Float128)
(declare-fun f26 (Float16 Float64 Float32 Float16 Float128 Float32 Float32 Float128 Float64 Float64) Float128)
(declare-fun f27 (Float32 Float128 Float16 Float64 Float128) Float16)
(declare-fun f28 (Float16 Float64 Float64 Float32 Float64 Float16) Float16)
(declare-fun f29 (Float128 Float128 Float128) Float16)
(declare-fun f30 (Float64 Float32 Float128 Float32 Float64 Float16 Float16 Float16 Float32) Float64)
(declare-fun f31 (Float64 Float16 Float32 Float32 Float32 Float32 Float16 Float16 Float16) Float64)
(declare-fun f32 (Float64 Float128 Float16 Float32 Float32) Float64)
(declare-fun f33 (Float16 Float16 Float128 Float16 Float64) Float32)
(declare-fun f34 (Float64) Float16)
(declare-fun f35 (Float64 Float32 Float64 Float16 Float128 Float64 Float32 Float64) Float16)
(declare-fun f36 (Float32 Float64 Float32 Float16) Float32)
(declare-fun f37 (Float16) Float128)
(declare-fun f38 (Float64 Float128) Float64)
(declare-fun f39 (Float16 Float128 Float16 Float64 Float64) Float64)
(declare-fun f40 (Float32 Float32) Float32)
(declare-fun f41 (Float32 Float128 Float32 Float16 Float32 Float32 Float32) Float32)
(declare-fun f42 (Float16 Float128 Float16 Float128 Float128 Float16) Float32)
(declare-fun f43 (Float128 Float16 Float128 Float32 Float128 Float64 Float64 Float64 Float16 Float128) Float128)
(declare-fun f44 (Float32 Float128 Float128 Float32 Float32) Float64)
(declare-fun f45 (Float32) Float16)
(declare-fun f46 (Float64) Float128)
(declare-fun f47 (Float128 Float32) Float128)
(declare-fun f48 (Float32 Float128 Float128 Float128 Float32 Float16 Float16 Float64) Float64)
(declare-fun f49 (Float128) Float32)
(declare-fun p0 (Float16 Float32 Float128 Float16 Float32 Float128 Float16 Float128 Float128 Float64) Bool)
(declare-fun p1 (Float16 Float128 Float16) Bool)
(declare-fun p2 (Float128 Float16 Float32 Float16 Float64) Bool)
(declare-fun p3 (Float32) Bool)
(declare-fun p4 (Float32 Float128 Float32 Float16 Float64 Float128) Bool)
(declare-fun p5 (Float64 Float32 Float16 Float64 Float32 Float16 Float32 Float32) Bool)
(declare-fun p6 (Float128) Bool)
(declare-fun p7 (Float32 Float64 Float64 Float128 Float32 Float32) Bool)
(declare-fun p8 (Float64 Float128 Float16 Float16 Float16) Bool)
(declare-fun p9 (Float64 Float32 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float16)
(declare-const ?float62 Float32)
(declare-const ?float63 Float16)
(declare-const ?float64 Float32)
(declare-const ?float65 Float128)
(declare-const ?float66 Float32)
(declare-const ?float67 Float16)
(declare-const ?float68 Float32)
(declare-const ?float69 Float16)
(declare-const ?float70 Float32)
(declare-const ?float71 Float128)
(declare-const ?float72 Float16)
(declare-const ?float73 Float128)
(declare-const ?float74 Float64)
(declare-const ?float75 Float64)
(declare-const ?float76 Float64)
(declare-const ?float77 Float128)
(declare-const ?float78 Float128)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float83 Float128)
(assert (= ?float83 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float84 Float128)
(assert (= ?float84 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b0 #b01010 #b0011010000)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float90 Float128)
(assert (= ?float90 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b0 #b11110100001 #b0001010001110001010001000100000000001001011001101010)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b0 #b00100 #b1101001101)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b0 #b111101100000111 #b1000001010001001001110111110101111011010000111100001101011010010101100000100001010011100100011110011000010100100)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b0 #b00100 #b1010001111)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.roundToIntegral RTN ?float99)))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.abs ?float81)))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.div RTZ ?float98 ((_ to_fp 15 113) RTZ ?float63))))
(declare-const ?float103 Float128)
(assert (= ?float103 (fp.sub RTZ ?float73 ?float98)))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.div RNE ((_ to_fp 8 24) RTN ?float98) ?float66)))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.abs ?float93)))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.roundToIntegral RTN ?float71)))
(declare-const ?float107 Float16)
(assert (= ?float107 (f23 ((_ to_fp 11 53) RNE ?float81) ((_ to_fp 5 11) RTP ?float76))))
(declare-const ?float108 Float16)
(assert (= ?float108 (f28 ((_ to_fp 5 11) RTN ?float83) ((_ to_fp 11 53) RNE ?float99) ((_ to_fp 11 53) RNE ?float64) ((_ to_fp 8 24) RTP ?float78) ((_ to_fp 11 53) RTZ ?float98) ?float69)))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.add RNE ?float93 ?float87)))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.mul RNE ?float87 ((_ to_fp 5 11) RTZ ?float79))))
(declare-const ?float111 Float128)
(assert (= ?float111 (fp.neg ?float92)))
(declare-const ?float112 Float32)
(assert (= ?float112 (f16 ((_ to_fp 11 53) RTZ ?float84) ?float100 ((_ to_fp 11 53) RNE ?float81) ((_ to_fp 11 53) RTP ?float82) ((_ to_fp 11 53) RTP ?float64) ((_ to_fp 8 24) RTZ ?float99) ((_ to_fp 8 24) RTN ?float63) ((_ to_fp 8 24) RTP ?float100) ((_ to_fp 15 113) RNE ?float64))))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.div RTZ ?float64 ((_ to_fp 8 24) RTP ?float75))))
(declare-const ?float114 Float128)
(assert (= ?float114 (fp.min ?float73 ?float98)))
(declare-const ?float115 Float16)
(assert (= ?float115 (fp.mul RTN ?float61 ((_ to_fp 5 11) RTP ?float92))))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.sqrt RNE ?float75)))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.div RTN ((_ to_fp 15 113) RTP ?float93) ?float78)))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.roundToIntegral RNE ?float109)))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.min ((_ to_fp 5 11) RTN ?float90) ?float110)))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.add RTZ ((_ to_fp 15 113) RTP ?float79) ?float84)))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.min ?float119 ((_ to_fp 5 11) RTN ?float104))))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.neg ?float120)))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.roundToIntegral RTZ ?float91)))
(declare-const ?float124 Float128)
(assert (= ?float124 (fp.roundToIntegral RNE ?float114)))
(declare-const ?float125 Float128)
(assert (= ?float125 (fp.sqrt RNE ?float117)))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.mul RNE ?float103 ?float114)))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.sub RNE ?float119 ((_ to_fp 5 11) RNE ?float102))))
(declare-const ?float128 Float64)
(assert (= ?float128 (f20 ((_ to_fp 11 53) RTZ ?float63) ((_ to_fp 11 53) RTP ?float121) ((_ to_fp 11 53) RTZ ?float105) ?float68 ?float77)))
(declare-const ?float129 Float128)
(assert (= ?float129 (fp.div RTZ ?float94 ((_ to_fp 15 113) RTP ?float91))))
(declare-const ?float130 Float32)
(assert (= ?float130 (f16 ((_ to_fp 11 53) RTP ?float93) ((_ to_fp 5 11) RTZ ?float101) ((_ to_fp 11 53) RTZ ?float127) ((_ to_fp 11 53) RTZ ?float78) ((_ to_fp 11 53) RTN ?float105) ?float82 ((_ to_fp 8 24) RTN ?float103) ((_ to_fp 8 24) RNE ?float123) ?float94)))
(declare-const ?float131 Float128)
(assert (= ?float131 (fp.div RTZ ?float94 ((_ to_fp 15 113) RTZ ?float61))))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.div RTZ ?float99 ((_ to_fp 5 11) RTP ?float126))))
(declare-const ?float133 Float128)
(assert (= ?float133 (fp.sub RNE ((_ to_fp 15 113) RTZ ?float79) ?float71)))
(declare-const ?float134 Float32)
(assert (= ?float134 (f33 ?float105 ?float69 ((_ to_fp 15 113) RTN ?float79) ?float61 ((_ to_fp 11 53) RTZ ?float115))))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.sqrt RTP ?float61)))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.mul RTZ ((_ to_fp 15 113) RNE ?float74) ?float103)))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.min ?float123 ((_ to_fp 11 53) RTN ?float97))))
(declare-const ?float138 Float64)
(assert (= ?float138 (f7 ((_ to_fp 11 53) RTZ ?float99) ((_ to_fp 11 53) RTP ?float126))))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.sub RTP ?float129 ((_ to_fp 15 113) RNE ?float119))))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.min ((_ to_fp 5 11) RTZ ?float117) ?float89)))
(declare-const ?float141 Float64)
(assert (= ?float141 (f1 ((_ to_fp 11 53) RTZ ?float131) ((_ to_fp 8 24) RNE ?float123) ?float117 ((_ to_fp 8 24) RNE ?float109) ((_ to_fp 11 53) RTN ?float139) ?float123 ?float75 ((_ to_fp 11 53) RTN ?float63) ((_ to_fp 5 11) RNE ?float130))))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.min ((_ to_fp 5 11) RTZ ?float96) ?float99)))
(declare-const ?float143 Float128)
(assert (= ?float143 (fp.sub RNE ?float124 ?float124)))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.div RTN ((_ to_fp 5 11) RNE ?float66) ?float109)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.div RTP ?float81 ((_ to_fp 8 24) RTZ ?float114))))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.neg ?float83)))
(declare-const ?float147 Float64)
(assert (= ?float147 (fp.max ((_ to_fp 11 53) RNE ?float84) ?float116)))
(declare-const ?float148 Float128)
(assert (= ?float148 (fp.roundToIntegral RTZ ?float139)))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.min ?float133 ((_ to_fp 15 113) RTP ?float64))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isZero ?float127)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNormal ?float132)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.leq ?float82 ?float68)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isSubnormal ?float74)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isInfinite ?float144)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isInfinite ?float112)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (p4 ((_ to_fp 8 24) RNE ?float108) ?float139 ((_ to_fp 8 24) RNE ?float126) ((_ to_fp 5 11) RTZ ?float76) ((_ to_fp 11 53) RTP ?float77) ((_ to_fp 15 113) RTN ?float134))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isPositive ?float125)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.geq ((_ to_fp 15 113) RTN ?float74) ?float136)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p1 ?float140 ((_ to_fp 15 113) RTN ?float60) ?float110)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p6 ((_ to_fp 15 113) RNE ?float137))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNegative ?float106)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.leq ?float129 ?float136)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.leq ?float133 ((_ to_fp 15 113) RNE ?float99))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isNegative ?float139)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isNormal ?float62)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p7 ?float101 ((_ to_fp 11 53) RNE ?float121) ((_ to_fp 11 53) RNE ?float97) ((_ to_fp 15 113) RTP ?float142) ((_ to_fp 8 24) RTN ?float119) ((_ to_fp 8 24) RNE ?float71))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNegative ?float79)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNegative ?float110)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.leq ?float138 ?float147)))
; FINAL ASSERT
(assert (and (and (and (and ?bool154 (and (and (and ?bool157 ?bool166 ?bool160)) ?bool163 (and (or ?bool158 ?bool167 ?bool151))) (and ?bool150))) ?bool158 (or ?bool165)) (and ?bool156) (and ?bool167 (or (or ?bool167 (and ?bool162 ?bool164) (or (and ?bool150))) ?bool150))))
(check-sat)


-- iteration 72 --
(declare-fun f0 (Float32 Float16 Float64 Float16 Float16 Float64 Float16) Float32)
(declare-fun f1 (Float64 Float64 Float32 Float128 Float64 Float64 Float64 Float128 Float128) Float32)
(declare-fun f2 (Float16 Float32 Float32) Float128)
(declare-fun f3 (Float128 Float16 Float64 Float128 Float128 Float32 Float64) Float32)
(declare-fun f4 (Float16 Float32 Float64 Float32 Float64 Float64 Float16 Float64) Float64)
(declare-fun f5 (Float16 Float128 Float16 Float16 Float128 Float32 Float32 Float128 Float128) Float16)
(declare-fun f6 (Float16 Float128 Float32 Float128 Float16) Float16)
(declare-fun f7 (Float16 Float32 Float64 Float128 Float32 Float128 Float16 Float64 Float128) Float128)
(declare-fun f8 (Float16) Float16)
(declare-fun f9 (Float128 Float16 Float16 Float32 Float128 Float128 Float16 Float32 Float128) Float16)
(declare-fun f10 (Float64 Float16 Float64 Float128 Float16 Float16 Float128 Float64) Float128)
(declare-fun f11 (Float64 Float128 Float32 Float64 Float64 Float128) Float128)
(declare-fun f12 (Float32) Float16)
(declare-fun f13 (Float64) Float64)
(declare-fun f14 (Float16) Float16)
(declare-fun f15 (Float16 Float16 Float32 Float128 Float128) Float32)
(declare-fun f16 (Float128 Float64 Float128 Float128 Float64) Float64)
(declare-fun f17 (Float32 Float64 Float32 Float128 Float64 Float64) Float64)
(declare-fun f18 (Float16 Float64 Float128 Float16 Float32 Float64 Float16 Float128 Float16 Float32) Float64)
(declare-fun f19 (Float128 Float32 Float16 Float128 Float16 Float16 Float32 Float32 Float128) Float64)
(declare-fun f20 (Float16 Float16) Float64)
(declare-fun f21 (Float16 Float128) Float128)
(declare-fun f22 (Float128 Float64 Float32 Float128 Float16 Float32) Float64)
(declare-fun f23 (Float32 Float128) Float16)
(declare-fun f24 (Float32 Float32 Float32) Float128)
(declare-fun f25 (Float64 Float128 Float32 Float128 Float128) Float128)
(declare-fun f26 (Float16 Float128 Float128 Float64) Float128)
(declare-fun f27 (Float128 Float128 Float32 Float16 Float64 Float128 Float32) Float128)
(declare-fun f28 (Float16 Float64 Float16 Float32 Float32) Float32)
(declare-fun f29 (Float32 Float64 Float32 Float64 Float64 Float64 Float128) Float16)
(declare-fun f30 (Float32 Float128 Float32 Float64 Float16 Float64 Float16) Float32)
(declare-fun f31 (Float16 Float128 Float32 Float128 Float64 Float16 Float64 Float16 Float32) Float32)
(declare-fun f32 (Float128 Float64 Float16 Float16 Float32 Float32 Float128 Float64) Float128)
(declare-fun f33 (Float128 Float128 Float128 Float64 Float128 Float32 Float32 Float64 Float64 Float64) Float64)
(declare-fun f34 (Float16 Float32 Float32 Float32 Float32 Float16 Float32 Float64 Float16) Float128)
(declare-fun f35 (Float128) Float32)
(declare-fun f36 (Float64 Float16 Float128 Float16 Float64 Float64 Float16 Float64 Float16 Float16) Float128)
(declare-fun f37 (Float64 Float32) Float16)
(declare-fun f38 (Float64) Float16)
(declare-fun f39 (Float64 Float64 Float64 Float32 Float64 Float128 Float128 Float32 Float32) Float128)
(declare-fun f40 (Float128 Float16) Float16)
(declare-fun f41 (Float16 Float32 Float32 Float32 Float16 Float16) Float32)
(declare-fun f42 (Float32 Float128 Float64 Float64 Float128) Float32)
(declare-fun f43 (Float64 Float64 Float32 Float64 Float32 Float16 Float32 Float128 Float16) Float64)
(declare-fun f44 (Float64) Float128)
(declare-fun f45 (Float32 Float16 Float128 Float128 Float16 Float16 Float128) Float128)
(declare-fun f46 (Float32 Float16 Float32) Float32)
(declare-fun f47 (Float32 Float128 Float128 Float64) Float128)
(declare-fun f48 (Float16 Float32) Float16)
(declare-fun f49 (Float16 Float16 Float32 Float32 Float64 Float128 Float128 Float128 Float16 Float32) Float64)
(declare-fun p0 (Float64 Float128 Float64) Bool)
(declare-fun p1 (Float128 Float16 Float16 Float64 Float16) Bool)
(declare-fun p2 (Float32 Float32 Float64 Float128 Float128 Float32) Bool)
(declare-fun p3 (Float128 Float32 Float64) Bool)
(declare-fun p4 (Float64 Float16 Float16) Bool)
(declare-fun p5 (Float16 Float32 Float32 Float16 Float16 Float32 Float64 Float16 Float32 Float32) Bool)
(declare-fun p6 (Float32 Float32 Float128 Float128) Bool)
(declare-fun p7 (Float128 Float16 Float16 Float128 Float16 Float16 Float32) Bool)
(declare-fun p8 (Float128 Float128 Float32 Float32) Bool)
(declare-fun p9 (Float16 Float16 Float64 Float128 Float32 Float128 Float64 Float64 Float16 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float64)
(declare-const ?float62 Float128)
(declare-const ?float63 Float32)
(declare-const ?float64 Float64)
(declare-const ?float65 Float16)
(declare-const ?float66 Float16)
(declare-const ?float67 Float32)
(declare-const ?float68 Float16)
(declare-const ?float69 Float64)
(declare-const ?float70 Float32)
(declare-const ?float71 Float16)
(declare-const ?float72 Float32)
(declare-const ?float73 Float16)
(declare-const ?float74 Float16)
(declare-const ?float75 Float16)
(declare-const ?float76 Float128)
(declare-const ?float77 Float64)
(declare-const ?float78 Float32)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b0 #b00100111 #b10010000001011010001011)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b0 #b11110 #b1010111101)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b1 #b10110111 #b10101111001111111001111)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b0 #b00010101010 #b1001000010101111110011111000101001000110101111101000)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b1 #b00101 #b0011110101)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b0 #b01110 #b1111101001)))
(declare-const ?float90 Float128)
(assert (= ?float90 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b1 #b00000000 #b11010001000111001110111)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b0 #b111010100001100 #b0001111101100100100001110100011111010101001111111001011010011100100000010101001000000100001010001001011111111110)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.sub RTZ ?float73 ((_ to_fp 5 11) RTN ?float62))))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.min ((_ to_fp 5 11) RTZ ?float88) ?float100)))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.abs ?float68)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.sub RNE ((_ to_fp 5 11) RTN ?float61) ?float73)))
(declare-const ?float104 Float16)
(assert (= ?float104 (f37 ((_ to_fp 11 53) RTP ?float63) ((_ to_fp 8 24) RNE ?float64))))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.sub RNE ?float79 ?float63)))
(declare-const ?float106 Float16)
(assert (= ?float106 (fp.neg ?float68)))
(declare-const ?float107 Float128)
(assert (= ?float107 (fp.add RTP ?float60 ((_ to_fp 15 113) RTP ?float89))))
(declare-const ?float108 Float16)
(assert (= ?float108 (f5 ((_ to_fp 5 11) RNE ?float105) ((_ to_fp 15 113) RNE ?float104) ?float74 ((_ to_fp 5 11) RTN ?float92) ((_ to_fp 15 113) RTN ?float71) ((_ to_fp 8 24) RTN ?float84) ((_ to_fp 8 24) RTZ ?float75) ((_ to_fp 15 113) RTP ?float72) ((_ to_fp 15 113) RTN ?float89))))
(declare-const ?float109 Float64)
(assert (= ?float109 (f18 ((_ to_fp 5 11) RTP ?float95) ((_ to_fp 11 53) RTZ ?float70) ((_ to_fp 15 113) RTZ ?float98) ?float89 ((_ to_fp 8 24) RNE ?float107) ((_ to_fp 11 53) RTP ?float106) ((_ to_fp 5 11) RTN ?float105) ?float90 ?float102 ((_ to_fp 8 24) RTP ?float62))))
(declare-const ?float110 Float32)
(assert (= ?float110 (fp.neg ?float63)))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.max ?float67 ((_ to_fp 8 24) RTP ?float60))))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.min ?float91 ?float61)))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.div RTN ?float67 ((_ to_fp 8 24) RNE ?float96))))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.div RTP ?float64 ?float99)))
(declare-const ?float115 Float64)
(assert (= ?float115 (f19 ((_ to_fp 15 113) RTZ ?float85) ((_ to_fp 8 24) RNE ?float69) ((_ to_fp 5 11) RTP ?float67) ((_ to_fp 15 113) RTN ?float100) ((_ to_fp 5 11) RTP ?float80) ((_ to_fp 5 11) RNE ?float91) ((_ to_fp 8 24) RTN ?float101) ((_ to_fp 8 24) RTP ?float97) ((_ to_fp 15 113) RTP ?float82))))
(declare-const ?float116 Float128)
(assert (= ?float116 (fp.roundToIntegral RTP ?float76)))
(declare-const ?float117 Float32)
(assert (= ?float117 (fp.max ?float93 ((_ to_fp 8 24) RTP ?float61))))
(declare-const ?float118 Float16)
(assert (= ?float118 (f40 ((_ to_fp 15 113) RTP ?float115) ((_ to_fp 5 11) RTZ ?float62))))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.sqrt RTZ ?float82)))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.neg ?float62)))
(declare-const ?float121 Float128)
(assert (= ?float121 (f11 ?float115 ?float90 ?float79 ?float64 ((_ to_fp 11 53) RTZ ?float82) ?float76)))
(declare-const ?float122 Float32)
(assert (= ?float122 (f35 ?float62)))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.min ?float101 ((_ to_fp 5 11) RTZ ?float72))))
(declare-const ?float124 Float16)
(assert (= ?float124 (fp.add RTN ?float118 ((_ to_fp 5 11) RTP ?float82))))
(declare-const ?float125 Float32)
(assert (= ?float125 (f46 ((_ to_fp 8 24) RTP ?float73) ((_ to_fp 5 11) RNE ?float119) ((_ to_fp 8 24) RNE ?float99))))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.neg ?float98)))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.roundToIntegral RTZ ?float82)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.div RTN ?float80 ?float111)))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.min ?float69 ?float69)))
(declare-const ?float130 Float64)
(assert (= ?float130 (fp.min ?float64 ?float64)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.div RTN ?float129 ((_ to_fp 11 53) RNE ?float67))))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.neg ?float124)))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.sub RTN ?float94 ?float75)))
(declare-const ?float134 Float64)
(assert (= ?float134 (fp.abs ?float83)))
(declare-const ?float135 Float64)
(assert (= ?float135 (f19 ((_ to_fp 15 113) RTN ?float74) ((_ to_fp 8 24) RTP ?float62) ((_ to_fp 5 11) RTP ?float125) ((_ to_fp 15 113) RTZ ?float111) ?float81 ((_ to_fp 5 11) RNE ?float96) ?float125 ?float63 ((_ to_fp 15 113) RTP ?float68))))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.neg ?float60)))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.roundToIntegral RNE ?float134)))
(declare-const ?float138 Float32)
(assert (= ?float138 (fp.mul RTN ((_ to_fp 8 24) RTN ?float116) ?float79)))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.add RTZ ((_ to_fp 5 11) RNE ?float137) ?float102)))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.div RTN ?float104 ?float100)))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.min ?float109 ((_ to_fp 11 53) RNE ?float108))))
(declare-const ?float142 Float128)
(assert (= ?float142 (f10 ((_ to_fp 11 53) RTZ ?float79) ?float89 ?float61 ((_ to_fp 15 113) RNE ?float115) ?float102 ?float139 ((_ to_fp 15 113) RNE ?float140) ((_ to_fp 11 53) RTZ ?float63))))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.roundToIntegral RTN ?float134)))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.max ((_ to_fp 5 11) RTN ?float119) ?float71)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.div RTN ((_ to_fp 8 24) RTP ?float81) ?float92)))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.abs ?float93)))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.max ((_ to_fp 8 24) RNE ?float96) ?float95)))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.roundToIntegral RTP ?float99)))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.sqrt RNE ?float124)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.leq ((_ to_fp 11 53) RTN ?float74) ?float112)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNaN ?float75)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isZero ?float100)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.leq ((_ to_fp 11 53) RTP ?float62) ?float141)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p3 ((_ to_fp 15 113) RTZ ?float64) ((_ to_fp 8 24) RTZ ?float94) ((_ to_fp 11 53) RTN ?float139))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isSubnormal ?float127)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.leq ((_ to_fp 15 113) RTN ?float112) ?float116)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p1 ((_ to_fp 15 113) RTZ ?float149) ((_ to_fp 5 11) RTZ ?float77) ((_ to_fp 5 11) RTP ?float110) ((_ to_fp 11 53) RNE ?float85) ((_ to_fp 5 11) RTN ?float67))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isPositive ?float95)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.gt ((_ to_fp 5 11) RNE ?float63) ?float87)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.gt ((_ to_fp 15 113) RTN ?float110) ?float96)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.leq ?float79 ?float122)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNormal ?float131)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.eq ((_ to_fp 8 24) RNE ?float64) ?float125)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.eq ?float112 ((_ to_fp 11 53) RTN ?float105))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.leq ?float60 ((_ to_fp 15 113) RNE ?float66))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.geq ?float118 ?float139)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.eq ((_ to_fp 11 53) RTN ?float147) ?float130)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.gt ?float100 ?float84)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNegative ?float143)))
; FINAL ASSERT
(assert (or (and (or (and ?bool165 (and ?bool151 (or ?bool152))) ?bool150 ?bool154) ?bool157 ?bool156) ?bool159))
(check-sat)


-- iteration 73 --
(declare-fun f0 (Float128 Float32 Float16 Float128 Float128 Float32 Float128) Float32)
(declare-fun f1 (Float128 Float128) Float32)
(declare-fun f2 (Float64 Float32 Float16 Float128) Float64)
(declare-fun f3 (Float128 Float64 Float128) Float64)
(declare-fun f4 (Float64 Float16 Float64 Float64 Float32 Float64) Float32)
(declare-fun f5 (Float16 Float16) Float16)
(declare-fun f6 (Float64) Float64)
(declare-fun f7 (Float16 Float16 Float16 Float16 Float64 Float128) Float32)
(declare-fun f8 (Float32) Float64)
(declare-fun f9 (Float16 Float32 Float64 Float128) Float128)
(declare-fun f10 (Float16 Float16) Float128)
(declare-fun f11 (Float32) Float64)
(declare-fun f12 (Float16 Float64 Float16 Float128) Float64)
(declare-fun f13 (Float128 Float128 Float64 Float16 Float64 Float64 Float128 Float64) Float16)
(declare-fun f14 (Float16 Float16 Float128 Float32 Float128 Float16 Float16 Float64) Float64)
(declare-fun f15 (Float16 Float64 Float32 Float32 Float32 Float64 Float16 Float64) Float32)
(declare-fun f16 (Float32 Float128) Float64)
(declare-fun f17 (Float16) Float128)
(declare-fun f18 (Float16 Float128 Float128 Float32 Float64 Float32 Float32 Float32 Float16 Float32) Float16)
(declare-fun f19 (Float64 Float16 Float128 Float16 Float128 Float128) Float64)
(declare-fun f20 (Float32 Float64 Float32 Float32 Float128) Float128)
(declare-fun f21 (Float32) Float32)
(declare-fun f22 (Float128 Float16 Float64 Float64 Float64) Float64)
(declare-fun f23 (Float32 Float64 Float128 Float64 Float64 Float64 Float32 Float64 Float32 Float16) Float32)
(declare-fun f24 (Float16 Float128 Float16 Float64 Float32 Float128 Float32 Float64 Float64 Float32) Float64)
(declare-fun f25 (Float16 Float128 Float128 Float16 Float16 Float64 Float32 Float16) Float32)
(declare-fun f26 (Float64) Float16)
(declare-fun f27 (Float64) Float128)
(declare-fun f28 (Float64 Float64 Float32) Float16)
(declare-fun f29 (Float64) Float32)
(declare-fun f30 (Float128 Float64 Float32 Float32 Float32 Float64 Float64) Float32)
(declare-fun f31 (Float16 Float128 Float32 Float128) Float64)
(declare-fun f32 (Float16 Float16 Float32 Float128 Float16 Float128 Float16 Float16 Float128) Float128)
(declare-fun f33 (Float16 Float16 Float32 Float32 Float32 Float32 Float16 Float32 Float64 Float16) Float16)
(declare-fun f34 (Float128 Float64 Float128 Float16) Float32)
(declare-fun f35 (Float16 Float128 Float16 Float64 Float64 Float128 Float32 Float128) Float16)
(declare-fun f36 (Float32) Float128)
(declare-fun f37 (Float64 Float128 Float128 Float16 Float32 Float32 Float64) Float128)
(declare-fun f38 (Float128 Float32 Float32 Float128 Float64 Float128 Float16 Float16 Float16 Float64) Float128)
(declare-fun f39 (Float128 Float64 Float16 Float32 Float32 Float64 Float32 Float64 Float64 Float16) Float64)
(declare-fun f40 (Float32 Float128 Float64 Float32 Float32 Float128) Float16)
(declare-fun f41 (Float64) Float32)
(declare-fun f42 (Float32 Float128 Float16) Float16)
(declare-fun f43 (Float16 Float64 Float16 Float32 Float128) Float32)
(declare-fun f44 (Float32 Float16 Float64 Float64 Float128 Float16 Float64 Float128 Float32 Float64) Float16)
(declare-fun f45 (Float128) Float128)
(declare-fun f46 (Float128 Float128 Float128 Float128 Float16 Float128 Float64) Float16)
(declare-fun f47 (Float16 Float16 Float128 Float128 Float32 Float64 Float128 Float32 Float16 Float128) Float16)
(declare-fun f48 (Float64 Float64 Float128 Float64 Float64 Float32 Float32 Float64 Float16 Float128) Float64)
(declare-fun f49 (Float32) Float32)
(declare-fun p0 (Float64 Float128 Float16 Float16 Float16 Float64) Bool)
(declare-fun p1 (Float128 Float64) Bool)
(declare-fun p2 (Float32 Float16 Float16 Float128 Float32) Bool)
(declare-fun p3 (Float32) Bool)
(declare-fun p4 (Float128 Float16 Float128 Float32 Float64) Bool)
(declare-fun p5 (Float16 Float16 Float16 Float64 Float32 Float16 Float128 Float32 Float16 Float64) Bool)
(declare-fun p6 (Float32 Float64 Float128 Float128 Float16 Float32 Float64 Float128 Float64 Float32) Bool)
(declare-fun p7 (Float32 Float64 Float16 Float32 Float16 Float128 Float16 Float32) Bool)
(declare-fun p8 (Float32 Float128 Float16 Float16 Float64 Float128 Float16 Float64 Float32) Bool)
(declare-fun p9 (Float128 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float16)
(declare-const ?float62 Float16)
(declare-const ?float63 Float32)
(declare-const ?float64 Float16)
(declare-const ?float65 Float16)
(declare-const ?float66 Float32)
(declare-const ?float67 Float64)
(declare-const ?float68 Float64)
(declare-const ?float69 Float128)
(declare-const ?float70 Float32)
(declare-const ?float71 Float32)
(declare-const ?float72 Float32)
(declare-const ?float73 Float64)
(declare-const ?float74 Float128)
(declare-const ?float75 Float32)
(declare-const ?float76 Float32)
(declare-const ?float77 Float16)
(declare-const ?float78 Float32)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b0 #b11011010101 #b1111101010010110000000101011111100011000100110011111)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b1 #b00001 #b0000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (fp.add RTZ ((_ to_fp 11 53) RTN ?float75) ?float88)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.sqrt RNE ?float95)))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.sqrt RTN ?float101)))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.min ?float86 ?float100)))
(declare-const ?float104 Float16)
(assert (= ?float104 (f26 ((_ to_fp 11 53) RTZ ?float78))))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.div RTN ((_ to_fp 11 53) RTZ ?float96) ?float83)))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.neg ?float70)))
(declare-const ?float107 Float32)
(assert (= ?float107 (f34 ((_ to_fp 15 113) RNE ?float86) ((_ to_fp 11 53) RNE ?float99) ((_ to_fp 15 113) RTP ?float68) ((_ to_fp 5 11) RTN ?float88))))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.add RNE ?float106 ((_ to_fp 8 24) RTN ?float67))))
(declare-const ?float109 Float64)
(assert (= ?float109 (f3 ((_ to_fp 15 113) RNE ?float88) ((_ to_fp 11 53) RNE ?float77) ((_ to_fp 15 113) RTN ?float101))))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.sub RTZ ((_ to_fp 5 11) RTZ ?float105) ?float61)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.abs ?float62)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.add RTN ((_ to_fp 11 53) RNE ?float71) ?float82)))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.div RTZ ((_ to_fp 8 24) RTN ?float98) ?float72)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.min ?float84 ((_ to_fp 11 53) RNE ?float90))))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.min ?float71 ?float107)))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.min ?float98 ?float98)))
(declare-const ?float117 Float32)
(assert (= ?float117 (fp.sub RTN ?float66 ?float115)))
(declare-const ?float118 Float64)
(assert (= ?float118 (fp.max ?float67 ((_ to_fp 11 53) RNE ?float92))))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.add RTN ?float83 ?float83)))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.roundToIntegral RNE ?float93)))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.abs ?float91)))
(declare-const ?float122 Float32)
(assert (= ?float122 (fp.abs ?float71)))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.sqrt RTP ?float85)))
(declare-const ?float124 Float16)
(assert (= ?float124 (fp.sub RNE ?float64 ?float65)))
(declare-const ?float125 Float64)
(assert (= ?float125 (f31 ((_ to_fp 5 11) RTP ?float108) ?float79 ((_ to_fp 8 24) RNE ?float101) ((_ to_fp 15 113) RNE ?float77))))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.sub RTZ ?float94 ((_ to_fp 15 113) RTZ ?float60))))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.sqrt RTZ ?float62)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.sqrt RTZ ?float76)))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.min ((_ to_fp 5 11) RNE ?float60) ?float62)))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.sub RTZ ?float120 ?float94)))
(declare-const ?float131 Float32)
(assert (= ?float131 (fp.roundToIntegral RTZ ?float70)))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.add RTP ((_ to_fp 11 53) RTN ?float122) ?float103)))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.max ?float86 ((_ to_fp 11 53) RTZ ?float120))))
(declare-const ?float134 Float32)
(assert (= ?float134 (fp.sqrt RTZ ?float107)))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.roundToIntegral RTZ ?float66)))
(declare-const ?float136 Float32)
(assert (= ?float136 (fp.abs ?float134)))
(declare-const ?float137 Float16)
(assert (= ?float137 (f40 ((_ to_fp 8 24) RTZ ?float96) ?float126 ((_ to_fp 11 53) RTP ?float76) ?float70 ((_ to_fp 8 24) RTP ?float93) ((_ to_fp 15 113) RTZ ?float75))))
(declare-const ?float138 Float64)
(assert (= ?float138 (f31 ((_ to_fp 5 11) RNE ?float134) ((_ to_fp 15 113) RTN ?float82) ((_ to_fp 8 24) RTP ?float98) ((_ to_fp 15 113) RNE ?float63))))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.abs ?float125)))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.max ?float90 ((_ to_fp 5 11) RTP ?float75))))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.div RTZ ((_ to_fp 5 11) RNE ?float86) ?float129)))
(declare-const ?float142 Float32)
(assert (= ?float142 (f23 ((_ to_fp 8 24) RTN ?float69) ((_ to_fp 11 53) RTP ?float123) ((_ to_fp 15 113) RTN ?float88) ((_ to_fp 11 53) RNE ?float62) ((_ to_fp 11 53) RTN ?float78) ((_ to_fp 11 53) RTN ?float121) ((_ to_fp 8 24) RNE ?float88) ?float83 ((_ to_fp 8 24) RTP ?float123) ((_ to_fp 5 11) RTZ ?float128))))
(declare-const ?float143 Float64)
(assert (= ?float143 (f16 ((_ to_fp 8 24) RTP ?float80) ((_ to_fp 15 113) RTP ?float85))))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.add RNE ?float78 ?float136)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.abs ?float66)))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.div RTN ?float65 ?float104)))
(declare-const ?float147 Float64)
(assert (= ?float147 (fp.div RTN ?float81 ?float83)))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.roundToIntegral RTN ?float77)))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.add RTP ((_ to_fp 11 53) RNE ?float66) ?float125)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p0 ((_ to_fp 11 53) RTP ?float141) ((_ to_fp 15 113) RTZ ?float109) ((_ to_fp 5 11) RTZ ?float108) ((_ to_fp 5 11) RTP ?float69) ((_ to_fp 5 11) RTZ ?float112) ?float86)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p6 ((_ to_fp 8 24) RTP ?float67) ?float119 ((_ to_fp 15 113) RTZ ?float134) ((_ to_fp 15 113) RTP ?float76) ((_ to_fp 5 11) RNE ?float74) ((_ to_fp 8 24) RNE ?float127) ?float73 ((_ to_fp 15 113) RTZ ?float145) ((_ to_fp 11 53) RTZ ?float78) ((_ to_fp 8 24) RNE ?float92))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isPositive ?float81)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isPositive ?float94)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p5 ((_ to_fp 5 11) RNE ?float149) ((_ to_fp 5 11) RTN ?float131) ((_ to_fp 5 11) RTN ?float115) ((_ to_fp 11 53) RTN ?float90) ?float121 ((_ to_fp 5 11) RTP ?float107) ((_ to_fp 15 113) RTZ ?float106) ?float145 ?float102 ((_ to_fp 11 53) RTZ ?float78))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.lt ?float62 ((_ to_fp 5 11) RTP ?float142))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNormal ?float67)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.geq ?float145 ((_ to_fp 8 24) RTN ?float143))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p2 ?float91 ((_ to_fp 5 11) RTZ ?float63) ((_ to_fp 5 11) RTP ?float149) ((_ to_fp 15 113) RTZ ?float64) ?float134)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p4 ((_ to_fp 15 113) RTP ?float65) ((_ to_fp 5 11) RTP ?float81) ((_ to_fp 15 113) RTN ?float86) ((_ to_fp 8 24) RNE ?float93) ((_ to_fp 11 53) RTN ?float128))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNegative ?float142)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isZero ?float66)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.gt ?float90 ?float97)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isZero ?float78)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isInfinite ?float105)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isSubnormal ?float85)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.eq ?float129 ?float62)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isSubnormal ?float77)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.geq ?float123 ((_ to_fp 5 11) RNE ?float75))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNaN ?float117)))
; FINAL ASSERT
(assert (or ?bool162))
(check-sat)


-- iteration 74 --
(declare-fun f0 (Float16 Float16 Float32 Float32) Float32)
(declare-fun f1 (Float128) Float64)
(declare-fun f2 (Float128 Float64 Float16 Float64 Float32 Float128 Float16) Float64)
(declare-fun f3 (Float32 Float64 Float64 Float128 Float16) Float32)
(declare-fun f4 (Float128) Float32)
(declare-fun f5 (Float128 Float128 Float16 Float16 Float16) Float128)
(declare-fun f6 (Float16 Float16 Float128 Float16 Float32 Float16) Float16)
(declare-fun f7 (Float64 Float16 Float32 Float128 Float64 Float32) Float16)
(declare-fun f8 (Float32 Float32 Float64 Float16 Float16) Float16)
(declare-fun f9 (Float32 Float64 Float128 Float16 Float64 Float64 Float128 Float64 Float128 Float128) Float32)
(declare-fun f10 (Float16 Float64 Float32 Float32 Float32 Float32 Float16) Float128)
(declare-fun f11 (Float64 Float128 Float64 Float32) Float64)
(declare-fun f12 (Float16 Float32 Float64 Float64 Float16 Float32 Float64 Float32 Float64 Float64) Float16)
(declare-fun f13 (Float32 Float64 Float32 Float32 Float64 Float32 Float128) Float64)
(declare-fun f14 (Float128 Float64) Float128)
(declare-fun f15 (Float128 Float32 Float128) Float64)
(declare-fun f16 (Float64) Float64)
(declare-fun f17 (Float128 Float64) Float128)
(declare-fun f18 (Float64 Float64 Float128 Float128 Float64 Float32) Float16)
(declare-fun f19 (Float16) Float16)
(declare-fun f20 (Float128 Float32 Float64 Float64 Float16 Float64 Float128 Float16 Float16 Float16) Float128)
(declare-fun f21 (Float64) Float16)
(declare-fun f22 (Float128 Float32 Float128 Float128 Float32 Float64 Float32) Float128)
(declare-fun f23 (Float32 Float128 Float128 Float64) Float64)
(declare-fun f24 (Float64 Float32 Float16 Float128 Float16 Float32 Float128 Float64) Float16)
(declare-fun f25 (Float16 Float16 Float128 Float16 Float16 Float32) Float32)
(declare-fun f26 (Float128) Float64)
(declare-fun f27 (Float32 Float128 Float16 Float128 Float64 Float32 Float32 Float128 Float128 Float16) Float32)
(declare-fun f28 (Float32 Float64 Float128 Float32 Float16 Float16 Float32 Float128) Float16)
(declare-fun f29 (Float32 Float128 Float16 Float64 Float128 Float32 Float64 Float128 Float16) Float128)
(declare-fun f30 (Float32 Float32 Float32 Float64 Float32 Float128 Float128 Float64 Float128) Float128)
(declare-fun f31 (Float16 Float32 Float32 Float16 Float16 Float128 Float128 Float128 Float64 Float16) Float32)
(declare-fun f32 (Float64 Float16 Float16) Float64)
(declare-fun f33 (Float128 Float64 Float32 Float128 Float16) Float64)
(declare-fun f34 (Float128 Float32 Float128) Float32)
(declare-fun f35 (Float16 Float128 Float128) Float16)
(declare-fun f36 (Float64 Float64 Float32 Float128) Float32)
(declare-fun f37 (Float128 Float16 Float32 Float128 Float16 Float64 Float16 Float16 Float32 Float128) Float64)
(declare-fun f38 (Float64) Float64)
(declare-fun f39 (Float128 Float64 Float32 Float128 Float16 Float64 Float128 Float128 Float64) Float64)
(declare-fun f40 (Float32) Float16)
(declare-fun f41 (Float64) Float16)
(declare-fun f42 (Float16 Float64 Float64 Float32 Float128 Float16 Float32 Float64 Float128 Float128) Float32)
(declare-fun f43 (Float16 Float128 Float32 Float128 Float32 Float32 Float64 Float16 Float16) Float16)
(declare-fun f44 (Float128 Float32 Float64 Float32 Float32 Float128 Float16 Float128) Float64)
(declare-fun f45 (Float32 Float32) Float32)
(declare-fun f46 (Float16 Float64) Float128)
(declare-fun f47 (Float128 Float16 Float128 Float16 Float128 Float64) Float128)
(declare-fun f48 (Float64 Float32 Float16 Float16 Float64 Float64) Float128)
(declare-fun f49 (Float64 Float128 Float128 Float128 Float32) Float16)
(declare-fun p0 (Float32 Float16 Float128) Bool)
(declare-fun p1 (Float128 Float64) Bool)
(declare-fun p2 (Float16) Bool)
(declare-fun p3 (Float32 Float32 Float64 Float32 Float32 Float64 Float128 Float16 Float128 Float64) Bool)
(declare-fun p4 (Float64) Bool)
(declare-fun p5 (Float128 Float128 Float16 Float16 Float64 Float128 Float32 Float16 Float16) Bool)
(declare-fun p6 (Float128 Float32) Bool)
(declare-fun p7 (Float128 Float16 Float16 Float64 Float128 Float16 Float64 Float32 Float16) Bool)
(declare-fun p8 (Float64 Float64 Float128 Float16 Float32 Float64 Float64 Float64) Bool)
(declare-fun p9 (Float32 Float32 Float128 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float32)
(declare-const ?float62 Float64)
(declare-const ?float63 Float128)
(declare-const ?float64 Float128)
(declare-const ?float65 Float128)
(declare-const ?float66 Float16)
(declare-const ?float67 Float32)
(declare-const ?float68 Float16)
(declare-const ?float69 Float128)
(declare-const ?float70 Float16)
(declare-const ?float71 Float32)
(declare-const ?float72 Float16)
(declare-const ?float73 Float64)
(declare-const ?float74 Float16)
(declare-const ?float75 Float16)
(declare-const ?float76 Float16)
(declare-const ?float77 Float32)
(declare-const ?float78 Float16)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b1 #b11001 #b1001111001)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b1 #b01000 #b1100110010)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b1 #b00001011100 #b0010010101101111101111010010001100010000101101010110)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b0 #b01110011110 #b0000101010010011000001010001101010111010101111000111)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b1 #b10001 #b0101111110)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.mul RTZ ((_ to_fp 5 11) RNE ?float81) ?float87)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.abs ?float72)))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.roundToIntegral RTN ?float72)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.roundToIntegral RTP ?float100)))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.min ?float102 ((_ to_fp 5 11) RNE ?float63))))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.mul RTN ((_ to_fp 8 24) RTP ?float79) ?float60)))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.add RTP ((_ to_fp 8 24) RTP ?float72) ?float82)))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.abs ?float92)))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.sub RNE ?float67 ((_ to_fp 8 24) RTN ?float100))))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.neg ?float65)))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.max ((_ to_fp 15 113) RTN ?float95) ?float64)))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.sub RTN ((_ to_fp 8 24) RTP ?float88) ?float83)))
(declare-const ?float112 Float128)
(assert (= ?float112 (fp.sub RTN ((_ to_fp 15 113) RTZ ?float103) ?float81)))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.min ((_ to_fp 5 11) RTZ ?float112) ?float75)))
(declare-const ?float114 Float32)
(assert (= ?float114 (f31 ?float80 ?float83 ((_ to_fp 8 24) RTN ?float80) ((_ to_fp 5 11) RTZ ?float61) ((_ to_fp 5 11) RNE ?float77) ((_ to_fp 15 113) RTP ?float83) ((_ to_fp 15 113) RNE ?float61) ((_ to_fp 15 113) RTN ?float62) ((_ to_fp 11 53) RTN ?float87) ((_ to_fp 5 11) RTZ ?float79))))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.abs ?float82)))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.abs ?float104)))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.add RTP ?float90 ?float101)))
(declare-const ?float118 Float16)
(assert (= ?float118 (f18 ((_ to_fp 11 53) RTZ ?float105) ((_ to_fp 11 53) RNE ?float107) ((_ to_fp 15 113) RTP ?float80) ((_ to_fp 15 113) RTP ?float92) ((_ to_fp 11 53) RTZ ?float72) ((_ to_fp 8 24) RNE ?float109))))
(declare-const ?float119 Float128)
(assert (= ?float119 (f14 ((_ to_fp 15 113) RNE ?float60) ((_ to_fp 11 53) RTP ?float110))))
(declare-const ?float120 Float16)
(assert (= ?float120 (fp.max ((_ to_fp 5 11) RTN ?float95) ?float75)))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.abs ?float115)))
(declare-const ?float122 Float64)
(assert (= ?float122 (f1 ?float81)))
(declare-const ?float123 Float128)
(assert (= ?float123 (fp.neg ?float85)))
(declare-const ?float124 Float16)
(assert (= ?float124 (f18 ?float91 ((_ to_fp 11 53) RTZ ?float109) ((_ to_fp 15 113) RTP ?float80) ?float85 ((_ to_fp 11 53) RTP ?float97) ((_ to_fp 8 24) RTN ?float69))))
(declare-const ?float125 Float16)
(assert (= ?float125 (fp.div RTN ?float72 ?float113)))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.abs ?float63)))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.sqrt RNE ?float102)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.mul RTN ?float92 ((_ to_fp 8 24) RTZ ?float94))))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.roundToIntegral RNE ?float60)))
(declare-const ?float130 Float64)
(assert (= ?float130 (f38 ((_ to_fp 11 53) RNE ?float114))))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.div RTP ?float93 ((_ to_fp 11 53) RTP ?float63))))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.min ?float98 ((_ to_fp 15 113) RTZ ?float70))))
(declare-const ?float133 Float64)
(assert (= ?float133 (f16 ((_ to_fp 11 53) RTN ?float113))))
(declare-const ?float134 Float16)
(assert (= ?float134 (f12 ?float72 ((_ to_fp 8 24) RTN ?float70) ((_ to_fp 11 53) RTP ?float119) ((_ to_fp 11 53) RTP ?float98) ((_ to_fp 5 11) RNE ?float86) ((_ to_fp 8 24) RTP ?float80) ((_ to_fp 11 53) RNE ?float132) ((_ to_fp 8 24) RTN ?float123) ((_ to_fp 11 53) RTN ?float105) ((_ to_fp 11 53) RTP ?float89))))
(declare-const ?float135 Float16)
(assert (= ?float135 (f18 ((_ to_fp 11 53) RTP ?float71) ((_ to_fp 11 53) RTN ?float90) ((_ to_fp 15 113) RTZ ?float99) ?float65 ?float122 ((_ to_fp 8 24) RTP ?float98))))
(declare-const ?float136 Float32)
(assert (= ?float136 (fp.min ?float71 ?float61)))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.sub RTP ?float98 ?float119)))
(declare-const ?float138 Float64)
(assert (= ?float138 (fp.roundToIntegral RNE ?float133)))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.mul RTN ?float99 ((_ to_fp 5 11) RNE ?float121))))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.min ((_ to_fp 5 11) RTZ ?float81) ?float80)))
(declare-const ?float141 Float64)
(assert (= ?float141 (f37 ((_ to_fp 15 113) RTN ?float67) ((_ to_fp 5 11) RTP ?float109) ((_ to_fp 8 24) RTN ?float69) ((_ to_fp 15 113) RTN ?float60) ?float118 ((_ to_fp 11 53) RTZ ?float71) ((_ to_fp 5 11) RTN ?float69) ?float87 ((_ to_fp 8 24) RTN ?float133) ((_ to_fp 15 113) RTP ?float86))))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.sub RTN ?float90 ?float113)))
(declare-const ?float143 Float16)
(assert (= ?float143 (f35 ?float118 ((_ to_fp 15 113) RTP ?float73) ?float63)))
(declare-const ?float144 Float128)
(assert (= ?float144 (fp.div RTZ ((_ to_fp 15 113) RTN ?float90) ?float137)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.mul RTP ?float114 ((_ to_fp 8 24) RTZ ?float130))))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.sqrt RTZ ?float123)))
(declare-const ?float147 Float16)
(assert (= ?float147 (fp.neg ?float90)))
(declare-const ?float148 Float16)
(assert (= ?float148 (f41 ((_ to_fp 11 53) RTZ ?float81))))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.neg ?float119)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.eq ((_ to_fp 5 11) RTN ?float62) ?float124)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isSubnormal ?float121)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isSubnormal ?float112)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.eq ?float120 ((_ to_fp 5 11) RTZ ?float65))))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.eq ?float121 ?float105)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isPositive ?float116)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isSubnormal ?float146)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.eq ((_ to_fp 8 24) RTZ ?float96) ?float77)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isInfinite ?float106)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.gt ?float83 ((_ to_fp 8 24) RTP ?float109))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isPositive ?float106)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.lt ?float108 ?float111)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.geq ((_ to_fp 11 53) RTP ?float125) ?float133)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.geq ((_ to_fp 5 11) RNE ?float106) ?float148)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isZero ?float81)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.geq ?float147 ?float127)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isPositive ?float142)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNegative ?float131)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNegative ?float111)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.gt ?float69 ?float79)))
; FINAL ASSERT
(assert (and (and (or ?bool166)) ?bool166))
(check-sat)


-- iteration 75 --
(declare-fun f0 (Float16 Float32 Float16 Float128 Float128 Float16 Float128) Float64)
(declare-fun f1 (Float32 Float32 Float16 Float32 Float32 Float16 Float16) Float64)
(declare-fun f2 (Float128 Float128 Float16 Float128 Float64 Float64 Float32) Float32)
(declare-fun f3 (Float16 Float64 Float16) Float128)
(declare-fun f4 (Float32 Float16 Float64 Float16) Float128)
(declare-fun f5 (Float64 Float32 Float128 Float32 Float128 Float128) Float128)
(declare-fun f6 (Float16 Float32 Float32 Float64) Float64)
(declare-fun f7 (Float64 Float32) Float64)
(declare-fun f8 (Float16 Float32) Float64)
(declare-fun f9 (Float128 Float64 Float32 Float32) Float32)
(declare-fun f10 (Float128) Float32)
(declare-fun f11 (Float16 Float16 Float32 Float16 Float16) Float64)
(declare-fun f12 (Float32 Float64 Float128 Float64 Float16 Float128 Float32 Float32 Float32 Float128) Float128)
(declare-fun f13 (Float16 Float128 Float16 Float128 Float64 Float64 Float32) Float32)
(declare-fun f14 (Float64 Float16 Float32 Float16 Float128) Float128)
(declare-fun f15 (Float16) Float16)
(declare-fun f16 (Float32 Float64 Float32 Float32 Float16 Float16 Float128 Float16) Float32)
(declare-fun f17 (Float128 Float64 Float32 Float32 Float64 Float128) Float64)
(declare-fun f18 (Float16 Float32 Float64 Float16 Float16) Float32)
(declare-fun f19 (Float64 Float32 Float16 Float32 Float64 Float32 Float64 Float32) Float64)
(declare-fun f20 (Float64 Float32 Float128 Float32 Float16 Float32 Float16 Float128) Float16)
(declare-fun f21 (Float32 Float128 Float32 Float32 Float32 Float16 Float64 Float32 Float128 Float16) Float32)
(declare-fun f22 (Float128 Float16 Float32 Float64) Float16)
(declare-fun f23 (Float32 Float64 Float128) Float32)
(declare-fun f24 (Float128 Float128 Float128 Float32 Float32 Float16 Float64) Float32)
(declare-fun f25 (Float64 Float32 Float16 Float32 Float64 Float32 Float64 Float16 Float128 Float128) Float64)
(declare-fun f26 (Float64 Float32 Float16 Float16 Float64 Float32 Float32 Float128) Float64)
(declare-fun f27 (Float64 Float16 Float16 Float128 Float32 Float16 Float64 Float64) Float128)
(declare-fun f28 (Float128 Float64) Float32)
(declare-fun f29 (Float128 Float32) Float16)
(declare-fun f30 (Float16 Float128 Float32 Float64) Float32)
(declare-fun f31 (Float32 Float16 Float128 Float16 Float128 Float128 Float128 Float16 Float16 Float128) Float32)
(declare-fun f32 (Float32 Float16 Float16 Float32 Float32) Float16)
(declare-fun f33 (Float64 Float32) Float32)
(declare-fun f34 (Float128 Float64 Float64 Float64) Float64)
(declare-fun f35 (Float128 Float32) Float128)
(declare-fun f36 (Float16 Float16) Float16)
(declare-fun f37 (Float16 Float128 Float16 Float64) Float64)
(declare-fun f38 (Float64) Float16)
(declare-fun f39 (Float32 Float128 Float128 Float64 Float128 Float64) Float128)
(declare-fun f40 (Float128 Float16 Float128 Float16 Float16 Float16 Float64) Float64)
(declare-fun f41 (Float64 Float128 Float128 Float128 Float64 Float64) Float64)
(declare-fun f42 (Float128 Float16 Float16 Float32 Float16 Float64) Float64)
(declare-fun f43 (Float32 Float64) Float128)
(declare-fun f44 (Float64 Float64 Float32 Float16 Float32 Float64 Float32 Float128) Float64)
(declare-fun f45 (Float16 Float128 Float32 Float64 Float64 Float128 Float32) Float64)
(declare-fun f46 (Float32 Float16 Float32) Float64)
(declare-fun f47 (Float32 Float64 Float128 Float32 Float16 Float64) Float64)
(declare-fun f48 (Float16 Float128 Float32 Float64 Float32 Float32 Float128 Float32 Float128 Float32) Float64)
(declare-fun f49 (Float16 Float32 Float32 Float128 Float16 Float32 Float32 Float64 Float64 Float32) Float32)
(declare-fun p0 (Float128 Float128 Float32) Bool)
(declare-fun p1 (Float16 Float16 Float64 Float64 Float32 Float128 Float128 Float128 Float64 Float32) Bool)
(declare-fun p2 (Float32 Float64 Float64 Float16 Float128) Bool)
(declare-fun p3 (Float128 Float128) Bool)
(declare-fun p4 (Float64 Float128 Float64 Float16 Float64 Float32 Float16 Float64 Float128 Float32) Bool)
(declare-fun p5 (Float32 Float128 Float32) Bool)
(declare-fun p6 (Float16) Bool)
(declare-fun p7 (Float16 Float16 Float64 Float32 Float16 Float16 Float64 Float64 Float16 Float128) Bool)
(declare-fun p8 (Float64) Bool)
(declare-fun p9 (Float64 Float16 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float16)
(declare-const ?float62 Float128)
(declare-const ?float63 Float128)
(declare-const ?float64 Float32)
(declare-const ?float65 Float128)
(declare-const ?float66 Float128)
(declare-const ?float67 Float128)
(declare-const ?float68 Float64)
(declare-const ?float69 Float32)
(declare-const ?float70 Float32)
(declare-const ?float71 Float16)
(declare-const ?float72 Float16)
(declare-const ?float73 Float128)
(declare-const ?float74 Float64)
(declare-const ?float75 Float32)
(declare-const ?float76 Float16)
(declare-const ?float77 Float128)
(declare-const ?float78 Float128)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float128)
(assert (= ?float84 (fp #b0 #b001100101110100 #b1000010101111111100001010100100111110010100111000010000001100111101111111010101011001011100000010111001110010111)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b0 #b11011101111 #b1110001000010011101111111000100111100100111110111000)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b1 #b01000100000 #b1101000111000100010110101100111011010110110000000100)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b11111011111 #b1000100011101101001000101111101010100011001011110001)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b1 #b01100001 #b01101101001000000011011)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b01000 #b1001001011)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b1 #b00001 #b0000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (fp.min ?float66 ?float66)))
(declare-const ?float101 Float64)
(assert (= ?float101 (fp.sub RTN ?float82 ((_ to_fp 11 53) RTN ?float77))))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.min ((_ to_fp 15 113) RTN ?float99) ?float78)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.div RTZ ?float71 ((_ to_fp 5 11) RTN ?float101))))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.mul RTN ?float67 ((_ to_fp 15 113) RTZ ?float97))))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.min ?float86 ?float90)))
(declare-const ?float106 Float128)
(assert (= ?float106 (f4 ((_ to_fp 8 24) RTZ ?float101) ((_ to_fp 5 11) RNE ?float84) ((_ to_fp 11 53) RTZ ?float91) ((_ to_fp 5 11) RTN ?float74))))
(declare-const ?float107 Float64)
(assert (= ?float107 (fp.add RNE ?float101 ((_ to_fp 11 53) RTP ?float100))))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.sub RNE ?float66 ?float104)))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.min ?float84 ?float77)))
(declare-const ?float110 Float64)
(assert (= ?float110 (f45 ((_ to_fp 5 11) RTN ?float78) ((_ to_fp 15 113) RTZ ?float64) ((_ to_fp 8 24) RTN ?float87) ((_ to_fp 11 53) RTN ?float88) ((_ to_fp 11 53) RTN ?float62) ((_ to_fp 15 113) RTZ ?float76) ((_ to_fp 8 24) RTN ?float82))))
(declare-const ?float111 Float128)
(assert (= ?float111 (fp.max ?float108 ((_ to_fp 15 113) RTZ ?float96))))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.add RTP ?float74 ?float86)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.min ?float85 ((_ to_fp 11 53) RTZ ?float72))))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.mul RTN ((_ to_fp 8 24) RTP ?float112) ?float70)))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.min ((_ to_fp 11 53) RTN ?float71) ?float86)))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.sub RTZ ?float71 ((_ to_fp 5 11) RNE ?float65))))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.div RNE ((_ to_fp 11 53) RTZ ?float92) ?float97)))
(declare-const ?float118 Float64)
(assert (= ?float118 (fp.div RTP ?float105 ?float90)))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.sub RTZ ((_ to_fp 11 53) RTZ ?float70) ?float68)))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.sqrt RTP ?float70)))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.neg ?float88)))
(declare-const ?float122 Float64)
(assert (= ?float122 (fp.sqrt RNE ?float90)))
(declare-const ?float123 Float128)
(assert (= ?float123 (f27 ((_ to_fp 11 53) RTP ?float69) ((_ to_fp 5 11) RTZ ?float97) ((_ to_fp 5 11) RNE ?float66) ((_ to_fp 15 113) RNE ?float61) ?float96 ((_ to_fp 5 11) RNE ?float90) ((_ to_fp 11 53) RNE ?float91) ?float86)))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.sub RTP ?float120 ?float91)))
(declare-const ?float125 Float16)
(assert (= ?float125 (f32 ((_ to_fp 8 24) RTZ ?float67) ?float116 ((_ to_fp 5 11) RTZ ?float77) ((_ to_fp 8 24) RTP ?float81) ((_ to_fp 8 24) RTP ?float123))))
(declare-const ?float126 Float32)
(assert (= ?float126 (f10 ((_ to_fp 15 113) RTZ ?float117))))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.abs ?float72)))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.neg ?float115)))
(declare-const ?float129 Float128)
(assert (= ?float129 (fp.roundToIntegral RTP ?float108)))
(declare-const ?float130 Float64)
(assert (= ?float130 (fp.roundToIntegral RTZ ?float119)))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.div RTN ?float76 ((_ to_fp 5 11) RNE ?float91))))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.abs ?float72)))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.sub RTZ ((_ to_fp 11 53) RTN ?float63) ?float113)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.sub RTP ?float66 ((_ to_fp 15 113) RTN ?float98))))
(declare-const ?float135 Float32)
(assert (= ?float135 (f28 ((_ to_fp 15 113) RTP ?float74) ((_ to_fp 11 53) RTN ?float69))))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.sqrt RTZ ?float92)))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.sub RTN ?float125 ((_ to_fp 5 11) RTZ ?float82))))
(declare-const ?float138 Float128)
(assert (= ?float138 (fp.mul RTZ ?float78 ((_ to_fp 15 113) RNE ?float121))))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.max ?float72 ?float103)))
(declare-const ?float140 Float32)
(assert (= ?float140 (f24 ((_ to_fp 15 113) RTN ?float90) ((_ to_fp 15 113) RTN ?float64) ((_ to_fp 15 113) RTN ?float91) ((_ to_fp 8 24) RNE ?float77) ((_ to_fp 8 24) RNE ?float101) ((_ to_fp 5 11) RTP ?float86) ((_ to_fp 11 53) RTP ?float76))))
(declare-const ?float141 Float32)
(assert (= ?float141 (fp.add RTZ ?float126 ((_ to_fp 8 24) RTZ ?float132))))
(declare-const ?float142 Float64)
(assert (= ?float142 (f26 ((_ to_fp 11 53) RTP ?float108) ((_ to_fp 8 24) RTN ?float80) ((_ to_fp 5 11) RTP ?float108) ?float103 ((_ to_fp 11 53) RTP ?float126) ?float94 ((_ to_fp 8 24) RTZ ?float92) ((_ to_fp 15 113) RTP ?float74))))
(declare-const ?float143 Float32)
(assert (= ?float143 (fp.max ?float64 ?float96)))
(declare-const ?float144 Float32)
(assert (= ?float144 (f24 ?float104 ((_ to_fp 15 113) RTN ?float117) ((_ to_fp 15 113) RTN ?float86) ((_ to_fp 8 24) RTP ?float110) ((_ to_fp 8 24) RNE ?float132) ((_ to_fp 5 11) RTN ?float69) ((_ to_fp 11 53) RTP ?float140))))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.mul RNE ?float69 ((_ to_fp 8 24) RNE ?float130))))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.add RNE ((_ to_fp 15 113) RTP ?float93) ?float84)))
(declare-const ?float147 Float64)
(assert (= ?float147 (f40 ((_ to_fp 15 113) RTP ?float135) ((_ to_fp 5 11) RNE ?float133) ((_ to_fp 15 113) RNE ?float141) ((_ to_fp 5 11) RTZ ?float75) ((_ to_fp 5 11) RNE ?float100) ((_ to_fp 5 11) RNE ?float119) ((_ to_fp 11 53) RTZ ?float66))))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.neg ?float133)))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.mul RTN ?float66 ?float89)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p2 ((_ to_fp 8 24) RTN ?float78) ((_ to_fp 11 53) RNE ?float61) ?float130 ((_ to_fp 5 11) RTP ?float123) ?float89)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isSubnormal ?float68)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.geq ?float86 ?float113)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isZero ?float81)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNormal ?float61)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.geq ((_ to_fp 11 53) RTN ?float126) ?float90)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.lt ?float70 ?float91)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p5 ?float93 ?float146 ((_ to_fp 8 24) RTP ?float76))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.leq ((_ to_fp 11 53) RTN ?float73) ?float115)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.gt ((_ to_fp 8 24) RTP ?float117) ?float79)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.gt ?float67 ((_ to_fp 15 113) RTN ?float128))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (p9 ((_ to_fp 11 53) RNE ?float106) ?float131 ((_ to_fp 15 113) RTZ ?float71))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isPositive ?float61)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNaN ?float109)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (p2 ?float114 ((_ to_fp 11 53) RTZ ?float114) ((_ to_fp 11 53) RTN ?float96) ((_ to_fp 5 11) RTZ ?float96) ((_ to_fp 15 113) RNE ?float99))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.gt ?float138 ((_ to_fp 15 113) RTZ ?float64))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.gt ?float100 ((_ to_fp 15 113) RTN ?float121))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNaN ?float128)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.lt ?float75 ((_ to_fp 8 24) RTP ?float92))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.lt ?float122 ((_ to_fp 11 53) RTN ?float67))))
; FINAL ASSERT
(assert (and (and ?bool166) (or (or (and ?bool169) (and ?bool151 ?bool162) ?bool167) ?bool155 ?bool157)))
(check-sat)


-- iteration 76 --
(declare-fun f0 (Float32 Float32 Float64) Float32)
(declare-fun f1 (Float64 Float64) Float128)
(declare-fun f2 (Float64) Float16)
(declare-fun f3 (Float16 Float128 Float32) Float64)
(declare-fun f4 (Float64) Float64)
(declare-fun f5 (Float32 Float32 Float64) Float64)
(declare-fun f6 (Float64 Float16 Float16 Float128 Float32) Float64)
(declare-fun f7 (Float128 Float32 Float128 Float32 Float32) Float32)
(declare-fun f8 (Float64 Float32 Float128 Float64) Float16)
(declare-fun f9 (Float64 Float16 Float128 Float64 Float128 Float32 Float64 Float128) Float16)
(declare-fun f10 (Float64) Float64)
(declare-fun f11 (Float64) Float128)
(declare-fun f12 (Float128 Float128 Float32 Float16 Float128) Float32)
(declare-fun f13 (Float128 Float64 Float64 Float16) Float32)
(declare-fun f14 (Float16) Float16)
(declare-fun f15 (Float128 Float128) Float128)
(declare-fun f16 (Float16 Float128 Float64 Float16 Float32 Float16 Float128 Float64 Float32 Float16) Float16)
(declare-fun f17 (Float64) Float64)
(declare-fun f18 (Float128) Float64)
(declare-fun f19 (Float128 Float128 Float32 Float32 Float64 Float128 Float32 Float16 Float64 Float32) Float16)
(declare-fun f20 (Float64 Float16 Float32 Float64 Float64 Float16 Float16 Float16 Float128 Float32) Float64)
(declare-fun f21 (Float16 Float16 Float128 Float64) Float64)
(declare-fun f22 (Float128 Float128 Float64 Float16 Float32 Float128 Float32 Float128 Float128) Float128)
(declare-fun f23 (Float16 Float32) Float128)
(declare-fun f24 (Float128 Float32 Float16 Float32 Float128) Float16)
(declare-fun f25 (Float16 Float64) Float128)
(declare-fun f26 (Float128 Float64) Float128)
(declare-fun f27 (Float128) Float16)
(declare-fun f28 (Float128) Float128)
(declare-fun f29 (Float32 Float32 Float16 Float32 Float16 Float128 Float16 Float32 Float128 Float128) Float32)
(declare-fun f30 (Float128) Float32)
(declare-fun f31 (Float128 Float16 Float16) Float32)
(declare-fun f32 (Float16 Float16 Float32 Float16) Float64)
(declare-fun f33 (Float32 Float64 Float32 Float64 Float32 Float128 Float32 Float32 Float16) Float128)
(declare-fun f34 (Float128 Float64 Float64 Float64 Float32 Float32 Float64 Float32) Float32)
(declare-fun f35 (Float128 Float16 Float128 Float64 Float64 Float128 Float64) Float64)
(declare-fun f36 (Float16 Float64 Float32 Float32 Float128) Float128)
(declare-fun f37 (Float16 Float128 Float128 Float64 Float64) Float16)
(declare-fun f38 (Float64 Float64 Float128) Float128)
(declare-fun f39 (Float64 Float64 Float16 Float32) Float128)
(declare-fun f40 (Float64 Float64 Float32 Float64 Float128) Float64)
(declare-fun f41 (Float16 Float16 Float32 Float16) Float16)
(declare-fun f42 (Float16 Float64 Float16 Float16 Float32 Float32) Float128)
(declare-fun f43 (Float32 Float16 Float32 Float64 Float16 Float128 Float16 Float64 Float32) Float64)
(declare-fun f44 (Float64 Float64 Float32 Float32 Float128 Float32 Float64 Float128 Float64) Float16)
(declare-fun f45 (Float64 Float32 Float16 Float64 Float16 Float16) Float32)
(declare-fun f46 (Float128 Float32 Float16 Float64) Float32)
(declare-fun f47 (Float16 Float64) Float64)
(declare-fun f48 (Float16 Float32 Float16 Float16 Float16 Float64) Float64)
(declare-fun f49 (Float128 Float32 Float128 Float16 Float128 Float128) Float16)
(declare-fun p0 (Float16 Float16 Float64 Float64 Float64 Float64) Bool)
(declare-fun p1 (Float16 Float128 Float32 Float16 Float16 Float32 Float16 Float32 Float64 Float128) Bool)
(declare-fun p2 (Float32 Float128 Float64 Float32 Float16 Float16) Bool)
(declare-fun p3 (Float16 Float64 Float128 Float16 Float16 Float64 Float16 Float16) Bool)
(declare-fun p4 (Float64 Float32 Float32 Float32 Float64) Bool)
(declare-fun p5 (Float16 Float16 Float64 Float64 Float64 Float128 Float16 Float16 Float16 Float64) Bool)
(declare-fun p6 (Float32 Float16 Float128 Float16 Float32) Bool)
(declare-fun p7 (Float64 Float16 Float16 Float128) Bool)
(declare-fun p8 (Float64 Float16 Float128 Float64 Float64 Float32 Float64) Bool)
(declare-fun p9 (Float16 Float64 Float128 Float64 Float64 Float128 Float32 Float16 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float128)
(declare-const ?float62 Float16)
(declare-const ?float63 Float32)
(declare-const ?float64 Float128)
(declare-const ?float65 Float64)
(declare-const ?float66 Float16)
(declare-const ?float67 Float16)
(declare-const ?float68 Float16)
(declare-const ?float69 Float128)
(declare-const ?float70 Float128)
(declare-const ?float71 Float64)
(declare-const ?float72 Float16)
(declare-const ?float73 Float64)
(declare-const ?float74 Float16)
(declare-const ?float75 Float128)
(declare-const ?float76 Float128)
(declare-const ?float77 Float16)
(declare-const ?float78 Float128)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b0 #b10010 #b1000010011)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b0 #b01001001000 #b0001111100000101001111011100011000101111011110101010)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b1 #b10011110 #b01110011111110000100101)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b10111 #b0010001000)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b1 #b10000 #b0001100001)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b1 #b100000001010010 #b1101001010010011000001001000011111011000010100001000001001110110000001010011111111111010100000011011101111011101)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.mul RNE ?float62 ((_ to_fp 5 11) RTN ?float79))))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.sqrt RTZ ?float96)))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.abs ?float63)))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.sqrt RNE ?float65)))
(declare-const ?float104 Float16)
(assert (= ?float104 (f41 ((_ to_fp 5 11) RTN ?float61) ((_ to_fp 5 11) RNE ?float87) ((_ to_fp 8 24) RTZ ?float81) ((_ to_fp 5 11) RTP ?float81))))
(declare-const ?float105 Float64)
(assert (= ?float105 (f40 ((_ to_fp 11 53) RTZ ?float66) ((_ to_fp 11 53) RTN ?float97) ((_ to_fp 8 24) RTN ?float80) ((_ to_fp 11 53) RNE ?float75) ((_ to_fp 15 113) RNE ?float87))))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.abs ?float98)))
(declare-const ?float107 Float64)
(assert (= ?float107 (fp.min ?float81 ((_ to_fp 11 53) RTP ?float70))))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.neg ?float83)))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.add RNE ?float91 ((_ to_fp 15 113) RTN ?float60))))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.sub RTN ((_ to_fp 15 113) RNE ?float63) ?float69)))
(declare-const ?float111 Float128)
(assert (= ?float111 (fp.mul RNE ((_ to_fp 15 113) RTP ?float73) ?float99)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.max ?float93 ((_ to_fp 11 53) RNE ?float61))))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.sqrt RTZ ?float100)))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.abs ?float95)))
(declare-const ?float115 Float16)
(assert (= ?float115 (fp.add RTP ?float95 ((_ to_fp 5 11) RTN ?float64))))
(declare-const ?float116 Float32)
(assert (= ?float116 (f45 ((_ to_fp 11 53) RTP ?float83) ((_ to_fp 8 24) RTP ?float91) ?float97 ((_ to_fp 11 53) RNE ?float91) ((_ to_fp 5 11) RNE ?float79) ((_ to_fp 5 11) RTP ?float75))))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.mul RTP ?float107 ((_ to_fp 11 53) RTZ ?float114))))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.neg ?float63)))
(declare-const ?float119 Float128)
(assert (= ?float119 (fp.neg ?float106)))
(declare-const ?float120 Float32)
(assert (= ?float120 (f7 ?float78 ?float108 ((_ to_fp 15 113) RTN ?float81) ((_ to_fp 8 24) RTP ?float99) ((_ to_fp 8 24) RTN ?float98))))
(declare-const ?float121 Float32)
(assert (= ?float121 (f29 ((_ to_fp 8 24) RTP ?float103) ?float102 ?float100 ((_ to_fp 8 24) RNE ?float75) ((_ to_fp 5 11) RTZ ?float108) ?float119 ((_ to_fp 5 11) RTZ ?float111) ((_ to_fp 8 24) RTN ?float110) ((_ to_fp 15 113) RTZ ?float72) ((_ to_fp 15 113) RTZ ?float65))))
(declare-const ?float122 Float64)
(assert (= ?float122 (fp.abs ?float105)))
(declare-const ?float123 Float64)
(assert (= ?float123 (f4 ((_ to_fp 11 53) RTZ ?float78))))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.neg ?float90)))
(declare-const ?float125 Float16)
(assert (= ?float125 (fp.max ((_ to_fp 5 11) RTZ ?float79) ?float72)))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.max ?float124 ?float90)))
(declare-const ?float127 Float128)
(assert (= ?float127 (fp.max ?float78 ((_ to_fp 15 113) RNE ?float120))))
(declare-const ?float128 Float16)
(assert (= ?float128 (fp.neg ?float62)))
(declare-const ?float129 Float128)
(assert (= ?float129 (f26 ?float69 ((_ to_fp 11 53) RTP ?float119))))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.add RTP ?float125 ((_ to_fp 5 11) RTN ?float73))))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.roundToIntegral RTN ?float115)))
(declare-const ?float132 Float64)
(assert (= ?float132 (f17 ((_ to_fp 11 53) RTZ ?float110))))
(declare-const ?float133 Float64)
(assert (= ?float133 (f5 ((_ to_fp 8 24) RNE ?float75) ((_ to_fp 8 24) RTP ?float92) ((_ to_fp 11 53) RTN ?float108))))
(declare-const ?float134 Float128)
(assert (= ?float134 (f11 ((_ to_fp 11 53) RTP ?float96))))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.sqrt RTP ?float63)))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.abs ?float93)))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.max ?float77 ((_ to_fp 5 11) RTN ?float61))))
(declare-const ?float138 Float64)
(assert (= ?float138 (f40 ?float87 ?float136 ((_ to_fp 8 24) RTZ ?float101) ?float87 ?float109)))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.mul RNE ((_ to_fp 15 113) RTN ?float103) ?float64)))
(declare-const ?float140 Float32)
(assert (= ?float140 (f46 ((_ to_fp 15 113) RTN ?float136) ((_ to_fp 8 24) RTN ?float89) ?float89 ((_ to_fp 11 53) RTN ?float97))))
(declare-const ?float141 Float32)
(assert (= ?float141 (f31 ((_ to_fp 15 113) RNE ?float107) ((_ to_fp 5 11) RTP ?float78) ((_ to_fp 5 11) RTZ ?float132))))
(declare-const ?float142 Float128)
(assert (= ?float142 (f22 ((_ to_fp 15 113) RTP ?float74) ?float111 ((_ to_fp 11 53) RTN ?float60) ?float95 ((_ to_fp 8 24) RTN ?float85) ((_ to_fp 15 113) RTN ?float62) ((_ to_fp 8 24) RTN ?float93) ?float134 ?float91)))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.abs ?float103)))
(declare-const ?float144 Float128)
(assert (= ?float144 (fp.add RTZ ?float78 ((_ to_fp 15 113) RNE ?float97))))
(declare-const ?float145 Float128)
(assert (= ?float145 (f22 ((_ to_fp 15 113) RTZ ?float125) ((_ to_fp 15 113) RTZ ?float87) ?float71 ((_ to_fp 5 11) RTP ?float102) ((_ to_fp 8 24) RTP ?float87) ((_ to_fp 15 113) RTZ ?float80) ((_ to_fp 8 24) RTP ?float74) ?float139 ((_ to_fp 15 113) RNE ?float116))))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.abs ?float95)))
(declare-const ?float147 Float16)
(assert (= ?float147 (fp.mul RTN ?float137 ?float115)))
(declare-const ?float148 Float32)
(assert (= ?float148 (f12 ?float106 ((_ to_fp 15 113) RTP ?float135) ((_ to_fp 8 24) RTP ?float82) ?float62 ((_ to_fp 15 113) RTN ?float146))))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.max ((_ to_fp 5 11) RTZ ?float102) ?float130)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.eq ((_ to_fp 5 11) RTZ ?float142) ?float67)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p4 ((_ to_fp 11 53) RTN ?float113) ((_ to_fp 8 24) RNE ?float73) ?float135 ?float108 ((_ to_fp 11 53) RTN ?float139))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.gt ((_ to_fp 15 113) RTP ?float97) ?float139)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (p4 ((_ to_fp 11 53) RTP ?float79) ((_ to_fp 8 24) RTP ?float111) ((_ to_fp 8 24) RTN ?float62) ((_ to_fp 8 24) RTN ?float100) ((_ to_fp 11 53) RTP ?float125))))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.geq ?float101 ((_ to_fp 15 113) RNE ?float102))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isInfinite ?float69)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.gt ?float106 ((_ to_fp 15 113) RTN ?float60))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.leq ((_ to_fp 8 24) RTZ ?float89) ?float135)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.leq ((_ to_fp 8 24) RTN ?float86) ?float102)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isZero ?float105)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isInfinite ?float131)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.eq ?float97 ?float147)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNegative ?float147)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isZero ?float118)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isNaN ?float99)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isZero ?float66)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNormal ?float127)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.lt ((_ to_fp 5 11) RTZ ?float127) ?float66)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.leq ?float96 ?float134)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.gt ?float111 ((_ to_fp 15 113) RTN ?float105))))
; FINAL ASSERT
(assert (or ?bool151 (and ?bool156 (or ?bool152 ?bool167 ?bool169) ?bool165)))
(check-sat)


-- iteration 77 --
(declare-fun f0 (Float128 Float64 Float64 Float64 Float32) Float16)
(declare-fun f1 (Float16 Float32 Float16 Float128 Float32 Float16 Float128) Float16)
(declare-fun f2 (Float16 Float128 Float16) Float64)
(declare-fun f3 (Float16 Float128 Float64 Float16 Float128 Float16 Float64) Float64)
(declare-fun f4 (Float32 Float64 Float128 Float32 Float32 Float128 Float64 Float64 Float32 Float32) Float16)
(declare-fun f5 (Float128 Float64 Float32 Float16 Float64 Float16 Float128 Float16 Float128 Float64) Float128)
(declare-fun f6 (Float64 Float128 Float64 Float64 Float128 Float16 Float16 Float64) Float128)
(declare-fun f7 (Float16) Float64)
(declare-fun f8 (Float128 Float64 Float16 Float16 Float64 Float32 Float32 Float64) Float64)
(declare-fun f9 (Float128 Float128 Float16 Float64 Float64 Float16 Float64 Float64 Float16) Float16)
(declare-fun f10 (Float32 Float32 Float64) Float32)
(declare-fun f11 (Float32 Float64 Float128 Float16 Float64 Float32 Float128 Float32) Float16)
(declare-fun f12 (Float128 Float16 Float64 Float32 Float32 Float32 Float64) Float64)
(declare-fun f13 (Float64 Float64 Float32 Float128) Float128)
(declare-fun f14 (Float128 Float64 Float64 Float32 Float16 Float128 Float64 Float32 Float32) Float32)
(declare-fun f15 (Float64 Float32 Float32 Float32 Float16 Float128 Float16 Float32 Float16 Float16) Float32)
(declare-fun f16 (Float32 Float128 Float128 Float32 Float32) Float16)
(declare-fun f17 (Float128 Float32 Float128 Float128) Float64)
(declare-fun f18 (Float16 Float128 Float64 Float32 Float16 Float16 Float64) Float64)
(declare-fun f19 (Float128 Float32) Float64)
(declare-fun f20 (Float128 Float32) Float128)
(declare-fun f21 (Float16 Float128 Float16 Float16) Float128)
(declare-fun f22 (Float64 Float128 Float128) Float16)
(declare-fun f23 (Float32 Float16 Float128 Float128 Float32) Float16)
(declare-fun f24 (Float32 Float32 Float32 Float64) Float128)
(declare-fun f25 (Float16 Float128 Float128 Float64 Float128) Float16)
(declare-fun f26 (Float16 Float128 Float32 Float32 Float128) Float32)
(declare-fun f27 (Float32 Float32 Float64) Float64)
(declare-fun f28 (Float64 Float16 Float16 Float128 Float64 Float16 Float16 Float64) Float32)
(declare-fun f29 (Float32 Float128 Float128 Float32) Float32)
(declare-fun f30 (Float16 Float16 Float16 Float16 Float64) Float128)
(declare-fun f31 (Float64 Float16 Float128 Float128 Float32 Float32 Float32 Float128 Float16) Float64)
(declare-fun f32 (Float32 Float128 Float128 Float32 Float32 Float16) Float128)
(declare-fun f33 (Float64 Float16 Float32 Float32) Float128)
(declare-fun f34 (Float64 Float32 Float64 Float32 Float16) Float128)
(declare-fun f35 (Float64 Float128 Float32) Float128)
(declare-fun f36 (Float16 Float64 Float32 Float16 Float64 Float64 Float16) Float64)
(declare-fun f37 (Float128 Float16 Float32 Float32 Float128 Float128 Float16) Float16)
(declare-fun f38 (Float16 Float32 Float64 Float32 Float16 Float128 Float16 Float16 Float32) Float64)
(declare-fun f39 (Float16 Float64 Float16 Float32 Float16 Float128 Float128 Float64) Float64)
(declare-fun f40 (Float32 Float64 Float32 Float128 Float128 Float16 Float32 Float32 Float16 Float16) Float64)
(declare-fun f41 (Float32 Float128 Float64 Float32 Float16 Float64) Float32)
(declare-fun f42 (Float16 Float32 Float128 Float128 Float32 Float16 Float128 Float16 Float128 Float128) Float64)
(declare-fun f43 (Float16 Float64 Float128 Float128 Float64 Float32) Float16)
(declare-fun f44 (Float64 Float64 Float128 Float64) Float16)
(declare-fun f45 (Float64 Float64 Float128 Float64 Float32 Float64 Float32 Float64) Float64)
(declare-fun f46 (Float16 Float16 Float128 Float64 Float16 Float64 Float64 Float128 Float16) Float64)
(declare-fun f47 (Float64 Float128 Float32 Float64 Float16 Float64 Float16 Float64) Float32)
(declare-fun f48 (Float64) Float64)
(declare-fun f49 (Float16 Float128 Float64 Float32 Float32 Float16 Float32 Float64 Float32 Float16) Float128)
(declare-fun p0 (Float64) Bool)
(declare-fun p1 (Float128 Float16) Bool)
(declare-fun p2 (Float64 Float16 Float32 Float16 Float128 Float16 Float16 Float64) Bool)
(declare-fun p3 (Float64 Float64 Float32 Float32) Bool)
(declare-fun p4 (Float16 Float16 Float128 Float128 Float64 Float16 Float128) Bool)
(declare-fun p5 (Float128 Float128) Bool)
(declare-fun p6 (Float32 Float128 Float32 Float128 Float64 Float16 Float16 Float32 Float64 Float128) Bool)
(declare-fun p7 (Float32 Float64 Float32 Float128 Float16 Float64 Float128) Bool)
(declare-fun p8 (Float16 Float32 Float32) Bool)
(declare-fun p9 (Float16 Float64 Float128 Float16 Float32 Float32 Float128 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float128)
(declare-const ?float62 Float16)
(declare-const ?float63 Float32)
(declare-const ?float64 Float32)
(declare-const ?float65 Float64)
(declare-const ?float66 Float32)
(declare-const ?float67 Float32)
(declare-const ?float68 Float64)
(declare-const ?float69 Float128)
(declare-const ?float70 Float16)
(declare-const ?float71 Float64)
(declare-const ?float72 Float32)
(declare-const ?float73 Float32)
(declare-const ?float74 Float32)
(declare-const ?float75 Float64)
(declare-const ?float76 Float16)
(declare-const ?float77 Float64)
(declare-const ?float78 Float32)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b1 #b11001 #b0101100001)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b0 #b10011110011 #b1001000011101110101001001001100100110001110100000110)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b1 #b001100001101011 #b0100001011011110010010001011010111010000101110101010001010100111011010010001010001001000010111010101111000000011)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b1 #b01111000101 #b1101011100101110000101010100001110100101011111001010)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b0 #b01101011101 #b0011000000101110111001011110000111101011010101011111)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b1 #b00001 #b0000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.sqrt RNE ?float76)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.mul RNE ((_ to_fp 5 11) RTZ ?float90) ?float62)))
(declare-const ?float102 Float64)
(assert (= ?float102 (fp.mul RTN ?float82 ((_ to_fp 11 53) RNE ?float84))))
(declare-const ?float103 Float64)
(assert (= ?float103 (f2 ((_ to_fp 5 11) RNE ?float93) ((_ to_fp 15 113) RTN ?float62) ((_ to_fp 5 11) RTZ ?float66))))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.max ?float72 ?float64)))
(declare-const ?float105 Float32)
(assert (= ?float105 (f41 ?float72 ((_ to_fp 15 113) RNE ?float99) ((_ to_fp 11 53) RTN ?float81) ((_ to_fp 8 24) RTN ?float101) ((_ to_fp 5 11) RTN ?float95) ?float91)))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.neg ?float60)))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.sqrt RNE ?float78)))
(declare-const ?float108 Float16)
(assert (= ?float108 (fp.neg ?float81)))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.abs ?float101)))
(declare-const ?float110 Float32)
(assert (= ?float110 (fp.max ((_ to_fp 8 24) RTP ?float62) ?float83)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.sqrt RTN ?float99)))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.roundToIntegral RTP ?float90)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.min ((_ to_fp 11 53) RNE ?float90) ?float79)))
(declare-const ?float114 Float64)
(assert (= ?float114 (f17 ((_ to_fp 15 113) RNE ?float109) ((_ to_fp 8 24) RTZ ?float79) ((_ to_fp 15 113) RTN ?float103) ((_ to_fp 15 113) RTP ?float74))))
(declare-const ?float115 Float16)
(assert (= ?float115 (f16 ((_ to_fp 8 24) RTN ?float88) ((_ to_fp 15 113) RTP ?float98) ((_ to_fp 15 113) RNE ?float108) ?float63 ?float90)))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.sqrt RTZ ?float92)))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.add RTP ((_ to_fp 5 11) RTP ?float71) ?float108)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.roundToIntegral RNE ?float78)))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.add RTN ((_ to_fp 5 11) RTZ ?float106) ?float76)))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.neg ?float97)))
(declare-const ?float121 Float64)
(assert (= ?float121 (f2 ?float99 ((_ to_fp 15 113) RTZ ?float108) ?float86)))
(declare-const ?float122 Float32)
(assert (= ?float122 (fp.abs ?float84)))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.sub RTP ((_ to_fp 11 53) RTN ?float83) ?float68)))
(declare-const ?float124 Float128)
(assert (= ?float124 (fp.sqrt RNE ?float69)))
(declare-const ?float125 Float16)
(assert (= ?float125 (f22 ?float102 ((_ to_fp 15 113) RNE ?float95) ((_ to_fp 15 113) RNE ?float123))))
(declare-const ?float126 Float128)
(assert (= ?float126 (f24 ((_ to_fp 8 24) RNE ?float114) ?float87 ?float63 ((_ to_fp 11 53) RNE ?float98))))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.roundToIntegral RTP ?float64)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.abs ?float95)))
(declare-const ?float129 Float64)
(assert (= ?float129 (f17 ((_ to_fp 15 113) RTP ?float116) ((_ to_fp 8 24) RTP ?float120) ((_ to_fp 15 113) RTZ ?float125) ((_ to_fp 15 113) RTN ?float77))))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.roundToIntegral RNE ?float126)))
(declare-const ?float131 Float128)
(assert (= ?float131 (fp.div RNE ((_ to_fp 15 113) RTP ?float103) ?float80)))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.sqrt RTN ?float102)))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.min ((_ to_fp 8 24) RNE ?float94) ?float74)))
(declare-const ?float134 Float32)
(assert (= ?float134 (f10 ((_ to_fp 8 24) RTN ?float70) ((_ to_fp 8 24) RTZ ?float102) ((_ to_fp 11 53) RTN ?float124))))
(declare-const ?float135 Float16)
(assert (= ?float135 (f16 ?float122 ?float61 ((_ to_fp 15 113) RTZ ?float133) ?float74 ?float112)))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.roundToIntegral RNE ?float82)))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.max ?float122 ?float87)))
(declare-const ?float138 Float128)
(assert (= ?float138 (fp.roundToIntegral RTZ ?float106)))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.abs ?float77)))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.min ?float135 ((_ to_fp 5 11) RTP ?float85))))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.mul RTP ((_ to_fp 15 113) RTP ?float133) ?float106)))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.max ?float121 ?float139)))
(declare-const ?float143 Float32)
(assert (= ?float143 (f41 ((_ to_fp 8 24) RTN ?float92) ?float124 ((_ to_fp 11 53) RNE ?float89) ?float98 ((_ to_fp 5 11) RTP ?float93) ((_ to_fp 11 53) RTZ ?float128))))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.div RTN ((_ to_fp 8 24) RNE ?float130) ?float63)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.sqrt RTP ?float129)))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.sqrt RNE ?float125)))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.min ((_ to_fp 15 113) RNE ?float145) ?float141)))
(declare-const ?float148 Float32)
(assert (= ?float148 (fp.mul RTP ?float63 ((_ to_fp 8 24) RTP ?float103))))
(declare-const ?float149 Float32)
(assert (= ?float149 (fp.max ((_ to_fp 8 24) RTP ?float69) ?float122)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.lt ((_ to_fp 11 53) RTN ?float62) ?float79)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isPositive ?float71)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.leq ?float64 ?float127)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isSubnormal ?float149)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isInfinite ?float148)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isSubnormal ?float128)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (p4 ((_ to_fp 5 11) RNE ?float98) ?float116 ((_ to_fp 15 113) RTN ?float64) ((_ to_fp 15 113) RNE ?float77) ?float121 ((_ to_fp 5 11) RTZ ?float114) ((_ to_fp 15 113) RNE ?float112))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isInfinite ?float82)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNaN ?float88)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p0 ?float120)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.lt ((_ to_fp 8 24) RTP ?float69) ?float128)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNegative ?float70)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isInfinite ?float142)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.geq ((_ to_fp 8 24) RTZ ?float130) ?float78)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isNaN ?float106)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isInfinite ?float142)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.gt ?float107 ?float78)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.lt ?float96 ((_ to_fp 5 11) RNE ?float89))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isZero ?float117)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isPositive ?float93)))
; FINAL ASSERT
(assert (and ?bool157 ?bool156))
(check-sat)


-- iteration 78 --
(declare-fun f0 (Float32 Float16) Float128)
(declare-fun f1 (Float32 Float16 Float16 Float128 Float32 Float128 Float64 Float64 Float32 Float128) Float16)
(declare-fun f2 (Float64 Float128 Float128 Float64 Float32 Float128 Float64 Float32 Float64 Float128) Float128)
(declare-fun f3 (Float128 Float128) Float16)
(declare-fun f4 (Float16 Float16 Float32 Float128 Float128) Float32)
(declare-fun f5 (Float32 Float64 Float32 Float16 Float128 Float32 Float64) Float32)
(declare-fun f6 (Float64 Float128 Float32 Float32 Float128 Float64 Float32) Float64)
(declare-fun f7 (Float128) Float32)
(declare-fun f8 (Float128 Float32 Float32 Float128 Float32 Float16 Float32 Float32) Float128)
(declare-fun f9 (Float32 Float128 Float16) Float128)
(declare-fun f10 (Float32 Float64 Float64 Float32 Float128 Float32 Float128 Float32 Float128) Float64)
(declare-fun f11 (Float16 Float32 Float64) Float16)
(declare-fun f12 (Float64 Float32 Float64 Float16 Float32) Float128)
(declare-fun f13 (Float32 Float16 Float32) Float64)
(declare-fun f14 (Float16) Float16)
(declare-fun f15 (Float32 Float32 Float16 Float128 Float32 Float16 Float16) Float64)
(declare-fun f16 (Float32 Float64 Float64 Float32) Float32)
(declare-fun f17 (Float64 Float32 Float64 Float32) Float64)
(declare-fun f18 (Float128 Float128 Float64 Float128 Float16 Float32 Float128 Float32 Float128 Float16) Float32)
(declare-fun f19 (Float128 Float32 Float128 Float64) Float64)
(declare-fun f20 (Float16 Float64 Float64 Float16 Float128 Float16 Float128 Float128 Float128) Float64)
(declare-fun f21 (Float16 Float64 Float128 Float16 Float64 Float128 Float32 Float32 Float128) Float128)
(declare-fun f22 (Float64 Float128 Float32 Float64 Float32 Float16) Float32)
(declare-fun f23 (Float64 Float64 Float128 Float16 Float16 Float16 Float64 Float32 Float64) Float128)
(declare-fun f24 (Float128 Float32 Float128 Float32 Float128) Float16)
(declare-fun f25 (Float32 Float128 Float64 Float16 Float16) Float32)
(declare-fun f26 (Float16 Float16 Float32 Float16 Float16) Float64)
(declare-fun f27 (Float16 Float32 Float128 Float16 Float32 Float16 Float16 Float128 Float16 Float32) Float16)
(declare-fun f28 (Float32 Float64 Float32 Float32 Float16 Float32 Float64) Float64)
(declare-fun f29 (Float128 Float128 Float16 Float16 Float32 Float16) Float64)
(declare-fun f30 (Float16 Float16 Float16 Float16 Float128 Float64 Float64 Float128 Float128 Float64) Float64)
(declare-fun f31 (Float128) Float128)
(declare-fun f32 (Float32 Float128 Float64 Float64 Float16 Float128) Float16)
(declare-fun f33 (Float32 Float16 Float32 Float64 Float32 Float64 Float32) Float16)
(declare-fun f34 (Float32 Float128 Float16 Float64 Float128 Float16 Float128 Float64) Float64)
(declare-fun f35 (Float16 Float128 Float16 Float16 Float16 Float16 Float128 Float64) Float32)
(declare-fun f36 (Float64 Float64 Float128 Float16 Float16 Float64) Float16)
(declare-fun f37 (Float16 Float32 Float32 Float16 Float64 Float64 Float32 Float32) Float64)
(declare-fun f38 (Float32 Float64) Float32)
(declare-fun f39 (Float128 Float32 Float16 Float64 Float16 Float64 Float128 Float16) Float64)
(declare-fun f40 (Float32 Float32 Float64 Float64 Float64 Float128) Float16)
(declare-fun f41 (Float32) Float32)
(declare-fun f42 (Float32 Float128 Float128 Float64 Float128 Float128 Float32) Float64)
(declare-fun f43 (Float64 Float128 Float16 Float128 Float128 Float64) Float128)
(declare-fun f44 (Float64 Float32 Float32 Float16 Float64 Float64 Float64) Float16)
(declare-fun f45 (Float128 Float16) Float64)
(declare-fun f46 (Float32 Float16 Float64 Float32 Float128 Float128 Float16) Float32)
(declare-fun f47 (Float64 Float64 Float32 Float128 Float16) Float128)
(declare-fun f48 (Float16 Float128) Float128)
(declare-fun f49 (Float64 Float32 Float32) Float128)
(declare-fun p0 (Float64 Float128 Float32 Float32 Float16 Float64) Bool)
(declare-fun p1 (Float16 Float16 Float16 Float32 Float128) Bool)
(declare-fun p2 (Float128 Float16 Float128 Float16 Float64 Float64 Float64 Float128 Float64) Bool)
(declare-fun p3 (Float64 Float32 Float128 Float16 Float16 Float32 Float64 Float128 Float64) Bool)
(declare-fun p4 (Float64 Float64 Float32 Float16 Float16 Float16 Float32) Bool)
(declare-fun p5 (Float64 Float64 Float32 Float128 Float128 Float128) Bool)
(declare-fun p6 (Float32 Float64 Float16 Float32 Float32 Float128) Bool)
(declare-fun p7 (Float64 Float128 Float128 Float16 Float16 Float64 Float128) Bool)
(declare-fun p8 (Float64 Float64) Bool)
(declare-fun p9 (Float64 Float128 Float32 Float64 Float64 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float16)
(declare-const ?float62 Float32)
(declare-const ?float63 Float64)
(declare-const ?float64 Float128)
(declare-const ?float65 Float128)
(declare-const ?float66 Float32)
(declare-const ?float67 Float32)
(declare-const ?float68 Float32)
(declare-const ?float69 Float16)
(declare-const ?float70 Float64)
(declare-const ?float71 Float16)
(declare-const ?float72 Float32)
(declare-const ?float73 Float128)
(declare-const ?float74 Float128)
(declare-const ?float75 Float32)
(declare-const ?float76 Float128)
(declare-const ?float77 Float64)
(declare-const ?float78 Float64)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float64)
(assert (= ?float92 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float64)
(assert (= ?float98 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (f11 ((_ to_fp 5 11) RNE ?float75) ?float88 ((_ to_fp 11 53) RTN ?float94))))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.sqrt RTZ ?float62)))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.max ?float60 ((_ to_fp 5 11) RNE ?float78))))
(declare-const ?float103 Float128)
(assert (= ?float103 (fp.max ?float76 ?float91)))
(declare-const ?float104 Float16)
(assert (= ?float104 (f24 ((_ to_fp 15 113) RNE ?float71) ((_ to_fp 8 24) RTZ ?float63) ((_ to_fp 15 113) RNE ?float67) ((_ to_fp 8 24) RNE ?float103) ((_ to_fp 15 113) RTN ?float87))))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.neg ?float75)))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.min ?float76 ((_ to_fp 15 113) RTP ?float104))))
(declare-const ?float107 Float128)
(assert (= ?float107 (fp.sqrt RTN ?float64)))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.neg ?float87)))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.div RTZ ?float65 ((_ to_fp 15 113) RNE ?float105))))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.max ?float107 ((_ to_fp 15 113) RNE ?float71))))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.min ?float67 ((_ to_fp 8 24) RTZ ?float74))))
(declare-const ?float112 Float128)
(assert (= ?float112 (fp.roundToIntegral RNE ?float99)))
(declare-const ?float113 Float128)
(assert (= ?float113 (fp.div RTN ((_ to_fp 15 113) RTN ?float72) ?float106)))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.mul RTZ ?float68 ((_ to_fp 8 24) RTP ?float106))))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.sqrt RNE ?float89)))
(declare-const ?float116 Float128)
(assert (= ?float116 (fp.roundToIntegral RTZ ?float74)))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.mul RTP ((_ to_fp 15 113) RTZ ?float102) ?float99)))
(declare-const ?float118 Float64)
(assert (= ?float118 (fp.sqrt RTZ ?float98)))
(declare-const ?float119 Float128)
(assert (= ?float119 (fp.add RTZ ((_ to_fp 15 113) RTZ ?float96) ?float99)))
(declare-const ?float120 Float64)
(assert (= ?float120 (f26 ((_ to_fp 5 11) RNE ?float77) ((_ to_fp 5 11) RTP ?float96) ((_ to_fp 8 24) RTZ ?float106) ((_ to_fp 5 11) RTP ?float113) ((_ to_fp 5 11) RNE ?float79))))
(declare-const ?float121 Float16)
(assert (= ?float121 (f3 ?float107 ((_ to_fp 15 113) RNE ?float71))))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.min ((_ to_fp 15 113) RNE ?float77) ?float97)))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.div RTZ ((_ to_fp 11 53) RTZ ?float99) ?float77)))
(declare-const ?float124 Float128)
(assert (= ?float124 (fp.neg ?float65)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.mul RTP ?float72 ((_ to_fp 8 24) RTN ?float85))))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.abs ?float119)))
(declare-const ?float127 Float128)
(assert (= ?float127 (fp.abs ?float117)))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.max ((_ to_fp 15 113) RTZ ?float87) ?float124)))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.sqrt RNE ?float70)))
(declare-const ?float130 Float64)
(assert (= ?float130 (fp.add RTP ?float123 ?float81)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.add RTN ((_ to_fp 11 53) RNE ?float119) ?float63)))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.abs ?float63)))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.mul RTP ?float67 ?float72)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.mul RTZ ?float99 ?float110)))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.max ?float117 ((_ to_fp 15 113) RTN ?float96))))
(declare-const ?float136 Float32)
(assert (= ?float136 (fp.sub RTN ((_ to_fp 8 24) RTN ?float80) ?float105)))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.roundToIntegral RTN ?float63)))
(declare-const ?float138 Float128)
(assert (= ?float138 (fp.sqrt RTZ ?float97)))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.div RNE ?float82 ((_ to_fp 15 113) RNE ?float93))))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.div RTZ ?float136 ((_ to_fp 8 24) RTP ?float78))))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.min ?float121 ?float85)))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.sqrt RTP ?float86)))
(declare-const ?float143 Float64)
(assert (= ?float143 (f42 ((_ to_fp 8 24) RTN ?float61) ((_ to_fp 15 113) RNE ?float100) ?float127 ?float90 ((_ to_fp 15 113) RTN ?float111) ((_ to_fp 15 113) RNE ?float105) ((_ to_fp 8 24) RTP ?float95))))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.neg ?float87)))
(declare-const ?float145 Float128)
(assert (= ?float145 (fp.add RNE ?float109 ?float86)))
(declare-const ?float146 Float64)
(assert (= ?float146 (fp.max ((_ to_fp 11 53) RNE ?float107) ?float143)))
(declare-const ?float147 Float128)
(assert (= ?float147 (f31 ((_ to_fp 15 113) RTP ?float88))))
(declare-const ?float148 Float64)
(assert (= ?float148 (f20 ((_ to_fp 5 11) RTP ?float70) ((_ to_fp 11 53) RTP ?float67) ((_ to_fp 11 53) RTP ?float107) ?float102 ?float119 ((_ to_fp 5 11) RTN ?float108) ?float138 ?float134 ((_ to_fp 15 113) RTZ ?float118))))
(declare-const ?float149 Float32)
(assert (= ?float149 (fp.min ((_ to_fp 8 24) RNE ?float77) ?float88)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isNaN ?float92)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p6 ((_ to_fp 8 24) RTN ?float110) ?float83 ((_ to_fp 5 11) RNE ?float75) ((_ to_fp 8 24) RTN ?float86) ((_ to_fp 8 24) RNE ?float97) ((_ to_fp 15 113) RNE ?float93))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNormal ?float143)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isZero ?float100)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.leq ?float93 ?float130)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p4 ?float146 ((_ to_fp 11 53) RTP ?float128) ((_ to_fp 8 24) RTP ?float144) ((_ to_fp 5 11) RTP ?float113) ((_ to_fp 5 11) RTN ?float108) ((_ to_fp 5 11) RTZ ?float142) ((_ to_fp 8 24) RTP ?float86))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.leq ?float135 ((_ to_fp 15 113) RNE ?float132))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.gt ?float104 ((_ to_fp 5 11) RTZ ?float128))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNormal ?float128)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p4 ?float120 ?float120 ((_ to_fp 8 24) RNE ?float60) ((_ to_fp 5 11) RTP ?float147) ?float102 ((_ to_fp 5 11) RTP ?float112) ((_ to_fp 8 24) RTP ?float83))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNegative ?float133)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isPositive ?float101)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.lt ?float63 ?float123)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (p4 ?float79 ?float146 ((_ to_fp 8 24) RNE ?float83) ((_ to_fp 5 11) RTP ?float123) ((_ to_fp 5 11) RTP ?float139) ((_ to_fp 5 11) RNE ?float64) ((_ to_fp 8 24) RTP ?float97))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (p5 ((_ to_fp 11 53) RNE ?float71) ((_ to_fp 11 53) RTN ?float73) ((_ to_fp 8 24) RTN ?float108) ((_ to_fp 15 113) RTP ?float63) ((_ to_fp 15 113) RTP ?float87) ?float89)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.gt ((_ to_fp 5 11) RTN ?float108) ?float85)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNaN ?float82)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNormal ?float128)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isInfinite ?float62)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.leq ((_ to_fp 15 113) RNE ?float129) ?float76)))
; FINAL ASSERT
(assert (or (or (or (and (or ?bool169 (or (and ?bool157)) (or ?bool165 (or ?bool156 ?bool165 ?bool162))) (or ?bool157))) ?bool161 ?bool162) ?bool166 (or ?bool161 (and (or (and (and ?bool153 (and ?bool156 ?bool153 ?bool163) ?bool155) (or (and ?bool169 ?bool154)) (or (and ?bool155 ?bool160))) (and ?bool150 (and ?bool166 (or ?bool156 ?bool163)))) ?bool153) (and ?bool161 ?bool157))))
(check-sat)


-- iteration 79 --
(declare-fun f0 (Float64 Float32 Float64) Float16)
(declare-fun f1 (Float64 Float128 Float32) Float32)
(declare-fun f2 (Float16 Float64 Float32) Float64)
(declare-fun f3 (Float128 Float64 Float16 Float64 Float16 Float64 Float64 Float32 Float128) Float16)
(declare-fun f4 (Float128 Float32 Float64) Float128)
(declare-fun f5 (Float16) Float64)
(declare-fun f6 (Float32) Float32)
(declare-fun f7 (Float128 Float64 Float64 Float64 Float16 Float64) Float32)
(declare-fun f8 (Float128 Float32 Float32 Float64 Float128) Float32)
(declare-fun f9 (Float32 Float64 Float16 Float32) Float128)
(declare-fun f10 (Float16 Float128 Float64 Float128 Float16 Float16 Float16 Float16) Float16)
(declare-fun f11 (Float16 Float32 Float32 Float32 Float128 Float128 Float128 Float16) Float64)
(declare-fun f12 (Float128 Float128 Float16) Float32)
(declare-fun f13 (Float32 Float64 Float32 Float64) Float32)
(declare-fun f14 (Float16 Float16 Float128 Float128 Float32 Float32 Float128 Float16 Float128 Float32) Float128)
(declare-fun f15 (Float16 Float64 Float32 Float32 Float16) Float16)
(declare-fun f16 (Float32 Float128 Float128 Float128) Float16)
(declare-fun f17 (Float32 Float16) Float64)
(declare-fun f18 (Float16 Float64 Float16 Float16 Float64 Float32 Float32 Float32) Float128)
(declare-fun f19 (Float64 Float128 Float32 Float128 Float64 Float16 Float64) Float64)
(declare-fun f20 (Float32) Float32)
(declare-fun f21 (Float128 Float32 Float16 Float128 Float32 Float128 Float128 Float128 Float64 Float32) Float16)
(declare-fun f22 (Float16 Float16 Float128 Float128 Float16 Float64) Float32)
(declare-fun f23 (Float64 Float16) Float32)
(declare-fun f24 (Float64 Float32 Float128) Float128)
(declare-fun f25 (Float16 Float128 Float32 Float16 Float32) Float128)
(declare-fun f26 (Float16 Float16 Float16 Float64 Float64 Float64 Float16 Float128 Float128) Float64)
(declare-fun f27 (Float32 Float32 Float64 Float32 Float64 Float16 Float64 Float16 Float16) Float128)
(declare-fun f28 (Float64 Float64 Float32 Float64 Float128 Float32) Float16)
(declare-fun f29 (Float128 Float32 Float128 Float64 Float32 Float128 Float64 Float128) Float64)
(declare-fun f30 (Float128 Float128 Float64 Float64 Float32) Float64)
(declare-fun f31 (Float128) Float32)
(declare-fun f32 (Float16 Float128 Float64 Float16 Float128 Float128 Float64 Float16) Float16)
(declare-fun f33 (Float16 Float16 Float32 Float32 Float128 Float64 Float64 Float128 Float64) Float128)
(declare-fun f34 (Float128 Float32 Float16 Float128 Float32 Float128 Float64 Float64 Float128) Float32)
(declare-fun f35 (Float32 Float128 Float64 Float64) Float16)
(declare-fun f36 (Float32 Float128 Float32 Float64 Float32 Float64) Float16)
(declare-fun f37 (Float32 Float32 Float64 Float128) Float16)
(declare-fun f38 (Float32 Float32 Float64 Float128 Float32 Float128 Float64 Float16) Float16)
(declare-fun f39 (Float16) Float64)
(declare-fun f40 (Float128 Float64 Float64 Float32 Float32 Float32 Float16 Float16) Float64)
(declare-fun f41 (Float128 Float64 Float16 Float64 Float128 Float128 Float32) Float16)
(declare-fun f42 (Float64 Float16 Float16 Float64 Float32 Float128 Float32 Float64 Float32 Float64) Float128)
(declare-fun f43 (Float16 Float128 Float16) Float64)
(declare-fun f44 (Float32 Float64 Float64 Float64 Float32 Float128 Float32) Float64)
(declare-fun f45 (Float32 Float128 Float64 Float16 Float128 Float32 Float32 Float16 Float32 Float128) Float64)
(declare-fun f46 (Float16) Float16)
(declare-fun f47 (Float32 Float64) Float32)
(declare-fun f48 (Float128 Float64 Float64 Float64) Float128)
(declare-fun f49 (Float16 Float32 Float128 Float128 Float16 Float128 Float64 Float64 Float32 Float32) Float64)
(declare-fun p0 (Float128 Float128) Bool)
(declare-fun p1 (Float64) Bool)
(declare-fun p2 (Float64 Float64 Float16 Float64 Float64 Float128 Float32 Float32) Bool)
(declare-fun p3 (Float32 Float16 Float32 Float64) Bool)
(declare-fun p4 (Float64 Float32 Float64) Bool)
(declare-fun p5 (Float64 Float64 Float128 Float32 Float16 Float64) Bool)
(declare-fun p6 (Float16) Bool)
(declare-fun p7 (Float16 Float16 Float16 Float64 Float128) Bool)
(declare-fun p8 (Float32) Bool)
(declare-fun p9 (Float32 Float64 Float64 Float32 Float128 Float32 Float32 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float16)
(declare-const ?float62 Float16)
(declare-const ?float63 Float32)
(declare-const ?float64 Float128)
(declare-const ?float65 Float32)
(declare-const ?float66 Float128)
(declare-const ?float67 Float128)
(declare-const ?float68 Float128)
(declare-const ?float69 Float16)
(declare-const ?float70 Float128)
(declare-const ?float71 Float64)
(declare-const ?float72 Float16)
(declare-const ?float73 Float64)
(declare-const ?float74 Float64)
(declare-const ?float75 Float128)
(declare-const ?float76 Float128)
(declare-const ?float77 Float16)
(declare-const ?float78 Float64)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b0 #b10111101011 #b0101001001111101111011011111000011111111001001011001)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b1 #b00011 #b0000011000)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b0 #b00101 #b0111000001)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float128)
(assert (= ?float90 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b00001011011 #b1110011100110011100011111101101011101100110100101111)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b0 #b11101110 #b01110101111011111111010)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b1 #b01110 #b1010111000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b1 #b11011 #b1101010101)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.abs ?float69)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.sub RTP ((_ to_fp 5 11) RNE ?float67) ?float100)))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.mul RTN ((_ to_fp 8 24) RNE ?float67) ?float84)))
(declare-const ?float103 Float32)
(assert (= ?float103 (fp.neg ?float87)))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.div RTZ ?float103 ((_ to_fp 8 24) RTP ?float69))))
(declare-const ?float105 Float128)
(assert (= ?float105 (fp.neg ?float70)))
(declare-const ?float106 Float16)
(assert (= ?float106 (f15 ?float86 ((_ to_fp 11 53) RNE ?float79) ((_ to_fp 8 24) RTZ ?float80) ((_ to_fp 8 24) RTN ?float105) ?float98)))
(declare-const ?float107 Float16)
(assert (= ?float107 (f46 ?float62)))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.sqrt RTP ?float80)))
(declare-const ?float109 Float32)
(assert (= ?float109 (fp.roundToIntegral RTN ?float84)))
(declare-const ?float110 Float64)
(assert (= ?float110 (f17 ((_ to_fp 8 24) RTP ?float68) ((_ to_fp 5 11) RTZ ?float108))))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.roundToIntegral RTN ?float71)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.abs ?float91)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.max ?float96 ?float96)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.abs ?float71)))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.add RNE ?float108 ((_ to_fp 11 53) RTP ?float66))))
(declare-const ?float116 Float128)
(assert (= ?float116 (fp.max ((_ to_fp 15 113) RTN ?float115) ?float79)))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.sub RTZ ?float66 ((_ to_fp 15 113) RTZ ?float89))))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.sub RTP ((_ to_fp 15 113) RTZ ?float84) ?float68)))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.max ?float86 ?float99)))
(declare-const ?float120 Float16)
(assert (= ?float120 (fp.mul RNE ?float69 ?float69)))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.roundToIntegral RTZ ?float76)))
(declare-const ?float122 Float16)
(assert (= ?float122 (f15 ((_ to_fp 5 11) RNE ?float64) ((_ to_fp 11 53) RTZ ?float105) ?float104 ((_ to_fp 8 24) RTN ?float77) ((_ to_fp 5 11) RTZ ?float96))))
(declare-const ?float123 Float128)
(assert (= ?float123 (f27 ((_ to_fp 8 24) RTP ?float117) ((_ to_fp 8 24) RNE ?float110) ((_ to_fp 11 53) RTZ ?float66) ((_ to_fp 8 24) RTZ ?float67) ((_ to_fp 11 53) RTN ?float102) ((_ to_fp 5 11) RTP ?float115) ((_ to_fp 11 53) RTZ ?float76) ((_ to_fp 5 11) RTN ?float74) ?float101)))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.add RTP ((_ to_fp 11 53) RTZ ?float104) ?float89)))
(declare-const ?float125 Float128)
(assert (= ?float125 (f25 ((_ to_fp 5 11) RTP ?float87) ?float68 ((_ to_fp 8 24) RTN ?float76) ((_ to_fp 5 11) RTP ?float109) ?float103)))
(declare-const ?float126 Float64)
(assert (= ?float126 (fp.div RNE ((_ to_fp 11 53) RTN ?float66) ?float91)))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.sub RTP ((_ to_fp 5 11) RTN ?float110) ?float101)))
(declare-const ?float128 Float64)
(assert (= ?float128 (f29 ((_ to_fp 15 113) RTZ ?float97) ((_ to_fp 8 24) RTP ?float86) ?float75 ((_ to_fp 11 53) RTZ ?float62) ((_ to_fp 8 24) RTZ ?float120) ((_ to_fp 15 113) RTZ ?float122) ((_ to_fp 11 53) RTZ ?float86) ((_ to_fp 15 113) RTN ?float111))))
(declare-const ?float129 Float64)
(assert (= ?float129 (f29 ((_ to_fp 15 113) RNE ?float91) ((_ to_fp 8 24) RNE ?float113) ((_ to_fp 15 113) RTZ ?float60) ((_ to_fp 11 53) RTP ?float82) ((_ to_fp 8 24) RTZ ?float61) ((_ to_fp 15 113) RTP ?float111) ((_ to_fp 11 53) RTZ ?float79) ((_ to_fp 15 113) RTZ ?float104))))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.neg ?float63)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.abs ?float114)))
(declare-const ?float132 Float16)
(assert (= ?float132 (f10 ?float83 ((_ to_fp 15 113) RTN ?float124) ((_ to_fp 11 53) RTZ ?float104) ((_ to_fp 15 113) RTZ ?float69) ((_ to_fp 5 11) RTN ?float85) ?float98 ((_ to_fp 5 11) RTN ?float117) ((_ to_fp 5 11) RTZ ?float128))))
(declare-const ?float133 Float64)
(assert (= ?float133 (f11 ?float107 ((_ to_fp 8 24) RTP ?float112) ((_ to_fp 8 24) RTZ ?float86) ((_ to_fp 8 24) RTN ?float61) ((_ to_fp 15 113) RTZ ?float94) ((_ to_fp 15 113) RTP ?float81) ((_ to_fp 15 113) RNE ?float132) ((_ to_fp 5 11) RTN ?float79))))
(declare-const ?float134 Float32)
(assert (= ?float134 (f8 ((_ to_fp 15 113) RNE ?float128) ((_ to_fp 8 24) RNE ?float91) ((_ to_fp 8 24) RNE ?float96) ?float110 ((_ to_fp 15 113) RTN ?float106))))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.sqrt RTN ?float130)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.min ((_ to_fp 5 11) RNE ?float128) ?float88)))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.div RTP ?float116 ((_ to_fp 15 113) RTN ?float100))))
(declare-const ?float138 Float128)
(assert (= ?float138 (f48 ?float75 ((_ to_fp 11 53) RTZ ?float90) ?float126 ((_ to_fp 11 53) RTZ ?float117))))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.sqrt RTZ ?float60)))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.max ?float65 ((_ to_fp 8 24) RTP ?float90))))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.mul RTZ ?float105 ((_ to_fp 15 113) RTN ?float63))))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.roundToIntegral RNE ?float127)))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.abs ?float93)))
(declare-const ?float144 Float32)
(assert (= ?float144 (f20 ?float94)))
(declare-const ?float145 Float128)
(assert (= ?float145 (fp.sub RTP ((_ to_fp 15 113) RTN ?float83) ?float121)))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.div RTZ ?float121 ((_ to_fp 15 113) RNE ?float108))))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.add RTP ?float64 ?float145)))
(declare-const ?float148 Float16)
(assert (= ?float148 (f21 ((_ to_fp 15 113) RTN ?float80) ?float134 ?float69 ?float66 ?float130 ((_ to_fp 15 113) RTN ?float120) ((_ to_fp 15 113) RNE ?float99) ((_ to_fp 15 113) RNE ?float69) ((_ to_fp 11 53) RTN ?float122) ((_ to_fp 8 24) RNE ?float72))))
(declare-const ?float149 Float32)
(assert (= ?float149 (fp.max ((_ to_fp 8 24) RTZ ?float68) ?float135)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p2 ((_ to_fp 11 53) RTP ?float148) ((_ to_fp 11 53) RTZ ?float117) ((_ to_fp 5 11) RTN ?float129) ((_ to_fp 11 53) RTP ?float142) ((_ to_fp 11 53) RTN ?float127) ((_ to_fp 15 113) RTN ?float86) ?float84 ?float102)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isSubnormal ?float88)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isPositive ?float144)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.leq ((_ to_fp 11 53) RTN ?float60) ?float96)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.gt ((_ to_fp 5 11) RTZ ?float131) ?float72)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.gt ?float81 ?float85)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.gt ?float62 ((_ to_fp 5 11) RTZ ?float103))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.lt ?float61 ((_ to_fp 5 11) RNE ?float149))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isSubnormal ?float86)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.gt ((_ to_fp 8 24) RTP ?float115) ?float140)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.gt ((_ to_fp 5 11) RNE ?float64) ?float127)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.lt ?float140 ?float144)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.geq ((_ to_fp 8 24) RTN ?float62) ?float84)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.lt ((_ to_fp 5 11) RNE ?float109) ?float83)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (p6 ((_ to_fp 5 11) RNE ?float76))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p5 ((_ to_fp 11 53) RTN ?float117) ?float93 ((_ to_fp 15 113) RTZ ?float130) ((_ to_fp 8 24) RNE ?float141) ((_ to_fp 5 11) RTN ?float63) ((_ to_fp 11 53) RNE ?float87))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.geq ?float104 ((_ to_fp 8 24) RNE ?float85))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isSubnormal ?float96)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.lt ?float149 ((_ to_fp 8 24) RTZ ?float110))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isPositive ?float74)))
; FINAL ASSERT
(assert (and ?bool159 ?bool163 (and (or ?bool167 ?bool158))))
(check-sat)


-- iteration 80 --
(declare-fun f0 (Float16 Float128 Float16 Float16 Float128 Float64 Float32 Float128 Float32) Float64)
(declare-fun f1 (Float32 Float32 Float32 Float32 Float64 Float64 Float16 Float16 Float128 Float32) Float64)
(declare-fun f2 (Float128 Float32 Float64 Float64 Float16 Float64 Float32) Float64)
(declare-fun f3 (Float64 Float32 Float32 Float16 Float64 Float16 Float64 Float64) Float32)
(declare-fun f4 (Float128 Float16 Float128 Float64 Float128 Float128 Float128) Float32)
(declare-fun f5 (Float128 Float128 Float32 Float128 Float16 Float32 Float128) Float16)
(declare-fun f6 (Float32 Float32 Float32 Float64 Float64 Float64 Float128 Float32 Float32 Float16) Float128)
(declare-fun f7 (Float128) Float128)
(declare-fun f8 (Float16 Float128 Float64 Float16 Float16) Float32)
(declare-fun f9 (Float16 Float16 Float64 Float16 Float32) Float16)
(declare-fun f10 (Float128 Float64 Float128 Float16 Float32 Float64 Float32 Float16 Float16 Float64) Float32)
(declare-fun f11 (Float128 Float32 Float32 Float64) Float128)
(declare-fun f12 (Float64 Float128 Float32) Float64)
(declare-fun f13 (Float128 Float64 Float128 Float32 Float16 Float64 Float128 Float16 Float128) Float32)
(declare-fun f14 (Float64 Float32 Float16 Float64 Float64) Float32)
(declare-fun f15 (Float32 Float64 Float16) Float64)
(declare-fun f16 (Float16 Float16 Float128 Float16 Float64 Float64 Float64) Float32)
(declare-fun f17 (Float64 Float16) Float16)
(declare-fun f18 (Float16 Float128 Float32 Float16 Float32) Float64)
(declare-fun f19 (Float64 Float64 Float32 Float16 Float32 Float16 Float128 Float32 Float128) Float64)
(declare-fun f20 (Float16 Float32) Float128)
(declare-fun f21 (Float64 Float64 Float128 Float16 Float64 Float16 Float128 Float32) Float128)
(declare-fun f22 (Float128 Float16 Float16 Float16 Float128 Float32 Float128 Float16) Float16)
(declare-fun f23 (Float64 Float32 Float128 Float16 Float16 Float64) Float16)
(declare-fun f24 (Float128 Float16 Float64 Float32 Float32 Float32) Float16)
(declare-fun f25 (Float128 Float32 Float64 Float64 Float64 Float128 Float128 Float128) Float128)
(declare-fun f26 (Float16 Float32 Float16 Float16 Float32 Float64 Float16) Float16)
(declare-fun f27 (Float128 Float16 Float16 Float64 Float16 Float16) Float64)
(declare-fun f28 (Float16 Float16 Float64 Float128 Float64 Float64 Float32 Float32) Float16)
(declare-fun f29 (Float16 Float64 Float128 Float64 Float64 Float64) Float32)
(declare-fun f30 (Float16 Float128 Float128 Float128) Float128)
(declare-fun f31 (Float16 Float16 Float32 Float16 Float16 Float64 Float32 Float32 Float16 Float32) Float64)
(declare-fun f32 (Float32 Float32 Float32 Float32 Float16 Float128 Float32 Float128) Float16)
(declare-fun f33 (Float32 Float128 Float128 Float16 Float16 Float128 Float32 Float64 Float128) Float16)
(declare-fun f34 (Float128 Float64 Float64 Float128) Float128)
(declare-fun f35 (Float32 Float128 Float16 Float16 Float16 Float128 Float128 Float16) Float16)
(declare-fun f36 (Float16 Float64 Float64 Float16 Float16 Float128 Float64 Float16) Float32)
(declare-fun f37 (Float32 Float16 Float16 Float32 Float128 Float32 Float16 Float128 Float16) Float128)
(declare-fun f38 (Float16 Float64 Float16) Float16)
(declare-fun f39 (Float32 Float64 Float64 Float128 Float32) Float64)
(declare-fun f40 (Float16 Float128) Float128)
(declare-fun f41 (Float16 Float64 Float16 Float64 Float32 Float128 Float16) Float32)
(declare-fun f42 (Float32 Float32 Float128 Float128 Float16 Float32 Float16 Float64 Float128) Float128)
(declare-fun f43 (Float32 Float16 Float128 Float128 Float16 Float16) Float128)
(declare-fun f44 (Float64 Float128) Float16)
(declare-fun f45 (Float16 Float32 Float32 Float128 Float64 Float16 Float32 Float64 Float32 Float128) Float32)
(declare-fun f46 (Float128 Float64 Float32 Float32 Float128 Float128) Float128)
(declare-fun f47 (Float64 Float32 Float16) Float16)
(declare-fun f48 (Float128 Float128 Float64 Float128 Float64 Float64 Float32 Float128 Float64 Float16) Float128)
(declare-fun f49 (Float16) Float32)
(declare-fun p0 (Float16 Float16 Float64 Float16 Float32 Float16 Float32 Float128 Float16) Bool)
(declare-fun p1 (Float32 Float64 Float32 Float128) Bool)
(declare-fun p2 (Float16 Float64) Bool)
(declare-fun p3 (Float128 Float128 Float16) Bool)
(declare-fun p4 (Float128) Bool)
(declare-fun p5 (Float128 Float32 Float16 Float64 Float16 Float128 Float64 Float64 Float128 Float16) Bool)
(declare-fun p6 (Float128 Float32 Float128 Float64 Float64 Float32) Bool)
(declare-fun p7 (Float128 Float128 Float16) Bool)
(declare-fun p8 (Float32) Bool)
(declare-fun p9 (Float32 Float16 Float64 Float16 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float32)
(declare-const ?float62 Float64)
(declare-const ?float63 Float32)
(declare-const ?float64 Float32)
(declare-const ?float65 Float128)
(declare-const ?float66 Float128)
(declare-const ?float67 Float128)
(declare-const ?float68 Float16)
(declare-const ?float69 Float16)
(declare-const ?float70 Float32)
(declare-const ?float71 Float32)
(declare-const ?float72 Float16)
(declare-const ?float73 Float32)
(declare-const ?float74 Float32)
(declare-const ?float75 Float16)
(declare-const ?float76 Float128)
(declare-const ?float77 Float64)
(declare-const ?float78 Float64)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b1 #b110010011100011 #b0010100100001000100111010110101011100111110101001110011011101110000101001010101001101001111011001111011011111110)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b10010011 #b11000000100000100101110)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b0 #b01101 #b0101011000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b0 #b10000 #b0100011110)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b0 #b00010001 #b01000100010110101110011)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b1 #b00001 #b0000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (fp.add RTN ?float76 ((_ to_fp 15 113) RNE ?float90))))
(declare-const ?float101 Float16)
(assert (= ?float101 (f26 ?float97 ?float74 ?float72 ?float84 ?float96 ((_ to_fp 11 53) RNE ?float66) ((_ to_fp 5 11) RTN ?float93))))
(declare-const ?float102 Float128)
(assert (= ?float102 (f48 ((_ to_fp 15 113) RNE ?float83) ?float92 ((_ to_fp 11 53) RTN ?float61) ((_ to_fp 15 113) RNE ?float88) ?float88 ((_ to_fp 11 53) RNE ?float67) ((_ to_fp 8 24) RTZ ?float95) ((_ to_fp 15 113) RTZ ?float77) ((_ to_fp 11 53) RNE ?float64) ((_ to_fp 5 11) RTZ ?float80))))
(declare-const ?float103 Float128)
(assert (= ?float103 (f30 ((_ to_fp 5 11) RTZ ?float102) ((_ to_fp 15 113) RTP ?float88) ((_ to_fp 15 113) RTN ?float70) ?float100)))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.neg ?float86)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.add RNE ?float60 ((_ to_fp 11 53) RTZ ?float83))))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.abs ?float103)))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.min ((_ to_fp 8 24) RNE ?float106) ?float74)))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.div RNE ?float77 ((_ to_fp 11 53) RTN ?float74))))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.add RTN ?float98 ((_ to_fp 15 113) RNE ?float99))))
(declare-const ?float110 Float32)
(assert (= ?float110 (fp.mul RNE ?float70 ?float73)))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.max ?float108 ((_ to_fp 11 53) RTZ ?float79))))
(declare-const ?float112 Float128)
(assert (= ?float112 (fp.div RTN ?float106 ?float102)))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.add RTN ?float89 ?float83)))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.mul RTP ((_ to_fp 8 24) RNE ?float105) ?float71)))
(declare-const ?float115 Float64)
(assert (= ?float115 (f31 ((_ to_fp 5 11) RTN ?float83) ((_ to_fp 5 11) RTN ?float74) ((_ to_fp 8 24) RTN ?float65) ?float90 ?float101 ((_ to_fp 11 53) RTZ ?float83) ((_ to_fp 8 24) RTZ ?float106) ?float71 ((_ to_fp 5 11) RTN ?float110) ((_ to_fp 8 24) RNE ?float75))))
(declare-const ?float116 Float16)
(assert (= ?float116 (f23 ((_ to_fp 11 53) RTN ?float104) ((_ to_fp 8 24) RNE ?float80) ((_ to_fp 15 113) RTZ ?float61) ((_ to_fp 5 11) RTN ?float73) ((_ to_fp 5 11) RTP ?float103) ((_ to_fp 11 53) RNE ?float100))))
(declare-const ?float117 Float32)
(assert (= ?float117 (f29 ((_ to_fp 5 11) RTP ?float96) ((_ to_fp 11 53) RNE ?float73) ((_ to_fp 15 113) RTP ?float107) ((_ to_fp 11 53) RNE ?float87) ?float62 ((_ to_fp 11 53) RTZ ?float114))))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.add RTP ((_ to_fp 5 11) RTZ ?float71) ?float87)))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.roundToIntegral RTN ?float99)))
(declare-const ?float120 Float128)
(assert (= ?float120 (f37 ((_ to_fp 8 24) RNE ?float81) ((_ to_fp 5 11) RTZ ?float103) ?float118 ((_ to_fp 8 24) RTN ?float67) ((_ to_fp 15 113) RTZ ?float101) ((_ to_fp 8 24) RNE ?float102) ?float119 ?float98 ?float116)))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.abs ?float105)))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.add RTP ?float109 ?float102)))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.mul RTP ((_ to_fp 8 24) RTP ?float116) ?float83)))
(declare-const ?float124 Float16)
(assert (= ?float124 (fp.neg ?float68)))
(declare-const ?float125 Float16)
(assert (= ?float125 (fp.abs ?float104)))
(declare-const ?float126 Float16)
(assert (= ?float126 (fp.abs ?float81)))
(declare-const ?float127 Float64)
(assert (= ?float127 (fp.sqrt RTZ ?float91)))
(declare-const ?float128 Float16)
(assert (= ?float128 (fp.mul RNE ?float94 ((_ to_fp 5 11) RTZ ?float114))))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.div RTN ((_ to_fp 5 11) RNE ?float103) ?float90)))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.add RTZ ((_ to_fp 8 24) RNE ?float104) ?float113)))
(declare-const ?float131 Float128)
(assert (= ?float131 (fp.mul RTN ?float102 ((_ to_fp 15 113) RTP ?float89))))
(declare-const ?float132 Float64)
(assert (= ?float132 (f18 ((_ to_fp 5 11) RTN ?float111) ?float80 ?float70 ?float85 ((_ to_fp 8 24) RTZ ?float100))))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.abs ?float105)))
(declare-const ?float134 Float32)
(assert (= ?float134 (fp.max ?float89 ?float70)))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.sqrt RNE ?float70)))
(declare-const ?float136 Float128)
(assert (= ?float136 (f43 ((_ to_fp 8 24) RTP ?float126) ((_ to_fp 5 11) RTP ?float77) ((_ to_fp 15 113) RTN ?float89) ((_ to_fp 15 113) RTZ ?float69) ((_ to_fp 5 11) RTZ ?float134) ((_ to_fp 5 11) RTP ?float132))))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.neg ?float136)))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.add RTN ?float118 ((_ to_fp 5 11) RNE ?float78))))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.min ((_ to_fp 8 24) RNE ?float92) ?float107)))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.abs ?float101)))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.add RTP ((_ to_fp 5 11) RNE ?float139) ?float95)))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.max ?float94 ?float104)))
(declare-const ?float143 Float16)
(assert (= ?float143 (fp.roundToIntegral RTN ?float101)))
(declare-const ?float144 Float128)
(assert (= ?float144 (fp.mul RNE ?float80 ((_ to_fp 15 113) RTP ?float135))))
(declare-const ?float145 Float16)
(assert (= ?float145 (fp.div RTN ?float143 ?float75)))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.abs ?float81)))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.max ?float113 ((_ to_fp 8 24) RTP ?float84))))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.mul RTP ((_ to_fp 5 11) RTZ ?float88) ?float81)))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.neg ?float145)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isNormal ?float136)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.lt ((_ to_fp 11 53) RTZ ?float82) ?float105)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.geq ?float118 ?float116)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isSubnormal ?float119)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNaN ?float90)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isPositive ?float149)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (p8 ((_ to_fp 8 24) RTN ?float95))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.leq ?float91 ((_ to_fp 11 53) RTN ?float134))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNegative ?float60)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p9 ?float74 ?float86 ?float132 ?float142 ((_ to_fp 11 53) RTN ?float110))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.gt ?float64 ((_ to_fp 8 24) RNE ?float141))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isPositive ?float131)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNormal ?float125)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNaN ?float137)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isZero ?float110)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p3 ((_ to_fp 15 113) RTN ?float105) ((_ to_fp 15 113) RNE ?float127) ((_ to_fp 5 11) RTP ?float112))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isPositive ?float85)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isInfinite ?float64)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (p3 ((_ to_fp 15 113) RTP ?float99) ((_ to_fp 15 113) RNE ?float104) ?float140)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNegative ?float69)))
; FINAL ASSERT
(assert (and ?bool163 (or (and (and ?bool152 (and (or ?bool164 (or ?bool157 ?bool153)) ?bool168 (or (and ?bool157 ?bool157) (or ?bool155)))) (or (or (and (or ?bool164 ?bool159)) (or ?bool151 (and ?bool160 ?bool165))))) (or (and ?bool166 ?bool154 ?bool159)))))
(check-sat)


-- iteration 81 --
(declare-fun f0 (Float64 Float16 Float16 Float16 Float16 Float16 Float32 Float16 Float32 Float128) Float32)
(declare-fun f1 (Float32 Float128 Float16 Float128 Float32 Float32 Float64 Float64) Float128)
(declare-fun f2 (Float16 Float16 Float64 Float64) Float16)
(declare-fun f3 (Float16) Float32)
(declare-fun f4 (Float64 Float128 Float64) Float32)
(declare-fun f5 (Float16 Float128 Float64) Float32)
(declare-fun f6 (Float16 Float128 Float128 Float16) Float16)
(declare-fun f7 (Float64 Float32) Float16)
(declare-fun f8 (Float128 Float32) Float16)
(declare-fun f9 (Float128 Float128 Float128 Float16 Float16 Float64 Float128 Float16 Float32 Float32) Float128)
(declare-fun f10 (Float128 Float128 Float32 Float16 Float128 Float64 Float32 Float16) Float16)
(declare-fun f11 (Float64 Float16 Float16 Float128) Float16)
(declare-fun f12 (Float64 Float32 Float16 Float128 Float128 Float128 Float32 Float32 Float16 Float16) Float64)
(declare-fun f13 (Float128 Float128 Float16 Float32) Float128)
(declare-fun f14 (Float32 Float32 Float64 Float64 Float16 Float128) Float16)
(declare-fun f15 (Float32 Float64 Float128 Float128 Float64 Float16 Float64) Float16)
(declare-fun f16 (Float64 Float64 Float16 Float32 Float16 Float32 Float16) Float64)
(declare-fun f17 (Float16 Float16) Float32)
(declare-fun f18 (Float32 Float16 Float64 Float64 Float16 Float16 Float128 Float32 Float16 Float16) Float64)
(declare-fun f19 (Float32 Float64 Float16 Float128 Float16 Float32 Float64) Float64)
(declare-fun f20 (Float32) Float64)
(declare-fun f21 (Float128 Float64 Float32) Float64)
(declare-fun f22 (Float128 Float128 Float128 Float64 Float64 Float16 Float16 Float128) Float16)
(declare-fun f23 (Float64 Float32 Float16 Float32 Float128 Float64 Float16 Float16 Float64 Float128) Float32)
(declare-fun f24 (Float128 Float16 Float128 Float128 Float16 Float32) Float32)
(declare-fun f25 (Float32 Float128 Float32 Float16 Float32 Float128 Float64 Float16 Float16 Float16) Float32)
(declare-fun f26 (Float128 Float128 Float128 Float64 Float128 Float64 Float128 Float64 Float64 Float16) Float32)
(declare-fun f27 (Float64 Float32 Float64 Float128 Float64 Float16 Float128 Float128 Float16) Float32)
(declare-fun f28 (Float32 Float128 Float128 Float32 Float16 Float32) Float128)
(declare-fun f29 (Float32 Float64 Float64 Float128 Float128 Float64 Float64 Float16) Float64)
(declare-fun f30 (Float128) Float32)
(declare-fun f31 (Float64 Float128 Float128 Float128 Float32 Float128 Float64 Float32 Float16 Float128) Float16)
(declare-fun f32 (Float128 Float128 Float32 Float128 Float32) Float16)
(declare-fun f33 (Float16 Float16 Float16 Float128 Float32 Float16) Float64)
(declare-fun f34 (Float128 Float16 Float64 Float64 Float128 Float128 Float32 Float32) Float64)
(declare-fun f35 (Float64 Float32 Float128 Float32 Float32 Float128 Float32 Float128) Float32)
(declare-fun f36 (Float32) Float128)
(declare-fun f37 (Float128 Float64) Float64)
(declare-fun f38 (Float16 Float32 Float32 Float32 Float64) Float32)
(declare-fun f39 (Float16 Float16 Float32 Float64 Float128 Float128 Float128 Float32 Float16) Float16)
(declare-fun f40 (Float128 Float32 Float32 Float128 Float128 Float32 Float16 Float16 Float128 Float32) Float16)
(declare-fun f41 (Float32 Float64 Float64 Float16 Float16 Float32 Float64 Float128) Float64)
(declare-fun f42 (Float64 Float32) Float128)
(declare-fun f43 (Float128 Float64 Float64 Float128) Float16)
(declare-fun f44 (Float128 Float128 Float16 Float64 Float64 Float16 Float64 Float16 Float16 Float64) Float64)
(declare-fun f45 (Float128) Float32)
(declare-fun f46 (Float128 Float32 Float32 Float128 Float16 Float64) Float128)
(declare-fun f47 (Float128 Float64) Float32)
(declare-fun f48 (Float128 Float64 Float32 Float64 Float128 Float32) Float64)
(declare-fun f49 (Float32 Float64 Float64 Float32 Float16) Float64)
(declare-fun p0 (Float32 Float128 Float16 Float32 Float64 Float64 Float16 Float64 Float64) Bool)
(declare-fun p1 (Float32 Float16 Float64 Float32 Float64) Bool)
(declare-fun p2 (Float32) Bool)
(declare-fun p3 (Float128 Float128 Float32) Bool)
(declare-fun p4 (Float64 Float16 Float32 Float64 Float64 Float128) Bool)
(declare-fun p5 (Float32 Float128 Float64 Float64) Bool)
(declare-fun p6 (Float64 Float32 Float128 Float64 Float16 Float128 Float64 Float32 Float16) Bool)
(declare-fun p7 (Float16 Float16 Float32) Bool)
(declare-fun p8 (Float128 Float128 Float64) Bool)
(declare-fun p9 (Float128 Float16 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float128)
(declare-const ?float62 Float32)
(declare-const ?float63 Float64)
(declare-const ?float64 Float64)
(declare-const ?float65 Float16)
(declare-const ?float66 Float32)
(declare-const ?float67 Float16)
(declare-const ?float68 Float64)
(declare-const ?float69 Float32)
(declare-const ?float70 Float32)
(declare-const ?float71 Float32)
(declare-const ?float72 Float32)
(declare-const ?float73 Float16)
(declare-const ?float74 Float32)
(declare-const ?float75 Float16)
(declare-const ?float76 Float32)
(declare-const ?float77 Float32)
(declare-const ?float78 Float128)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b1 #b10010101000 #b0111110010000110100110111001100000101110000100111101)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b1 #b10000100111 #b1110110000000000101100000111000101110100010011111101)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b0 #b10101000 #b10101010110001011101011)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b0 #b101010100001000 #b1010010110111010001000011010111110110100010011011111100110110011000001000011111011011100010100000100110000101111)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b0 #b10110 #b0000111111)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b1 #b101001001100100 #b1000111000100100011111000010110001110010100111110000001110001111111101110110000000001101011010000101010000100001)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (fp.roundToIntegral RTP ?float84)))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.add RTP ?float97 ((_ to_fp 15 113) RTZ ?float93))))
(declare-const ?float102 Float32)
(assert (= ?float102 (f26 ((_ to_fp 15 113) RNE ?float87) ((_ to_fp 15 113) RTZ ?float86) ?float78 ?float64 ((_ to_fp 15 113) RTN ?float80) ((_ to_fp 11 53) RTZ ?float72) ((_ to_fp 15 113) RTZ ?float77) ((_ to_fp 11 53) RTP ?float70) ((_ to_fp 11 53) RTN ?float89) ((_ to_fp 5 11) RTN ?float80))))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.abs ?float83)))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.roundToIntegral RTZ ?float97)))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.sub RTZ ?float79 ?float86)))
(declare-const ?float106 Float64)
(assert (= ?float106 (f21 ((_ to_fp 15 113) RNE ?float93) ((_ to_fp 11 53) RTP ?float70) ?float81)))
(declare-const ?float107 Float128)
(assert (= ?float107 (fp.roundToIntegral RTP ?float89)))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.abs ?float89)))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.mul RNE ?float63 ((_ to_fp 11 53) RTZ ?float72))))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.div RNE ?float104 ((_ to_fp 15 113) RTP ?float71))))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.roundToIntegral RTZ ?float63)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.abs ?float63)))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.sub RTP ?float79 ((_ to_fp 5 11) RTN ?float62))))
(declare-const ?float114 Float128)
(assert (= ?float114 (fp.mul RTN ?float108 ?float104)))
(declare-const ?float115 Float64)
(assert (= ?float115 (f48 ?float104 ((_ to_fp 11 53) RTP ?float101) ((_ to_fp 8 24) RTZ ?float114) ?float63 ((_ to_fp 15 113) RTP ?float86) ((_ to_fp 8 24) RNE ?float90))))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.add RNE ?float80 ((_ to_fp 8 24) RNE ?float100))))
(declare-const ?float117 Float16)
(assert (= ?float117 (f2 ?float65 ?float67 ((_ to_fp 11 53) RTP ?float110) ((_ to_fp 11 53) RTZ ?float85))))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.div RTN ((_ to_fp 8 24) RNE ?float85) ?float72)))
(declare-const ?float119 Float128)
(assert (= ?float119 (fp.add RTZ ?float97 ?float78)))
(declare-const ?float120 Float16)
(assert (= ?float120 (fp.roundToIntegral RTN ?float75)))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.sub RTN ?float91 ?float98)))
(declare-const ?float122 Float64)
(assert (= ?float122 (fp.max ?float115 ?float63)))
(declare-const ?float123 Float16)
(assert (= ?float123 (f10 ?float99 ((_ to_fp 15 113) RTP ?float73) ((_ to_fp 8 24) RTN ?float121) ((_ to_fp 5 11) RNE ?float119) ((_ to_fp 15 113) RTZ ?float100) ((_ to_fp 11 53) RTP ?float65) ?float77 ((_ to_fp 5 11) RTP ?float106))))
(declare-const ?float124 Float16)
(assert (= ?float124 (f31 ?float109 ((_ to_fp 15 113) RTZ ?float118) ?float101 ((_ to_fp 15 113) RTP ?float62) ((_ to_fp 8 24) RTN ?float113) ?float97 ((_ to_fp 11 53) RTP ?float77) ?float88 ((_ to_fp 5 11) RNE ?float76) ((_ to_fp 15 113) RTZ ?float74))))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.sqrt RTP ?float63)))
(declare-const ?float126 Float64)
(assert (= ?float126 (fp.roundToIntegral RTP ?float122)))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.min ?float69 ((_ to_fp 8 24) RTZ ?float105))))
(declare-const ?float128 Float16)
(assert (= ?float128 (f32 ?float98 ((_ to_fp 15 113) RNE ?float96) ?float93 ?float101 ((_ to_fp 8 24) RTN ?float97))))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.min ?float105 ?float117)))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.sqrt RTN ?float117)))
(declare-const ?float131 Float32)
(assert (= ?float131 (fp.roundToIntegral RTN ?float102)))
(declare-const ?float132 Float64)
(assert (= ?float132 (f19 ((_ to_fp 8 24) RTZ ?float85) ((_ to_fp 11 53) RTP ?float110) ?float128 ((_ to_fp 15 113) RNE ?float77) ((_ to_fp 5 11) RTP ?float64) ?float116 ((_ to_fp 11 53) RTN ?float104))))
(declare-const ?float133 Float64)
(assert (= ?float133 (f41 ((_ to_fp 8 24) RTN ?float64) ?float84 ((_ to_fp 11 53) RNE ?float79) ((_ to_fp 5 11) RTP ?float102) ?float73 ((_ to_fp 8 24) RNE ?float114) ((_ to_fp 11 53) RNE ?float85) ((_ to_fp 15 113) RTN ?float106))))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.neg ?float129)))
(declare-const ?float135 Float64)
(assert (= ?float135 (f20 ((_ to_fp 8 24) RTZ ?float132))))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.add RTP ((_ to_fp 11 53) RTP ?float128) ?float132)))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.div RTN ?float130 ?float94)))
(declare-const ?float138 Float16)
(assert (= ?float138 (f32 ((_ to_fp 15 113) RTZ ?float106) ((_ to_fp 15 113) RTZ ?float136) ?float62 ((_ to_fp 15 113) RTZ ?float72) ((_ to_fp 8 24) RTZ ?float128))))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.neg ?float83)))
(declare-const ?float140 Float64)
(assert (= ?float140 (fp.div RTN ((_ to_fp 11 53) RTZ ?float79) ?float100)))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.max ?float65 ((_ to_fp 5 11) RTZ ?float106))))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.max ((_ to_fp 5 11) RNE ?float122) ?float83)))
(declare-const ?float143 Float16)
(assert (= ?float143 (f6 ((_ to_fp 5 11) RTP ?float70) ?float91 ?float121 ?float92)))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.neg ?float68)))
(declare-const ?float145 Float128)
(assert (= ?float145 (fp.roundToIntegral RTZ ?float119)))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.sub RNE ((_ to_fp 8 24) RTP ?float134) ?float87)))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.max ((_ to_fp 15 113) RTZ ?float81) ?float61)))
(declare-const ?float148 Float64)
(assert (= ?float148 (f18 ((_ to_fp 8 24) RTN ?float125) ((_ to_fp 5 11) RNE ?float88) ((_ to_fp 11 53) RNE ?float138) ?float90 ?float142 ((_ to_fp 5 11) RTP ?float111) ((_ to_fp 15 113) RNE ?float94) ((_ to_fp 8 24) RTP ?float142) ((_ to_fp 5 11) RNE ?float80) ?float79)))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.roundToIntegral RTP ?float75)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.gt ((_ to_fp 8 24) RTP ?float148) ?float127)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.lt ((_ to_fp 11 53) RTZ ?float107) ?float135)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNormal ?float71)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.geq ?float78 ?float121)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isPositive ?float83)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.leq ?float128 ((_ to_fp 5 11) RNE ?float74))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isPositive ?float85)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p6 ?float106 ((_ to_fp 8 24) RTN ?float145) ((_ to_fp 15 113) RNE ?float80) ?float100 ?float83 ((_ to_fp 15 113) RTZ ?float65) ?float122 ((_ to_fp 8 24) RTN ?float132) ?float94)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.eq ?float113 ((_ to_fp 5 11) RTZ ?float66))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isNaN ?float142)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNormal ?float132)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (p8 ((_ to_fp 15 113) RTP ?float65) ((_ to_fp 15 113) RNE ?float93) ((_ to_fp 11 53) RTP ?float108))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNegative ?float60)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.eq ?float97 ((_ to_fp 15 113) RTZ ?float63))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.eq ?float62 ((_ to_fp 8 24) RTP ?float141))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.gt ?float60 ((_ to_fp 11 53) RTP ?float73))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isSubnormal ?float71)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p0 ((_ to_fp 8 24) RTN ?float110) ((_ to_fp 15 113) RTP ?float71) ?float138 ((_ to_fp 8 24) RTZ ?float111) ((_ to_fp 11 53) RTZ ?float75) ((_ to_fp 11 53) RTP ?float78) ((_ to_fp 5 11) RTP ?float111) ((_ to_fp 11 53) RTZ ?float78) ((_ to_fp 11 53) RNE ?float108))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (p8 ?float98 ((_ to_fp 15 113) RTZ ?float66) ?float112)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.leq ((_ to_fp 15 113) RTN ?float118) ?float85)))
; FINAL ASSERT
(assert (and ?bool155 ?bool165))
(check-sat)


-- iteration 82 --
(declare-fun f0 (Float128 Float64 Float64 Float64 Float16 Float64 Float16 Float16 Float128) Float128)
(declare-fun f1 (Float128 Float64) Float128)
(declare-fun f2 (Float32 Float32 Float64 Float64) Float64)
(declare-fun f3 (Float16 Float16 Float16 Float128 Float64 Float64 Float32) Float64)
(declare-fun f4 (Float16 Float32 Float32 Float16 Float16) Float32)
(declare-fun f5 (Float16 Float16 Float16 Float64 Float128 Float32) Float128)
(declare-fun f6 (Float64 Float64 Float64 Float128 Float32 Float16 Float128 Float64) Float16)
(declare-fun f7 (Float16 Float16 Float128) Float128)
(declare-fun f8 (Float16 Float32) Float32)
(declare-fun f9 (Float16 Float16 Float64 Float16 Float32 Float64 Float64 Float32) Float64)
(declare-fun f10 (Float64 Float64 Float32 Float128 Float32 Float16 Float32 Float32 Float64 Float64) Float128)
(declare-fun f11 (Float128 Float64 Float32 Float16 Float128 Float16 Float16 Float32 Float16) Float64)
(declare-fun f12 (Float16 Float128 Float32 Float64 Float128 Float64 Float128 Float64 Float32) Float32)
(declare-fun f13 (Float64 Float128) Float128)
(declare-fun f14 (Float64 Float64 Float16 Float64 Float64 Float32 Float16 Float16 Float32 Float32) Float64)
(declare-fun f15 (Float32 Float64 Float128 Float64 Float64 Float128 Float64 Float64 Float128) Float64)
(declare-fun f16 (Float128 Float16 Float32 Float16 Float16 Float64) Float32)
(declare-fun f17 (Float64 Float32 Float128 Float32 Float64 Float64 Float128) Float64)
(declare-fun f18 (Float16 Float128 Float128) Float32)
(declare-fun f19 (Float32 Float128) Float16)
(declare-fun f20 (Float16 Float64 Float128 Float32 Float16 Float32 Float128 Float64 Float32 Float16) Float128)
(declare-fun f21 (Float32 Float128 Float32 Float128 Float16 Float16 Float32 Float16 Float128) Float64)
(declare-fun f22 (Float128 Float128 Float128 Float64) Float32)
(declare-fun f23 (Float32 Float64 Float64 Float128 Float128) Float128)
(declare-fun f24 (Float16 Float128 Float64) Float64)
(declare-fun f25 (Float32 Float16 Float16 Float16 Float128 Float32 Float32 Float16 Float16 Float64) Float16)
(declare-fun f26 (Float32 Float128 Float16 Float32 Float32 Float128 Float64 Float32 Float16 Float32) Float128)
(declare-fun f27 (Float64 Float32 Float128) Float32)
(declare-fun f28 (Float32 Float64 Float32) Float64)
(declare-fun f29 (Float64 Float128 Float64 Float32 Float64 Float128 Float32 Float16 Float16) Float64)
(declare-fun f30 (Float16 Float128 Float32 Float64 Float32) Float64)
(declare-fun f31 (Float128 Float128 Float32 Float128 Float16 Float32 Float16) Float64)
(declare-fun f32 (Float32 Float16 Float16 Float32) Float64)
(declare-fun f33 (Float32 Float128 Float64 Float32 Float64 Float64 Float16 Float16 Float128) Float128)
(declare-fun f34 (Float128 Float32 Float32 Float64 Float64 Float128 Float16) Float16)
(declare-fun f35 (Float32 Float16 Float16) Float64)
(declare-fun f36 (Float32 Float32 Float128) Float16)
(declare-fun f37 (Float64 Float32 Float128 Float64 Float128 Float16 Float16 Float16 Float16 Float16) Float32)
(declare-fun f38 (Float32 Float16 Float32 Float32) Float128)
(declare-fun f39 (Float32 Float128 Float64 Float64 Float64 Float64 Float64) Float16)
(declare-fun f40 (Float64 Float128 Float16 Float16 Float32 Float16 Float32 Float64 Float64 Float16) Float128)
(declare-fun f41 (Float16 Float32 Float16 Float32) Float16)
(declare-fun f42 (Float32 Float64) Float64)
(declare-fun f43 (Float16 Float128 Float128 Float16 Float64 Float128 Float64 Float16) Float128)
(declare-fun f44 (Float128 Float64 Float32 Float128 Float16 Float16 Float32 Float16 Float32) Float128)
(declare-fun f45 (Float16 Float128 Float32 Float128 Float32) Float128)
(declare-fun f46 (Float64 Float128 Float128 Float128) Float64)
(declare-fun f47 (Float32 Float128 Float32 Float16 Float32 Float128 Float64) Float128)
(declare-fun f48 (Float64 Float32 Float64 Float16 Float16 Float32) Float32)
(declare-fun f49 (Float16 Float64 Float64) Float128)
(declare-fun p0 (Float128 Float64 Float32 Float128 Float16 Float128 Float16 Float32 Float64) Bool)
(declare-fun p1 (Float128 Float128 Float16 Float32 Float32 Float64 Float128 Float16) Bool)
(declare-fun p2 (Float16 Float16 Float64 Float64) Bool)
(declare-fun p3 (Float64) Bool)
(declare-fun p4 (Float128 Float32 Float64 Float32 Float16 Float128 Float16 Float64) Bool)
(declare-fun p5 (Float32 Float32 Float128 Float32 Float128 Float128 Float16 Float16 Float32 Float32) Bool)
(declare-fun p6 (Float16 Float16 Float128 Float128 Float64 Float16 Float64 Float64) Bool)
(declare-fun p7 (Float32 Float128 Float16 Float16 Float128 Float128) Bool)
(declare-fun p8 (Float32 Float32 Float128 Float64 Float64 Float32) Bool)
(declare-fun p9 (Float16 Float16 Float64 Float16 Float64 Float128 Float32 Float64 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float32)
(declare-const ?float62 Float64)
(declare-const ?float63 Float16)
(declare-const ?float64 Float64)
(declare-const ?float65 Float64)
(declare-const ?float66 Float64)
(declare-const ?float67 Float32)
(declare-const ?float68 Float64)
(declare-const ?float69 Float128)
(declare-const ?float70 Float16)
(declare-const ?float71 Float64)
(declare-const ?float72 Float64)
(declare-const ?float73 Float32)
(declare-const ?float74 Float32)
(declare-const ?float75 Float32)
(declare-const ?float76 Float32)
(declare-const ?float77 Float16)
(declare-const ?float78 Float64)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b0 #b11111101 #b10100100001010000001111)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b1 #b00101001 #b01011100110111111111011)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b1 #b10101100 #b11100010010001101101011)))
(declare-const ?float90 Float128)
(assert (= ?float90 (fp #b1 #b010111010100110 #b0111010101001111001011101100110001110011110010011111111000100110011101100111110010110110011010000101111110100100)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float64)
(assert (= ?float92 (fp #b1 #b01101001000 #b0101011001101011001110101101110110011111111000001000)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b0 #b10111010 #b01101001010001110110111)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b1 #b10000001 #b11011001111000110111001)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b1 #b00001 #b0000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (f48 ((_ to_fp 11 53) RNE ?float83) ((_ to_fp 8 24) RTP ?float68) ((_ to_fp 11 53) RNE ?float90) ((_ to_fp 5 11) RTZ ?float80) ((_ to_fp 5 11) RTP ?float67) ?float85)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.sqrt RTN ?float63)))
(declare-const ?float102 Float32)
(assert (= ?float102 (f16 ((_ to_fp 15 113) RNE ?float66) ((_ to_fp 5 11) RNE ?float85) ?float76 ((_ to_fp 5 11) RNE ?float66) ?float70 ((_ to_fp 11 53) RNE ?float63))))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.neg ?float63)))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.sqrt RTN ?float79)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.neg ?float71)))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.sub RNE ?float66 ?float80)))
(declare-const ?float107 Float128)
(assert (= ?float107 (f40 ((_ to_fp 11 53) RTP ?float102) ((_ to_fp 15 113) RNE ?float77) ((_ to_fp 5 11) RTN ?float88) ((_ to_fp 5 11) RTP ?float89) ((_ to_fp 8 24) RTN ?float78) ((_ to_fp 5 11) RTZ ?float62) ?float76 ((_ to_fp 11 53) RTN ?float82) ?float64 ((_ to_fp 5 11) RNE ?float78))))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.sqrt RNE ?float68)))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.mul RTP ?float107 ((_ to_fp 15 113) RNE ?float71))))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.max ((_ to_fp 15 113) RTP ?float103) ?float69)))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.min ?float105 ?float66)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.min ((_ to_fp 11 53) RTP ?float74) ?float72)))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.add RTP ?float61 ((_ to_fp 8 24) RNE ?float101))))
(declare-const ?float114 Float64)
(assert (= ?float114 (f15 ?float89 ((_ to_fp 11 53) RTP ?float101) ((_ to_fp 15 113) RTP ?float92) ((_ to_fp 11 53) RTZ ?float67) ((_ to_fp 11 53) RTN ?float99) ((_ to_fp 15 113) RTP ?float83) ((_ to_fp 11 53) RTP ?float102) ((_ to_fp 11 53) RTN ?float70) ((_ to_fp 15 113) RTN ?float66))))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.sqrt RTZ ?float91)))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.sub RTP ?float73 ((_ to_fp 8 24) RTN ?float65))))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.mul RNE ?float88 ?float109)))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.max ((_ to_fp 5 11) RTN ?float72) ?float103)))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.neg ?float92)))
(declare-const ?float120 Float32)
(assert (= ?float120 (f22 ((_ to_fp 15 113) RNE ?float80) ((_ to_fp 15 113) RTZ ?float89) ?float110 ((_ to_fp 11 53) RTN ?float73))))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.sub RTP ((_ to_fp 11 53) RNE ?float74) ?float62)))
(declare-const ?float122 Float64)
(assert (= ?float122 (fp.div RTP ?float106 ?float104)))
(declare-const ?float123 Float128)
(assert (= ?float123 (fp.roundToIntegral RTN ?float90)))
(declare-const ?float124 Float32)
(assert (= ?float124 (f12 ((_ to_fp 5 11) RTN ?float80) ((_ to_fp 15 113) RNE ?float79) ((_ to_fp 8 24) RNE ?float122) ((_ to_fp 11 53) RTP ?float116) ?float107 ((_ to_fp 11 53) RNE ?float87) ((_ to_fp 15 113) RNE ?float81) ?float68 ((_ to_fp 8 24) RNE ?float90))))
(declare-const ?float125 Float16)
(assert (= ?float125 (f19 ((_ to_fp 8 24) RNE ?float101) ((_ to_fp 15 113) RNE ?float102))))
(declare-const ?float126 Float64)
(assert (= ?float126 (fp.max ?float65 ?float72)))
(declare-const ?float127 Float64)
(assert (= ?float127 (fp.max ((_ to_fp 11 53) RTN ?float125) ?float91)))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.roundToIntegral RTZ ?float65)))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.sqrt RTP ?float66)))
(declare-const ?float130 Float64)
(assert (= ?float130 (fp.max ?float106 ?float78)))
(declare-const ?float131 Float64)
(assert (= ?float131 (f32 ?float113 ((_ to_fp 5 11) RNE ?float71) ((_ to_fp 5 11) RTN ?float120) ((_ to_fp 8 24) RTP ?float129))))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.sqrt RNE ?float79)))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.add RTP ((_ to_fp 11 53) RTP ?float83) ?float121)))
(declare-const ?float134 Float64)
(assert (= ?float134 (fp.min ((_ to_fp 11 53) RTP ?float84) ?float129)))
(declare-const ?float135 Float64)
(assert (= ?float135 (fp.sub RTN ?float91 ((_ to_fp 11 53) RNE ?float63))))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.sub RNE ?float87 ?float70)))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.div RNE ?float94 ?float93)))
(declare-const ?float138 Float32)
(assert (= ?float138 (fp.max ((_ to_fp 8 24) RTP ?float132) ?float85)))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.min ((_ to_fp 5 11) RNE ?float127) ?float99)))
(declare-const ?float140 Float128)
(assert (= ?float140 (f7 ((_ to_fp 5 11) RTN ?float115) ((_ to_fp 5 11) RTN ?float82) ((_ to_fp 15 113) RTN ?float101))))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.mul RTZ ((_ to_fp 11 53) RNE ?float97) ?float128)))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.mul RTN ?float117 ((_ to_fp 15 113) RNE ?float72))))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.neg ?float135)))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.div RTN ?float139 ((_ to_fp 5 11) RTZ ?float80))))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.abs ?float114)))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.div RNE ?float117 ((_ to_fp 15 113) RTP ?float80))))
(declare-const ?float147 Float64)
(assert (= ?float147 (fp.sqrt RTN ?float66)))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.sqrt RTP ?float101)))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.neg ?float86)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isInfinite ?float83)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isSubnormal ?float122)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNormal ?float102)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isZero ?float118)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isSubnormal ?float85)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p1 ?float117 ((_ to_fp 15 113) RTN ?float73) ((_ to_fp 5 11) RTN ?float110) ((_ to_fp 8 24) RTP ?float79) ((_ to_fp 8 24) RTP ?float122) ?float66 ((_ to_fp 15 113) RTP ?float84) ((_ to_fp 5 11) RTP ?float62))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNegative ?float77)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p6 ((_ to_fp 5 11) RNE ?float147) ((_ to_fp 5 11) RTP ?float138) ((_ to_fp 15 113) RTN ?float70) ((_ to_fp 15 113) RTP ?float68) ?float64 ((_ to_fp 5 11) RNE ?float98) ((_ to_fp 11 53) RNE ?float118) ((_ to_fp 11 53) RTZ ?float63))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isPositive ?float104)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isNegative ?float108)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isPositive ?float75)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNormal ?float92)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.geq ((_ to_fp 15 113) RTZ ?float104) ?float69)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.geq ?float110 ((_ to_fp 15 113) RNE ?float63))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.eq ?float73 ?float61)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isInfinite ?float138)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p5 ((_ to_fp 8 24) RNE ?float111) ((_ to_fp 8 24) RTZ ?float140) ((_ to_fp 15 113) RTZ ?float101) ?float94 ((_ to_fp 15 113) RTN ?float141) ((_ to_fp 15 113) RTP ?float144) ((_ to_fp 5 11) RTZ ?float104) ((_ to_fp 5 11) RTZ ?float83) ((_ to_fp 8 24) RTN ?float80) ((_ to_fp 8 24) RTP ?float106))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p4 ?float69 ?float94 ?float131 ((_ to_fp 8 24) RTN ?float86) ((_ to_fp 5 11) RTP ?float93) ((_ to_fp 15 113) RTN ?float87) ((_ to_fp 5 11) RTP ?float119) ((_ to_fp 11 53) RTP ?float77))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isInfinite ?float99)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.eq ?float95 ?float149)))
; FINAL ASSERT
(assert (or ?bool164))
(check-sat)


-- iteration 83 --
(declare-fun f0 (Float64 Float128) Float16)
(declare-fun f1 (Float64 Float16 Float16 Float64 Float32 Float16 Float32 Float16 Float128) Float16)
(declare-fun f2 (Float128 Float16 Float32 Float64 Float128) Float32)
(declare-fun f3 (Float32 Float16 Float16 Float128 Float64 Float16) Float32)
(declare-fun f4 (Float64 Float32 Float64 Float64) Float64)
(declare-fun f5 (Float16) Float64)
(declare-fun f6 (Float16 Float128 Float32) Float128)
(declare-fun f7 (Float64 Float32 Float128 Float64 Float64) Float16)
(declare-fun f8 (Float64) Float32)
(declare-fun f9 (Float128 Float16 Float128 Float32 Float16 Float128 Float32 Float32 Float32) Float128)
(declare-fun f10 (Float64 Float32 Float64 Float16) Float128)
(declare-fun f11 (Float64 Float128 Float128 Float64 Float16 Float32 Float32 Float16 Float16 Float32) Float64)
(declare-fun f12 (Float32 Float64 Float16) Float16)
(declare-fun f13 (Float32) Float16)
(declare-fun f14 (Float128 Float32) Float32)
(declare-fun f15 (Float16 Float64) Float128)
(declare-fun f16 (Float16 Float64 Float128 Float16 Float64 Float128 Float128 Float32 Float16) Float64)
(declare-fun f17 (Float64 Float32 Float32 Float64 Float64 Float32) Float32)
(declare-fun f18 (Float64 Float16 Float128 Float32 Float64 Float64 Float128 Float16) Float32)
(declare-fun f19 (Float16 Float32 Float128 Float64 Float32 Float64 Float128 Float16 Float16 Float128) Float128)
(declare-fun f20 (Float32) Float128)
(declare-fun f21 (Float128 Float16 Float64 Float32) Float16)
(declare-fun f22 (Float128 Float128 Float64) Float64)
(declare-fun f23 (Float64 Float128) Float128)
(declare-fun f24 (Float16 Float64) Float32)
(declare-fun f25 (Float64 Float16 Float128 Float16 Float128 Float64 Float32) Float64)
(declare-fun f26 (Float16 Float16 Float128 Float32) Float32)
(declare-fun f27 (Float32) Float16)
(declare-fun f28 (Float32 Float16 Float16 Float32 Float16 Float16 Float16 Float128 Float128) Float64)
(declare-fun f29 (Float32 Float32 Float128 Float128 Float16 Float64) Float32)
(declare-fun f30 (Float64 Float16 Float32 Float64 Float32 Float32 Float64 Float16 Float128 Float32) Float128)
(declare-fun f31 (Float32 Float128 Float32) Float32)
(declare-fun f32 (Float128 Float64 Float32 Float16 Float16) Float32)
(declare-fun f33 (Float64 Float16 Float16) Float64)
(declare-fun f34 (Float64) Float16)
(declare-fun f35 (Float128 Float64 Float128 Float32) Float32)
(declare-fun f36 (Float32) Float32)
(declare-fun f37 (Float16 Float32 Float16 Float16 Float128 Float64 Float128 Float16) Float32)
(declare-fun f38 (Float128) Float32)
(declare-fun f39 (Float128 Float64 Float128) Float32)
(declare-fun f40 (Float32 Float64 Float16 Float16 Float32 Float16 Float128 Float16 Float32) Float16)
(declare-fun f41 (Float128 Float16 Float64 Float32) Float64)
(declare-fun f42 (Float32) Float32)
(declare-fun f43 (Float128 Float128 Float32 Float128 Float32) Float16)
(declare-fun f44 (Float16) Float128)
(declare-fun f45 (Float16 Float64 Float128 Float32 Float128 Float32 Float64 Float32 Float64 Float64) Float16)
(declare-fun f46 (Float32 Float32 Float32 Float16 Float32) Float128)
(declare-fun f47 (Float64 Float32 Float32) Float32)
(declare-fun f48 (Float64 Float128 Float64 Float128 Float128 Float64 Float64 Float16 Float32) Float128)
(declare-fun f49 (Float128 Float16 Float128 Float32 Float64) Float128)
(declare-fun p0 (Float16 Float128 Float16 Float16 Float64 Float16) Bool)
(declare-fun p1 (Float64 Float128 Float64 Float64 Float128 Float64 Float128 Float128 Float32) Bool)
(declare-fun p2 (Float32 Float128 Float64 Float16) Bool)
(declare-fun p3 (Float128 Float128 Float128) Bool)
(declare-fun p4 (Float64 Float128 Float16 Float64 Float16 Float16 Float16) Bool)
(declare-fun p5 (Float32) Bool)
(declare-fun p6 (Float16 Float128 Float128 Float64 Float16 Float16 Float16) Bool)
(declare-fun p7 (Float16) Bool)
(declare-fun p8 (Float128 Float32 Float128 Float32 Float16 Float32 Float64 Float32) Bool)
(declare-fun p9 (Float16 Float16 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float32)
(declare-const ?float62 Float128)
(declare-const ?float63 Float128)
(declare-const ?float64 Float32)
(declare-const ?float65 Float128)
(declare-const ?float66 Float64)
(declare-const ?float67 Float64)
(declare-const ?float68 Float32)
(declare-const ?float69 Float32)
(declare-const ?float70 Float16)
(declare-const ?float71 Float32)
(declare-const ?float72 Float128)
(declare-const ?float73 Float16)
(declare-const ?float74 Float128)
(declare-const ?float75 Float32)
(declare-const ?float76 Float64)
(declare-const ?float77 Float64)
(declare-const ?float78 Float32)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b0 #b10000110110 #b1100001001001101110111010010110101101100010011011011)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float90 Float128)
(assert (= ?float90 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b1 #b001010001110110 #b0111111000101001110101000111001000000000111111000111110101001101111000001000010110100000110010101101010111111001)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b0 #b00011010 #b10101010011010100100011)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.div RTZ ?float71 ((_ to_fp 8 24) RTP ?float67))))
(declare-const ?float101 Float32)
(assert (= ?float101 (f39 ?float74 ((_ to_fp 11 53) RTN ?float98) ((_ to_fp 15 113) RNE ?float75))))
(declare-const ?float102 Float64)
(assert (= ?float102 (fp.sqrt RNE ?float76)))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.mul RTN ?float85 ((_ to_fp 11 53) RTZ ?float68))))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.min ?float81 ((_ to_fp 11 53) RTN ?float88))))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.add RTP ((_ to_fp 8 24) RTP ?float102) ?float64)))
(declare-const ?float106 Float32)
(assert (= ?float106 (f29 ((_ to_fp 8 24) RTN ?float73) ((_ to_fp 8 24) RTN ?float87) ((_ to_fp 15 113) RTZ ?float78) ?float62 ((_ to_fp 5 11) RTN ?float72) ?float102)))
(declare-const ?float107 Float32)
(assert (= ?float107 (f3 ((_ to_fp 8 24) RNE ?float73) ((_ to_fp 5 11) RTP ?float91) ?float96 ((_ to_fp 15 113) RTZ ?float77) ((_ to_fp 11 53) RNE ?float98) ((_ to_fp 5 11) RTP ?float68))))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.min ((_ to_fp 11 53) RTZ ?float101) ?float102)))
(declare-const ?float109 Float32)
(assert (= ?float109 (fp.neg ?float88)))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.min ((_ to_fp 11 53) RTP ?float68) ?float108)))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.sub RTZ ((_ to_fp 11 53) RTZ ?float72) ?float87)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.abs ?float94)))
(declare-const ?float113 Float128)
(assert (= ?float113 (f46 ?float98 ((_ to_fp 8 24) RTN ?float87) ?float71 ?float84 ((_ to_fp 8 24) RTN ?float60))))
(declare-const ?float114 Float32)
(assert (= ?float114 (f32 ((_ to_fp 15 113) RTN ?float99) ((_ to_fp 11 53) RNE ?float72) ((_ to_fp 8 24) RTN ?float67) ?float79 ((_ to_fp 5 11) RNE ?float80))))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.neg ?float69)))
(declare-const ?float116 Float128)
(assert (= ?float116 (f49 ((_ to_fp 15 113) RTZ ?float64) ((_ to_fp 5 11) RTZ ?float98) ((_ to_fp 15 113) RTN ?float69) ?float109 ?float102)))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.div RNE ?float116 ((_ to_fp 15 113) RTZ ?float64))))
(declare-const ?float118 Float64)
(assert (= ?float118 (fp.mul RNE ((_ to_fp 11 53) RTZ ?float96) ?float83)))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.sqrt RTN ?float80)))
(declare-const ?float120 Float16)
(assert (= ?float120 (fp.sqrt RTZ ?float70)))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.sqrt RTN ?float107)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.abs ?float70)))
(declare-const ?float123 Float32)
(assert (= ?float123 (f36 ?float101)))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.neg ?float105)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.min ((_ to_fp 8 24) RTZ ?float108) ?float121)))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.max ((_ to_fp 15 113) RNE ?float119) ?float60)))
(declare-const ?float127 Float32)
(assert (= ?float127 (f42 ((_ to_fp 8 24) RNE ?float112))))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.sub RTP ?float74 ((_ to_fp 15 113) RTN ?float69))))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.sqrt RTZ ?float69)))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.min ?float122 ((_ to_fp 5 11) RNE ?float104))))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.sqrt RTP ?float95)))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.sqrt RTP ?float87)))
(declare-const ?float133 Float32)
(assert (= ?float133 (f35 ((_ to_fp 15 113) RNE ?float118) ((_ to_fp 11 53) RTZ ?float116) ((_ to_fp 15 113) RTP ?float110) ?float105)))
(declare-const ?float134 Float32)
(assert (= ?float134 (fp.sub RNE ?float61 ?float100)))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.sub RTN ((_ to_fp 15 113) RTN ?float133) ?float116)))
(declare-const ?float136 Float32)
(assert (= ?float136 (f36 ?float133)))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.mul RTP ((_ to_fp 8 24) RNE ?float90) ?float71)))
(declare-const ?float138 Float128)
(assert (= ?float138 (f6 ((_ to_fp 5 11) RTP ?float81) ((_ to_fp 15 113) RTZ ?float107) ((_ to_fp 8 24) RTZ ?float103))))
(declare-const ?float139 Float64)
(assert (= ?float139 (f16 ((_ to_fp 5 11) RTN ?float94) ?float67 ((_ to_fp 15 113) RTZ ?float94) ((_ to_fp 5 11) RTN ?float103) ((_ to_fp 11 53) RTN ?float115) ((_ to_fp 15 113) RTZ ?float78) ((_ to_fp 15 113) RNE ?float75) ?float114 ((_ to_fp 5 11) RTZ ?float60))))
(declare-const ?float140 Float32)
(assert (= ?float140 (f3 ((_ to_fp 8 24) RTN ?float60) ((_ to_fp 5 11) RTZ ?float113) ((_ to_fp 5 11) RTZ ?float129) ?float90 ((_ to_fp 11 53) RTZ ?float88) ((_ to_fp 5 11) RTP ?float132))))
(declare-const ?float141 Float32)
(assert (= ?float141 (fp.max ((_ to_fp 8 24) RTP ?float76) ?float88)))
(declare-const ?float142 Float32)
(assert (= ?float142 (fp.sqrt RTP ?float137)))
(declare-const ?float143 Float32)
(assert (= ?float143 (fp.roundToIntegral RTN ?float75)))
(declare-const ?float144 Float32)
(assert (= ?float144 (f42 ((_ to_fp 8 24) RNE ?float89))))
(declare-const ?float145 Float128)
(assert (= ?float145 (fp.neg ?float63)))
(declare-const ?float146 Float16)
(assert (= ?float146 (f40 ((_ to_fp 8 24) RTN ?float81) ((_ to_fp 11 53) RTN ?float113) ((_ to_fp 5 11) RTZ ?float88) ((_ to_fp 5 11) RNE ?float80) ((_ to_fp 8 24) RNE ?float131) ((_ to_fp 5 11) RTN ?float76) ((_ to_fp 15 113) RTZ ?float73) ((_ to_fp 5 11) RTZ ?float69) ((_ to_fp 8 24) RTN ?float77))))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.mul RTZ ?float138 ((_ to_fp 15 113) RTP ?float127))))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.div RTP ((_ to_fp 11 53) RNE ?float120) ?float77)))
(declare-const ?float149 Float16)
(assert (= ?float149 (f12 ((_ to_fp 8 24) RTP ?float85) ((_ to_fp 11 53) RTP ?float136) ((_ to_fp 5 11) RNE ?float67))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p3 ((_ to_fp 15 113) RNE ?float119) ((_ to_fp 15 113) RTN ?float146) ((_ to_fp 15 113) RTZ ?float133))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isSubnormal ?float142)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.eq ((_ to_fp 8 24) RTN ?float128) ?float137)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNormal ?float135)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.lt ((_ to_fp 5 11) RNE ?float91) ?float95)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isZero ?float75)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.geq ((_ to_fp 15 113) RTP ?float95) ?float117)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNaN ?float117)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p6 ((_ to_fp 5 11) RTZ ?float78) ((_ to_fp 15 113) RTP ?float98) ((_ to_fp 15 113) RTZ ?float70) ((_ to_fp 11 53) RNE ?float106) ?float146 ?float70 ((_ to_fp 5 11) RTN ?float76))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isInfinite ?float149)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isZero ?float109)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.gt ((_ to_fp 15 113) RTN ?float144) ?float65)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNormal ?float130)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.geq ((_ to_fp 15 113) RTZ ?float118) ?float63)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.eq ((_ to_fp 5 11) RTP ?float121) ?float122)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p7 ((_ to_fp 5 11) RNE ?float98))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNormal ?float98)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.lt ?float143 ?float82)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (p4 ((_ to_fp 11 53) RNE ?float98) ((_ to_fp 15 113) RTP ?float136) ?float79 ((_ to_fp 11 53) RTN ?float128) ((_ to_fp 5 11) RNE ?float98) ?float70 ((_ to_fp 5 11) RNE ?float148))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isPositive ?float97)))
; FINAL ASSERT
(assert (or ?bool154 ?bool159))
(check-sat)


-- iteration 84 --
(declare-fun f0 (Float128 Float64 Float128 Float128) Float128)
(declare-fun f1 (Float128 Float16) Float32)
(declare-fun f2 (Float32 Float16 Float32 Float32 Float64 Float16 Float128) Float128)
(declare-fun f3 (Float16 Float64 Float128 Float64) Float16)
(declare-fun f4 (Float32 Float16 Float16 Float16) Float64)
(declare-fun f5 (Float64 Float64 Float32 Float32 Float16 Float32 Float64) Float32)
(declare-fun f6 (Float128) Float32)
(declare-fun f7 (Float64 Float64 Float64) Float64)
(declare-fun f8 (Float64 Float128 Float16 Float32) Float64)
(declare-fun f9 (Float32 Float128 Float32 Float32 Float16 Float16 Float64) Float128)
(declare-fun f10 (Float16 Float128 Float32 Float16 Float128 Float16) Float64)
(declare-fun f11 (Float128 Float32 Float32 Float16 Float16 Float16 Float128 Float64 Float64 Float16) Float16)
(declare-fun f12 (Float64 Float16 Float32 Float64 Float16 Float128) Float64)
(declare-fun f13 (Float64 Float128 Float128 Float16 Float16) Float32)
(declare-fun f14 (Float64 Float16 Float16 Float64 Float128) Float128)
(declare-fun f15 (Float32 Float64 Float64 Float32 Float64 Float128 Float64 Float16) Float16)
(declare-fun f16 (Float32 Float32 Float16 Float128 Float64 Float128) Float64)
(declare-fun f17 (Float128 Float128 Float128 Float16 Float128 Float16 Float16 Float16) Float32)
(declare-fun f18 (Float32 Float64) Float64)
(declare-fun f19 (Float64) Float64)
(declare-fun f20 (Float16 Float32 Float16 Float64 Float32 Float32 Float128 Float32 Float128 Float16) Float16)
(declare-fun f21 (Float64 Float16) Float128)
(declare-fun f22 (Float64 Float16 Float16) Float128)
(declare-fun f23 (Float16 Float64) Float64)
(declare-fun f24 (Float16 Float32 Float32 Float32 Float32 Float128) Float128)
(declare-fun f25 (Float128 Float128 Float128) Float128)
(declare-fun f26 (Float32 Float32 Float16 Float128 Float64 Float128 Float16) Float128)
(declare-fun f27 (Float32 Float64 Float64) Float32)
(declare-fun f28 (Float16 Float32 Float64 Float16 Float32 Float32 Float128 Float128 Float16 Float128) Float128)
(declare-fun f29 (Float64 Float16) Float16)
(declare-fun f30 (Float16 Float32 Float32 Float32) Float128)
(declare-fun f31 (Float32 Float32) Float16)
(declare-fun f32 (Float16 Float16 Float32 Float32 Float64 Float128 Float16) Float32)
(declare-fun f33 (Float16 Float128 Float64 Float32 Float64 Float32 Float16 Float64 Float16) Float64)
(declare-fun f34 (Float16 Float32 Float16) Float16)
(declare-fun f35 (Float16) Float32)
(declare-fun f36 (Float16 Float16 Float32 Float32 Float128 Float64 Float128 Float64 Float64) Float128)
(declare-fun f37 (Float64 Float32 Float64 Float64 Float64) Float64)
(declare-fun f38 (Float32) Float32)
(declare-fun f39 (Float128 Float128 Float128 Float128 Float64) Float64)
(declare-fun f40 (Float16) Float128)
(declare-fun f41 (Float32) Float64)
(declare-fun f42 (Float128) Float128)
(declare-fun f43 (Float128 Float64) Float128)
(declare-fun f44 (Float64 Float16 Float128 Float128) Float16)
(declare-fun f45 (Float128 Float16 Float32 Float16) Float128)
(declare-fun f46 (Float32 Float32 Float64 Float16 Float128 Float64 Float32 Float64 Float64) Float16)
(declare-fun f47 (Float64 Float128 Float64 Float128 Float128 Float32 Float128 Float16) Float128)
(declare-fun f48 (Float128 Float32 Float64 Float16 Float128 Float128 Float16 Float64) Float64)
(declare-fun f49 (Float64 Float16 Float128) Float16)
(declare-fun p0 (Float128) Bool)
(declare-fun p1 (Float16 Float32 Float16 Float64 Float64 Float128 Float128 Float128) Bool)
(declare-fun p2 (Float64 Float16 Float16 Float128 Float32 Float64) Bool)
(declare-fun p3 (Float128 Float128 Float16) Bool)
(declare-fun p4 (Float128 Float128) Bool)
(declare-fun p5 (Float128 Float128 Float16 Float64 Float128 Float16 Float128 Float16 Float32 Float64) Bool)
(declare-fun p6 (Float16 Float16 Float128 Float32) Bool)
(declare-fun p7 (Float64 Float128 Float64 Float16 Float64 Float16) Bool)
(declare-fun p8 (Float32 Float128) Bool)
(declare-fun p9 (Float32 Float64 Float128 Float16 Float128 Float64 Float16 Float32 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float32)
(declare-const ?float62 Float16)
(declare-const ?float63 Float32)
(declare-const ?float64 Float16)
(declare-const ?float65 Float16)
(declare-const ?float66 Float64)
(declare-const ?float67 Float32)
(declare-const ?float68 Float64)
(declare-const ?float69 Float128)
(declare-const ?float70 Float128)
(declare-const ?float71 Float128)
(declare-const ?float72 Float64)
(declare-const ?float73 Float32)
(declare-const ?float74 Float128)
(declare-const ?float75 Float64)
(declare-const ?float76 Float16)
(declare-const ?float77 Float64)
(declare-const ?float78 Float64)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b1 #b00100 #b0010111100)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b0 #b11001111 #b11111110100110000010001)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b0 #b000011010110010 #b0011010010000011001001010001010000001011101001000011111011101011011100100000001111011010101110011110011101100010)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b0 #b00000000 #b00011000010111000100011)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b0 #b00000001 #b00000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (f42 ?float97)))
(declare-const ?float101 Float16)
(assert (= ?float101 (f34 ?float91 ?float73 ((_ to_fp 5 11) RTP ?float60))))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.mul RTP ((_ to_fp 5 11) RTZ ?float61) ?float101)))
(declare-const ?float103 Float128)
(assert (= ?float103 (fp.max ?float60 ((_ to_fp 15 113) RNE ?float84))))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.abs ?float63)))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.sub RTP ((_ to_fp 5 11) RTN ?float60) ?float83)))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.add RNE ?float98 ((_ to_fp 15 113) RTZ ?float86))))
(declare-const ?float107 Float16)
(assert (= ?float107 (fp.roundToIntegral RNE ?float62)))
(declare-const ?float108 Float128)
(assert (= ?float108 (f42 ((_ to_fp 15 113) RNE ?float65))))
(declare-const ?float109 Float16)
(assert (= ?float109 (f29 ((_ to_fp 11 53) RTN ?float102) ((_ to_fp 5 11) RTZ ?float82))))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.neg ?float65)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.max ((_ to_fp 5 11) RTZ ?float77) ?float64)))
(declare-const ?float112 Float128)
(assert (= ?float112 (fp.max ?float70 ((_ to_fp 15 113) RNE ?float82))))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.add RTN ?float67 ?float80)))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.add RTP ((_ to_fp 8 24) RNE ?float106) ?float85)))
(declare-const ?float115 Float16)
(assert (= ?float115 (fp.max ?float105 ((_ to_fp 5 11) RTN ?float87))))
(declare-const ?float116 Float128)
(assert (= ?float116 (f0 ((_ to_fp 15 113) RTP ?float88) ((_ to_fp 11 53) RTZ ?float110) ((_ to_fp 15 113) RTP ?float88) ((_ to_fp 15 113) RNE ?float101))))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.add RNE ((_ to_fp 11 53) RTP ?float96) ?float66)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.div RNE ?float96 ((_ to_fp 8 24) RNE ?float106))))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.roundToIntegral RNE ?float88)))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.max ((_ to_fp 11 53) RTZ ?float99) ?float86)))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.mul RTZ ?float96 ?float89)))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.div RTZ ?float74 ((_ to_fp 15 113) RTN ?float61))))
(declare-const ?float123 Float128)
(assert (= ?float123 (fp.div RTP ?float100 ?float98)))
(declare-const ?float124 Float16)
(assert (= ?float124 (fp.abs ?float111)))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.roundToIntegral RTZ ?float82)))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.mul RTZ ?float97 ((_ to_fp 15 113) RTN ?float124))))
(declare-const ?float127 Float64)
(assert (= ?float127 (fp.roundToIntegral RNE ?float125)))
(declare-const ?float128 Float16)
(assert (= ?float128 (fp.div RTN ((_ to_fp 5 11) RNE ?float85) ?float115)))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.mul RTP ((_ to_fp 11 53) RNE ?float61) ?float86)))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.neg ?float84)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.neg ?float127)))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.mul RTP ?float88 ((_ to_fp 8 24) RTZ ?float81))))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.max ?float86 ((_ to_fp 11 53) RNE ?float121))))
(declare-const ?float134 Float32)
(assert (= ?float134 (fp.add RNE ?float130 ((_ to_fp 8 24) RTN ?float64))))
(declare-const ?float135 Float64)
(assert (= ?float135 (f41 ?float121)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.roundToIntegral RNE ?float101)))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.min ((_ to_fp 5 11) RTN ?float85) ?float91)))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.min ((_ to_fp 5 11) RNE ?float104) ?float92)))
(declare-const ?float139 Float128)
(assert (= ?float139 (f47 ((_ to_fp 11 53) RNE ?float109) ((_ to_fp 15 113) RTZ ?float131) ((_ to_fp 11 53) RTN ?float91) ((_ to_fp 15 113) RTP ?float77) ?float103 ?float119 ((_ to_fp 15 113) RTP ?float131) ((_ to_fp 5 11) RNE ?float98))))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.min ((_ to_fp 8 24) RTN ?float129) ?float130)))
(declare-const ?float141 Float32)
(assert (= ?float141 (fp.max ((_ to_fp 8 24) RTP ?float66) ?float73)))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.abs ?float75)))
(declare-const ?float143 Float32)
(assert (= ?float143 (fp.add RTP ((_ to_fp 8 24) RTZ ?float62) ?float130)))
(declare-const ?float144 Float32)
(assert (= ?float144 (f27 ?float119 ((_ to_fp 11 53) RTZ ?float85) ((_ to_fp 11 53) RTN ?float60))))
(declare-const ?float145 Float128)
(assert (= ?float145 (fp.min ?float97 ((_ to_fp 15 113) RTP ?float63))))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.min ((_ to_fp 8 24) RNE ?float106) ?float63)))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.roundToIntegral RTN ?float87)))
(declare-const ?float148 Float32)
(assert (= ?float148 (fp.add RNE ?float130 ?float96)))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.roundToIntegral RTP ?float91)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isNaN ?float69)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.gt ((_ to_fp 11 53) RNE ?float85) ?float68)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNaN ?float81)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isSubnormal ?float80)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNaN ?float130)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isInfinite ?float107)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isSubnormal ?float78)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.geq ?float61 ((_ to_fp 8 24) RTN ?float66))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.eq ?float64 ((_ to_fp 5 11) RTN ?float106))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isNegative ?float60)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p3 ((_ to_fp 15 113) RTP ?float134) ((_ to_fp 15 113) RTP ?float142) ?float124)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isPositive ?float145)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isPositive ?float136)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNaN ?float80)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isNegative ?float129)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isPositive ?float131)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isSubnormal ?float141)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p1 ((_ to_fp 5 11) RTN ?float81) ?float89 ?float111 ((_ to_fp 11 53) RTZ ?float88) ((_ to_fp 11 53) RTZ ?float70) ?float116 ((_ to_fp 15 113) RNE ?float85) ((_ to_fp 15 113) RTP ?float61))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isZero ?float69)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isInfinite ?float97)))
; FINAL ASSERT
(assert (and ?bool157 (and ?bool158 (or ?bool169) ?bool169)))
(check-sat)


-- iteration 85 --
(declare-fun f0 (Float64 Float64 Float128 Float128 Float32 Float64 Float128 Float128) Float32)
(declare-fun f1 (Float32 Float64 Float16 Float32 Float64 Float16 Float16 Float32 Float32) Float128)
(declare-fun f2 (Float16 Float64 Float64 Float16) Float64)
(declare-fun f3 (Float32 Float32 Float32 Float32 Float16) Float16)
(declare-fun f4 (Float64) Float32)
(declare-fun f5 (Float32 Float32 Float128 Float64 Float64 Float128 Float64 Float128 Float16) Float128)
(declare-fun f6 (Float64 Float16 Float32) Float128)
(declare-fun f7 (Float32 Float64) Float32)
(declare-fun f8 (Float32 Float32 Float16 Float128 Float32 Float16 Float64 Float64 Float128) Float32)
(declare-fun f9 (Float16 Float128 Float128 Float64 Float128 Float128) Float16)
(declare-fun f10 (Float128) Float16)
(declare-fun f11 (Float128 Float64) Float64)
(declare-fun f12 (Float32 Float128 Float32 Float64 Float16) Float32)
(declare-fun f13 (Float32 Float64 Float64 Float32 Float32 Float16 Float16 Float32) Float16)
(declare-fun f14 (Float64) Float32)
(declare-fun f15 (Float32 Float64 Float16 Float32 Float128 Float16 Float32 Float128 Float64 Float64) Float16)
(declare-fun f16 (Float16 Float32 Float128 Float128 Float64 Float64 Float64) Float16)
(declare-fun f17 (Float16 Float16 Float16 Float16 Float64) Float16)
(declare-fun f18 (Float64 Float64 Float32 Float32 Float32 Float128) Float128)
(declare-fun f19 (Float32 Float16 Float32 Float128 Float128 Float64 Float32 Float128 Float128) Float64)
(declare-fun f20 (Float16 Float16 Float64 Float128 Float128 Float128 Float128) Float64)
(declare-fun f21 (Float64) Float32)
(declare-fun f22 (Float64) Float32)
(declare-fun f23 (Float32 Float32 Float128 Float32 Float16 Float64) Float16)
(declare-fun f24 (Float64 Float64) Float32)
(declare-fun f25 (Float32 Float128 Float128 Float64 Float64 Float64 Float128) Float16)
(declare-fun f26 (Float32 Float64 Float128) Float128)
(declare-fun f27 (Float128 Float128 Float64) Float32)
(declare-fun f28 (Float128 Float128 Float64 Float32 Float64 Float64 Float32 Float16) Float32)
(declare-fun f29 (Float32 Float16 Float128) Float64)
(declare-fun f30 (Float16 Float128 Float16 Float16 Float32 Float64 Float128 Float32 Float16 Float32) Float32)
(declare-fun f31 (Float128 Float16 Float32 Float128 Float32 Float32 Float16 Float16 Float64 Float64) Float32)
(declare-fun f32 (Float32 Float64 Float32 Float32 Float16 Float128 Float16 Float64) Float128)
(declare-fun f33 (Float32 Float64 Float128 Float32 Float32) Float128)
(declare-fun f34 (Float128 Float128 Float128 Float16) Float64)
(declare-fun f35 (Float64) Float128)
(declare-fun f36 (Float64 Float16 Float32 Float64 Float16 Float128 Float64 Float16) Float16)
(declare-fun f37 (Float64 Float16 Float32 Float128 Float64) Float128)
(declare-fun f38 (Float16 Float32 Float16 Float64 Float64 Float16 Float64 Float32 Float64 Float64) Float128)
(declare-fun f39 (Float128 Float16) Float128)
(declare-fun f40 (Float64 Float32 Float16 Float16 Float32 Float32 Float128 Float16) Float32)
(declare-fun f41 (Float128 Float32 Float32 Float64) Float32)
(declare-fun f42 (Float16 Float16 Float32 Float128) Float32)
(declare-fun f43 (Float128 Float128 Float16 Float128 Float16 Float128 Float128 Float64) Float16)
(declare-fun f44 (Float32 Float64 Float128 Float32 Float64) Float64)
(declare-fun f45 (Float16 Float16 Float32 Float32 Float64) Float16)
(declare-fun f46 (Float32 Float16 Float64 Float32 Float64) Float32)
(declare-fun f47 (Float64 Float64 Float32 Float64) Float32)
(declare-fun f48 (Float16 Float32 Float64 Float16 Float64 Float32 Float32 Float64) Float64)
(declare-fun f49 (Float128 Float32 Float32 Float64 Float64 Float128 Float16 Float128 Float128) Float64)
(declare-fun p0 (Float16 Float16 Float16) Bool)
(declare-fun p1 (Float64 Float64 Float64 Float128 Float64 Float16 Float32) Bool)
(declare-fun p2 (Float128 Float64 Float16 Float64 Float64 Float16 Float16 Float128) Bool)
(declare-fun p3 (Float64 Float16 Float32 Float64 Float32 Float128) Bool)
(declare-fun p4 (Float64 Float32 Float16 Float16 Float32 Float128 Float64) Bool)
(declare-fun p5 (Float64) Bool)
(declare-fun p6 (Float32 Float16 Float32 Float16 Float64 Float16 Float128 Float32) Bool)
(declare-fun p7 (Float128 Float64) Bool)
(declare-fun p8 (Float128 Float16 Float64 Float128 Float128 Float64 Float128 Float32 Float32) Bool)
(declare-fun p9 (Float32 Float128 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float64)
(declare-const ?float62 Float128)
(declare-const ?float63 Float128)
(declare-const ?float64 Float32)
(declare-const ?float65 Float32)
(declare-const ?float66 Float32)
(declare-const ?float67 Float32)
(declare-const ?float68 Float128)
(declare-const ?float69 Float64)
(declare-const ?float70 Float16)
(declare-const ?float71 Float128)
(declare-const ?float72 Float128)
(declare-const ?float73 Float32)
(declare-const ?float74 Float64)
(declare-const ?float75 Float16)
(declare-const ?float76 Float32)
(declare-const ?float77 Float16)
(declare-const ?float78 Float64)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b1 #b101010111100100 #b1000011000100101101011010101001100001011101111111100001110101000111000010001001010101100010100010101001000011010)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b1 #b11010010 #b00110001001111011110100)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b1 #b00001 #b0000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (fp.sqrt RTP ?float92)))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.max ?float64 ((_ to_fp 8 24) RTN ?float69))))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.sqrt RTZ ?float100)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.abs ?float99)))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.sub RTP ((_ to_fp 8 24) RTP ?float95) ?float90)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.sub RTN ((_ to_fp 11 53) RNE ?float62) ?float61)))
(declare-const ?float106 Float32)
(assert (= ?float106 (f40 ((_ to_fp 11 53) RTP ?float73) ((_ to_fp 8 24) RNE ?float95) ((_ to_fp 5 11) RNE ?float72) ((_ to_fp 5 11) RTN ?float61) ((_ to_fp 8 24) RTZ ?float94) ((_ to_fp 8 24) RTP ?float94) ((_ to_fp 15 113) RTN ?float98) ((_ to_fp 5 11) RTN ?float73))))
(declare-const ?float107 Float16)
(assert (= ?float107 (fp.neg ?float75)))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.abs ?float102)))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.sqrt RTN ?float91)))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.max ?float96 ((_ to_fp 11 53) RTP ?float108))))
(declare-const ?float111 Float64)
(assert (= ?float111 (f29 ((_ to_fp 8 24) RTP ?float60) ?float91 ((_ to_fp 15 113) RTP ?float66))))
(declare-const ?float112 Float64)
(assert (= ?float112 (f48 ((_ to_fp 5 11) RTP ?float89) ((_ to_fp 8 24) RTZ ?float63) ((_ to_fp 11 53) RTP ?float65) ((_ to_fp 5 11) RTN ?float87) ((_ to_fp 11 53) RTZ ?float95) ((_ to_fp 8 24) RTZ ?float72) ((_ to_fp 8 24) RTZ ?float71) ((_ to_fp 11 53) RTZ ?float67))))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.sqrt RNE ?float95)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.max ((_ to_fp 11 53) RTP ?float93) ?float61)))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.sub RNE ?float96 ?float74)))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.sqrt RNE ?float110)))
(declare-const ?float117 Float32)
(assert (= ?float117 (fp.roundToIntegral RNE ?float106)))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.add RTN ((_ to_fp 5 11) RTZ ?float78) ?float75)))
(declare-const ?float119 Float32)
(assert (= ?float119 (f0 ((_ to_fp 11 53) RTP ?float106) ((_ to_fp 11 53) RNE ?float67) ((_ to_fp 15 113) RTN ?float80) ((_ to_fp 15 113) RTP ?float91) ?float76 ((_ to_fp 11 53) RTP ?float95) ?float62 ((_ to_fp 15 113) RTP ?float110))))
(declare-const ?float120 Float16)
(assert (= ?float120 (fp.sub RTZ ((_ to_fp 5 11) RTZ ?float65) ?float103)))
(declare-const ?float121 Float16)
(assert (= ?float121 (f15 ((_ to_fp 8 24) RTP ?float75) ((_ to_fp 11 53) RTZ ?float83) ((_ to_fp 5 11) RNE ?float110) ?float98 ((_ to_fp 15 113) RTZ ?float87) ((_ to_fp 5 11) RTZ ?float108) ((_ to_fp 8 24) RTN ?float74) ((_ to_fp 15 113) RTN ?float103) ?float114 ((_ to_fp 11 53) RTZ ?float88))))
(declare-const ?float122 Float32)
(assert (= ?float122 (fp.sqrt RTP ?float90)))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.max ?float120 ((_ to_fp 5 11) RTP ?float104))))
(declare-const ?float124 Float64)
(assert (= ?float124 (f2 ((_ to_fp 5 11) RTN ?float112) ?float114 ((_ to_fp 11 53) RTP ?float71) ?float123)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.div RTZ ((_ to_fp 8 24) RNE ?float120) ?float119)))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.mul RTN ?float86 ((_ to_fp 15 113) RTN ?float115))))
(declare-const ?float127 Float128)
(assert (= ?float127 (fp.mul RTZ ((_ to_fp 15 113) RTN ?float98) ?float102)))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.roundToIntegral RTZ ?float94)))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.roundToIntegral RTN ?float110)))
(declare-const ?float130 Float16)
(assert (= ?float130 (f25 ?float122 ((_ to_fp 15 113) RTZ ?float120) ?float127 ((_ to_fp 11 53) RTP ?float65) ((_ to_fp 11 53) RTP ?float63) ((_ to_fp 11 53) RNE ?float79) ?float126)))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.add RTP ((_ to_fp 5 11) RTZ ?float61) ?float85)))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.sub RTP ?float120 ?float120)))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.neg ?float84)))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.sub RNE ?float131 ((_ to_fp 5 11) RNE ?float76))))
(declare-const ?float135 Float64)
(assert (= ?float135 (fp.abs ?float115)))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.abs ?float84)))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.roundToIntegral RTN ?float121)))
(declare-const ?float138 Float64)
(assert (= ?float138 (fp.sub RTZ ?float135 ?float111)))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.sqrt RTN ?float105)))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.roundToIntegral RTP ?float67)))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.div RNE ((_ to_fp 5 11) RNE ?float136) ?float95)))
(declare-const ?float142 Float128)
(assert (= ?float142 (f32 ((_ to_fp 8 24) RTN ?float126) ?float74 ((_ to_fp 8 24) RTN ?float86) ?float98 ?float131 ((_ to_fp 15 113) RTN ?float65) ((_ to_fp 5 11) RTZ ?float105) ?float114)))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.max ?float116 ((_ to_fp 11 53) RNE ?float72))))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.roundToIntegral RNE ?float112)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.mul RTP ?float119 ?float119)))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.max ?float77 ((_ to_fp 5 11) RTZ ?float129))))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.max ?float63 ((_ to_fp 15 113) RTN ?float119))))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.max ((_ to_fp 11 53) RNE ?float120) ?float60)))
(declare-const ?float149 Float32)
(assert (= ?float149 (f28 ((_ to_fp 15 113) RTP ?float136) ?float86 ((_ to_fp 11 53) RTZ ?float120) ?float97 ?float114 ((_ to_fp 11 53) RTZ ?float102) ((_ to_fp 8 24) RNE ?float139) ((_ to_fp 5 11) RTZ ?float122))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isNegative ?float108)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.lt ((_ to_fp 11 53) RTN ?float147) ?float129)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (p5 ((_ to_fp 11 53) RTP ?float86))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.eq ((_ to_fp 11 53) RTZ ?float120) ?float116)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p9 ((_ to_fp 8 24) RTP ?float83) ((_ to_fp 15 113) RTN ?float130) ((_ to_fp 5 11) RTP ?float98))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.geq ((_ to_fp 15 113) RTZ ?float99) ?float147)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isInfinite ?float65)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.geq ?float76 ((_ to_fp 8 24) RTN ?float78))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isInfinite ?float136)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isInfinite ?float91)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isInfinite ?float98)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNaN ?float140)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isZero ?float68)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.gt ((_ to_fp 8 24) RTN ?float123) ?float140)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.geq ((_ to_fp 15 113) RTP ?float129) ?float72)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p3 ?float111 ?float120 ((_ to_fp 8 24) RTZ ?float123) ((_ to_fp 11 53) RTN ?float145) ?float101 ?float93)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isInfinite ?float136)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNaN ?float82)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.eq ((_ to_fp 11 53) RTZ ?float97) ?float114)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isInfinite ?float144)))
; FINAL ASSERT
(assert (and (and ?bool166 ?bool165 (or ?bool161))))
(check-sat)


-- iteration 86 --
(declare-fun f0 (Float64 Float32 Float32 Float64) Float16)
(declare-fun f1 (Float32 Float32 Float16) Float64)
(declare-fun f2 (Float128 Float64 Float16 Float128 Float32 Float64 Float16 Float32) Float16)
(declare-fun f3 (Float128 Float64 Float32 Float32 Float16 Float128 Float128 Float128 Float64 Float32) Float16)
(declare-fun f4 (Float16 Float16 Float32 Float32 Float128 Float64 Float64 Float64 Float32 Float128) Float128)
(declare-fun f5 (Float32 Float64 Float64 Float16 Float128 Float128 Float128) Float128)
(declare-fun f6 (Float16) Float16)
(declare-fun f7 (Float16 Float128 Float16 Float64 Float128 Float64 Float32 Float128) Float64)
(declare-fun f8 (Float16 Float32) Float32)
(declare-fun f9 (Float16 Float128) Float32)
(declare-fun f10 (Float32 Float32 Float16 Float16) Float128)
(declare-fun f11 (Float16 Float32 Float128 Float16 Float32 Float32 Float16 Float64 Float128 Float32) Float16)
(declare-fun f12 (Float16 Float16 Float32 Float128 Float128 Float32 Float32) Float128)
(declare-fun f13 (Float64 Float128 Float16 Float128 Float64 Float32 Float16 Float16 Float32 Float32) Float16)
(declare-fun f14 (Float32 Float16 Float128 Float128 Float16 Float128 Float128 Float128) Float16)
(declare-fun f15 (Float128 Float32 Float32 Float64 Float128 Float16) Float32)
(declare-fun f16 (Float16) Float32)
(declare-fun f17 (Float128 Float32 Float32 Float16 Float64 Float16 Float32 Float128 Float64 Float32) Float16)
(declare-fun f18 (Float16 Float128 Float32 Float16 Float128 Float64 Float128 Float32 Float64 Float16) Float16)
(declare-fun f19 (Float64 Float64 Float32 Float16 Float64 Float64 Float64 Float128 Float16 Float64) Float128)
(declare-fun f20 (Float16 Float128 Float128 Float32 Float128 Float16 Float16 Float128) Float64)
(declare-fun f21 (Float16 Float32 Float16 Float32) Float64)
(declare-fun f22 (Float32 Float16 Float64 Float32 Float32 Float64) Float128)
(declare-fun f23 (Float16 Float64 Float64 Float16 Float128 Float64) Float32)
(declare-fun f24 (Float16 Float16 Float128 Float32 Float64 Float64 Float16 Float32 Float16) Float64)
(declare-fun f25 (Float128 Float16 Float16 Float16) Float64)
(declare-fun f26 (Float16 Float64 Float16 Float32 Float16 Float16 Float16 Float64 Float32 Float32) Float16)
(declare-fun f27 (Float64 Float32 Float32 Float32 Float32 Float128 Float16 Float64 Float128) Float16)
(declare-fun f28 (Float64 Float128) Float16)
(declare-fun f29 (Float64) Float16)
(declare-fun f30 (Float128 Float16 Float32 Float64 Float16 Float32) Float64)
(declare-fun f31 (Float64 Float32 Float128 Float32 Float64 Float16) Float64)
(declare-fun f32 (Float32) Float32)
(declare-fun f33 (Float128 Float32 Float16 Float16) Float128)
(declare-fun f34 (Float64 Float16 Float32 Float128 Float32 Float64 Float32 Float128 Float64) Float32)
(declare-fun f35 (Float32 Float128 Float16 Float32 Float128 Float32 Float64) Float64)
(declare-fun f36 (Float64 Float128 Float32 Float16) Float16)
(declare-fun f37 (Float64 Float32 Float128 Float32 Float16) Float64)
(declare-fun f38 (Float32 Float16 Float128 Float128 Float64 Float16) Float32)
(declare-fun f39 (Float16 Float128 Float128 Float128) Float64)
(declare-fun f40 (Float32 Float16) Float16)
(declare-fun f41 (Float64 Float16 Float64) Float128)
(declare-fun f42 (Float128 Float16 Float128 Float128 Float32) Float32)
(declare-fun f43 (Float64 Float128 Float16 Float128 Float128 Float32 Float128 Float32 Float32) Float64)
(declare-fun f44 (Float128 Float32 Float32 Float16 Float32 Float16 Float64 Float128 Float64 Float64) Float16)
(declare-fun f45 (Float128 Float128 Float128 Float32 Float32 Float64) Float64)
(declare-fun f46 (Float64 Float128 Float64 Float16 Float16 Float128) Float64)
(declare-fun f47 (Float128 Float32 Float16 Float16) Float16)
(declare-fun f48 (Float16 Float16 Float128) Float128)
(declare-fun f49 (Float128 Float32 Float128 Float16) Float32)
(declare-fun p0 (Float64 Float32 Float32 Float32 Float32 Float64 Float64) Bool)
(declare-fun p1 (Float128 Float32 Float16 Float64) Bool)
(declare-fun p2 (Float32 Float16 Float16 Float16 Float16 Float32 Float16 Float128 Float16) Bool)
(declare-fun p3 (Float32 Float32 Float64 Float128 Float32 Float64 Float64 Float128) Bool)
(declare-fun p4 (Float16 Float16) Bool)
(declare-fun p5 (Float16 Float64 Float128 Float64 Float32) Bool)
(declare-fun p6 (Float32 Float64 Float64 Float128 Float128 Float16 Float64 Float128) Bool)
(declare-fun p7 (Float128 Float64 Float64 Float16 Float64 Float128 Float32 Float32 Float64 Float32) Bool)
(declare-fun p8 (Float16) Bool)
(declare-fun p9 (Float32 Float128 Float32 Float128 Float16 Float64 Float32 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float128)
(declare-const ?float62 Float16)
(declare-const ?float63 Float32)
(declare-const ?float64 Float16)
(declare-const ?float65 Float32)
(declare-const ?float66 Float16)
(declare-const ?float67 Float128)
(declare-const ?float68 Float32)
(declare-const ?float69 Float128)
(declare-const ?float70 Float32)
(declare-const ?float71 Float16)
(declare-const ?float72 Float32)
(declare-const ?float73 Float64)
(declare-const ?float74 Float16)
(declare-const ?float75 Float32)
(declare-const ?float76 Float16)
(declare-const ?float77 Float64)
(declare-const ?float78 Float16)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b0 #b010111001000011 #b1011000000101110100000111101001101000001010101011100011011110101001100100000110111001000010000111110011100001111)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b01110101 #b01010001110001000101010)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b1 #b100111010110110 #b0110111000101111110110001100101100011110011111011010101010110011111111001101110001011100011101010010100100100100)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b1 #b00101110 #b11010100101000010011110)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (fp.roundToIntegral RNE ?float93)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.div RTP ((_ to_fp 5 11) RTP ?float95) ?float88)))
(declare-const ?float102 Float128)
(assert (= ?float102 (f5 ((_ to_fp 8 24) RTP ?float74) ((_ to_fp 11 53) RTZ ?float98) ((_ to_fp 11 53) RTP ?float81) ((_ to_fp 5 11) RTP ?float80) ((_ to_fp 15 113) RTP ?float63) ?float69 ((_ to_fp 15 113) RTN ?float74))))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.max ((_ to_fp 11 53) RTZ ?float72) ?float77)))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.add RTN ?float62 ?float97)))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.add RNE ((_ to_fp 5 11) RTN ?float69) ?float88)))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.abs ?float75)))
(declare-const ?float107 Float16)
(assert (= ?float107 (fp.sqrt RNE ?float74)))
(declare-const ?float108 Float32)
(assert (= ?float108 (f32 ?float86)))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.roundToIntegral RTN ?float78)))
(declare-const ?float110 Float128)
(assert (= ?float110 (f12 ((_ to_fp 5 11) RTP ?float68) ?float64 ?float65 ((_ to_fp 15 113) RTN ?float62) ((_ to_fp 15 113) RTN ?float74) ((_ to_fp 8 24) RNE ?float81) ?float68)))
(declare-const ?float111 Float128)
(assert (= ?float111 (fp.max ((_ to_fp 15 113) RTZ ?float101) ?float85)))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.max ((_ to_fp 5 11) RNE ?float77) ?float105)))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.min ((_ to_fp 8 24) RNE ?float81) ?float68)))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.abs ?float65)))
(declare-const ?float115 Float16)
(assert (= ?float115 (f36 ((_ to_fp 11 53) RNE ?float63) ((_ to_fp 15 113) RTP ?float71) ?float94 ((_ to_fp 5 11) RTP ?float106))))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.neg ?float76)))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.mul RNE ?float88 ?float112)))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.min ((_ to_fp 5 11) RTN ?float108) ?float62)))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.sqrt RTP ?float118)))
(declare-const ?float120 Float128)
(assert (= ?float120 (f12 ?float119 ((_ to_fp 5 11) RTZ ?float100) ((_ to_fp 8 24) RTN ?float79) ((_ to_fp 15 113) RNE ?float64) ((_ to_fp 15 113) RTZ ?float118) ((_ to_fp 8 24) RTZ ?float89) ((_ to_fp 8 24) RTZ ?float80))))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.roundToIntegral RNE ?float90)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.roundToIntegral RTZ ?float62)))
(declare-const ?float123 Float16)
(assert (= ?float123 (f47 ?float67 ((_ to_fp 8 24) RTP ?float110) ((_ to_fp 5 11) RTP ?float89) ((_ to_fp 5 11) RNE ?float67))))
(declare-const ?float124 Float16)
(assert (= ?float124 (fp.mul RTZ ((_ to_fp 5 11) RTN ?float87) ?float115)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.abs ?float72)))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.neg ?float125)))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.max ?float107 ((_ to_fp 5 11) RNE ?float91))))
(declare-const ?float128 Float128)
(assert (= ?float128 (f19 ((_ to_fp 11 53) RNE ?float121) ((_ to_fp 11 53) RNE ?float71) ((_ to_fp 8 24) RTZ ?float122) ((_ to_fp 5 11) RTN ?float126) ((_ to_fp 11 53) RTN ?float114) ((_ to_fp 11 53) RTZ ?float79) ((_ to_fp 11 53) RTP ?float113) ((_ to_fp 15 113) RTZ ?float126) ?float71 ((_ to_fp 11 53) RTZ ?float72))))
(declare-const ?float129 Float128)
(assert (= ?float129 (fp.abs ?float79)))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.abs ?float112)))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.neg ?float105)))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.roundToIntegral RTZ ?float120)))
(declare-const ?float133 Float128)
(assert (= ?float133 (fp.sub RTP ?float67 ((_ to_fp 15 113) RTZ ?float77))))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.min ?float110 ((_ to_fp 15 113) RTN ?float66))))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.mul RTZ ?float112 ?float64)))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.sub RNE ((_ to_fp 15 113) RNE ?float123) ?float120)))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.neg ?float118)))
(declare-const ?float138 Float128)
(assert (= ?float138 (f12 ((_ to_fp 5 11) RTP ?float81) ((_ to_fp 5 11) RTN ?float95) ?float84 ?float102 ((_ to_fp 15 113) RNE ?float94) ((_ to_fp 8 24) RTZ ?float78) ((_ to_fp 8 24) RTN ?float78))))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.add RTP ((_ to_fp 5 11) RNE ?float73) ?float118)))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.min ((_ to_fp 15 113) RNE ?float114) ?float69)))
(declare-const ?float141 Float128)
(assert (= ?float141 (f41 ((_ to_fp 11 53) RTP ?float84) ?float119 ((_ to_fp 11 53) RNE ?float82))))
(declare-const ?float142 Float32)
(assert (= ?float142 (fp.sub RTP ((_ to_fp 8 24) RTP ?float132) ?float84)))
(declare-const ?float143 Float16)
(assert (= ?float143 (fp.sqrt RNE ?float64)))
(declare-const ?float144 Float128)
(assert (= ?float144 (f41 ((_ to_fp 11 53) RNE ?float65) ((_ to_fp 5 11) RTP ?float120) ((_ to_fp 11 53) RNE ?float117))))
(declare-const ?float145 Float128)
(assert (= ?float145 (f10 ((_ to_fp 8 24) RTN ?float62) ((_ to_fp 8 24) RTZ ?float97) ?float137 ?float66)))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.div RTZ ((_ to_fp 5 11) RTZ ?float111) ?float109)))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.mul RTP ?float80 ?float67)))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.sub RTN ((_ to_fp 5 11) RTN ?float98) ?float127)))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.max ?float148 ((_ to_fp 5 11) RTN ?float94))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p0 ((_ to_fp 11 53) RTP ?float137) ((_ to_fp 8 24) RTN ?float117) ((_ to_fp 8 24) RTN ?float99) ((_ to_fp 8 24) RTN ?float80) ((_ to_fp 8 24) RNE ?float136) ((_ to_fp 11 53) RTP ?float90) ((_ to_fp 11 53) RTN ?float60))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p1 ?float79 ((_ to_fp 8 24) RTN ?float87) ?float148 ((_ to_fp 11 53) RNE ?float149))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNegative ?float61)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.gt ?float141 ?float110)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p6 ?float108 ((_ to_fp 11 53) RTP ?float112) ((_ to_fp 11 53) RTZ ?float94) ((_ to_fp 15 113) RNE ?float70) ((_ to_fp 15 113) RTZ ?float114) ?float123 ((_ to_fp 11 53) RTZ ?float102) ((_ to_fp 15 113) RTN ?float112))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.gt ((_ to_fp 8 24) RNE ?float96) ?float75)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isInfinite ?float107)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p9 ((_ to_fp 8 24) RTN ?float66) ((_ to_fp 15 113) RTZ ?float66) ((_ to_fp 8 24) RTN ?float144) ?float144 ((_ to_fp 5 11) RNE ?float100) ((_ to_fp 11 53) RTZ ?float105) ((_ to_fp 8 24) RTP ?float60) ?float82)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.leq ?float133 ?float81)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isPositive ?float84)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.eq ?float97 ?float90)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.geq ?float146 ?float127)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.gt ((_ to_fp 5 11) RNE ?float73) ?float135)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNormal ?float136)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isSubnormal ?float115)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isZero ?float70)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isSubnormal ?float109)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isInfinite ?float133)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.lt ?float68 ((_ to_fp 8 24) RTN ?float109))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.leq ?float132 ?float67)))
; FINAL ASSERT
(assert (or ?bool167 (and (and (and ?bool165)) ?bool167 (or (or (or ?bool168)))) (and ?bool158 (and ?bool151) ?bool153)))
(check-sat)


-- iteration 87 --
(declare-fun f0 (Float32 Float16 Float64 Float32 Float128) Float128)
(declare-fun f1 (Float64 Float16 Float64 Float16 Float64 Float32 Float64 Float64) Float32)
(declare-fun f2 (Float128 Float16 Float32 Float64 Float32 Float16 Float128 Float32) Float32)
(declare-fun f3 (Float16 Float32 Float128 Float128) Float64)
(declare-fun f4 (Float64) Float32)
(declare-fun f5 (Float16 Float16 Float32 Float16 Float32 Float128 Float64 Float128 Float32) Float16)
(declare-fun f6 (Float128 Float32 Float128) Float32)
(declare-fun f7 (Float128 Float16 Float16 Float16) Float128)
(declare-fun f8 (Float32 Float16 Float128 Float128 Float128 Float64 Float128 Float32 Float16 Float16) Float64)
(declare-fun f9 (Float32 Float16 Float64 Float64 Float16) Float64)
(declare-fun f10 (Float16) Float32)
(declare-fun f11 (Float32 Float128 Float16 Float64 Float32 Float128 Float16 Float32 Float16 Float32) Float16)
(declare-fun f12 (Float16 Float32 Float64) Float16)
(declare-fun f13 (Float128 Float64 Float32) Float16)
(declare-fun f14 (Float64 Float64 Float16 Float16 Float64 Float32) Float32)
(declare-fun f15 (Float32 Float64 Float64 Float16 Float128) Float64)
(declare-fun f16 (Float32 Float32 Float16 Float32 Float128 Float16 Float32) Float32)
(declare-fun f17 (Float16 Float32 Float128 Float32 Float32 Float32) Float64)
(declare-fun f18 (Float128 Float16 Float128 Float32 Float128 Float32) Float64)
(declare-fun f19 (Float128 Float16 Float64 Float16 Float64 Float16 Float128) Float64)
(declare-fun f20 (Float128 Float16 Float128 Float32) Float32)
(declare-fun f21 (Float128) Float64)
(declare-fun f22 (Float128 Float16 Float64) Float64)
(declare-fun f23 (Float16 Float128 Float32 Float32 Float32 Float16 Float16) Float64)
(declare-fun f24 (Float32 Float16 Float32 Float64 Float64 Float16 Float64) Float32)
(declare-fun f25 (Float64 Float32) Float16)
(declare-fun f26 (Float64 Float64 Float32 Float16 Float16 Float32 Float16 Float128 Float64 Float128) Float64)
(declare-fun f27 (Float128 Float32 Float16) Float64)
(declare-fun f28 (Float64 Float32 Float32 Float16 Float16 Float32 Float64 Float32 Float128) Float64)
(declare-fun f29 (Float32 Float128 Float128 Float16 Float128 Float16 Float64 Float128 Float64) Float32)
(declare-fun f30 (Float32 Float32 Float64 Float64 Float128) Float32)
(declare-fun f31 (Float32 Float32 Float128 Float16) Float16)
(declare-fun f32 (Float128 Float64 Float32 Float128 Float16 Float16 Float32 Float128 Float64 Float16) Float128)
(declare-fun f33 (Float32 Float32 Float128 Float64 Float64 Float32 Float16 Float32 Float128 Float32) Float128)
(declare-fun f34 (Float16 Float64) Float128)
(declare-fun f35 (Float128 Float32 Float64 Float32 Float128 Float16 Float16 Float128 Float32 Float16) Float128)
(declare-fun f36 (Float64 Float16 Float32 Float64 Float128 Float128 Float32 Float128 Float32 Float128) Float128)
(declare-fun f37 (Float16) Float32)
(declare-fun f38 (Float16 Float32 Float64 Float32 Float64 Float16 Float128 Float128 Float64 Float32) Float32)
(declare-fun f39 (Float128 Float16 Float64 Float128) Float64)
(declare-fun f40 (Float32 Float64) Float128)
(declare-fun f41 (Float32 Float64 Float16 Float128 Float64) Float32)
(declare-fun f42 (Float16 Float16 Float32) Float16)
(declare-fun f43 (Float16 Float16 Float128 Float32 Float128 Float64 Float128 Float64 Float64 Float128) Float16)
(declare-fun f44 (Float64) Float64)
(declare-fun f45 (Float32 Float32) Float16)
(declare-fun f46 (Float32 Float64 Float32) Float128)
(declare-fun f47 (Float64 Float64 Float16 Float32 Float16 Float32 Float128 Float16 Float32) Float16)
(declare-fun f48 (Float128 Float32) Float64)
(declare-fun f49 (Float32 Float32 Float32 Float32 Float128 Float64) Float32)
(declare-fun p0 (Float32 Float32 Float64 Float128 Float32 Float16 Float64 Float128 Float16) Bool)
(declare-fun p1 (Float16 Float32 Float32 Float64 Float16 Float16 Float128 Float16) Bool)
(declare-fun p2 (Float32 Float32 Float128 Float16 Float16 Float128 Float128) Bool)
(declare-fun p3 (Float128) Bool)
(declare-fun p4 (Float16 Float16 Float128 Float128 Float32) Bool)
(declare-fun p5 (Float16 Float32) Bool)
(declare-fun p6 (Float64 Float32 Float16 Float32 Float64 Float64 Float64 Float128) Bool)
(declare-fun p7 (Float32) Bool)
(declare-fun p8 (Float64 Float32 Float128 Float64 Float16 Float64 Float128) Bool)
(declare-fun p9 (Float64 Float16 Float128 Float64 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float128)
(declare-const ?float62 Float16)
(declare-const ?float63 Float128)
(declare-const ?float64 Float64)
(declare-const ?float65 Float128)
(declare-const ?float66 Float16)
(declare-const ?float67 Float16)
(declare-const ?float68 Float32)
(declare-const ?float69 Float128)
(declare-const ?float70 Float128)
(declare-const ?float71 Float64)
(declare-const ?float72 Float64)
(declare-const ?float73 Float32)
(declare-const ?float74 Float16)
(declare-const ?float75 Float32)
(declare-const ?float76 Float32)
(declare-const ?float77 Float16)
(declare-const ?float78 Float64)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b0 #b10000 #b1010100010)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float84 Float128)
(assert (= ?float84 (fp #b1 #b111000111011101 #b0111011000110110100010010101010000001010101110010010100110011101010101010001010100111111101101101111110100110110)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b0 #b11000 #b0000010111)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float92 Float64)
(assert (= ?float92 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b1 #b10111 #b1100001110)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b1 #b00001111 #b00110111110100101001111)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b1 #b00000000 #b00000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (fp.add RTZ ((_ to_fp 15 113) RNE ?float68) ?float94)))
(declare-const ?float101 Float64)
(assert (= ?float101 (f8 ((_ to_fp 8 24) RTZ ?float96) ?float80 ((_ to_fp 15 113) RNE ?float72) ((_ to_fp 15 113) RTZ ?float66) ((_ to_fp 15 113) RTP ?float95) ((_ to_fp 11 53) RTP ?float81) ?float70 ((_ to_fp 8 24) RTP ?float90) ((_ to_fp 5 11) RTP ?float99) ((_ to_fp 5 11) RTZ ?float93))))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.neg ?float84)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.neg ?float87)))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.max ((_ to_fp 15 113) RTN ?float97) ?float65)))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.div RTZ ?float68 ?float75)))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.roundToIntegral RTN ?float65)))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.max ?float83 ((_ to_fp 8 24) RTN ?float69))))
(declare-const ?float108 Float16)
(assert (= ?float108 (fp.abs ?float97)))
(declare-const ?float109 Float32)
(assert (= ?float109 (fp.sqrt RTP ?float99)))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.sub RNE ?float101 ((_ to_fp 11 53) RTZ ?float66))))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.neg ?float101)))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.mul RTP ((_ to_fp 8 24) RNE ?float88) ?float83)))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.min ?float90 ((_ to_fp 5 11) RTP ?float72))))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.neg ?float64)))
(declare-const ?float115 Float16)
(assert (= ?float115 (fp.mul RTN ?float97 ((_ to_fp 5 11) RTN ?float84))))
(declare-const ?float116 Float128)
(assert (= ?float116 (fp.neg ?float104)))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.max ?float85 ((_ to_fp 15 113) RTP ?float67))))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.add RTN ?float84 ((_ to_fp 15 113) RTN ?float101))))
(declare-const ?float119 Float128)
(assert (= ?float119 (fp.neg ?float65)))
(declare-const ?float120 Float32)
(assert (= ?float120 (f10 ((_ to_fp 5 11) RTP ?float119))))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.max ?float77 ((_ to_fp 5 11) RTZ ?float64))))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.sqrt RTZ ?float63)))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.mul RNE ((_ to_fp 11 53) RTZ ?float84) ?float64)))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.min ((_ to_fp 11 53) RNE ?float121) ?float64)))
(declare-const ?float125 Float16)
(assert (= ?float125 (fp.add RNE ((_ to_fp 5 11) RTP ?float116) ?float82)))
(declare-const ?float126 Float64)
(assert (= ?float126 (f23 ((_ to_fp 5 11) RNE ?float78) ((_ to_fp 15 113) RTZ ?float77) ((_ to_fp 8 24) RTZ ?float71) ((_ to_fp 8 24) RTN ?float67) ((_ to_fp 8 24) RTN ?float88) ((_ to_fp 5 11) RNE ?float69) ((_ to_fp 5 11) RTP ?float72))))
(declare-const ?float127 Float128)
(assert (= ?float127 (fp.abs ?float63)))
(declare-const ?float128 Float16)
(assert (= ?float128 (fp.neg ?float121)))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.sqrt RTZ ?float115)))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.min ((_ to_fp 5 11) RTZ ?float61) ?float80)))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.min ?float130 ((_ to_fp 5 11) RNE ?float93))))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.neg ?float84)))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.abs ?float80)))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.neg ?float87)))
(declare-const ?float135 Float64)
(assert (= ?float135 (f18 ((_ to_fp 15 113) RTZ ?float72) ((_ to_fp 5 11) RTN ?float71) ((_ to_fp 15 113) RTZ ?float99) ((_ to_fp 8 24) RTN ?float123) ((_ to_fp 15 113) RTZ ?float115) ((_ to_fp 8 24) RTZ ?float125))))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.sqrt RNE ?float82)))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.roundToIntegral RNE ?float68)))
(declare-const ?float138 Float64)
(assert (= ?float138 (f48 ((_ to_fp 15 113) RTP ?float74) ?float75)))
(declare-const ?float139 Float64)
(assert (= ?float139 (f15 ((_ to_fp 8 24) RTP ?float61) ((_ to_fp 11 53) RNE ?float117) ((_ to_fp 11 53) RTN ?float83) ((_ to_fp 5 11) RTN ?float83) ((_ to_fp 15 113) RTZ ?float112))))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.abs ?float73)))
(declare-const ?float141 Float128)
(assert (= ?float141 (f46 ((_ to_fp 8 24) RTN ?float134) ?float114 ((_ to_fp 8 24) RTP ?float132))))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.min ?float135 ((_ to_fp 11 53) RTN ?float98))))
(declare-const ?float143 Float16)
(assert (= ?float143 (fp.div RTN ((_ to_fp 5 11) RTZ ?float112) ?float82)))
(declare-const ?float144 Float64)
(assert (= ?float144 (f22 ((_ to_fp 15 113) RTP ?float110) ?float77 ((_ to_fp 11 53) RTP ?float125))))
(declare-const ?float145 Float16)
(assert (= ?float145 (fp.abs ?float77)))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.sqrt RTP ?float121)))
(declare-const ?float147 Float64)
(assert (= ?float147 (fp.min ?float92 ((_ to_fp 11 53) RTP ?float76))))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.sqrt RNE ?float135)))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.roundToIntegral RTP ?float89)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isPositive ?float86)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isInfinite ?float108)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNegative ?float92)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isZero ?float121)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.geq ?float69 ((_ to_fp 15 113) RTP ?float135))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isSubnormal ?float62)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (p0 ((_ to_fp 8 24) RTZ ?float70) ?float140 ((_ to_fp 11 53) RTN ?float129) ?float106 ((_ to_fp 8 24) RTN ?float60) ?float145 ?float111 ((_ to_fp 15 113) RTZ ?float82) ((_ to_fp 5 11) RNE ?float83))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNormal ?float73)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.eq ((_ to_fp 8 24) RTN ?float130) ?float105)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isSubnormal ?float96)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isSubnormal ?float132)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isInfinite ?float76)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (p1 ?float131 ((_ to_fp 8 24) RTZ ?float119) ((_ to_fp 8 24) RTN ?float61) ((_ to_fp 11 53) RTP ?float105) ?float62 ((_ to_fp 5 11) RTN ?float69) ((_ to_fp 15 113) RNE ?float107) ((_ to_fp 5 11) RNE ?float119))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isZero ?float92)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (p1 ((_ to_fp 5 11) RTN ?float135) ((_ to_fp 8 24) RTN ?float90) ((_ to_fp 8 24) RTZ ?float77) ((_ to_fp 11 53) RTP ?float141) ?float77 ((_ to_fp 5 11) RNE ?float104) ((_ to_fp 15 113) RNE ?float79) ((_ to_fp 5 11) RTN ?float92))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isNormal ?float76)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isInfinite ?float90)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNaN ?float128)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isInfinite ?float122)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.lt ?float101 ((_ to_fp 11 53) RTZ ?float130))))
; FINAL ASSERT
(assert (and (and ?bool162 (or ?bool156 ?bool164) ?bool163)))
(check-sat)


-- iteration 88 --
(declare-fun f0 (Float128 Float32 Float128 Float128 Float32 Float64 Float32 Float16 Float32 Float32) Float64)
(declare-fun f1 (Float128 Float16 Float128 Float128) Float16)
(declare-fun f2 (Float128 Float32 Float64 Float16 Float64 Float128) Float16)
(declare-fun f3 (Float32 Float64 Float128 Float32 Float16 Float16 Float32 Float32 Float64) Float64)
(declare-fun f4 (Float16 Float128 Float32 Float64) Float64)
(declare-fun f5 (Float16 Float32 Float128 Float128 Float32 Float64 Float128 Float16) Float32)
(declare-fun f6 (Float16) Float128)
(declare-fun f7 (Float64 Float128 Float64 Float32 Float16 Float16 Float32 Float16 Float128 Float16) Float64)
(declare-fun f8 (Float32 Float32 Float32 Float16 Float32 Float64 Float32 Float32) Float16)
(declare-fun f9 (Float32 Float16 Float32 Float64 Float64 Float32 Float64) Float32)
(declare-fun f10 (Float64 Float128 Float32) Float16)
(declare-fun f11 (Float16 Float32 Float64 Float128) Float128)
(declare-fun f12 (Float128 Float128 Float32 Float16 Float128 Float64 Float128 Float64 Float16 Float128) Float16)
(declare-fun f13 (Float128 Float32) Float16)
(declare-fun f14 (Float64) Float16)
(declare-fun f15 (Float16 Float32) Float64)
(declare-fun f16 (Float16 Float128 Float64 Float64 Float128 Float16) Float16)
(declare-fun f17 (Float16 Float16 Float128) Float16)
(declare-fun f18 (Float32 Float16 Float128 Float64 Float32 Float128) Float32)
(declare-fun f19 (Float16 Float64 Float16 Float32) Float32)
(declare-fun f20 (Float16 Float64 Float32 Float16 Float128 Float16 Float32 Float16) Float16)
(declare-fun f21 (Float64 Float128 Float128 Float16 Float32 Float128 Float16 Float16) Float128)
(declare-fun f22 (Float32 Float128 Float32 Float128 Float128 Float64) Float16)
(declare-fun f23 (Float64 Float32) Float128)
(declare-fun f24 (Float64 Float32 Float128 Float16 Float16) Float64)
(declare-fun f25 (Float32 Float16 Float128) Float64)
(declare-fun f26 (Float32 Float32 Float64 Float64 Float128 Float64 Float16) Float64)
(declare-fun f27 (Float64 Float64 Float16) Float32)
(declare-fun f28 (Float128 Float128 Float64 Float64 Float128 Float64 Float64 Float64) Float16)
(declare-fun f29 (Float16 Float64 Float128) Float64)
(declare-fun f30 (Float16 Float16 Float32 Float16 Float64 Float16 Float16 Float16 Float128) Float16)
(declare-fun f31 (Float128 Float16 Float16 Float32 Float16 Float32 Float128 Float64) Float32)
(declare-fun f32 (Float16) Float32)
(declare-fun f33 (Float128 Float32 Float128 Float64 Float64) Float128)
(declare-fun f34 (Float128 Float128 Float64 Float128 Float16 Float16 Float128 Float64 Float32) Float128)
(declare-fun f35 (Float128 Float16 Float128 Float64 Float128 Float64 Float32) Float64)
(declare-fun f36 (Float64 Float32 Float16 Float128 Float16 Float64 Float128 Float64 Float16) Float32)
(declare-fun f37 (Float32 Float32 Float128 Float32 Float64 Float32) Float64)
(declare-fun f38 (Float128 Float64) Float128)
(declare-fun f39 (Float64 Float16 Float32 Float32) Float32)
(declare-fun f40 (Float64 Float64 Float16 Float128 Float128 Float32 Float64 Float128) Float32)
(declare-fun f41 (Float128 Float16 Float64 Float32 Float16 Float128 Float64) Float64)
(declare-fun f42 (Float64 Float64 Float16) Float64)
(declare-fun f43 (Float64 Float16 Float128 Float16 Float128 Float32 Float64 Float64 Float64) Float64)
(declare-fun f44 (Float64 Float16 Float16 Float32) Float32)
(declare-fun f45 (Float64 Float16 Float32 Float16 Float64 Float64 Float64 Float16 Float16 Float32) Float16)
(declare-fun f46 (Float128 Float128) Float32)
(declare-fun f47 (Float32 Float32 Float128 Float128 Float64 Float128 Float128 Float128 Float64 Float32) Float128)
(declare-fun f48 (Float128 Float16 Float64 Float64 Float128 Float16 Float64 Float32 Float32 Float16) Float64)
(declare-fun f49 (Float128 Float32 Float64 Float64 Float64 Float64 Float128 Float16 Float32 Float16) Float128)
(declare-fun p0 (Float128 Float32 Float128 Float128) Bool)
(declare-fun p1 (Float64 Float64 Float32 Float16) Bool)
(declare-fun p2 (Float64 Float64 Float128 Float32 Float64 Float64) Bool)
(declare-fun p3 (Float128) Bool)
(declare-fun p4 (Float16 Float32 Float16) Bool)
(declare-fun p5 (Float64 Float16 Float64 Float16 Float32 Float128 Float32 Float32 Float128 Float16) Bool)
(declare-fun p6 (Float32 Float16 Float64 Float64 Float16 Float64 Float32 Float16 Float32) Bool)
(declare-fun p7 (Float64) Bool)
(declare-fun p8 (Float128 Float32 Float64 Float128 Float16 Float16 Float32 Float64) Bool)
(declare-fun p9 (Float64 Float32 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float32)
(declare-const ?float62 Float16)
(declare-const ?float63 Float16)
(declare-const ?float64 Float32)
(declare-const ?float65 Float16)
(declare-const ?float66 Float32)
(declare-const ?float67 Float16)
(declare-const ?float68 Float64)
(declare-const ?float69 Float64)
(declare-const ?float70 Float16)
(declare-const ?float71 Float128)
(declare-const ?float72 Float32)
(declare-const ?float73 Float128)
(declare-const ?float74 Float32)
(declare-const ?float75 Float32)
(declare-const ?float76 Float32)
(declare-const ?float77 Float32)
(declare-const ?float78 Float16)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b1 #b101111000011111 #b1100100110110011001110010000011111100100111101110101001011111100110111001000101001011111110110101011110000101110)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b1 #b11010010 #b10110000010101010010000)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b1 #b011100000010010 #b1000000001100011101000101101010010011110011100001001111011001110101101110010100011001111010110010100101000000110)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b1 #b000100101101110 #b1101011000001110011000001011100101001101101110101100000110101101011101110111100111010000000010010111000011001110)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.abs ?float92)))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.add RTN ?float61 ?float84)))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.max ?float83 ((_ to_fp 5 11) RTZ ?float75))))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.neg ?float82)))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.min ?float74 ?float72)))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.min ((_ to_fp 8 24) RTZ ?float67) ?float64)))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.sub RTN ?float74 ((_ to_fp 8 24) RTP ?float99))))
(declare-const ?float107 Float32)
(assert (= ?float107 (f5 ((_ to_fp 5 11) RTN ?float82) ((_ to_fp 8 24) RTN ?float96) ((_ to_fp 15 113) RTZ ?float87) ((_ to_fp 15 113) RTP ?float65) ?float66 ((_ to_fp 11 53) RNE ?float75) ((_ to_fp 15 113) RTN ?float81) ((_ to_fp 5 11) RTP ?float105))))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.sub RNE ((_ to_fp 8 24) RTZ ?float67) ?float89)))
(declare-const ?float109 Float64)
(assert (= ?float109 (f35 ((_ to_fp 15 113) RTP ?float79) ((_ to_fp 5 11) RTN ?float66) ((_ to_fp 15 113) RTP ?float77) ((_ to_fp 11 53) RNE ?float85) ((_ to_fp 15 113) RNE ?float95) ((_ to_fp 11 53) RTZ ?float83) ?float79)))
(declare-const ?float110 Float32)
(assert (= ?float110 (fp.roundToIntegral RNE ?float75)))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.add RTN ?float107 ?float75)))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.div RTZ ?float85 ?float88)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.div RNE ?float68 ?float97)))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.max ?float94 ((_ to_fp 5 11) RTZ ?float71))))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.div RTP ?float108 ((_ to_fp 8 24) RTP ?float91))))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.sqrt RTZ ?float74)))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.min ((_ to_fp 11 53) RTZ ?float88) ?float97)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.div RTZ ((_ to_fp 8 24) RTN ?float91) ?float115)))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.sub RTZ ?float104 ((_ to_fp 8 24) RNE ?float62))))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.add RNE ((_ to_fp 15 113) RTN ?float68) ?float80)))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.div RTZ ((_ to_fp 5 11) RTP ?float118) ?float94)))
(declare-const ?float122 Float32)
(assert (= ?float122 (fp.neg ?float116)))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.div RTN ((_ to_fp 11 53) RTN ?float100) ?float68)))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.max ((_ to_fp 8 24) RTP ?float86) ?float61)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.min ?float110 ((_ to_fp 8 24) RTN ?float123))))
(declare-const ?float126 Float64)
(assert (= ?float126 (fp.div RNE ((_ to_fp 11 53) RTZ ?float125) ?float91)))
(declare-const ?float127 Float32)
(assert (= ?float127 (f32 ((_ to_fp 5 11) RNE ?float107))))
(declare-const ?float128 Float16)
(assert (= ?float128 (f2 ((_ to_fp 15 113) RNE ?float87) ((_ to_fp 8 24) RTN ?float98) ((_ to_fp 11 53) RTN ?float77) ((_ to_fp 5 11) RTP ?float91) ((_ to_fp 11 53) RTZ ?float104) ?float120)))
(declare-const ?float129 Float64)
(assert (= ?float129 (f15 ((_ to_fp 5 11) RNE ?float71) ((_ to_fp 8 24) RNE ?float114))))
(declare-const ?float130 Float16)
(assert (= ?float130 (f12 ((_ to_fp 15 113) RTZ ?float119) ?float71 ?float64 ?float102 ((_ to_fp 15 113) RNE ?float121) ((_ to_fp 11 53) RTN ?float83) ((_ to_fp 15 113) RNE ?float61) ((_ to_fp 11 53) RTZ ?float76) ((_ to_fp 5 11) RNE ?float125) ((_ to_fp 15 113) RTZ ?float113))))
(declare-const ?float131 Float128)
(assert (= ?float131 (f33 ((_ to_fp 15 113) RTZ ?float128) ((_ to_fp 8 24) RTZ ?float81) ((_ to_fp 15 113) RTP ?float101) ((_ to_fp 11 53) RTN ?float93) ((_ to_fp 11 53) RTP ?float70))))
(declare-const ?float132 Float128)
(assert (= ?float132 (f6 ((_ to_fp 5 11) RTZ ?float88))))
(declare-const ?float133 Float128)
(assert (= ?float133 (fp.max ?float71 ((_ to_fp 15 113) RTN ?float118))))
(declare-const ?float134 Float32)
(assert (= ?float134 (fp.min ?float79 ?float106)))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.min ?float96 ((_ to_fp 15 113) RTP ?float94))))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.max ?float135 ((_ to_fp 15 113) RTN ?float82))))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.neg ?float121)))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.sqrt RNE ?float65)))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.max ?float99 ((_ to_fp 15 113) RTZ ?float69))))
(declare-const ?float140 Float32)
(assert (= ?float140 (f9 ((_ to_fp 8 24) RTP ?float98) ?float114 ((_ to_fp 8 24) RTN ?float91) ((_ to_fp 11 53) RNE ?float137) ((_ to_fp 11 53) RTZ ?float102) ?float122 ((_ to_fp 11 53) RTP ?float101))))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.min ?float99 ?float80)))
(declare-const ?float142 Float32)
(assert (= ?float142 (fp.sqrt RTZ ?float61)))
(declare-const ?float143 Float128)
(assert (= ?float143 (f38 ((_ to_fp 15 113) RNE ?float113) ((_ to_fp 11 53) RTZ ?float138))))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.neg ?float66)))
(declare-const ?float145 Float128)
(assert (= ?float145 (f38 ?float133 ((_ to_fp 11 53) RTZ ?float142))))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.min ?float138 ?float94)))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.min ?float119 ((_ to_fp 8 24) RNE ?float113))))
(declare-const ?float148 Float32)
(assert (= ?float148 (fp.roundToIntegral RNE ?float115)))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.min ?float121 ((_ to_fp 5 11) RTZ ?float82))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isZero ?float60)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNormal ?float128)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.leq ((_ to_fp 11 53) RTN ?float139) ?float123)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (p5 ((_ to_fp 11 53) RTZ ?float143) ((_ to_fp 5 11) RTZ ?float72) ?float68 ((_ to_fp 5 11) RTP ?float116) ?float107 ((_ to_fp 15 113) RTN ?float129) ((_ to_fp 8 24) RTN ?float82) ?float144 ((_ to_fp 15 113) RTZ ?float101) ((_ to_fp 5 11) RTZ ?float124))))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.leq ((_ to_fp 8 24) RTZ ?float65) ?float125)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p3 ((_ to_fp 15 113) RTZ ?float62))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (p5 ?float82 ((_ to_fp 5 11) RTN ?float90) ((_ to_fp 11 53) RNE ?float138) ((_ to_fp 5 11) RNE ?float126) ?float72 ((_ to_fp 15 113) RTZ ?float95) ((_ to_fp 8 24) RTN ?float78) ((_ to_fp 8 24) RTZ ?float131) ((_ to_fp 15 113) RNE ?float91) ((_ to_fp 5 11) RTN ?float113))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.lt ((_ to_fp 8 24) RTN ?float69) ?float127)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p4 ((_ to_fp 5 11) RTP ?float116) ?float142 ((_ to_fp 5 11) RTZ ?float145))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p2 ((_ to_fp 11 53) RTP ?float94) ((_ to_fp 11 53) RNE ?float94) ((_ to_fp 15 113) RTN ?float110) ?float89 ((_ to_fp 11 53) RTZ ?float98) ((_ to_fp 11 53) RTZ ?float83))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p8 ((_ to_fp 15 113) RNE ?float105) ((_ to_fp 8 24) RNE ?float133) ((_ to_fp 11 53) RTP ?float134) ((_ to_fp 15 113) RTZ ?float142) ((_ to_fp 5 11) RTN ?float141) ((_ to_fp 5 11) RTZ ?float109) ?float119 ((_ to_fp 11 53) RTZ ?float98))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (p4 ((_ to_fp 5 11) RTP ?float87) ?float125 ((_ to_fp 5 11) RTN ?float91))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNormal ?float79)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.leq ((_ to_fp 15 113) RTP ?float104) ?float96)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isSubnormal ?float86)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isInfinite ?float121)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.eq ((_ to_fp 5 11) RTZ ?float147) ?float70)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNaN ?float107)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.lt ?float108 ((_ to_fp 8 24) RTP ?float135))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.geq ((_ to_fp 11 53) RTZ ?float137) ?float126)))
; FINAL ASSERT
(assert (and (or (and ?bool159 ?bool166 (or ?bool164 (and (or (or ?bool151 ?bool156 ?bool159) (and ?bool151 ?bool162) ?bool162))))) (or ?bool160)))
(check-sat)


-- iteration 89 --
(declare-fun f0 (Float64 Float16 Float32 Float32 Float64 Float64 Float16) Float64)
(declare-fun f1 (Float64 Float128 Float128 Float32 Float128 Float64 Float128 Float16 Float128) Float16)
(declare-fun f2 (Float32 Float128 Float128) Float64)
(declare-fun f3 (Float128) Float64)
(declare-fun f4 (Float32 Float32 Float64 Float128 Float128) Float32)
(declare-fun f5 (Float128 Float16 Float128 Float128 Float64 Float64 Float128 Float64 Float128) Float16)
(declare-fun f6 (Float32 Float16 Float128 Float32 Float64 Float128 Float64 Float16 Float16) Float16)
(declare-fun f7 (Float32) Float16)
(declare-fun f8 (Float64) Float16)
(declare-fun f9 (Float128 Float32 Float64 Float16) Float128)
(declare-fun f10 (Float16 Float64 Float32 Float128 Float32 Float16 Float128 Float128 Float64 Float128) Float32)
(declare-fun f11 (Float32 Float16 Float64 Float32 Float16 Float64) Float16)
(declare-fun f12 (Float128 Float128 Float128) Float128)
(declare-fun f13 (Float16 Float16 Float128 Float16) Float64)
(declare-fun f14 (Float128 Float64 Float64) Float64)
(declare-fun f15 (Float64 Float128 Float16 Float128 Float64 Float16 Float64) Float128)
(declare-fun f16 (Float128 Float128 Float64 Float32 Float128 Float16 Float128 Float32 Float64 Float128) Float32)
(declare-fun f17 (Float128 Float16 Float16 Float32 Float16 Float128 Float16 Float16 Float64) Float32)
(declare-fun f18 (Float32 Float128) Float128)
(declare-fun f19 (Float32 Float16 Float32 Float128) Float64)
(declare-fun f20 (Float64 Float64) Float64)
(declare-fun f21 (Float32 Float32 Float32 Float16 Float16 Float128 Float16 Float128) Float32)
(declare-fun f22 (Float128 Float32 Float64 Float128 Float64 Float64 Float128) Float128)
(declare-fun f23 (Float32 Float32 Float16) Float64)
(declare-fun f24 (Float16 Float64 Float128 Float16 Float64) Float64)
(declare-fun f25 (Float32 Float32 Float32 Float16 Float32 Float64 Float32 Float32 Float32) Float16)
(declare-fun f26 (Float32 Float32 Float32 Float64 Float128 Float128 Float64 Float128 Float128 Float64) Float64)
(declare-fun f27 (Float32 Float16 Float16 Float16 Float16) Float64)
(declare-fun f28 (Float16) Float64)
(declare-fun f29 (Float64) Float32)
(declare-fun f30 (Float32 Float32 Float64 Float64 Float32 Float128 Float128 Float32 Float128 Float64) Float16)
(declare-fun f31 (Float128 Float128 Float32) Float128)
(declare-fun f32 (Float32 Float128 Float32 Float64 Float64 Float128 Float128) Float128)
(declare-fun f33 (Float32 Float64 Float32 Float128 Float64 Float128 Float128 Float128 Float64) Float64)
(declare-fun f34 (Float128 Float32 Float16 Float64 Float32 Float16 Float16 Float64 Float16) Float128)
(declare-fun f35 (Float32 Float128 Float128 Float64 Float16 Float128 Float64 Float128) Float128)
(declare-fun f36 (Float64 Float32 Float32 Float128 Float32 Float128) Float16)
(declare-fun f37 (Float16 Float64 Float128 Float128 Float128) Float16)
(declare-fun f38 (Float16 Float16 Float32 Float128) Float128)
(declare-fun f39 (Float128 Float32 Float64 Float16 Float32 Float32 Float16) Float16)
(declare-fun f40 (Float64 Float64 Float128) Float16)
(declare-fun f41 (Float128 Float64 Float64 Float16) Float16)
(declare-fun f42 (Float64 Float64 Float128 Float128 Float64 Float16 Float16 Float64 Float128) Float32)
(declare-fun f43 (Float128 Float32) Float128)
(declare-fun f44 (Float32 Float128 Float128 Float32 Float128 Float64 Float64 Float16 Float128) Float16)
(declare-fun f45 (Float128) Float128)
(declare-fun f46 (Float64 Float128) Float16)
(declare-fun f47 (Float32 Float32 Float16 Float64 Float128 Float128 Float64 Float32) Float128)
(declare-fun f48 (Float16 Float32 Float64) Float128)
(declare-fun f49 (Float32 Float64 Float128 Float32 Float16) Float32)
(declare-fun p0 (Float128 Float16 Float32 Float16 Float64 Float32 Float128 Float16 Float32) Bool)
(declare-fun p1 (Float128 Float16 Float64) Bool)
(declare-fun p2 (Float128 Float16 Float128 Float64 Float64 Float16 Float32) Bool)
(declare-fun p3 (Float32 Float128) Bool)
(declare-fun p4 (Float16 Float128 Float16 Float64) Bool)
(declare-fun p5 (Float32 Float128 Float128 Float32 Float64) Bool)
(declare-fun p6 (Float32 Float16 Float128 Float64 Float32 Float64) Bool)
(declare-fun p7 (Float32 Float16) Bool)
(declare-fun p8 (Float32 Float16 Float64 Float64 Float128) Bool)
(declare-fun p9 (Float64 Float128 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float16)
(declare-const ?float62 Float64)
(declare-const ?float63 Float128)
(declare-const ?float64 Float32)
(declare-const ?float65 Float64)
(declare-const ?float66 Float16)
(declare-const ?float67 Float128)
(declare-const ?float68 Float64)
(declare-const ?float69 Float128)
(declare-const ?float70 Float64)
(declare-const ?float71 Float16)
(declare-const ?float72 Float64)
(declare-const ?float73 Float16)
(declare-const ?float74 Float32)
(declare-const ?float75 Float32)
(declare-const ?float76 Float16)
(declare-const ?float77 Float16)
(declare-const ?float78 Float128)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b1 #b00110110 #b11001011110101110011100)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b1 #b10000 #b0011001101)))
(declare-const ?float83 Float128)
(assert (= ?float83 (fp #b1 #b111010010011011 #b0111011011111001110101111010010001111100001001000100001000110010001101110011100111111110001110110110000111010011)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b0 #b100010010111001 #b1110000110100100100110000101001111010111011100000100010101011001111110101010010000000001101111010000010010110001)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b0 #b111111101101110 #b1111010111110100001000000000011010010000111000010111101111011001011010100101000011010101100111011010111011111100)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.mul RTP ?float88 ?float84)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.sub RTN ?float76 ((_ to_fp 5 11) RNE ?float88))))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.abs ?float95)))
(declare-const ?float103 Float128)
(assert (= ?float103 (fp.roundToIntegral RTN ?float67)))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.div RTN ((_ to_fp 11 53) RNE ?float79) ?float65)))
(declare-const ?float105 Float64)
(assert (= ?float105 (f20 ?float62 ((_ to_fp 11 53) RTN ?float63))))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.add RNE ((_ to_fp 8 24) RTN ?float62) ?float94)))
(declare-const ?float107 Float128)
(assert (= ?float107 (fp.add RTZ ?float83 ((_ to_fp 15 113) RNE ?float75))))
(declare-const ?float108 Float16)
(assert (= ?float108 (fp.roundToIntegral RTZ ?float66)))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.div RTP ?float68 ((_ to_fp 11 53) RTN ?float86))))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.neg ?float61)))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.roundToIntegral RTN ?float109)))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.neg ?float75)))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.neg ?float90)))
(declare-const ?float114 Float128)
(assert (= ?float114 (fp.add RTP ((_ to_fp 15 113) RTP ?float87) ?float103)))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.add RTZ ((_ to_fp 15 113) RTP ?float106) ?float114)))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.max ?float84 ((_ to_fp 8 24) RTZ ?float109))))
(declare-const ?float117 Float32)
(assert (= ?float117 (fp.neg ?float75)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.roundToIntegral RTP ?float94)))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.sqrt RNE ?float82)))
(declare-const ?float120 Float32)
(assert (= ?float120 (f10 ((_ to_fp 5 11) RTN ?float100) ((_ to_fp 11 53) RTN ?float107) ((_ to_fp 8 24) RTZ ?float67) ?float60 ((_ to_fp 8 24) RNE ?float69) ((_ to_fp 5 11) RNE ?float93) ((_ to_fp 15 113) RTP ?float96) ?float95 ((_ to_fp 11 53) RTZ ?float107) ((_ to_fp 15 113) RTZ ?float112))))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.div RTZ ?float71 ?float73)))
(declare-const ?float122 Float32)
(assert (= ?float122 (fp.sqrt RTP ?float91)))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.abs ?float109)))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.roundToIntegral RTP ?float87)))
(declare-const ?float125 Float16)
(assert (= ?float125 (fp.sqrt RTZ ?float71)))
(declare-const ?float126 Float16)
(assert (= ?float126 (f25 ?float79 ?float88 ((_ to_fp 8 24) RNE ?float78) ((_ to_fp 5 11) RNE ?float63) ((_ to_fp 8 24) RTZ ?float71) ((_ to_fp 11 53) RTZ ?float91) ((_ to_fp 8 24) RTN ?float114) ((_ to_fp 8 24) RNE ?float90) ((_ to_fp 8 24) RNE ?float86))))
(declare-const ?float127 Float32)
(assert (= ?float127 (f21 ((_ to_fp 8 24) RTP ?float99) ((_ to_fp 8 24) RTP ?float76) ((_ to_fp 8 24) RTZ ?float114) ((_ to_fp 5 11) RTZ ?float62) ?float76 ((_ to_fp 15 113) RTP ?float110) ((_ to_fp 5 11) RTP ?float72) ((_ to_fp 15 113) RTZ ?float99))))
(declare-const ?float128 Float16)
(assert (= ?float128 (fp.min ?float110 ((_ to_fp 5 11) RNE ?float91))))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.abs ?float110)))
(declare-const ?float130 Float64)
(assert (= ?float130 (fp.mul RTP ((_ to_fp 11 53) RNE ?float63) ?float68)))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.max ?float126 ((_ to_fp 5 11) RNE ?float63))))
(declare-const ?float132 Float64)
(assert (= ?float132 (f28 ((_ to_fp 5 11) RNE ?float104))))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.add RTN ?float124 ((_ to_fp 8 24) RTN ?float114))))
(declare-const ?float134 Float16)
(assert (= ?float134 (f6 ?float127 ?float113 ((_ to_fp 15 113) RTN ?float66) ?float133 ((_ to_fp 11 53) RTN ?float81) ?float97 ?float130 ?float131 ((_ to_fp 5 11) RNE ?float79))))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.add RNE ?float64 ((_ to_fp 8 24) RTP ?float128))))
(declare-const ?float136 Float64)
(assert (= ?float136 (f3 ((_ to_fp 15 113) RTZ ?float126))))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.max ((_ to_fp 8 24) RTP ?float136) ?float118)))
(declare-const ?float138 Float32)
(assert (= ?float138 (fp.mul RTZ ?float117 ?float137)))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.mul RTP ?float67 ((_ to_fp 15 113) RTN ?float129))))
(declare-const ?float140 Float64)
(assert (= ?float140 (fp.div RTN ?float111 ?float62)))
(declare-const ?float141 Float32)
(assert (= ?float141 (fp.div RTZ ((_ to_fp 8 24) RNE ?float73) ?float100)))
(declare-const ?float142 Float32)
(assert (= ?float142 (fp.min ?float133 ((_ to_fp 8 24) RTP ?float82))))
(declare-const ?float143 Float128)
(assert (= ?float143 (f9 ((_ to_fp 15 113) RTZ ?float111) ((_ to_fp 8 24) RNE ?float102) ((_ to_fp 11 53) RTZ ?float124) ((_ to_fp 5 11) RNE ?float135))))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.sub RNE ?float81 ((_ to_fp 8 24) RTN ?float104))))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.roundToIntegral RTP ?float68)))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.div RTN ?float124 ((_ to_fp 8 24) RTN ?float102))))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.neg ?float80)))
(declare-const ?float148 Float128)
(assert (= ?float148 (fp.div RTN ?float143 ?float139)))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.roundToIntegral RTN ?float66)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isNormal ?float93)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isPositive ?float135)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNegative ?float91)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (p1 ((_ to_fp 15 113) RNE ?float75) ((_ to_fp 5 11) RTP ?float100) ?float145)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNaN ?float88)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isNegative ?float82)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isZero ?float65)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p7 ((_ to_fp 8 24) RNE ?float101) ((_ to_fp 5 11) RTZ ?float99))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.geq ?float96 ((_ to_fp 11 53) RTN ?float82))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isInfinite ?float93)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNegative ?float130)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.gt ((_ to_fp 15 113) RNE ?float125) ?float95)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.leq ?float73 ((_ to_fp 5 11) RNE ?float69))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isSubnormal ?float92)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isZero ?float60)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.lt ?float149 ?float110)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.gt ?float98 ?float98)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.leq ((_ to_fp 5 11) RTZ ?float132) ?float128)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isSubnormal ?float102)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.geq ?float66 ?float73)))
; FINAL ASSERT
(assert (and (and ?bool159) ?bool165))
(check-sat)


-- iteration 90 --
(declare-fun f0 (Float128 Float16 Float32 Float16) Float64)
(declare-fun f1 (Float32) Float64)
(declare-fun f2 (Float16 Float32 Float16 Float16 Float32 Float16 Float128 Float32) Float32)
(declare-fun f3 (Float32 Float64 Float32) Float32)
(declare-fun f4 (Float16) Float16)
(declare-fun f5 (Float128 Float128 Float128 Float16 Float128 Float64 Float16 Float64 Float64) Float128)
(declare-fun f6 (Float32 Float32 Float16) Float64)
(declare-fun f7 (Float16) Float16)
(declare-fun f8 (Float128 Float16 Float32 Float128) Float16)
(declare-fun f9 (Float64 Float16 Float64) Float32)
(declare-fun f10 (Float64 Float16 Float64 Float16 Float64) Float32)
(declare-fun f11 (Float64 Float16 Float64 Float16 Float16 Float16 Float64 Float32 Float64) Float32)
(declare-fun f12 (Float16) Float128)
(declare-fun f13 (Float64 Float128 Float128 Float64 Float32) Float16)
(declare-fun f14 (Float16 Float16 Float128 Float128 Float32 Float64 Float32 Float16) Float16)
(declare-fun f15 (Float128 Float64 Float64 Float16 Float16 Float16 Float64 Float128 Float128 Float128) Float64)
(declare-fun f16 (Float128 Float16 Float64 Float16 Float16 Float32) Float64)
(declare-fun f17 (Float32 Float64 Float16 Float128 Float128) Float32)
(declare-fun f18 (Float64) Float128)
(declare-fun f19 (Float64 Float64 Float128) Float32)
(declare-fun f20 (Float16 Float128 Float64 Float16 Float16 Float64 Float128 Float128 Float16) Float128)
(declare-fun f21 (Float64 Float128 Float32 Float32 Float16 Float16 Float64 Float64 Float64 Float16) Float32)
(declare-fun f22 (Float128 Float64 Float64 Float128) Float128)
(declare-fun f23 (Float128 Float16 Float16 Float64) Float128)
(declare-fun f24 (Float16 Float32 Float32 Float32 Float32 Float64 Float16 Float32) Float32)
(declare-fun f25 (Float64 Float64 Float16 Float32 Float64 Float64) Float64)
(declare-fun f26 (Float128 Float128 Float16 Float32 Float128 Float16 Float128) Float128)
(declare-fun f27 (Float16 Float32 Float64 Float64 Float128 Float128) Float16)
(declare-fun f28 (Float64 Float16 Float128 Float32 Float16 Float64) Float64)
(declare-fun f29 (Float16) Float128)
(declare-fun f30 (Float32 Float32 Float64 Float64 Float32 Float64 Float16 Float128) Float64)
(declare-fun f31 (Float16 Float16) Float32)
(declare-fun f32 (Float64 Float16 Float16) Float64)
(declare-fun f33 (Float16 Float128) Float128)
(declare-fun f34 (Float32 Float32 Float128) Float32)
(declare-fun f35 (Float16 Float16 Float32) Float16)
(declare-fun f36 (Float16 Float32 Float16 Float16 Float64 Float64) Float128)
(declare-fun f37 (Float16 Float16 Float16 Float16 Float128 Float32 Float128 Float64) Float32)
(declare-fun f38 (Float32 Float64 Float32 Float16 Float64 Float16 Float32 Float128 Float128 Float16) Float64)
(declare-fun f39 (Float64 Float128 Float16 Float16 Float32 Float32) Float64)
(declare-fun f40 (Float64 Float64 Float32 Float16 Float16 Float64 Float32) Float32)
(declare-fun f41 (Float32 Float32 Float16 Float128 Float64 Float128) Float64)
(declare-fun f42 (Float128 Float16 Float32 Float64 Float16 Float64 Float64) Float16)
(declare-fun f43 (Float64) Float32)
(declare-fun f44 (Float128 Float64 Float128 Float32 Float128 Float64 Float128) Float32)
(declare-fun f45 (Float64 Float32) Float32)
(declare-fun f46 (Float16 Float32) Float16)
(declare-fun f47 (Float16 Float128 Float16 Float16 Float32 Float128 Float64 Float16) Float128)
(declare-fun f48 (Float16 Float16 Float64 Float64 Float64 Float128 Float64 Float32) Float32)
(declare-fun f49 (Float128 Float128 Float128 Float128 Float32) Float64)
(declare-fun p0 (Float64 Float16 Float16 Float32 Float16 Float16) Bool)
(declare-fun p1 (Float64) Bool)
(declare-fun p2 (Float64) Bool)
(declare-fun p3 (Float64 Float64 Float128 Float128 Float16 Float64 Float64 Float128) Bool)
(declare-fun p4 (Float64 Float64 Float64 Float64 Float16 Float64) Bool)
(declare-fun p5 (Float16) Bool)
(declare-fun p6 (Float16 Float128 Float32 Float64 Float16 Float64 Float128 Float16) Bool)
(declare-fun p7 (Float32 Float64 Float128 Float64 Float32 Float16) Bool)
(declare-fun p8 (Float128 Float32 Float32 Float128 Float16 Float128 Float16 Float16 Float32) Bool)
(declare-fun p9 (Float16 Float128 Float128 Float16 Float64 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float32)
(declare-const ?float62 Float16)
(declare-const ?float63 Float16)
(declare-const ?float64 Float32)
(declare-const ?float65 Float16)
(declare-const ?float66 Float64)
(declare-const ?float67 Float16)
(declare-const ?float68 Float64)
(declare-const ?float69 Float64)
(declare-const ?float70 Float16)
(declare-const ?float71 Float64)
(declare-const ?float72 Float64)
(declare-const ?float73 Float32)
(declare-const ?float74 Float16)
(declare-const ?float75 Float64)
(declare-const ?float76 Float128)
(declare-const ?float77 Float64)
(declare-const ?float78 Float128)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b0 #b10111 #b1100011101)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float90 Float128)
(assert (= ?float90 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b1 #b00011 #b0010000001)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b0 #b01111111111 #b1010011100111001110011111111001011011101100000000111)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b0 #b011011001111010 #b0100001011011111010001001101000000010100010010100001111100011001110000011011001001110010001000010001110001000110)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b0 #b11110111100 #b1010100000000010010110110111010101111110010100001010)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b0 #b01100 #b0110010011)))
(declare-const ?float98 Float64)
(assert (= ?float98 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b1 #b00001 #b0000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (f4 ?float70)))
(declare-const ?float101 Float64)
(assert (= ?float101 (fp.max ?float98 ?float71)))
(declare-const ?float102 Float64)
(assert (= ?float102 (fp.max ?float69 ((_ to_fp 11 53) RTN ?float100))))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.roundToIntegral RTZ ?float69)))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.sub RTN ?float97 ?float92)))
(declare-const ?float105 Float128)
(assert (= ?float105 (f26 ((_ to_fp 15 113) RNE ?float98) ((_ to_fp 15 113) RTN ?float67) ((_ to_fp 5 11) RTP ?float79) ((_ to_fp 8 24) RTZ ?float97) ((_ to_fp 15 113) RTN ?float70) ((_ to_fp 5 11) RTN ?float83) ((_ to_fp 15 113) RNE ?float80))))
(declare-const ?float106 Float16)
(assert (= ?float106 (fp.add RTP ?float92 ?float67)))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.add RTN ?float61 ((_ to_fp 8 24) RTN ?float70))))
(declare-const ?float108 Float16)
(assert (= ?float108 (f35 ((_ to_fp 5 11) RNE ?float91) ?float67 ((_ to_fp 8 24) RNE ?float75))))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.min ?float87 ?float86)))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.abs ?float89)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.abs ?float81)))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.sqrt RTZ ?float109)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.mul RTZ ((_ to_fp 11 53) RTP ?float108) ?float102)))
(declare-const ?float114 Float128)
(assert (= ?float114 (f33 ?float106 ((_ to_fp 15 113) RTZ ?float98))))
(declare-const ?float115 Float16)
(assert (= ?float115 (f35 ?float99 ?float108 ((_ to_fp 8 24) RTP ?float86))))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.abs ?float79)))
(declare-const ?float117 Float32)
(assert (= ?float117 (f10 ((_ to_fp 11 53) RTP ?float88) ((_ to_fp 5 11) RTP ?float82) ((_ to_fp 11 53) RTP ?float78) ?float86 ((_ to_fp 11 53) RTZ ?float62))))
(declare-const ?float118 Float64)
(assert (= ?float118 (fp.min ((_ to_fp 11 53) RNE ?float97) ?float113)))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.div RTP ((_ to_fp 11 53) RTN ?float79) ?float101)))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.sqrt RNE ?float89)))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.sqrt RTP ?float63)))
(declare-const ?float122 Float64)
(assert (= ?float122 (fp.div RNE ?float120 ((_ to_fp 11 53) RTN ?float78))))
(declare-const ?float123 Float128)
(assert (= ?float123 (fp.sub RNE ?float88 ((_ to_fp 15 113) RTP ?float91))))
(declare-const ?float124 Float16)
(assert (= ?float124 (fp.div RNE ((_ to_fp 5 11) RTP ?float84) ?float111)))
(declare-const ?float125 Float16)
(assert (= ?float125 (fp.min ?float63 ?float92)))
(declare-const ?float126 Float16)
(assert (= ?float126 (fp.abs ?float124)))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.sub RTN ?float125 ((_ to_fp 5 11) RTP ?float61))))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.abs ?float123)))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.sqrt RTP ?float65)))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.neg ?float61)))
(declare-const ?float131 Float128)
(assert (= ?float131 (f36 ((_ to_fp 5 11) RTP ?float61) ((_ to_fp 8 24) RTZ ?float118) ((_ to_fp 5 11) RNE ?float71) ((_ to_fp 5 11) RTZ ?float71) ((_ to_fp 11 53) RNE ?float60) ((_ to_fp 11 53) RNE ?float93))))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.sub RNE ((_ to_fp 5 11) RTZ ?float116) ?float126)))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.mul RTZ ((_ to_fp 5 11) RTP ?float102) ?float74)))
(declare-const ?float134 Float32)
(assert (= ?float134 (fp.neg ?float91)))
(declare-const ?float135 Float64)
(assert (= ?float135 (fp.neg ?float72)))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.roundToIntegral RTP ?float98)))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.mul RTN ((_ to_fp 8 24) RNE ?float118) ?float80)))
(declare-const ?float138 Float64)
(assert (= ?float138 (f49 ((_ to_fp 15 113) RTN ?float113) ((_ to_fp 15 113) RTZ ?float108) ((_ to_fp 15 113) RTP ?float63) ((_ to_fp 15 113) RTZ ?float74) ((_ to_fp 8 24) RTZ ?float97))))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.neg ?float117)))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.mul RTZ ((_ to_fp 15 113) RTN ?float92) ?float123)))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.roundToIntegral RTZ ?float96)))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.sqrt RNE ?float110)))
(declare-const ?float143 Float16)
(assert (= ?float143 (f14 ((_ to_fp 5 11) RTN ?float72) ?float70 ((_ to_fp 15 113) RTP ?float101) ((_ to_fp 15 113) RNE ?float67) ((_ to_fp 8 24) RTN ?float74) ((_ to_fp 11 53) RTP ?float76) ((_ to_fp 8 24) RTZ ?float118) ?float104)))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.neg ?float104)))
(declare-const ?float145 Float64)
(assert (= ?float145 (f0 ((_ to_fp 15 113) RTP ?float84) ?float104 ?float79 ((_ to_fp 5 11) RTN ?float135))))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.neg ?float104)))
(declare-const ?float147 Float64)
(assert (= ?float147 (f32 ((_ to_fp 11 53) RNE ?float91) ((_ to_fp 5 11) RTN ?float122) ((_ to_fp 5 11) RTZ ?float79))))
(declare-const ?float148 Float32)
(assert (= ?float148 (f9 ((_ to_fp 11 53) RNE ?float139) ((_ to_fp 5 11) RTN ?float117) ((_ to_fp 11 53) RTP ?float74))))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.mul RTZ ((_ to_fp 5 11) RNE ?float122) ?float126)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p0 ((_ to_fp 11 53) RTN ?float131) ((_ to_fp 5 11) RTZ ?float69) ((_ to_fp 5 11) RTZ ?float79) ((_ to_fp 8 24) RNE ?float78) ((_ to_fp 5 11) RTP ?float78) ((_ to_fp 5 11) RTZ ?float136))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNegative ?float117)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.eq ?float68 ((_ to_fp 11 53) RNE ?float109))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.gt ((_ to_fp 5 11) RNE ?float71) ?float115)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.gt ?float63 ((_ to_fp 5 11) RTZ ?float103))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.gt ?float113 ((_ to_fp 11 53) RTN ?float78))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isSubnormal ?float80)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isZero ?float125)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p7 ((_ to_fp 8 24) RTP ?float106) ?float71 ((_ to_fp 15 113) RTZ ?float67) ?float122 ((_ to_fp 8 24) RNE ?float75) ?float124)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isSubnormal ?float133)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.leq ((_ to_fp 11 53) RNE ?float104) ?float77)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.gt ((_ to_fp 11 53) RTN ?float117) ?float147)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isZero ?float145)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isSubnormal ?float133)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isZero ?float108)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.geq ((_ to_fp 5 11) RTP ?float60) ?float149)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.lt ?float145 ?float77)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.geq ?float146 ?float63)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.geq ?float124 ((_ to_fp 5 11) RNE ?float75))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isSubnormal ?float80)))
; FINAL ASSERT
(assert (or ?bool162))
(check-sat)


-- iteration 91 --
(declare-fun f0 (Float128 Float64 Float128 Float128 Float16 Float128 Float64 Float16) Float64)
(declare-fun f1 (Float32 Float128 Float128 Float32 Float32) Float128)
(declare-fun f2 (Float16 Float64 Float32 Float128 Float64) Float128)
(declare-fun f3 (Float128 Float64 Float32 Float128 Float32) Float16)
(declare-fun f4 (Float128 Float16 Float64) Float64)
(declare-fun f5 (Float128 Float32 Float32 Float128 Float16) Float32)
(declare-fun f6 (Float64 Float16 Float32) Float16)
(declare-fun f7 (Float128 Float32) Float64)
(declare-fun f8 (Float16 Float16 Float128 Float32 Float64 Float16) Float128)
(declare-fun f9 (Float32 Float16 Float64 Float64 Float16 Float16) Float16)
(declare-fun f10 (Float128) Float16)
(declare-fun f11 (Float128 Float16 Float32 Float64 Float32 Float16 Float16 Float128) Float64)
(declare-fun f12 (Float32 Float32 Float16 Float32 Float64) Float16)
(declare-fun f13 (Float64 Float32 Float64 Float32 Float32) Float128)
(declare-fun f14 (Float128 Float128 Float16 Float16 Float64 Float128) Float64)
(declare-fun f15 (Float64 Float128 Float128 Float16 Float64 Float16 Float128 Float32 Float32) Float16)
(declare-fun f16 (Float64 Float16 Float32) Float32)
(declare-fun f17 (Float32 Float128 Float64) Float64)
(declare-fun f18 (Float64 Float16 Float128 Float64 Float32 Float128 Float128 Float64) Float64)
(declare-fun f19 (Float32 Float16 Float64 Float64 Float16 Float32 Float128) Float64)
(declare-fun f20 (Float32 Float128 Float16 Float128) Float64)
(declare-fun f21 (Float128 Float64) Float64)
(declare-fun f22 (Float128 Float32 Float128 Float16) Float32)
(declare-fun f23 (Float16 Float16 Float32 Float32 Float16 Float128 Float64 Float64) Float32)
(declare-fun f24 (Float64 Float128 Float32 Float64 Float64) Float32)
(declare-fun f25 (Float64 Float16 Float64 Float64 Float64 Float64 Float16 Float64) Float128)
(declare-fun f26 (Float16 Float64 Float16 Float128 Float32 Float128 Float64) Float128)
(declare-fun f27 (Float32) Float128)
(declare-fun f28 (Float64 Float32 Float64 Float128) Float16)
(declare-fun f29 (Float32 Float64 Float32 Float32 Float128 Float32) Float16)
(declare-fun f30 (Float64) Float32)
(declare-fun f31 (Float64) Float32)
(declare-fun f32 (Float64 Float16 Float64 Float64) Float128)
(declare-fun f33 (Float128 Float16 Float128 Float16 Float128 Float16 Float32 Float64 Float32) Float32)
(declare-fun f34 (Float64 Float64 Float32 Float64 Float32 Float32 Float64 Float16 Float16 Float32) Float32)
(declare-fun f35 (Float128 Float64 Float32) Float16)
(declare-fun f36 (Float32 Float64 Float64 Float64 Float64 Float32 Float32) Float16)
(declare-fun f37 (Float16 Float64 Float64) Float16)
(declare-fun f38 (Float128) Float64)
(declare-fun f39 (Float128 Float16 Float16 Float16) Float16)
(declare-fun f40 (Float16) Float64)
(declare-fun f41 (Float16 Float32 Float128 Float32 Float128 Float16) Float128)
(declare-fun f42 (Float32) Float128)
(declare-fun f43 (Float128 Float16 Float16 Float32) Float64)
(declare-fun f44 (Float128 Float64 Float64 Float16 Float128 Float16 Float128 Float64 Float128) Float64)
(declare-fun f45 (Float16 Float128 Float64 Float128 Float128 Float64 Float32 Float32 Float128 Float32) Float16)
(declare-fun f46 (Float64 Float16 Float64 Float128) Float32)
(declare-fun f47 (Float16 Float32 Float128 Float16 Float64) Float128)
(declare-fun f48 (Float16 Float32 Float64) Float32)
(declare-fun f49 (Float128 Float16 Float32 Float32 Float16 Float32 Float64 Float64) Float128)
(declare-fun p0 (Float16) Bool)
(declare-fun p1 (Float16 Float64 Float64 Float64) Bool)
(declare-fun p2 (Float128 Float16 Float64 Float16) Bool)
(declare-fun p3 (Float32 Float64) Bool)
(declare-fun p4 (Float16 Float64 Float32 Float64) Bool)
(declare-fun p5 (Float16 Float32 Float32 Float32) Bool)
(declare-fun p6 (Float64 Float64 Float16) Bool)
(declare-fun p7 (Float16 Float16 Float64 Float16 Float16 Float128 Float128) Bool)
(declare-fun p8 (Float32 Float32 Float32 Float128 Float128 Float16 Float16 Float16 Float64 Float64) Bool)
(declare-fun p9 (Float64 Float128 Float64 Float16 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float64)
(declare-const ?float62 Float32)
(declare-const ?float63 Float64)
(declare-const ?float64 Float128)
(declare-const ?float65 Float32)
(declare-const ?float66 Float32)
(declare-const ?float67 Float16)
(declare-const ?float68 Float16)
(declare-const ?float69 Float32)
(declare-const ?float70 Float64)
(declare-const ?float71 Float128)
(declare-const ?float72 Float64)
(declare-const ?float73 Float32)
(declare-const ?float74 Float64)
(declare-const ?float75 Float64)
(declare-const ?float76 Float128)
(declare-const ?float77 Float16)
(declare-const ?float78 Float32)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b1 #b100001110111100 #b0110011011101100011001100111001110011000001010111011101100001011111011101000001001000100010111010011111011100110)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float83 Float128)
(assert (= ?float83 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b1 #b11011 #b0011101111)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b0 #b01100100 #b11001011000010011111001)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b1 #b01001010000 #b0100110000011100001000000110011000000110100000000011)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b1 #b10001100 #b00111101111001001111010)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (fp.div RNE ((_ to_fp 11 53) RTN ?float67) ?float74)))
(declare-const ?float101 Float64)
(assert (= ?float101 (fp.div RTN ?float75 ((_ to_fp 11 53) RTP ?float66))))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.mul RNE ?float85 ?float69)))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.abs ?float74)))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.sub RNE ((_ to_fp 5 11) RTZ ?float89) ?float84)))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.sqrt RNE ?float91)))
(declare-const ?float106 Float32)
(assert (= ?float106 (f46 ?float61 ((_ to_fp 5 11) RNE ?float100) ?float103 ((_ to_fp 15 113) RTZ ?float61))))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.roundToIntegral RTP ?float92)))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.max ?float100 ((_ to_fp 11 53) RTP ?float105))))
(declare-const ?float109 Float64)
(assert (= ?float109 (f44 ((_ to_fp 15 113) RNE ?float65) ((_ to_fp 11 53) RNE ?float85) ?float101 ?float77 ((_ to_fp 15 113) RTP ?float79) ((_ to_fp 5 11) RTN ?float91) ?float83 ((_ to_fp 11 53) RTZ ?float94) ((_ to_fp 15 113) RNE ?float82))))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.add RTN ((_ to_fp 5 11) RTP ?float85) ?float67)))
(declare-const ?float111 Float16)
(assert (= ?float111 (f45 ((_ to_fp 5 11) RTN ?float94) ((_ to_fp 15 113) RNE ?float98) ((_ to_fp 11 53) RTN ?float106) ((_ to_fp 15 113) RTN ?float104) ((_ to_fp 15 113) RTP ?float85) ((_ to_fp 11 53) RTP ?float106) ?float78 ?float78 ((_ to_fp 15 113) RTN ?float100) ?float102)))
(declare-const ?float112 Float128)
(assert (= ?float112 (f25 ((_ to_fp 11 53) RTN ?float102) ((_ to_fp 5 11) RTZ ?float108) ((_ to_fp 11 53) RNE ?float76) ((_ to_fp 11 53) RNE ?float110) ((_ to_fp 11 53) RTZ ?float92) ((_ to_fp 11 53) RNE ?float78) ((_ to_fp 5 11) RTZ ?float64) ((_ to_fp 11 53) RTP ?float69))))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.mul RTZ ?float61 ?float101)))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.min ?float69 ?float89)))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.min ?float102 ((_ to_fp 8 24) RTP ?float60))))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.max ?float102 ?float88)))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.neg ?float101)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.max ?float106 ?float82)))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.div RTZ ?float93 ?float100)))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.mul RTN ((_ to_fp 8 24) RTP ?float93) ?float106)))
(declare-const ?float121 Float128)
(assert (= ?float121 (f49 ((_ to_fp 15 113) RTZ ?float77) ((_ to_fp 5 11) RTP ?float112) ((_ to_fp 8 24) RNE ?float103) ((_ to_fp 8 24) RTP ?float72) ((_ to_fp 5 11) RNE ?float64) ?float96 ((_ to_fp 11 53) RNE ?float78) ?float93)))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.sqrt RNE ?float121)))
(declare-const ?float123 Float64)
(assert (= ?float123 (f0 ((_ to_fp 15 113) RTP ?float119) ((_ to_fp 11 53) RTP ?float65) ?float76 ?float122 ((_ to_fp 5 11) RTP ?float103) ((_ to_fp 15 113) RNE ?float109) ((_ to_fp 11 53) RTN ?float106) ((_ to_fp 5 11) RTN ?float62))))
(declare-const ?float124 Float32)
(assert (= ?float124 (f33 ?float112 ((_ to_fp 5 11) RNE ?float102) ((_ to_fp 15 113) RNE ?float82) ((_ to_fp 5 11) RTZ ?float118) ((_ to_fp 15 113) RTP ?float69) ((_ to_fp 5 11) RTN ?float85) ((_ to_fp 8 24) RTN ?float110) ((_ to_fp 11 53) RTP ?float79) ((_ to_fp 8 24) RTZ ?float87))))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.add RTP ?float109 ?float63)))
(declare-const ?float126 Float64)
(assert (= ?float126 (fp.sqrt RTP ?float97)))
(declare-const ?float127 Float16)
(assert (= ?float127 (f3 ((_ to_fp 15 113) RTP ?float60) ((_ to_fp 11 53) RTN ?float60) ((_ to_fp 8 24) RTZ ?float93) ((_ to_fp 15 113) RTP ?float80) ?float118)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.neg ?float116)))
(declare-const ?float129 Float128)
(assert (= ?float129 (fp.min ?float83 ((_ to_fp 15 113) RTP ?float63))))
(declare-const ?float130 Float64)
(assert (= ?float130 (fp.max ?float74 ((_ to_fp 11 53) RTP ?float82))))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.roundToIntegral RTN ?float97)))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.mul RTN ?float112 ?float64)))
(declare-const ?float133 Float128)
(assert (= ?float133 (fp.add RTZ ((_ to_fp 15 113) RTN ?float62) ?float87)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.sub RNE ?float76 ((_ to_fp 15 113) RTN ?float131))))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.roundToIntegral RNE ?float85)))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.mul RNE ?float130 ?float108)))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.mul RTN ((_ to_fp 15 113) RTN ?float119) ?float76)))
(declare-const ?float138 Float128)
(assert (= ?float138 (f41 ((_ to_fp 5 11) RNE ?float132) ((_ to_fp 8 24) RTN ?float104) ((_ to_fp 15 113) RTZ ?float62) ((_ to_fp 8 24) RTP ?float130) ((_ to_fp 15 113) RTN ?float119) ((_ to_fp 5 11) RTZ ?float105))))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.sub RTN ?float86 ?float73)))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.div RNE ((_ to_fp 5 11) RTZ ?float109) ?float77)))
(declare-const ?float141 Float32)
(assert (= ?float141 (fp.div RTN ?float69 ?float95)))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.max ?float79 ((_ to_fp 5 11) RTP ?float93))))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.roundToIntegral RTN ?float113)))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.neg ?float88)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.roundToIntegral RTZ ?float70)))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.div RNE ((_ to_fp 5 11) RNE ?float123) ?float68)))
(declare-const ?float147 Float64)
(assert (= ?float147 (f19 ?float85 ((_ to_fp 5 11) RTZ ?float132) ((_ to_fp 11 53) RTP ?float124) ?float131 ((_ to_fp 5 11) RTN ?float82) ((_ to_fp 8 24) RNE ?float97) ?float138)))
(declare-const ?float148 Float128)
(assert (= ?float148 (fp.sqrt RTZ ?float64)))
(declare-const ?float149 Float32)
(assert (= ?float149 (fp.mul RTZ ?float106 ((_ to_fp 8 24) RTZ ?float81))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.gt ((_ to_fp 5 11) RNE ?float76) ?float68)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNormal ?float65)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isPositive ?float86)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isPositive ?float74)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNaN ?float61)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.gt ?float62 ((_ to_fp 8 24) RTP ?float63))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.geq ((_ to_fp 11 53) RTP ?float91) ?float145)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p2 ((_ to_fp 15 113) RNE ?float105) ?float104 ((_ to_fp 11 53) RTN ?float137) ((_ to_fp 5 11) RTP ?float94))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p3 ((_ to_fp 8 24) RNE ?float81) ((_ to_fp 11 53) RNE ?float81))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.gt ((_ to_fp 5 11) RNE ?float141) ?float67)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isInfinite ?float104)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNegative ?float87)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNegative ?float95)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.gt ((_ to_fp 11 53) RTN ?float140) ?float117)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (p4 ?float84 ((_ to_fp 11 53) RTN ?float65) ((_ to_fp 8 24) RTZ ?float122) ((_ to_fp 11 53) RNE ?float134))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isZero ?float73)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.gt ?float106 ?float78)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNormal ?float67)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.geq ?float136 ?float126)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p0 ((_ to_fp 5 11) RNE ?float112))))
; FINAL ASSERT
(assert (or ?bool161 (or ?bool159 (and ?bool153)) (and ?bool169 ?bool166 (or (or ?bool152 (or (or (or ?bool158 ?bool153) (and ?bool161 ?bool167) ?bool150) (and ?bool167 ?bool161 (and ?bool152 ?bool153 ?bool153))))))))
(check-sat)


-- iteration 92 --
(declare-fun f0 (Float64 Float16 Float64) Float128)
(declare-fun f1 (Float64 Float16 Float32 Float16 Float32 Float32) Float16)
(declare-fun f2 (Float32) Float64)
(declare-fun f3 (Float64 Float128) Float32)
(declare-fun f4 (Float128 Float64 Float128 Float16 Float64 Float64 Float32) Float32)
(declare-fun f5 (Float64 Float32 Float32 Float64 Float32 Float128 Float32) Float16)
(declare-fun f6 (Float128 Float16 Float32 Float16 Float64) Float16)
(declare-fun f7 (Float32 Float128 Float16 Float16 Float128 Float16 Float16 Float128 Float16 Float64) Float32)
(declare-fun f8 (Float32) Float128)
(declare-fun f9 (Float64 Float128 Float64 Float128 Float128 Float64 Float128 Float16 Float32 Float64) Float64)
(declare-fun f10 (Float128 Float16 Float32 Float128 Float16) Float16)
(declare-fun f11 (Float16) Float128)
(declare-fun f12 (Float128 Float128 Float32 Float64 Float16 Float64 Float128 Float16 Float16 Float128) Float64)
(declare-fun f13 (Float64 Float64) Float128)
(declare-fun f14 (Float16 Float128 Float64 Float64 Float128 Float16) Float16)
(declare-fun f15 (Float32 Float16 Float16 Float32 Float32 Float16 Float128 Float32 Float32 Float128) Float16)
(declare-fun f16 (Float16 Float32 Float128 Float64 Float128 Float128 Float128) Float32)
(declare-fun f17 (Float32 Float128) Float16)
(declare-fun f18 (Float64 Float32 Float16 Float16) Float64)
(declare-fun f19 (Float32 Float128 Float16 Float64 Float16 Float64) Float32)
(declare-fun f20 (Float16 Float32 Float16 Float64 Float128 Float16 Float128 Float64 Float128) Float32)
(declare-fun f21 (Float16) Float64)
(declare-fun f22 (Float64 Float16 Float16 Float32) Float128)
(declare-fun f23 (Float128 Float32 Float64 Float64 Float32 Float32) Float64)
(declare-fun f24 (Float128 Float32 Float32 Float32 Float64 Float128 Float128 Float128 Float16) Float64)
(declare-fun f25 (Float128) Float128)
(declare-fun f26 (Float32 Float16 Float128 Float32 Float16) Float32)
(declare-fun f27 (Float32 Float128) Float64)
(declare-fun f28 (Float32 Float128 Float128 Float64 Float128 Float64) Float128)
(declare-fun f29 (Float32 Float128 Float128 Float128 Float16) Float16)
(declare-fun f30 (Float16 Float16 Float32 Float128 Float128 Float64 Float16 Float128 Float128) Float16)
(declare-fun f31 (Float128 Float128) Float128)
(declare-fun f32 (Float128) Float32)
(declare-fun f33 (Float64 Float128 Float64 Float32 Float16 Float128 Float32) Float32)
(declare-fun f34 (Float128 Float128 Float128 Float128 Float32 Float128 Float128 Float128 Float32) Float64)
(declare-fun f35 (Float32 Float128 Float32 Float16 Float16 Float64 Float16 Float16) Float16)
(declare-fun f36 (Float32 Float16 Float32 Float128 Float16 Float16) Float32)
(declare-fun f37 (Float128 Float16 Float32) Float32)
(declare-fun f38 (Float16 Float32 Float16 Float64 Float32 Float128) Float32)
(declare-fun f39 (Float64 Float32 Float32 Float32 Float128 Float128 Float32 Float32) Float32)
(declare-fun f40 (Float128 Float32) Float128)
(declare-fun f41 (Float32) Float64)
(declare-fun f42 (Float16 Float128) Float16)
(declare-fun f43 (Float64 Float64 Float16 Float32 Float128 Float64) Float64)
(declare-fun f44 (Float64 Float16) Float32)
(declare-fun f45 (Float16 Float64 Float16 Float128 Float16 Float64 Float64 Float128 Float64 Float64) Float64)
(declare-fun f46 (Float128 Float128 Float32) Float128)
(declare-fun f47 (Float64 Float128 Float16 Float128 Float64 Float32 Float32 Float128) Float32)
(declare-fun f48 (Float32) Float16)
(declare-fun f49 (Float64 Float64) Float64)
(declare-fun p0 (Float128 Float64 Float128 Float32 Float128 Float32 Float128 Float16) Bool)
(declare-fun p1 (Float32 Float64 Float64 Float32 Float32 Float64 Float32 Float64 Float64) Bool)
(declare-fun p2 (Float64 Float128) Bool)
(declare-fun p3 (Float128 Float128 Float32 Float128 Float16) Bool)
(declare-fun p4 (Float128 Float128 Float32 Float128 Float32 Float128 Float16 Float64) Bool)
(declare-fun p5 (Float128 Float64 Float128 Float32 Float128 Float32 Float64) Bool)
(declare-fun p6 (Float64 Float32) Bool)
(declare-fun p7 (Float32 Float16 Float16 Float64 Float64 Float32 Float64 Float32 Float16) Bool)
(declare-fun p8 (Float16 Float128 Float64 Float64 Float128 Float16 Float32 Float16) Bool)
(declare-fun p9 (Float32 Float16 Float16 Float32 Float64 Float32 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float128)
(declare-const ?float62 Float32)
(declare-const ?float63 Float16)
(declare-const ?float64 Float32)
(declare-const ?float65 Float32)
(declare-const ?float66 Float128)
(declare-const ?float67 Float32)
(declare-const ?float68 Float64)
(declare-const ?float69 Float32)
(declare-const ?float70 Float128)
(declare-const ?float71 Float64)
(declare-const ?float72 Float128)
(declare-const ?float73 Float32)
(declare-const ?float74 Float32)
(declare-const ?float75 Float16)
(declare-const ?float76 Float64)
(declare-const ?float77 Float32)
(declare-const ?float78 Float64)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b1 #b10001 #b0000110001)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float84 Float128)
(assert (= ?float84 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b0 #b01111 #b0111110100)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b0 #b11100100 #b01101010011101000011001)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b0 #b01010111110 #b1010110000111110111011110110010110001000000011001110)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b1 #b10111 #b1011101100)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b1 #b00001 #b0000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (f34 ((_ to_fp 15 113) RTZ ?float82) ((_ to_fp 15 113) RTN ?float62) ((_ to_fp 15 113) RTZ ?float71) ((_ to_fp 15 113) RTP ?float89) ?float67 ((_ to_fp 15 113) RTP ?float97) ?float61 ((_ to_fp 15 113) RTP ?float93) ?float69)))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.mul RTZ ?float73 ((_ to_fp 8 24) RTP ?float94))))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.add RTN ((_ to_fp 8 24) RNE ?float95) ?float69)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.neg ?float82)))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.max ?float94 ((_ to_fp 11 53) RNE ?float98))))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.roundToIntegral RTZ ?float78)))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.min ?float65 ?float65)))
(declare-const ?float107 Float16)
(assert (= ?float107 (fp.min ((_ to_fp 5 11) RTP ?float97) ?float86)))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.mul RTZ ((_ to_fp 11 53) RTP ?float96) ?float81)))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.abs ?float72)))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.max ((_ to_fp 15 113) RTP ?float80) ?float95)))
(declare-const ?float111 Float128)
(assert (= ?float111 (fp.neg ?float72)))
(declare-const ?float112 Float16)
(assert (= ?float112 (f42 ((_ to_fp 5 11) RTZ ?float76) ?float110)))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.neg ?float107)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.abs ?float100)))
(declare-const ?float115 Float32)
(assert (= ?float115 (f38 ((_ to_fp 5 11) RTP ?float105) ((_ to_fp 8 24) RNE ?float82) ((_ to_fp 5 11) RTN ?float89) ((_ to_fp 11 53) RNE ?float109) ((_ to_fp 8 24) RTZ ?float63) ?float60)))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.sub RNE ?float100 ((_ to_fp 11 53) RTZ ?float98))))
(declare-const ?float117 Float32)
(assert (= ?float117 (fp.mul RTP ((_ to_fp 8 24) RTZ ?float87) ?float64)))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.min ?float60 ((_ to_fp 15 113) RNE ?float106))))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.roundToIntegral RTP ?float74)))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.min ?float67 ?float74)))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.min ?float75 ((_ to_fp 5 11) RTN ?float120))))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.max ?float61 ((_ to_fp 15 113) RTP ?float90))))
(declare-const ?float123 Float16)
(assert (= ?float123 (f1 ((_ to_fp 11 53) RTP ?float92) ((_ to_fp 5 11) RTZ ?float115) ((_ to_fp 8 24) RTP ?float85) ?float96 ((_ to_fp 8 24) RTN ?float87) ?float74)))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.div RTP ?float85 ?float105)))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.sqrt RNE ?float81)))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.sub RTZ ?float119 ?float67)))
(declare-const ?float127 Float32)
(assert (= ?float127 (f37 ((_ to_fp 15 113) RNE ?float99) ((_ to_fp 5 11) RTP ?float64) ((_ to_fp 8 24) RTN ?float78))))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.mul RTN ?float61 ((_ to_fp 15 113) RTP ?float117))))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.neg ?float78)))
(declare-const ?float130 Float64)
(assert (= ?float130 (fp.abs ?float100)))
(declare-const ?float131 Float32)
(assert (= ?float131 (f36 ((_ to_fp 8 24) RTN ?float114) ?float113 ((_ to_fp 8 24) RTN ?float70) ((_ to_fp 15 113) RTZ ?float101) ((_ to_fp 5 11) RNE ?float108) ((_ to_fp 5 11) RNE ?float108))))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.max ?float102 ((_ to_fp 8 24) RTZ ?float103))))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.neg ?float115)))
(declare-const ?float134 Float64)
(assert (= ?float134 (fp.min ?float90 ?float89)))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.mul RTN ?float115 ?float133)))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.min ((_ to_fp 15 113) RTN ?float78) ?float70)))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.div RTN ?float75 ?float63)))
(declare-const ?float138 Float32)
(assert (= ?float138 (fp.add RNE ((_ to_fp 8 24) RNE ?float134) ?float132)))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.sqrt RTZ ?float77)))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.mul RTP ?float137 ((_ to_fp 5 11) RTZ ?float102))))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.abs ?float75)))
(declare-const ?float142 Float32)
(assert (= ?float142 (f32 ((_ to_fp 15 113) RTN ?float133))))
(declare-const ?float143 Float32)
(assert (= ?float143 (fp.max ?float132 ?float74)))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.roundToIntegral RTN ?float71)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.abs ?float115)))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.min ?float86 ((_ to_fp 5 11) RTZ ?float117))))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.max ((_ to_fp 8 24) RTN ?float124) ?float106)))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.mul RTN ?float99 ((_ to_fp 5 11) RTN ?float125))))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.neg ?float116)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p1 ((_ to_fp 8 24) RNE ?float149) ((_ to_fp 11 53) RNE ?float107) ((_ to_fp 11 53) RTP ?float86) ?float83 ((_ to_fp 8 24) RTN ?float86) ?float100 ?float145 ((_ to_fp 11 53) RTP ?float69) ?float134)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.gt ?float67 ?float69)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isInfinite ?float116)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isZero ?float72)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isZero ?float96)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isPositive ?float67)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.leq ((_ to_fp 8 24) RNE ?float89) ?float80)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isSubnormal ?float137)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.leq ?float130 ((_ to_fp 11 53) RTZ ?float122))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isNegative ?float65)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p6 ((_ to_fp 11 53) RNE ?float103) ((_ to_fp 8 24) RNE ?float124))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.leq ?float130 ((_ to_fp 11 53) RTN ?float139))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.geq ?float123 ?float140)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNormal ?float108)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isZero ?float79)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p6 ?float130 ((_ to_fp 8 24) RNE ?float79))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p8 ((_ to_fp 5 11) RTP ?float144) ((_ to_fp 15 113) RTN ?float75) ?float129 ((_ to_fp 11 53) RNE ?float66) ?float136 ((_ to_fp 5 11) RTZ ?float102) ((_ to_fp 8 24) RTN ?float105) ((_ to_fp 5 11) RTZ ?float142))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.geq ?float73 ((_ to_fp 8 24) RTN ?float124))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isSubnormal ?float101)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.geq ((_ to_fp 11 53) RTP ?float91) ?float116)))
; FINAL ASSERT
(assert (and ?bool150 ?bool163 ?bool158))
(check-sat)


-- iteration 93 --
(declare-fun f0 (Float32 Float128 Float32) Float64)
(declare-fun f1 (Float128 Float64 Float32 Float64 Float128 Float64 Float16 Float16 Float16) Float128)
(declare-fun f2 (Float128 Float64 Float64 Float16 Float128) Float16)
(declare-fun f3 (Float32) Float32)
(declare-fun f4 (Float64 Float32 Float64 Float64 Float128) Float32)
(declare-fun f5 (Float64 Float16 Float16 Float64 Float128) Float128)
(declare-fun f6 (Float64 Float32 Float16 Float16 Float16 Float64 Float16 Float16 Float32) Float32)
(declare-fun f7 (Float64 Float32 Float128 Float64 Float64 Float32 Float64 Float128 Float128 Float32) Float16)
(declare-fun f8 (Float128 Float16 Float32 Float64) Float32)
(declare-fun f9 (Float128 Float128 Float64) Float128)
(declare-fun f10 (Float64 Float128 Float16 Float64 Float16 Float128 Float64 Float16 Float128 Float32) Float64)
(declare-fun f11 (Float64 Float16 Float128 Float128 Float128 Float128 Float64 Float64) Float64)
(declare-fun f12 (Float32 Float128) Float32)
(declare-fun f13 (Float16 Float64 Float32) Float16)
(declare-fun f14 (Float64 Float16) Float128)
(declare-fun f15 (Float64 Float16 Float16 Float64 Float16) Float64)
(declare-fun f16 (Float16 Float64 Float32) Float64)
(declare-fun f17 (Float32 Float64 Float128) Float16)
(declare-fun f18 (Float64 Float16 Float64) Float128)
(declare-fun f19 (Float64 Float16 Float32 Float128 Float16 Float128 Float64 Float16 Float64) Float32)
(declare-fun f20 (Float16 Float16 Float64 Float128 Float64 Float32 Float32 Float16 Float16 Float128) Float32)
(declare-fun f21 (Float128 Float64 Float16 Float16 Float128 Float128 Float128 Float128 Float32 Float32) Float16)
(declare-fun f22 (Float128 Float32 Float16 Float32 Float32 Float128 Float128 Float16 Float128 Float32) Float64)
(declare-fun f23 (Float16 Float16 Float16 Float16) Float16)
(declare-fun f24 (Float128 Float32) Float32)
(declare-fun f25 (Float128 Float64 Float16 Float16 Float32 Float128 Float32 Float128) Float64)
(declare-fun f26 (Float32 Float16 Float64) Float32)
(declare-fun f27 (Float32 Float32) Float16)
(declare-fun f28 (Float128) Float128)
(declare-fun f29 (Float16 Float32 Float128 Float32 Float16 Float64 Float64 Float128 Float128 Float64) Float16)
(declare-fun f30 (Float32 Float32 Float16) Float32)
(declare-fun f31 (Float32 Float128) Float128)
(declare-fun f32 (Float64 Float64 Float32 Float16 Float16 Float16 Float64 Float64) Float64)
(declare-fun f33 (Float64 Float32 Float64 Float128 Float16 Float128 Float128) Float64)
(declare-fun f34 (Float128 Float32 Float64 Float32 Float128 Float128 Float128 Float16) Float16)
(declare-fun f35 (Float128 Float64 Float32 Float32 Float64 Float128 Float32 Float64 Float64 Float32) Float64)
(declare-fun f36 (Float128 Float16 Float128 Float128) Float128)
(declare-fun f37 (Float16 Float64 Float32 Float128 Float128 Float64 Float64) Float32)
(declare-fun f38 (Float16 Float32 Float64 Float32 Float128 Float16 Float64 Float16) Float64)
(declare-fun f39 (Float16 Float16 Float64 Float128 Float128) Float128)
(declare-fun f40 (Float32 Float16 Float64) Float16)
(declare-fun f41 (Float64 Float32 Float32) Float16)
(declare-fun f42 (Float32) Float16)
(declare-fun f43 (Float32 Float32 Float64 Float16) Float64)
(declare-fun f44 (Float32 Float64 Float32 Float32 Float64 Float32 Float128) Float128)
(declare-fun f45 (Float16 Float128 Float64 Float64 Float16 Float128 Float128 Float128) Float16)
(declare-fun f46 (Float64 Float16 Float32 Float128 Float16 Float64 Float128 Float64 Float16 Float16) Float128)
(declare-fun f47 (Float16 Float32 Float16 Float128 Float128) Float64)
(declare-fun f48 (Float32 Float16 Float64 Float32 Float128) Float128)
(declare-fun f49 (Float16 Float64 Float64 Float64 Float64 Float16 Float64 Float128) Float32)
(declare-fun p0 (Float128 Float128 Float64 Float32) Bool)
(declare-fun p1 (Float64 Float32 Float128 Float16 Float64 Float64 Float64 Float128) Bool)
(declare-fun p2 (Float128) Bool)
(declare-fun p3 (Float16 Float128 Float32 Float64 Float32 Float128 Float128 Float128 Float64 Float32) Bool)
(declare-fun p4 (Float16 Float16 Float16 Float32) Bool)
(declare-fun p5 (Float16 Float16) Bool)
(declare-fun p6 (Float16 Float64 Float32 Float64 Float16 Float128 Float64) Bool)
(declare-fun p7 (Float32 Float32 Float128 Float128 Float16 Float32 Float16 Float16) Bool)
(declare-fun p8 (Float128 Float128 Float64 Float16) Bool)
(declare-fun p9 (Float128 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float16)
(declare-const ?float62 Float64)
(declare-const ?float63 Float64)
(declare-const ?float64 Float64)
(declare-const ?float65 Float64)
(declare-const ?float66 Float32)
(declare-const ?float67 Float16)
(declare-const ?float68 Float64)
(declare-const ?float69 Float32)
(declare-const ?float70 Float32)
(declare-const ?float71 Float32)
(declare-const ?float72 Float32)
(declare-const ?float73 Float128)
(declare-const ?float74 Float64)
(declare-const ?float75 Float32)
(declare-const ?float76 Float32)
(declare-const ?float77 Float128)
(declare-const ?float78 Float64)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b1 #b10101 #b1010110001)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b1 #b01010100010 #b0000011111001111001101111000101101111100110111001100)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b0 #b110110000101000 #b1111101011011111010011001010011110010001101001101101001010010101001000110101001010011000011000110001111010001011)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b0 #b00011100001 #b0011111101010101110010010101011001011100111011001001)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.roundToIntegral RNE ?float79)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.mul RNE ((_ to_fp 5 11) RNE ?float69) ?float67)))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.sub RNE ?float92 ((_ to_fp 8 24) RTP ?float81))))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.div RTP ?float80 ?float78)))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.abs ?float70)))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.add RTP ?float66 ((_ to_fp 8 24) RTP ?float64))))
(declare-const ?float106 Float64)
(assert (= ?float106 (f33 ((_ to_fp 11 53) RNE ?float95) ((_ to_fp 8 24) RTN ?float74) ((_ to_fp 11 53) RTP ?float61) ((_ to_fp 15 113) RTZ ?float62) ((_ to_fp 5 11) RTZ ?float94) ((_ to_fp 15 113) RTP ?float70) ((_ to_fp 15 113) RTN ?float71))))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.neg ?float105)))
(declare-const ?float108 Float128)
(assert (= ?float108 (f31 ((_ to_fp 8 24) RTN ?float84) ((_ to_fp 15 113) RTP ?float104))))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.mul RNE ((_ to_fp 11 53) RNE ?float69) ?float99)))
(declare-const ?float110 Float16)
(assert (= ?float110 (f40 ?float102 ((_ to_fp 5 11) RTZ ?float98) ?float94)))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.sqrt RTZ ?float64)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.mul RNE ((_ to_fp 11 53) RTN ?float107) ?float93)))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.div RTP ((_ to_fp 5 11) RTN ?float72) ?float67)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.sqrt RTN ?float60)))
(declare-const ?float115 Float16)
(assert (= ?float115 (fp.div RTZ ((_ to_fp 5 11) RTN ?float95) ?float100)))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.mul RTP ?float82 ((_ to_fp 8 24) RTP ?float81))))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.div RTN ?float103 ?float99)))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.abs ?float73)))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.abs ?float114)))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.roundToIntegral RNE ?float69)))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.max ((_ to_fp 15 113) RTZ ?float110) ?float73)))
(declare-const ?float122 Float64)
(assert (= ?float122 (f11 ((_ to_fp 11 53) RTZ ?float107) ?float79 ((_ to_fp 15 113) RNE ?float69) ((_ to_fp 15 113) RTP ?float68) ((_ to_fp 15 113) RTN ?float64) ((_ to_fp 15 113) RNE ?float93) ((_ to_fp 11 53) RNE ?float85) ((_ to_fp 11 53) RNE ?float120))))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.sub RTP ?float93 ((_ to_fp 11 53) RNE ?float107))))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.div RTP ?float116 ((_ to_fp 8 24) RTN ?float117))))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.add RTP ((_ to_fp 11 53) RNE ?float75) ?float65)))
(declare-const ?float126 Float16)
(assert (= ?float126 (f42 ((_ to_fp 8 24) RNE ?float108))))
(declare-const ?float127 Float64)
(assert (= ?float127 (fp.sqrt RTP ?float64)))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.min ?float112 ?float112)))
(declare-const ?float129 Float64)
(assert (= ?float129 (f38 ((_ to_fp 5 11) RTN ?float92) ((_ to_fp 8 24) RTN ?float109) ((_ to_fp 11 53) RTP ?float120) ((_ to_fp 8 24) RTZ ?float126) ((_ to_fp 15 113) RTN ?float105) ((_ to_fp 5 11) RNE ?float123) ?float63 ((_ to_fp 5 11) RTN ?float85))))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.div RTP ?float108 ((_ to_fp 15 113) RTN ?float63))))
(declare-const ?float131 Float64)
(assert (= ?float131 (f43 ?float66 ?float66 ((_ to_fp 11 53) RNE ?float102) ((_ to_fp 5 11) RTZ ?float119))))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.mul RTN ?float73 ((_ to_fp 15 113) RNE ?float65))))
(declare-const ?float133 Float16)
(assert (= ?float133 (f40 ((_ to_fp 8 24) RTZ ?float99) ((_ to_fp 5 11) RNE ?float68) ?float109)))
(declare-const ?float134 Float32)
(assert (= ?float134 (f6 ((_ to_fp 11 53) RTZ ?float76) ((_ to_fp 8 24) RTZ ?float86) ((_ to_fp 5 11) RTP ?float89) ((_ to_fp 5 11) RNE ?float69) ?float100 ((_ to_fp 11 53) RTN ?float118) ((_ to_fp 5 11) RTZ ?float123) ((_ to_fp 5 11) RTN ?float83) ?float70)))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.abs ?float101)))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.neg ?float130)))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.mul RNE ((_ to_fp 8 24) RTN ?float121) ?float90)))
(declare-const ?float138 Float64)
(assert (= ?float138 (fp.sub RTP ((_ to_fp 11 53) RTP ?float116) ?float122)))
(declare-const ?float139 Float16)
(assert (= ?float139 (f23 ((_ to_fp 5 11) RTP ?float118) ((_ to_fp 5 11) RTN ?float63) ((_ to_fp 5 11) RTP ?float92) ((_ to_fp 5 11) RNE ?float94))))
(declare-const ?float140 Float64)
(assert (= ?float140 (f15 ?float125 ((_ to_fp 5 11) RNE ?float90) ((_ to_fp 5 11) RTN ?float85) ?float138 ?float91)))
(declare-const ?float141 Float32)
(assert (= ?float141 (fp.neg ?float104)))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.sqrt RTN ?float125)))
(declare-const ?float143 Float128)
(assert (= ?float143 (f14 ?float140 ((_ to_fp 5 11) RNE ?float66))))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.min ?float133 ((_ to_fp 5 11) RTN ?float103))))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.add RTN ((_ to_fp 11 53) RTN ?float84) ?float111)))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.div RTN ((_ to_fp 8 24) RTN ?float114) ?float66)))
(declare-const ?float147 Float64)
(assert (= ?float147 (f15 ?float129 ((_ to_fp 5 11) RTN ?float82) ((_ to_fp 5 11) RTP ?float63) ?float88 ((_ to_fp 5 11) RTP ?float114))))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.sqrt RTP ?float113)))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.add RNE ?float63 ?float106)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p8 ((_ to_fp 15 113) RNE ?float71) ((_ to_fp 15 113) RTP ?float113) ((_ to_fp 11 53) RTP ?float72) ((_ to_fp 5 11) RTZ ?float114))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p3 ((_ to_fp 5 11) RTN ?float107) ((_ to_fp 15 113) RTZ ?float104) ((_ to_fp 8 24) RTZ ?float113) ((_ to_fp 11 53) RTZ ?float87) ((_ to_fp 8 24) RTN ?float117) ((_ to_fp 15 113) RTP ?float114) ((_ to_fp 15 113) RTN ?float141) ((_ to_fp 15 113) RNE ?float149) ?float140 ((_ to_fp 8 24) RNE ?float123))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.lt ?float102 ?float105)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNormal ?float70)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.lt ?float125 ((_ to_fp 11 53) RTN ?float98))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isNaN ?float113)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.geq ((_ to_fp 5 11) RTN ?float136) ?float100)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p6 ((_ to_fp 5 11) RNE ?float137) ((_ to_fp 11 53) RTN ?float126) ((_ to_fp 8 24) RTN ?float108) ((_ to_fp 11 53) RTP ?float67) ?float133 ((_ to_fp 15 113) RTN ?float72) ((_ to_fp 11 53) RTP ?float110))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNaN ?float117)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isInfinite ?float113)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p2 ((_ to_fp 15 113) RTZ ?float134))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isPositive ?float125)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (p9 ((_ to_fp 15 113) RTP ?float88) ((_ to_fp 15 113) RTN ?float142))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (p1 ((_ to_fp 11 53) RTN ?float115) ((_ to_fp 8 24) RTP ?float118) ((_ to_fp 15 113) RTZ ?float141) ?float79 ?float65 ?float131 ((_ to_fp 11 53) RTZ ?float133) ((_ to_fp 15 113) RNE ?float111))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.gt ?float141 ?float102)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p9 ((_ to_fp 15 113) RNE ?float122) ((_ to_fp 15 113) RTZ ?float129))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.gt ?float122 ((_ to_fp 11 53) RNE ?float133))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p2 ?float95)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (p0 ((_ to_fp 15 113) RTZ ?float67) ((_ to_fp 15 113) RTP ?float125) ((_ to_fp 11 53) RNE ?float139) ((_ to_fp 8 24) RTZ ?float126))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p4 ?float126 ((_ to_fp 5 11) RTN ?float121) ?float87 ((_ to_fp 8 24) RTP ?float91))))
; FINAL ASSERT
(assert (or (and ?bool157 (and (and (and (or (and ?bool165)) ?bool166) (and ?bool155 (or ?bool164 ?bool166 (and ?bool160 ?bool152)) (or ?bool154)))))))
(check-sat)


-- iteration 94 --
(declare-fun f0 (Float64 Float32 Float64 Float32 Float16 Float16 Float32) Float64)
(declare-fun f1 (Float64 Float16 Float32 Float32 Float32) Float64)
(declare-fun f2 (Float128 Float16 Float64 Float16 Float32 Float16 Float128) Float16)
(declare-fun f3 (Float16 Float32 Float128 Float32 Float16 Float32) Float128)
(declare-fun f4 (Float64 Float64 Float64 Float64 Float16 Float128 Float64 Float16 Float32 Float64) Float64)
(declare-fun f5 (Float64 Float64) Float64)
(declare-fun f6 (Float128 Float16 Float128 Float32 Float64 Float128) Float32)
(declare-fun f7 (Float64 Float16 Float16 Float64 Float128) Float128)
(declare-fun f8 (Float64 Float64 Float128 Float16 Float128 Float32 Float128 Float16 Float128) Float32)
(declare-fun f9 (Float128 Float64 Float64 Float128 Float128 Float32 Float64 Float128 Float128 Float32) Float128)
(declare-fun f10 (Float64 Float64 Float32 Float128 Float32 Float128 Float16) Float64)
(declare-fun f11 (Float16 Float64 Float128 Float32 Float64 Float128 Float64 Float64 Float64 Float128) Float32)
(declare-fun f12 (Float128 Float16 Float32 Float32 Float128 Float64 Float16) Float64)
(declare-fun f13 (Float32 Float64 Float64 Float16 Float128 Float128 Float16) Float128)
(declare-fun f14 (Float128) Float64)
(declare-fun f15 (Float16 Float32) Float64)
(declare-fun f16 (Float32 Float32 Float16 Float64) Float16)
(declare-fun f17 (Float32 Float32 Float16) Float32)
(declare-fun f18 (Float16 Float128 Float128 Float16 Float16 Float128 Float64 Float32 Float32) Float16)
(declare-fun f19 (Float128 Float128 Float64 Float64 Float32 Float64 Float32) Float32)
(declare-fun f20 (Float16 Float128 Float16 Float128 Float16 Float128 Float32 Float128 Float64) Float128)
(declare-fun f21 (Float32 Float128 Float32) Float128)
(declare-fun f22 (Float16 Float128 Float128 Float128 Float64 Float128 Float64 Float64 Float64 Float64) Float128)
(declare-fun f23 (Float128 Float16 Float64 Float128 Float32 Float32 Float16 Float32 Float16) Float16)
(declare-fun f24 (Float64 Float32 Float128 Float64 Float32 Float128) Float64)
(declare-fun f25 (Float128 Float64 Float16 Float16 Float16 Float64 Float64) Float128)
(declare-fun f26 (Float32 Float128 Float128 Float32 Float16 Float32) Float32)
(declare-fun f27 (Float128 Float16 Float32 Float16 Float64 Float64 Float16 Float64) Float128)
(declare-fun f28 (Float128 Float128 Float32 Float64 Float32 Float32) Float128)
(declare-fun f29 (Float128) Float16)
(declare-fun f30 (Float64 Float16 Float64 Float32 Float64 Float128 Float16) Float128)
(declare-fun f31 (Float32 Float64 Float16 Float128 Float64 Float64) Float32)
(declare-fun f32 (Float128 Float16 Float64 Float128 Float16 Float16) Float16)
(declare-fun f33 (Float128 Float32 Float64 Float64) Float64)
(declare-fun f34 (Float32 Float16 Float128 Float64 Float128 Float16 Float64 Float128 Float64) Float64)
(declare-fun f35 (Float32 Float32 Float32 Float128 Float32) Float16)
(declare-fun f36 (Float128 Float16 Float16 Float128 Float64 Float64 Float16 Float16 Float32) Float16)
(declare-fun f37 (Float64) Float32)
(declare-fun f38 (Float128 Float128 Float32) Float128)
(declare-fun f39 (Float128 Float32 Float32 Float128 Float128) Float128)
(declare-fun f40 (Float32 Float64 Float32 Float32 Float64 Float128 Float16) Float32)
(declare-fun f41 (Float64 Float32 Float64 Float64 Float16) Float16)
(declare-fun f42 (Float128 Float64 Float32 Float64 Float16 Float128 Float128 Float64) Float16)
(declare-fun f43 (Float128 Float16 Float16 Float16 Float16 Float16 Float16 Float32) Float128)
(declare-fun f44 (Float16 Float64 Float32 Float128 Float128) Float128)
(declare-fun f45 (Float16 Float32 Float32 Float32 Float128 Float64 Float32 Float128) Float16)
(declare-fun f46 (Float16 Float128 Float128) Float32)
(declare-fun f47 (Float32 Float16 Float64 Float128 Float16 Float16 Float128 Float128 Float16) Float16)
(declare-fun f48 (Float16 Float16 Float32) Float64)
(declare-fun f49 (Float128 Float16 Float16 Float128) Float16)
(declare-fun p0 (Float64 Float16 Float16 Float64 Float16 Float64 Float128 Float64 Float32 Float16) Bool)
(declare-fun p1 (Float128 Float16) Bool)
(declare-fun p2 (Float16 Float16 Float32 Float64 Float16 Float16 Float64 Float32 Float128 Float128) Bool)
(declare-fun p3 (Float16) Bool)
(declare-fun p4 (Float16 Float64) Bool)
(declare-fun p5 (Float16 Float64 Float32 Float64 Float32 Float16) Bool)
(declare-fun p6 (Float32 Float128 Float16) Bool)
(declare-fun p7 (Float128 Float16 Float128 Float64 Float128 Float32 Float128 Float64) Bool)
(declare-fun p8 (Float128 Float64 Float16 Float128 Float16 Float128) Bool)
(declare-fun p9 (Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float64)
(declare-const ?float62 Float64)
(declare-const ?float63 Float16)
(declare-const ?float64 Float32)
(declare-const ?float65 Float64)
(declare-const ?float66 Float16)
(declare-const ?float67 Float16)
(declare-const ?float68 Float128)
(declare-const ?float69 Float128)
(declare-const ?float70 Float64)
(declare-const ?float71 Float32)
(declare-const ?float72 Float128)
(declare-const ?float73 Float64)
(declare-const ?float74 Float16)
(declare-const ?float75 Float16)
(declare-const ?float76 Float32)
(declare-const ?float77 Float32)
(declare-const ?float78 Float32)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b0 #b10000101 #b01111101000111101101101)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float90 Float128)
(assert (= ?float90 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b0 #b110001101110011 #b1110101011100000111100001110011111011001110100001110001110011010000111001100000110000000100011011011000110101110)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b1 #b101011110111000 #b1000011101001001110000110100000111000010101100010001011000100011001011010110000011100101101111010011001001011101)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b1 #b111101010111100 #b0111011101101000000000100011100111101011101110011010101000010011100011110000101101111111010101110011111001100000)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.min ?float76 ?float64)))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.div RTN ((_ to_fp 8 24) RNE ?float65) ?float64)))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.max ?float76 ?float78)))
(declare-const ?float103 Float32)
(assert (= ?float103 (fp.mul RNE ?float78 ?float80)))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.abs ?float66)))
(declare-const ?float105 Float128)
(assert (= ?float105 (fp.roundToIntegral RNE ?float68)))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.neg ?float62)))
(declare-const ?float107 Float16)
(assert (= ?float107 (fp.max ?float66 ((_ to_fp 5 11) RTP ?float61))))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.add RTP ?float90 ((_ to_fp 15 113) RTZ ?float85))))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.max ?float65 ((_ to_fp 11 53) RNE ?float72))))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.min ?float73 ((_ to_fp 11 53) RTN ?float83))))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.min ?float107 ?float85)))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.mul RTN ?float66 ?float85)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.sub RTN ?float73 ?float70)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.max ?float70 ?float61)))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.abs ?float70)))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.sqrt RNE ?float70)))
(declare-const ?float117 Float128)
(assert (= ?float117 (f43 ((_ to_fp 15 113) RTZ ?float73) ((_ to_fp 5 11) RTP ?float101) ?float107 ?float107 ((_ to_fp 5 11) RNE ?float86) ((_ to_fp 5 11) RTP ?float80) ((_ to_fp 5 11) RTN ?float64) ((_ to_fp 8 24) RTZ ?float66))))
(declare-const ?float118 Float64)
(assert (= ?float118 (f4 ((_ to_fp 11 53) RTP ?float68) ((_ to_fp 11 53) RTZ ?float112) ?float94 ((_ to_fp 11 53) RNE ?float105) ((_ to_fp 5 11) RTP ?float102) ((_ to_fp 15 113) RTN ?float64) ((_ to_fp 11 53) RNE ?float68) ((_ to_fp 5 11) RTP ?float88) ?float82 ((_ to_fp 11 53) RTP ?float111))))
(declare-const ?float119 Float64)
(assert (= ?float119 (f12 ((_ to_fp 15 113) RTN ?float67) ((_ to_fp 5 11) RTP ?float103) ((_ to_fp 8 24) RTZ ?float68) ?float84 ((_ to_fp 15 113) RTZ ?float88) ?float65 ((_ to_fp 5 11) RTZ ?float97))))
(declare-const ?float120 Float16)
(assert (= ?float120 (f36 ((_ to_fp 15 113) RTZ ?float70) ?float85 ((_ to_fp 5 11) RNE ?float110) ((_ to_fp 15 113) RTN ?float81) ((_ to_fp 11 53) RTZ ?float80) ((_ to_fp 11 53) RTZ ?float101) ?float75 ((_ to_fp 5 11) RTN ?float95) ((_ to_fp 8 24) RTN ?float86))))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.abs ?float69)))
(declare-const ?float122 Float64)
(assert (= ?float122 (fp.add RTP ((_ to_fp 11 53) RNE ?float108) ?float97)))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.min ((_ to_fp 11 53) RTN ?float104) ?float62)))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.sub RTZ ?float115 ((_ to_fp 11 53) RTP ?float77))))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.mul RTN ((_ to_fp 11 53) RTN ?float98) ?float106)))
(declare-const ?float126 Float64)
(assert (= ?float126 (fp.max ?float106 ?float118)))
(declare-const ?float127 Float128)
(assert (= ?float127 (f13 ((_ to_fp 8 24) RTN ?float124) ?float126 ((_ to_fp 11 53) RTZ ?float74) ((_ to_fp 5 11) RNE ?float115) ((_ to_fp 15 113) RNE ?float74) ((_ to_fp 15 113) RTP ?float85) ((_ to_fp 5 11) RNE ?float78))))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.max ?float86 ?float73)))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.sqrt RTN ?float128)))
(declare-const ?float130 Float64)
(assert (= ?float130 (fp.sqrt RTN ?float123)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.div RTP ?float116 ((_ to_fp 11 53) RNE ?float63))))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.mul RTN ?float65 ((_ to_fp 11 53) RNE ?float96))))
(declare-const ?float133 Float128)
(assert (= ?float133 (fp.min ?float89 ((_ to_fp 15 113) RTN ?float73))))
(declare-const ?float134 Float32)
(assert (= ?float134 (fp.sub RTZ ?float88 ((_ to_fp 8 24) RTN ?float89))))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.min ((_ to_fp 5 11) RTN ?float110) ?float120)))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.add RNE ?float106 ?float70)))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.add RTN ((_ to_fp 11 53) RNE ?float111) ?float73)))
(declare-const ?float138 Float32)
(assert (= ?float138 (f37 ((_ to_fp 11 53) RTZ ?float102))))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.abs ?float109)))
(declare-const ?float140 Float32)
(assert (= ?float140 (f31 ?float88 ((_ to_fp 11 53) RTN ?float90) ((_ to_fp 5 11) RNE ?float96) ((_ to_fp 15 113) RNE ?float65) ?float123 ((_ to_fp 11 53) RTN ?float96))))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.sqrt RTZ ?float113)))
(declare-const ?float142 Float64)
(assert (= ?float142 (f48 ((_ to_fp 5 11) RTN ?float132) ((_ to_fp 5 11) RTP ?float78) ((_ to_fp 8 24) RTZ ?float83))))
(declare-const ?float143 Float32)
(assert (= ?float143 (fp.div RTZ ?float138 ((_ to_fp 8 24) RTZ ?float68))))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.sub RNE ((_ to_fp 11 53) RTP ?float60) ?float125)))
(declare-const ?float145 Float16)
(assert (= ?float145 (fp.sqrt RTN ?float91)))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.max ((_ to_fp 15 113) RNE ?float77) ?float69)))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.sub RTN ((_ to_fp 15 113) RNE ?float104) ?float69)))
(declare-const ?float148 Float128)
(assert (= ?float148 (f3 ((_ to_fp 5 11) RTP ?float121) ((_ to_fp 8 24) RTP ?float115) ((_ to_fp 15 113) RTZ ?float125) ((_ to_fp 8 24) RTZ ?float131) ((_ to_fp 5 11) RTP ?float138) ((_ to_fp 8 24) RTZ ?float79))))
(declare-const ?float149 Float64)
(assert (= ?float149 (f4 ((_ to_fp 11 53) RTN ?float100) ?float97 ?float73 ?float142 ((_ to_fp 5 11) RNE ?float64) ((_ to_fp 15 113) RTN ?float110) ((_ to_fp 11 53) RTZ ?float63) ?float85 ?float103 ?float136)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.lt ?float99 ((_ to_fp 15 113) RTN ?float119))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p8 ?float95 ((_ to_fp 11 53) RNE ?float80) ?float112 ((_ to_fp 15 113) RTP ?float139) ?float74 ((_ to_fp 15 113) RNE ?float114))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (p7 ((_ to_fp 15 113) RTP ?float73) ?float83 ((_ to_fp 15 113) RNE ?float142) ?float86 ?float89 ((_ to_fp 8 24) RTZ ?float132) ((_ to_fp 15 113) RNE ?float135) ((_ to_fp 11 53) RNE ?float67))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isZero ?float143)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isInfinite ?float109)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.lt ((_ to_fp 15 113) RTP ?float62) ?float108)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isInfinite ?float143)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p6 ((_ to_fp 8 24) RNE ?float118) ?float92 ((_ to_fp 5 11) RTP ?float93))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNaN ?float102)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isNaN ?float142)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNaN ?float114)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.gt ((_ to_fp 8 24) RNE ?float92) ?float96)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNaN ?float107)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (p6 ?float88 ((_ to_fp 15 113) RNE ?float85) ((_ to_fp 5 11) RTZ ?float65))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isPositive ?float64)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isSubnormal ?float93)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.leq ((_ to_fp 15 113) RTN ?float141) ?float92)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p9 ((_ to_fp 5 11) RNE ?float118))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNaN ?float68)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNegative ?float71)))
; FINAL ASSERT
(assert (or ?bool151 ?bool169 ?bool167))
(check-sat)


-- iteration 95 --
(declare-fun f0 (Float16 Float128) Float32)
(declare-fun f1 (Float128 Float32 Float32 Float16 Float128) Float128)
(declare-fun f2 (Float64 Float128 Float64 Float64 Float128 Float32 Float16) Float64)
(declare-fun f3 (Float16 Float64 Float32 Float128 Float128) Float32)
(declare-fun f4 (Float32 Float32 Float128 Float32 Float64 Float16) Float128)
(declare-fun f5 (Float32 Float32 Float64 Float32 Float16) Float128)
(declare-fun f6 (Float128 Float16) Float32)
(declare-fun f7 (Float64 Float16 Float32) Float128)
(declare-fun f8 (Float16 Float64 Float32 Float16 Float32 Float32) Float32)
(declare-fun f9 (Float16 Float32 Float128 Float64) Float128)
(declare-fun f10 (Float16 Float128 Float16 Float64 Float32 Float64 Float16) Float64)
(declare-fun f11 (Float16 Float16 Float16) Float128)
(declare-fun f12 (Float64) Float64)
(declare-fun f13 (Float16 Float32 Float128) Float16)
(declare-fun f14 (Float128 Float16 Float32 Float64 Float128) Float128)
(declare-fun f15 (Float128 Float16 Float128 Float128 Float16 Float16 Float16 Float128 Float16) Float64)
(declare-fun f16 (Float16 Float64 Float16 Float128 Float128 Float32 Float16 Float32 Float64) Float32)
(declare-fun f17 (Float32) Float128)
(declare-fun f18 (Float128 Float16 Float32) Float128)
(declare-fun f19 (Float32 Float32 Float16 Float128 Float16 Float64 Float64 Float16) Float128)
(declare-fun f20 (Float64 Float16 Float32 Float32 Float128 Float16) Float128)
(declare-fun f21 (Float32 Float16) Float64)
(declare-fun f22 (Float64 Float64) Float16)
(declare-fun f23 (Float32 Float32 Float64 Float32 Float64 Float128 Float32) Float32)
(declare-fun f24 (Float64 Float128 Float32 Float128 Float32) Float64)
(declare-fun f25 (Float64 Float128 Float32 Float32 Float64 Float128 Float32 Float16 Float16 Float32) Float16)
(declare-fun f26 (Float32 Float128) Float32)
(declare-fun f27 (Float128 Float32 Float16 Float128) Float128)
(declare-fun f28 (Float128 Float16 Float64) Float16)
(declare-fun f29 (Float64 Float64 Float64) Float64)
(declare-fun f30 (Float64) Float32)
(declare-fun f31 (Float16) Float128)
(declare-fun f32 (Float16 Float128 Float64 Float64) Float32)
(declare-fun f33 (Float32 Float128 Float128 Float128) Float64)
(declare-fun f34 (Float16 Float32 Float128 Float128 Float32 Float128 Float32 Float16 Float64) Float16)
(declare-fun f35 (Float128 Float128 Float128 Float16 Float64 Float16 Float64) Float16)
(declare-fun f36 (Float128 Float32 Float32) Float16)
(declare-fun f37 (Float64 Float64 Float128 Float64 Float128) Float32)
(declare-fun f38 (Float32 Float32 Float64 Float32 Float16) Float16)
(declare-fun f39 (Float16 Float32 Float16 Float128) Float64)
(declare-fun f40 (Float32 Float16 Float128 Float16 Float64 Float128 Float64 Float32) Float32)
(declare-fun f41 (Float32 Float128 Float32 Float32) Float64)
(declare-fun f42 (Float32 Float128) Float16)
(declare-fun f43 (Float16 Float32) Float16)
(declare-fun f44 (Float64 Float16 Float16 Float32 Float32 Float128 Float64 Float64 Float128) Float16)
(declare-fun f45 (Float32 Float32) Float16)
(declare-fun f46 (Float64 Float32 Float16) Float128)
(declare-fun f47 (Float64 Float32 Float64 Float32) Float16)
(declare-fun f48 (Float128 Float32 Float32 Float16 Float16 Float16 Float128 Float64 Float32 Float128) Float32)
(declare-fun f49 (Float32 Float16 Float64 Float64 Float64) Float128)
(declare-fun p0 (Float16) Bool)
(declare-fun p1 (Float16) Bool)
(declare-fun p2 (Float128 Float64 Float128 Float64 Float32 Float64) Bool)
(declare-fun p3 (Float128 Float128 Float128 Float128 Float32 Float32 Float128 Float32 Float16) Bool)
(declare-fun p4 (Float16 Float32 Float64 Float16 Float128 Float64 Float16 Float128) Bool)
(declare-fun p5 (Float16 Float16 Float32) Bool)
(declare-fun p6 (Float32 Float32 Float32 Float128) Bool)
(declare-fun p7 (Float16 Float128 Float32) Bool)
(declare-fun p8 (Float128 Float32 Float16 Float128) Bool)
(declare-fun p9 (Float32 Float32 Float32 Float16 Float64 Float64 Float64 Float16 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float32)
(declare-const ?float62 Float128)
(declare-const ?float63 Float128)
(declare-const ?float64 Float16)
(declare-const ?float65 Float16)
(declare-const ?float66 Float16)
(declare-const ?float67 Float16)
(declare-const ?float68 Float64)
(declare-const ?float69 Float128)
(declare-const ?float70 Float16)
(declare-const ?float71 Float32)
(declare-const ?float72 Float16)
(declare-const ?float73 Float32)
(declare-const ?float74 Float128)
(declare-const ?float75 Float32)
(declare-const ?float76 Float32)
(declare-const ?float77 Float16)
(declare-const ?float78 Float64)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b10011001 #b00100000011001000100101)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b0 #b11011000 #b10111111001011011001100)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (f40 ((_ to_fp 8 24) RTZ ?float92) ?float97 ?float93 ((_ to_fp 5 11) RTP ?float60) ((_ to_fp 11 53) RTZ ?float75) ((_ to_fp 15 113) RTP ?float86) ((_ to_fp 11 53) RTN ?float92) ?float61)))
(declare-const ?float101 Float64)
(assert (= ?float101 (fp.add RTN ((_ to_fp 11 53) RTP ?float73) ?float78)))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.mul RNE ((_ to_fp 8 24) RNE ?float62) ?float100)))
(declare-const ?float103 Float64)
(assert (= ?float103 (f2 ((_ to_fp 11 53) RTN ?float67) ?float62 ((_ to_fp 11 53) RTP ?float81) ?float78 ((_ to_fp 15 113) RTZ ?float88) ((_ to_fp 8 24) RTP ?float97) ((_ to_fp 5 11) RTN ?float61))))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.mul RNE ((_ to_fp 11 53) RTN ?float92) ?float103)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.mul RTP ?float101 ?float90)))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.max ((_ to_fp 11 53) RNE ?float76) ?float101)))
(declare-const ?float107 Float16)
(assert (= ?float107 (fp.div RTP ?float97 ?float97)))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.sub RTP ((_ to_fp 8 24) RTN ?float78) ?float102)))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.div RTN ?float82 ?float97)))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.neg ?float104)))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.add RTN ((_ to_fp 11 53) RNE ?float88) ?float99)))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.neg ?float83)))
(declare-const ?float113 Float32)
(assert (= ?float113 (f6 ((_ to_fp 15 113) RTP ?float64) ((_ to_fp 5 11) RTZ ?float61))))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.roundToIntegral RNE ?float104)))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.sqrt RTP ?float80)))
(declare-const ?float116 Float128)
(assert (= ?float116 (f46 ((_ to_fp 11 53) RTP ?float77) ?float84 ((_ to_fp 5 11) RTP ?float108))))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.add RNE ?float94 ((_ to_fp 11 53) RTP ?float72))))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.roundToIntegral RTP ?float62)))
(declare-const ?float119 Float64)
(assert (= ?float119 (f33 ((_ to_fp 8 24) RTZ ?float68) ((_ to_fp 15 113) RNE ?float113) ((_ to_fp 15 113) RTP ?float72) ((_ to_fp 15 113) RTP ?float76))))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.neg ?float73)))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.max ?float81 ((_ to_fp 5 11) RTZ ?float98))))
(declare-const ?float122 Float64)
(assert (= ?float122 (fp.max ((_ to_fp 11 53) RTZ ?float115) ?float111)))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.abs ?float87)))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.sub RTZ ?float73 ?float83)))
(declare-const ?float125 Float16)
(assert (= ?float125 (f34 ?float92 ((_ to_fp 8 24) RTP ?float111) ((_ to_fp 15 113) RTZ ?float86) ((_ to_fp 15 113) RTP ?float121) ?float80 ?float62 ?float100 ((_ to_fp 5 11) RTZ ?float87) ((_ to_fp 11 53) RTP ?float123))))
(declare-const ?float126 Float64)
(assert (= ?float126 (fp.max ((_ to_fp 11 53) RNE ?float125) ?float110)))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.sqrt RTZ ?float84)))
(declare-const ?float128 Float16)
(assert (= ?float128 (fp.add RNE ?float66 ?float96)))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.sqrt RNE ?float94)))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.neg ?float89)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.max ?float126 ((_ to_fp 11 53) RTN ?float100))))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.neg ?float91)))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.sub RTZ ?float112 ?float98)))
(declare-const ?float134 Float128)
(assert (= ?float134 (f46 ((_ to_fp 11 53) RNE ?float65) ((_ to_fp 8 24) RTP ?float70) ((_ to_fp 5 11) RTZ ?float102))))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.div RTN ((_ to_fp 8 24) RNE ?float66) ?float102)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.min ?float97 ((_ to_fp 5 11) RTN ?float61))))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.abs ?float84)))
(declare-const ?float138 Float128)
(assert (= ?float138 (f46 ?float126 ?float100 ?float72)))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.max ?float73 ((_ to_fp 8 24) RTP ?float90))))
(declare-const ?float140 Float128)
(assert (= ?float140 (f19 ((_ to_fp 8 24) RNE ?float119) ?float112 ((_ to_fp 5 11) RTZ ?float83) ((_ to_fp 15 113) RTP ?float70) ?float82 ((_ to_fp 11 53) RTP ?float127) ((_ to_fp 11 53) RTZ ?float139) ?float107)))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.neg ?float67)))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.add RNE ?float129 ((_ to_fp 11 53) RTZ ?float118))))
(declare-const ?float143 Float32)
(assert (= ?float143 (fp.min ?float139 ((_ to_fp 8 24) RTN ?float116))))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.sub RTN ?float68 ?float94)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.mul RNE ?float101 ?float111)))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.sqrt RTN ?float76)))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.div RNE ((_ to_fp 8 24) RNE ?float65) ?float108)))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.div RNE ?float78 ((_ to_fp 11 53) RNE ?float123))))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.div RTN ?float106 ?float68)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isNormal ?float69)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p3 ((_ to_fp 15 113) RTZ ?float99) ((_ to_fp 15 113) RTP ?float98) ((_ to_fp 15 113) RTZ ?float146) ((_ to_fp 15 113) RTP ?float80) ((_ to_fp 8 24) RNE ?float129) ((_ to_fp 8 24) RTZ ?float116) ((_ to_fp 15 113) RNE ?float122) ((_ to_fp 8 24) RNE ?float64) ((_ to_fp 5 11) RTP ?float108))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isPositive ?float65)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (p6 ((_ to_fp 8 24) RTN ?float131) ((_ to_fp 8 24) RNE ?float68) ((_ to_fp 8 24) RTN ?float69) ((_ to_fp 15 113) RNE ?float75))))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p1 ?float136)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.gt ((_ to_fp 11 53) RTP ?float112) ?float103)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isSubnormal ?float123)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p4 ((_ to_fp 5 11) RNE ?float95) ((_ to_fp 8 24) RTP ?float117) ((_ to_fp 11 53) RTP ?float134) ((_ to_fp 5 11) RTZ ?float99) ((_ to_fp 15 113) RNE ?float72) ((_ to_fp 11 53) RTN ?float80) ((_ to_fp 5 11) RNE ?float146) ((_ to_fp 15 113) RNE ?float131))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNaN ?float149)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p0 ((_ to_fp 5 11) RTP ?float108))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.gt ((_ to_fp 11 53) RTZ ?float60) ?float126)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isSubnormal ?float139)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (p5 ((_ to_fp 5 11) RNE ?float83) ((_ to_fp 5 11) RTN ?float93) ?float98)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.eq ((_ to_fp 8 24) RTP ?float144) ?float133)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isNormal ?float125)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.geq ((_ to_fp 11 53) RNE ?float88) ?float131)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isPositive ?float65)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p0 ((_ to_fp 5 11) RNE ?float84))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.gt ?float145 ((_ to_fp 11 53) RTP ?float96))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNegative ?float65)))
; FINAL ASSERT
(assert (and ?bool166 ?bool154 (and (and ?bool157) (and (and (or (or (or ?bool159 ?bool163)) (and (or ?bool169 ?bool150 ?bool151))) (and (or (or ?bool161))) ?bool164) (and ?bool167 (or ?bool152 (or (or ?bool159 ?bool164 ?bool150) ?bool166) ?bool155) (or (and ?bool167 ?bool158 ?bool164) ?bool157 ?bool157))))))
(check-sat)


-- iteration 96 --
(declare-fun f0 (Float16) Float64)
(declare-fun f1 (Float128 Float128) Float64)
(declare-fun f2 (Float64 Float32 Float128 Float128 Float16 Float16 Float64 Float64 Float128) Float16)
(declare-fun f3 (Float64) Float128)
(declare-fun f4 (Float32 Float64 Float64 Float128 Float128 Float16 Float16) Float64)
(declare-fun f5 (Float32 Float32 Float16 Float128 Float32 Float32 Float32 Float32 Float64 Float128) Float32)
(declare-fun f6 (Float64 Float16 Float128 Float128 Float16 Float16 Float32 Float64 Float64) Float32)
(declare-fun f7 (Float64) Float128)
(declare-fun f8 (Float16 Float32 Float128 Float16 Float16 Float32) Float32)
(declare-fun f9 (Float16 Float16 Float32 Float128 Float64 Float64 Float16 Float128 Float64) Float128)
(declare-fun f10 (Float128 Float64 Float64 Float16 Float128 Float64 Float64 Float64) Float64)
(declare-fun f11 (Float128 Float128 Float16 Float64 Float16 Float16) Float128)
(declare-fun f12 (Float32 Float64 Float32) Float16)
(declare-fun f13 (Float64 Float32 Float64) Float32)
(declare-fun f14 (Float128 Float32 Float16 Float32 Float32 Float32 Float16 Float128) Float64)
(declare-fun f15 (Float64 Float64 Float64 Float64 Float64 Float128 Float64 Float64) Float128)
(declare-fun f16 (Float16 Float16 Float16 Float128 Float32 Float64 Float16 Float128 Float64) Float128)
(declare-fun f17 (Float16 Float16 Float128) Float32)
(declare-fun f18 (Float64 Float128 Float16 Float16 Float128 Float128) Float16)
(declare-fun f19 (Float32 Float64 Float32 Float32 Float16) Float64)
(declare-fun f20 (Float32) Float64)
(declare-fun f21 (Float16 Float32 Float32 Float64 Float16 Float128 Float32 Float16 Float128 Float64) Float32)
(declare-fun f22 (Float64 Float128) Float128)
(declare-fun f23 (Float32 Float32 Float32) Float16)
(declare-fun f24 (Float32 Float128 Float64) Float16)
(declare-fun f25 (Float16 Float32 Float64 Float32 Float128 Float32 Float64 Float128 Float16 Float64) Float128)
(declare-fun f26 (Float32 Float64 Float16 Float64) Float64)
(declare-fun f27 (Float32 Float16 Float128 Float128 Float64 Float16 Float32 Float128 Float32 Float32) Float128)
(declare-fun f28 (Float64 Float64 Float128 Float32) Float16)
(declare-fun f29 (Float64) Float32)
(declare-fun f30 (Float16 Float64 Float64 Float64 Float64 Float64 Float16 Float32 Float32 Float128) Float64)
(declare-fun f31 (Float128) Float64)
(declare-fun f32 (Float128 Float64 Float16) Float32)
(declare-fun f33 (Float32 Float64 Float64 Float32 Float128 Float128) Float16)
(declare-fun f34 (Float32 Float128 Float64 Float128 Float16 Float128 Float64 Float32 Float128) Float32)
(declare-fun f35 (Float64 Float16 Float16 Float32 Float16 Float16) Float32)
(declare-fun f36 (Float32 Float64 Float64 Float16 Float128) Float16)
(declare-fun f37 (Float64 Float128 Float32 Float128 Float64) Float32)
(declare-fun f38 (Float128 Float128 Float32 Float32 Float128 Float128 Float16) Float128)
(declare-fun f39 (Float16 Float128 Float64 Float64 Float128 Float32 Float64 Float32 Float64) Float64)
(declare-fun f40 (Float64 Float128 Float64) Float128)
(declare-fun f41 (Float16 Float64 Float16 Float64 Float128 Float128 Float128) Float128)
(declare-fun f42 (Float64 Float64 Float64 Float128 Float64 Float32 Float16 Float32 Float64) Float64)
(declare-fun f43 (Float16 Float32 Float64 Float32 Float16 Float64 Float64 Float16 Float128 Float32) Float128)
(declare-fun f44 (Float32 Float32 Float64 Float64 Float64 Float32 Float128 Float128 Float128 Float128) Float32)
(declare-fun f45 (Float64 Float64 Float128 Float32 Float64 Float128 Float128 Float128 Float128) Float32)
(declare-fun f46 (Float16 Float128) Float128)
(declare-fun f47 (Float32 Float16 Float16) Float128)
(declare-fun f48 (Float128 Float16 Float128 Float64 Float16 Float64) Float32)
(declare-fun f49 (Float16 Float16 Float32 Float32 Float64 Float64 Float64) Float128)
(declare-fun p0 (Float64 Float32 Float16 Float64 Float16 Float32 Float32 Float128) Bool)
(declare-fun p1 (Float64 Float128 Float64 Float64 Float32 Float128 Float16) Bool)
(declare-fun p2 (Float64 Float64 Float64 Float16 Float32 Float32 Float16) Bool)
(declare-fun p3 (Float64 Float32 Float128 Float64 Float128 Float64) Bool)
(declare-fun p4 (Float32 Float32 Float64 Float128 Float32 Float128 Float16 Float16 Float128) Bool)
(declare-fun p5 (Float128 Float64 Float64 Float16 Float32 Float32 Float64 Float16 Float128) Bool)
(declare-fun p6 (Float16 Float32 Float64 Float16 Float128 Float64) Bool)
(declare-fun p7 (Float64 Float128 Float32 Float16 Float128 Float32) Bool)
(declare-fun p8 (Float16 Float64 Float128 Float128 Float128 Float16 Float64) Bool)
(declare-fun p9 (Float16 Float64 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float128)
(declare-const ?float62 Float64)
(declare-const ?float63 Float32)
(declare-const ?float64 Float32)
(declare-const ?float65 Float32)
(declare-const ?float66 Float128)
(declare-const ?float67 Float16)
(declare-const ?float68 Float64)
(declare-const ?float69 Float16)
(declare-const ?float70 Float64)
(declare-const ?float71 Float128)
(declare-const ?float72 Float32)
(declare-const ?float73 Float16)
(declare-const ?float74 Float128)
(declare-const ?float75 Float32)
(declare-const ?float76 Float64)
(declare-const ?float77 Float16)
(declare-const ?float78 Float32)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b0 #b101010110111001 #b1001100111011000010001001000000011011001011010110000010011001010101001111011100001010011011110110101101011100110)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b0 #b11110100 #b01110001101001110001101)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b1 #b10111110001 #b1111001010101111110111000001000100101001010111000101)))
(declare-const ?float90 Float128)
(assert (= ?float90 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b1 #b00001 #b0011101110)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b1 #b010010110001110 #b1011001010110001100111001100011010100000000100010101001001010101100111000011010011100110000111011010010010001100)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float98 Float64)
(assert (= ?float98 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b0 #b00001 #b0000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.sub RTZ ((_ to_fp 5 11) RTZ ?float93) ?float79)))
(declare-const ?float101 Float32)
(assert (= ?float101 (f32 ((_ to_fp 15 113) RNE ?float93) ?float84 ((_ to_fp 5 11) RTZ ?float74))))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.sub RNE ?float77 ?float91)))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.neg ?float76)))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.sqrt RTN ?float94)))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.abs ?float91)))
(declare-const ?float106 Float16)
(assert (= ?float106 (fp.abs ?float105)))
(declare-const ?float107 Float16)
(assert (= ?float107 (fp.neg ?float95)))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.div RTN ?float70 ((_ to_fp 11 53) RNE ?float75))))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.max ((_ to_fp 15 113) RNE ?float83) ?float90)))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.neg ?float102)))
(declare-const ?float111 Float128)
(assert (= ?float111 (f16 ((_ to_fp 5 11) RTZ ?float85) ?float67 ((_ to_fp 5 11) RTZ ?float64) ((_ to_fp 15 113) RTN ?float65) ?float64 ?float104 ((_ to_fp 5 11) RNE ?float93) ?float66 ((_ to_fp 11 53) RTZ ?float109))))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.abs ?float77)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.roundToIntegral RTP ?float88)))
(declare-const ?float114 Float32)
(assert (= ?float114 (f6 ((_ to_fp 11 53) RTN ?float86) ((_ to_fp 5 11) RTP ?float82) ((_ to_fp 15 113) RNE ?float72) ((_ to_fp 15 113) RTZ ?float110) ((_ to_fp 5 11) RNE ?float66) ((_ to_fp 5 11) RTN ?float62) ?float65 ?float80 ?float80)))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.sub RTZ ?float84 ((_ to_fp 11 53) RNE ?float82))))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.abs ?float94)))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.mul RTZ ?float96 ?float74)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.div RTZ ((_ to_fp 8 24) RTP ?float108) ?float114)))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.sub RTZ ?float89 ?float80)))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.roundToIntegral RTN ?float93)))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.min ((_ to_fp 5 11) RTZ ?float68) ?float81)))
(declare-const ?float122 Float16)
(assert (= ?float122 (f24 ?float101 ((_ to_fp 15 113) RTN ?float62) ?float98)))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.mul RNE ((_ to_fp 5 11) RNE ?float118) ?float112)))
(declare-const ?float124 Float16)
(assert (= ?float124 (fp.abs ?float123)))
(declare-const ?float125 Float32)
(assert (= ?float125 (f8 ((_ to_fp 5 11) RTZ ?float64) ((_ to_fp 8 24) RTN ?float76) ?float71 ((_ to_fp 5 11) RNE ?float80) ?float86 ?float75)))
(declare-const ?float126 Float128)
(assert (= ?float126 (f15 ((_ to_fp 11 53) RNE ?float79) ((_ to_fp 11 53) RTZ ?float85) ((_ to_fp 11 53) RNE ?float65) ((_ to_fp 11 53) RTZ ?float90) ?float116 ((_ to_fp 15 113) RTZ ?float102) ((_ to_fp 11 53) RTP ?float81) ?float84)))
(declare-const ?float127 Float64)
(assert (= ?float127 (f19 ((_ to_fp 8 24) RTP ?float112) ((_ to_fp 11 53) RTZ ?float122) ((_ to_fp 8 24) RTP ?float61) ((_ to_fp 8 24) RTP ?float66) ((_ to_fp 5 11) RNE ?float113))))
(declare-const ?float128 Float16)
(assert (= ?float128 (f12 ((_ to_fp 8 24) RTZ ?float74) ((_ to_fp 11 53) RNE ?float101) ((_ to_fp 8 24) RNE ?float89))))
(declare-const ?float129 Float16)
(assert (= ?float129 (f23 ((_ to_fp 8 24) RNE ?float102) ((_ to_fp 8 24) RTN ?float123) ?float114)))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.add RTP ?float85 ?float87)))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.roundToIntegral RTN ?float67)))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.roundToIntegral RTN ?float80)))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.div RTZ ((_ to_fp 5 11) RTP ?float117) ?float77)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.sub RNE ?float117 ((_ to_fp 15 113) RNE ?float102))))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.sub RTZ ?float95 ?float107)))
(declare-const ?float136 Float128)
(assert (= ?float136 (f38 ((_ to_fp 15 113) RNE ?float92) ((_ to_fp 15 113) RTP ?float120) ?float83 ((_ to_fp 8 24) RTP ?float70) ((_ to_fp 15 113) RTP ?float114) ((_ to_fp 15 113) RNE ?float103) ?float112)))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.sub RTN ?float95 ((_ to_fp 5 11) RTN ?float64))))
(declare-const ?float138 Float32)
(assert (= ?float138 (f32 ((_ to_fp 15 113) RTP ?float77) ((_ to_fp 11 53) RNE ?float66) ((_ to_fp 5 11) RTN ?float80))))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.sub RTP ?float70 ((_ to_fp 11 53) RTZ ?float112))))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.neg ?float86)))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.sqrt RTP ?float103)))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.abs ?float102)))
(declare-const ?float143 Float16)
(assert (= ?float143 (fp.mul RNE ((_ to_fp 5 11) RTZ ?float125) ?float129)))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.div RTZ ((_ to_fp 5 11) RTN ?float115) ?float131)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.add RTN ?float68 ((_ to_fp 11 53) RNE ?float126))))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.neg ?float77)))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.min ((_ to_fp 8 24) RTZ ?float121) ?float114)))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.min ((_ to_fp 11 53) RTP ?float142) ?float119)))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.max ?float66 ?float134)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isSubnormal ?float111)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.geq ((_ to_fp 8 24) RTZ ?float137) ?float83)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.eq ((_ to_fp 15 113) RNE ?float115) ?float71)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNormal ?float141)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p5 ?float74 ?float104 ((_ to_fp 11 53) RTP ?float107) ((_ to_fp 5 11) RTN ?float117) ?float83 ((_ to_fp 8 24) RTZ ?float100) ((_ to_fp 11 53) RTP ?float97) ?float128 ?float134)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.eq ((_ to_fp 15 113) RTN ?float148) ?float126)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isInfinite ?float120)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isZero ?float71)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p4 ((_ to_fp 8 24) RTN ?float148) ?float64 ?float103 ((_ to_fp 15 113) RTN ?float138) ((_ to_fp 8 24) RTN ?float70) ((_ to_fp 15 113) RTP ?float89) ((_ to_fp 5 11) RTP ?float134) ?float140 ((_ to_fp 15 113) RTZ ?float115))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isPositive ?float62)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNormal ?float62)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.gt ((_ to_fp 15 113) RTN ?float114) ?float71)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isInfinite ?float90)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.leq ?float148 ?float141)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isInfinite ?float82)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.eq ((_ to_fp 15 113) RNE ?float128) ?float149)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isPositive ?float98)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p8 ?float110 ((_ to_fp 11 53) RTN ?float66) ?float126 ?float90 ((_ to_fp 15 113) RTN ?float115) ((_ to_fp 5 11) RTN ?float62) ((_ to_fp 11 53) RTP ?float126))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (p7 ((_ to_fp 11 53) RNE ?float133) ((_ to_fp 15 113) RTN ?float84) ?float147 ((_ to_fp 5 11) RTZ ?float75) ((_ to_fp 15 113) RTN ?float148) ?float101)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.lt ?float140 ((_ to_fp 5 11) RTN ?float87))))
; FINAL ASSERT
(assert (and (and (and ?bool155 ?bool159) ?bool152 (or (or ?bool151 ?bool157 (and (and (and ?bool150 ?bool150 ?bool169) ?bool154 ?bool165))) ?bool169)) ?bool151 (or (and (or ?bool159 (and (or (or ?bool164 ?bool162)) (or ?bool169 (or ?bool153 ?bool167) (or ?bool169 ?bool165)) (and (or ?bool168) ?bool152 (and ?bool158))))) (or ?bool151 ?bool154 (or ?bool150 ?bool161)) ?bool163)))
(check-sat)


-- iteration 97 --
(declare-fun f0 (Float64 Float16 Float16 Float128 Float128 Float32 Float32 Float32 Float128 Float32) Float64)
(declare-fun f1 (Float32 Float16 Float128) Float128)
(declare-fun f2 (Float16 Float128) Float128)
(declare-fun f3 (Float32 Float32 Float128) Float128)
(declare-fun f4 (Float128 Float64) Float128)
(declare-fun f5 (Float16 Float128 Float16 Float128 Float128 Float32 Float16 Float128 Float128 Float16) Float16)
(declare-fun f6 (Float32 Float16 Float128) Float32)
(declare-fun f7 (Float16 Float16 Float32 Float32 Float16 Float32 Float32) Float16)
(declare-fun f8 (Float32 Float16 Float128 Float32 Float64 Float64 Float64 Float128 Float32 Float64) Float32)
(declare-fun f9 (Float128 Float32 Float128) Float64)
(declare-fun f10 (Float128 Float16 Float128 Float64 Float64 Float64 Float16 Float64 Float128) Float16)
(declare-fun f11 (Float128 Float16 Float64) Float16)
(declare-fun f12 (Float128 Float64 Float64 Float64 Float16 Float32 Float16) Float32)
(declare-fun f13 (Float16 Float64) Float64)
(declare-fun f14 (Float128 Float64 Float16) Float16)
(declare-fun f15 (Float16) Float16)
(declare-fun f16 (Float16 Float64 Float16 Float64 Float128) Float16)
(declare-fun f17 (Float64 Float64 Float16 Float32 Float64 Float64) Float128)
(declare-fun f18 (Float16 Float16 Float128 Float64 Float64 Float128 Float64 Float128 Float16 Float16) Float32)
(declare-fun f19 (Float16 Float16 Float16 Float128 Float64 Float64) Float16)
(declare-fun f20 (Float32 Float16 Float64 Float128 Float32 Float16 Float64 Float32 Float64 Float64) Float64)
(declare-fun f21 (Float32 Float16) Float128)
(declare-fun f22 (Float16 Float16 Float32 Float128 Float128) Float32)
(declare-fun f23 (Float128 Float64 Float32 Float32 Float128 Float128 Float128 Float32 Float32) Float64)
(declare-fun f24 (Float64 Float32 Float128 Float16 Float64 Float16 Float128 Float64 Float128) Float64)
(declare-fun f25 (Float32 Float32 Float128 Float128 Float128 Float32 Float64 Float32) Float32)
(declare-fun f26 (Float32 Float128 Float32) Float64)
(declare-fun f27 (Float32 Float64 Float128 Float16 Float32) Float64)
(declare-fun f28 (Float64 Float32 Float128 Float64 Float128 Float32 Float64) Float128)
(declare-fun f29 (Float32 Float16 Float16 Float32 Float128 Float64 Float32 Float64 Float32 Float64) Float32)
(declare-fun f30 (Float128 Float32) Float32)
(declare-fun f31 (Float128 Float64 Float16 Float128) Float64)
(declare-fun f32 (Float16 Float128 Float64 Float16 Float32 Float32 Float32) Float16)
(declare-fun f33 (Float16 Float64 Float32 Float16 Float16 Float32 Float32) Float128)
(declare-fun f34 (Float128 Float128 Float64 Float32 Float128 Float32 Float64 Float64 Float64) Float32)
(declare-fun f35 (Float64) Float16)
(declare-fun f36 (Float64) Float128)
(declare-fun f37 (Float128 Float16) Float128)
(declare-fun f38 (Float32 Float128 Float128 Float64 Float128 Float64 Float128) Float16)
(declare-fun f39 (Float128 Float128 Float128 Float16 Float128) Float32)
(declare-fun f40 (Float16 Float64) Float32)
(declare-fun f41 (Float16 Float32 Float32 Float128 Float128) Float64)
(declare-fun f42 (Float32 Float128 Float16 Float128 Float64 Float32) Float16)
(declare-fun f43 (Float32 Float128) Float16)
(declare-fun f44 (Float64 Float32 Float16 Float32 Float64 Float128 Float64) Float32)
(declare-fun f45 (Float64 Float32 Float32 Float32 Float64 Float32 Float128) Float64)
(declare-fun f46 (Float32 Float128 Float32 Float128 Float16 Float32 Float16) Float128)
(declare-fun f47 (Float32 Float128 Float64 Float16 Float16 Float64 Float16 Float128 Float16 Float64) Float64)
(declare-fun f48 (Float32 Float128 Float128 Float64 Float64 Float128) Float128)
(declare-fun f49 (Float64 Float64 Float128 Float16 Float16) Float128)
(declare-fun p0 (Float16 Float64 Float32 Float128 Float128 Float32 Float64 Float32 Float64) Bool)
(declare-fun p1 (Float32 Float32 Float32 Float128) Bool)
(declare-fun p2 (Float128 Float64 Float64 Float64 Float64) Bool)
(declare-fun p3 (Float64 Float32 Float64 Float128 Float128 Float128 Float32 Float16) Bool)
(declare-fun p4 (Float128 Float32 Float64 Float16 Float32) Bool)
(declare-fun p5 (Float128 Float16 Float64) Bool)
(declare-fun p6 (Float32 Float32 Float128) Bool)
(declare-fun p7 (Float16 Float128 Float16 Float32 Float32 Float128) Bool)
(declare-fun p8 (Float32 Float128 Float128 Float128 Float128 Float64 Float16 Float64 Float16) Bool)
(declare-fun p9 (Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float16)
(declare-const ?float62 Float32)
(declare-const ?float63 Float128)
(declare-const ?float64 Float128)
(declare-const ?float65 Float16)
(declare-const ?float66 Float64)
(declare-const ?float67 Float64)
(declare-const ?float68 Float32)
(declare-const ?float69 Float64)
(declare-const ?float70 Float64)
(declare-const ?float71 Float16)
(declare-const ?float72 Float32)
(declare-const ?float73 Float16)
(declare-const ?float74 Float64)
(declare-const ?float75 Float128)
(declare-const ?float76 Float16)
(declare-const ?float77 Float32)
(declare-const ?float78 Float16)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b1 #b01000010 #b11101001101001001101000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b1 #b00101 #b1100010111)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b0 #b01110100 #b00000001101100111001101)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (fp.sqrt RTZ ?float87)))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.neg ?float63)))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.roundToIntegral RTZ ?float71)))
(declare-const ?float103 Float128)
(assert (= ?float103 (fp.abs ?float63)))
(declare-const ?float104 Float64)
(assert (= ?float104 (f47 ?float96 ?float82 ((_ to_fp 11 53) RTN ?float95) ?float71 ((_ to_fp 5 11) RNE ?float75) ?float67 ((_ to_fp 5 11) RTN ?float89) ((_ to_fp 15 113) RNE ?float62) ?float102 ?float85)))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.add RTZ ?float102 ((_ to_fp 5 11) RTP ?float67))))
(declare-const ?float106 Float16)
(assert (= ?float106 (f43 ?float89 ?float94)))
(declare-const ?float107 Float16)
(assert (= ?float107 (fp.div RNE ?float73 ?float73)))
(declare-const ?float108 Float16)
(assert (= ?float108 (f35 ((_ to_fp 11 53) RTP ?float72))))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.min ?float88 ?float75)))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.add RTN ?float94 ?float81)))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.div RTN ?float83 ((_ to_fp 8 24) RTN ?float105))))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.roundToIntegral RTP ?float106)))
(declare-const ?float113 Float128)
(assert (= ?float113 (fp.sub RTP ?float99 ?float88)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.sub RTZ ?float70 ((_ to_fp 11 53) RTZ ?float102))))
(declare-const ?float115 Float16)
(assert (= ?float115 (fp.max ?float105 ?float76)))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.roundToIntegral RTN ?float93)))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.max ((_ to_fp 11 53) RTZ ?float106) ?float85)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.abs ?float72)))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.sub RTN ?float108 ((_ to_fp 5 11) RNE ?float96))))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.neg ?float91)))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.div RNE ?float71 ((_ to_fp 5 11) RNE ?float86))))
(declare-const ?float122 Float32)
(assert (= ?float122 (fp.roundToIntegral RTZ ?float77)))
(declare-const ?float123 Float16)
(assert (= ?float123 (f15 ((_ to_fp 5 11) RTZ ?float118))))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.min ?float111 ?float83)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.add RNE ((_ to_fp 8 24) RTZ ?float105) ?float77)))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.abs ?float64)))
(declare-const ?float127 Float128)
(assert (= ?float127 (fp.max ((_ to_fp 15 113) RTZ ?float122) ?float97)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.roundToIntegral RTZ ?float122)))
(declare-const ?float129 Float64)
(assert (= ?float129 (f9 ((_ to_fp 15 113) RTZ ?float95) ?float96 ((_ to_fp 15 113) RTN ?float122))))
(declare-const ?float130 Float64)
(assert (= ?float130 (fp.mul RTN ((_ to_fp 11 53) RTZ ?float113) ?float66)))
(declare-const ?float131 Float128)
(assert (= ?float131 (fp.mul RNE ?float63 ?float82)))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.sub RTZ ?float97 ?float88)))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.max ?float83 ((_ to_fp 8 24) RNE ?float61))))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.add RTN ?float112 ((_ to_fp 5 11) RNE ?float129))))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.abs ?float96)))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.add RTN ((_ to_fp 15 113) RTP ?float106) ?float113)))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.sqrt RTP ?float120)))
(declare-const ?float138 Float128)
(assert (= ?float138 (fp.abs ?float99)))
(declare-const ?float139 Float128)
(assert (= ?float139 (f1 ((_ to_fp 8 24) RTN ?float82) ((_ to_fp 5 11) RTN ?float84) ((_ to_fp 15 113) RTZ ?float84))))
(declare-const ?float140 Float64)
(assert (= ?float140 (f26 ?float96 ((_ to_fp 15 113) RTP ?float69) ?float84)))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.abs ?float102)))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.div RNE ?float106 ?float93)))
(declare-const ?float143 Float32)
(assert (= ?float143 (fp.sub RTP ?float84 ((_ to_fp 8 24) RTN ?float97))))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.sub RNE ((_ to_fp 11 53) RTP ?float133) ?float69)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.abs ?float80)))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.sub RTP ((_ to_fp 8 24) RTP ?float115) ?float111)))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.sub RTZ ?float92 ((_ to_fp 8 24) RTP ?float86))))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.max ((_ to_fp 11 53) RTN ?float147) ?float85)))
(declare-const ?float149 Float32)
(assert (= ?float149 (f34 ?float113 ((_ to_fp 15 113) RTP ?float148) ?float85 ((_ to_fp 8 24) RTN ?float116) ((_ to_fp 15 113) RNE ?float135) ((_ to_fp 8 24) RTP ?float141) ((_ to_fp 11 53) RTN ?float73) ?float67 ((_ to_fp 11 53) RTZ ?float83))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isNaN ?float80)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.leq ((_ to_fp 5 11) RTP ?float82) ?float134)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.lt ?float91 ((_ to_fp 8 24) RTZ ?float101))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.lt ((_ to_fp 15 113) RTN ?float67) ?float82)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p7 ?float108 ((_ to_fp 15 113) RTN ?float95) ((_ to_fp 5 11) RTZ ?float89) ?float147 ?float111 ((_ to_fp 15 113) RTN ?float137))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isInfinite ?float136)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.gt ?float130 ?float117)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isZero ?float67)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p7 ((_ to_fp 5 11) RTN ?float68) ((_ to_fp 15 113) RTP ?float124) ((_ to_fp 5 11) RNE ?float90) ?float96 ((_ to_fp 8 24) RTN ?float112) ((_ to_fp 15 113) RTN ?float61))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p2 ((_ to_fp 15 113) RNE ?float144) ((_ to_fp 11 53) RTP ?float62) ((_ to_fp 11 53) RNE ?float138) ?float66 ?float145)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.eq ?float104 ((_ to_fp 11 53) RTP ?float91))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.lt ((_ to_fp 5 11) RTP ?float87) ?float105)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.leq ?float93 ?float61)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.lt ?float101 ((_ to_fp 15 113) RNE ?float107))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isNormal ?float148)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isSubnormal ?float130)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p9 ?float115)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p4 ((_ to_fp 15 113) RNE ?float78) ((_ to_fp 8 24) RTN ?float95) ?float87 ((_ to_fp 5 11) RNE ?float131) ?float92)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isInfinite ?float109)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p9 ?float60)))
; FINAL ASSERT
(assert (and (or ?bool167 ?bool167)))
(check-sat)


-- iteration 98 --
(declare-fun f0 (Float64 Float128 Float32 Float128 Float128 Float64) Float32)
(declare-fun f1 (Float32 Float32 Float64 Float64 Float16 Float128) Float128)
(declare-fun f2 (Float32 Float64 Float32 Float16 Float128) Float32)
(declare-fun f3 (Float64 Float32 Float16 Float32 Float32 Float128 Float16 Float128 Float16 Float128) Float64)
(declare-fun f4 (Float32) Float128)
(declare-fun f5 (Float16 Float64 Float128 Float64 Float64 Float128) Float16)
(declare-fun f6 (Float32 Float64 Float16 Float32 Float64 Float64 Float32) Float64)
(declare-fun f7 (Float32 Float32 Float128 Float32 Float16) Float128)
(declare-fun f8 (Float32 Float16 Float16 Float32) Float64)
(declare-fun f9 (Float64 Float64 Float128 Float32 Float32 Float32 Float128 Float32) Float32)
(declare-fun f10 (Float16 Float64 Float128 Float128 Float128 Float32 Float128 Float128 Float128 Float128) Float128)
(declare-fun f11 (Float128 Float128 Float16 Float128 Float32 Float64 Float64 Float16) Float128)
(declare-fun f12 (Float64 Float128 Float64 Float128) Float128)
(declare-fun f13 (Float16 Float128 Float16 Float64 Float64 Float128 Float32 Float32 Float64) Float64)
(declare-fun f14 (Float128 Float128 Float16 Float32 Float32 Float16 Float128 Float32 Float128 Float32) Float32)
(declare-fun f15 (Float128 Float64 Float128) Float64)
(declare-fun f16 (Float128) Float128)
(declare-fun f17 (Float32 Float128 Float128 Float16 Float32 Float16 Float64 Float32 Float32 Float16) Float128)
(declare-fun f18 (Float64 Float32 Float128 Float64 Float64 Float16 Float16 Float32 Float64 Float64) Float16)
(declare-fun f19 (Float128 Float16 Float16) Float32)
(declare-fun f20 (Float32) Float64)
(declare-fun f21 (Float16 Float128 Float16 Float16 Float32 Float16 Float128) Float32)
(declare-fun f22 (Float64 Float128) Float16)
(declare-fun f23 (Float128 Float64 Float16) Float16)
(declare-fun f24 (Float32 Float128 Float64 Float16) Float32)
(declare-fun f25 (Float32 Float64 Float128 Float128 Float16 Float64 Float16 Float32 Float16) Float64)
(declare-fun f26 (Float128) Float16)
(declare-fun f27 (Float128 Float32 Float128 Float16 Float64 Float64) Float128)
(declare-fun f28 (Float64 Float16 Float128) Float32)
(declare-fun f29 (Float64 Float32 Float64 Float16 Float16 Float128 Float128 Float128 Float128 Float128) Float128)
(declare-fun f30 (Float32 Float128 Float16 Float16 Float64 Float16 Float128) Float32)
(declare-fun f31 (Float16) Float64)
(declare-fun f32 (Float64 Float32 Float32 Float64 Float32 Float128 Float64 Float64) Float32)
(declare-fun f33 (Float128 Float128 Float16 Float32 Float16) Float16)
(declare-fun f34 (Float128 Float32 Float128 Float32 Float64 Float64 Float64 Float16) Float128)
(declare-fun f35 (Float16 Float64 Float32 Float16 Float64 Float16) Float16)
(declare-fun f36 (Float64 Float32 Float64 Float128 Float64 Float64 Float64 Float128 Float16 Float128) Float32)
(declare-fun f37 (Float128 Float32 Float128 Float128) Float128)
(declare-fun f38 (Float64 Float64 Float16 Float32 Float128 Float32) Float16)
(declare-fun f39 (Float32) Float16)
(declare-fun f40 (Float32 Float128 Float32 Float32 Float64 Float128 Float16 Float64) Float128)
(declare-fun f41 (Float32 Float32 Float128 Float64 Float128 Float128 Float64 Float16 Float32 Float64) Float32)
(declare-fun f42 (Float64 Float64 Float16 Float32 Float32) Float64)
(declare-fun f43 (Float16 Float16 Float32 Float128 Float128 Float32 Float64) Float32)
(declare-fun f44 (Float16 Float64 Float16 Float128) Float32)
(declare-fun f45 (Float128 Float64 Float64 Float128) Float32)
(declare-fun f46 (Float128) Float16)
(declare-fun f47 (Float16 Float16 Float32 Float16 Float64 Float128 Float16) Float128)
(declare-fun f48 (Float128 Float64 Float64 Float32 Float128 Float32) Float16)
(declare-fun f49 (Float128 Float16 Float64 Float128 Float32 Float32 Float128 Float128) Float128)
(declare-fun p0 (Float16) Bool)
(declare-fun p1 (Float128 Float32 Float32 Float128 Float64 Float32 Float16) Bool)
(declare-fun p2 (Float32 Float16 Float64 Float32 Float32 Float128 Float64 Float16 Float16) Bool)
(declare-fun p3 (Float16 Float32 Float64 Float64 Float16) Bool)
(declare-fun p4 (Float64) Bool)
(declare-fun p5 (Float16 Float64 Float32 Float32 Float64) Bool)
(declare-fun p6 (Float16 Float128 Float128 Float128 Float32 Float64 Float128 Float64) Bool)
(declare-fun p7 (Float32) Bool)
(declare-fun p8 (Float32 Float32 Float64 Float64 Float64 Float32) Bool)
(declare-fun p9 (Float64 Float128 Float128 Float16 Float32 Float128 Float32 Float16 Float32 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float128)
(declare-const ?float62 Float128)
(declare-const ?float63 Float32)
(declare-const ?float64 Float128)
(declare-const ?float65 Float64)
(declare-const ?float66 Float64)
(declare-const ?float67 Float16)
(declare-const ?float68 Float64)
(declare-const ?float69 Float64)
(declare-const ?float70 Float64)
(declare-const ?float71 Float64)
(declare-const ?float72 Float32)
(declare-const ?float73 Float32)
(declare-const ?float74 Float16)
(declare-const ?float75 Float128)
(declare-const ?float76 Float128)
(declare-const ?float77 Float64)
(declare-const ?float78 Float128)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float128)
(assert (= ?float83 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b0 #b010011000110001 #b1111111011110110110000000000100000010111011111010010010100100111110101001101011000101101000011111001111110000111)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b0 #b01101001 #b11010100001011110010101)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b1 #b00011 #b0101000011)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b0 #b010101010111010 #b0100010011000011000001000110111001011111010001111111100110100100011001111111011101111111111111000000111000101110)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b0 #b11111000 #b11001111100001001111110)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.neg ?float89)))
(declare-const ?float101 Float16)
(assert (= ?float101 (f33 ((_ to_fp 15 113) RTN ?float84) ((_ to_fp 15 113) RTN ?float74) ((_ to_fp 5 11) RNE ?float84) ((_ to_fp 8 24) RNE ?float62) ((_ to_fp 5 11) RTZ ?float85))))
(declare-const ?float102 Float64)
(assert (= ?float102 (fp.sqrt RTZ ?float82)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.sqrt RTZ ?float79)))
(declare-const ?float104 Float32)
(assert (= ?float104 (f9 ((_ to_fp 11 53) RTP ?float93) ((_ to_fp 11 53) RTZ ?float79) ((_ to_fp 15 113) RTN ?float60) ((_ to_fp 8 24) RTN ?float65) ((_ to_fp 8 24) RTP ?float70) ((_ to_fp 8 24) RNE ?float93) ((_ to_fp 15 113) RTP ?float71) ?float73)))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.sqrt RTN ?float103)))
(declare-const ?float106 Float64)
(assert (= ?float106 (f42 ?float60 ?float70 ((_ to_fp 5 11) RTP ?float87) ?float97 ((_ to_fp 8 24) RTZ ?float91))))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.max ?float104 ((_ to_fp 8 24) RTZ ?float96))))
(declare-const ?float108 Float16)
(assert (= ?float108 (fp.abs ?float93)))
(declare-const ?float109 Float128)
(assert (= ?float109 (f12 ((_ to_fp 11 53) RNE ?float96) ((_ to_fp 15 113) RTN ?float107) ((_ to_fp 11 53) RTN ?float85) ((_ to_fp 15 113) RTZ ?float80))))
(declare-const ?float110 Float64)
(assert (= ?float110 (f20 ((_ to_fp 8 24) RTN ?float96))))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.sub RNE ?float65 ?float110)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.add RNE ?float69 ?float106)))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.mul RTN ?float89 ((_ to_fp 5 11) RNE ?float69))))
(declare-const ?float114 Float128)
(assert (= ?float114 (fp.roundToIntegral RNE ?float76)))
(declare-const ?float115 Float16)
(assert (= ?float115 (fp.sqrt RTZ ?float90)))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.div RTP ((_ to_fp 8 24) RNE ?float95) ?float104)))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.sub RNE ?float82 ?float65)))
(declare-const ?float118 Float32)
(assert (= ?float118 (f30 ((_ to_fp 8 24) RTN ?float95) ((_ to_fp 15 113) RNE ?float116) ((_ to_fp 5 11) RTP ?float83) ((_ to_fp 5 11) RTZ ?float88) ?float102 ((_ to_fp 5 11) RTZ ?float94) ((_ to_fp 15 113) RTZ ?float89))))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.max ?float87 ((_ to_fp 8 24) RTP ?float64))))
(declare-const ?float120 Float16)
(assert (= ?float120 (fp.min ((_ to_fp 5 11) RTZ ?float64) ?float100)))
(declare-const ?float121 Float32)
(assert (= ?float121 (f24 ((_ to_fp 8 24) RTN ?float61) ((_ to_fp 15 113) RNE ?float115) ((_ to_fp 11 53) RTZ ?float107) ?float105)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.neg ?float67)))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.add RTN ((_ to_fp 8 24) RNE ?float112) ?float104)))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.min ?float84 ?float77)))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.roundToIntegral RTP ?float110)))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.add RTZ ((_ to_fp 15 113) RTZ ?float102) ?float64)))
(declare-const ?float127 Float64)
(assert (= ?float127 (fp.roundToIntegral RTZ ?float102)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.add RTZ ?float87 ((_ to_fp 8 24) RTN ?float126))))
(declare-const ?float129 Float128)
(assert (= ?float129 (fp.sub RTZ ((_ to_fp 15 113) RTP ?float87) ?float78)))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.roundToIntegral RTP ?float86)))
(declare-const ?float131 Float32)
(assert (= ?float131 (f2 ?float104 ((_ to_fp 11 53) RTZ ?float107) ((_ to_fp 8 24) RTZ ?float115) ((_ to_fp 5 11) RNE ?float64) ((_ to_fp 15 113) RNE ?float107))))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.roundToIntegral RTP ?float68)))
(declare-const ?float133 Float128)
(assert (= ?float133 (fp.sub RTP ?float64 ?float126)))
(declare-const ?float134 Float32)
(assert (= ?float134 (fp.abs ?float116)))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.sqrt RTN ?float75)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.max ?float101 ((_ to_fp 5 11) RTZ ?float76))))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.sqrt RTP ?float89)))
(declare-const ?float138 Float64)
(assert (= ?float138 (fp.div RTN ?float125 ((_ to_fp 11 53) RNE ?float81))))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.mul RTZ ((_ to_fp 8 24) RNE ?float111) ?float72)))
(declare-const ?float140 Float64)
(assert (= ?float140 (f31 ((_ to_fp 5 11) RTZ ?float72))))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.neg ?float85)))
(declare-const ?float142 Float16)
(assert (= ?float142 (f38 ((_ to_fp 11 53) RTZ ?float126) ((_ to_fp 11 53) RTZ ?float90) ?float89 ((_ to_fp 8 24) RTP ?float140) ((_ to_fp 15 113) RTP ?float122) ((_ to_fp 8 24) RNE ?float76))))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.max ?float102 ((_ to_fp 11 53) RTN ?float85))))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.abs ?float84)))
(declare-const ?float145 Float128)
(assert (= ?float145 (fp.max ?float96 ((_ to_fp 15 113) RTN ?float74))))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.sqrt RTN ?float122)))
(declare-const ?float147 Float16)
(assert (= ?float147 (fp.max ?float74 ((_ to_fp 5 11) RTN ?float138))))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.abs ?float77)))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.neg ?float146)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p9 ((_ to_fp 11 53) RTN ?float146) ((_ to_fp 15 113) RTP ?float68) ?float92 ((_ to_fp 5 11) RNE ?float141) ?float107 ((_ to_fp 15 113) RTP ?float113) ((_ to_fp 8 24) RTP ?float124) ?float79 ((_ to_fp 8 24) RTZ ?float99) ((_ to_fp 5 11) RNE ?float119))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.eq ?float137 ((_ to_fp 5 11) RNE ?float148))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.gt ?float70 ((_ to_fp 11 53) RTP ?float118))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNormal ?float73)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.gt ?float116 ?float123)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isZero ?float101)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isZero ?float118)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isPositive ?float69)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p5 ?float89 ((_ to_fp 11 53) RTZ ?float129) ((_ to_fp 8 24) RNE ?float113) ((_ to_fp 8 24) RTP ?float129) ((_ to_fp 11 53) RNE ?float78))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isPositive ?float91)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.eq ((_ to_fp 11 53) RTZ ?float114) ?float138)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.gt ((_ to_fp 11 53) RNE ?float107) ?float71)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isZero ?float133)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isInfinite ?float128)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.geq ?float77 ?float68)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p9 ?float117 ((_ to_fp 15 113) RTZ ?float68) ?float126 ((_ to_fp 5 11) RNE ?float97) ((_ to_fp 8 24) RNE ?float88) ((_ to_fp 15 113) RTN ?float77) ((_ to_fp 8 24) RTZ ?float103) ((_ to_fp 5 11) RTP ?float75) ((_ to_fp 8 24) RNE ?float77) ?float105)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.lt ?float146 ?float115)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isInfinite ?float146)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.lt ((_ to_fp 5 11) RTP ?float63) ?float100)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.gt ((_ to_fp 15 113) RTN ?float77) ?float76)))
; FINAL ASSERT
(assert (or ?bool159))
(check-sat)


-- iteration 99 --
(declare-fun f0 (Float128) Float16)
(declare-fun f1 (Float16 Float64 Float16 Float64 Float128 Float16 Float16 Float32 Float128) Float128)
(declare-fun f2 (Float16 Float16) Float16)
(declare-fun f3 (Float64 Float64) Float64)
(declare-fun f4 (Float128 Float64 Float32) Float16)
(declare-fun f5 (Float128 Float32 Float16 Float16 Float32 Float16 Float32 Float128 Float64) Float128)
(declare-fun f6 (Float64 Float64) Float128)
(declare-fun f7 (Float64) Float32)
(declare-fun f8 (Float16 Float32 Float32 Float32 Float64) Float64)
(declare-fun f9 (Float64 Float128 Float64 Float32) Float64)
(declare-fun f10 (Float16) Float32)
(declare-fun f11 (Float128 Float128 Float128 Float16 Float64 Float32) Float64)
(declare-fun f12 (Float16 Float128) Float16)
(declare-fun f13 (Float128 Float64 Float64 Float16 Float128) Float128)
(declare-fun f14 (Float64 Float16 Float16 Float32 Float32 Float32 Float64 Float32 Float32 Float16) Float128)
(declare-fun f15 (Float32 Float16 Float16) Float16)
(declare-fun f16 (Float32) Float128)
(declare-fun f17 (Float64 Float16 Float32 Float16 Float128 Float16 Float16 Float32 Float128) Float32)
(declare-fun f18 (Float64 Float16 Float16 Float64 Float32 Float32 Float64 Float16 Float32 Float16) Float32)
(declare-fun f19 (Float128 Float64 Float16 Float32 Float32 Float16 Float64 Float32 Float64) Float64)
(declare-fun f20 (Float16 Float128 Float16) Float16)
(declare-fun f21 (Float128 Float128) Float16)
(declare-fun f22 (Float128 Float128 Float16 Float64) Float64)
(declare-fun f23 (Float64 Float64 Float128 Float16 Float128 Float32 Float64 Float32) Float128)
(declare-fun f24 (Float128 Float128 Float64) Float64)
(declare-fun f25 (Float16 Float32 Float64) Float64)
(declare-fun f26 (Float32 Float16 Float32 Float64 Float64) Float32)
(declare-fun f27 (Float128 Float32 Float32 Float128 Float16) Float128)
(declare-fun f28 (Float64 Float32 Float128 Float64 Float16 Float64 Float32 Float128) Float128)
(declare-fun f29 (Float128 Float32 Float128 Float64) Float128)
(declare-fun f30 (Float32 Float32 Float128) Float32)
(declare-fun f31 (Float16 Float64 Float16 Float128) Float16)
(declare-fun f32 (Float16 Float64 Float32 Float64) Float128)
(declare-fun f33 (Float128 Float16 Float128 Float16 Float16 Float64 Float64 Float32 Float128 Float32) Float128)
(declare-fun f34 (Float128 Float32 Float128 Float32) Float32)
(declare-fun f35 (Float128 Float64 Float64 Float128 Float64) Float32)
(declare-fun f36 (Float32 Float16 Float64 Float16 Float128 Float16 Float128 Float32) Float32)
(declare-fun f37 (Float16 Float32 Float32 Float128 Float64 Float16 Float128 Float128 Float16 Float16) Float32)
(declare-fun f38 (Float128 Float128 Float128) Float32)
(declare-fun f39 (Float128 Float16 Float128 Float32 Float32 Float16 Float16) Float16)
(declare-fun f40 (Float32 Float32 Float16 Float64 Float16) Float16)
(declare-fun f41 (Float64 Float128 Float128) Float32)
(declare-fun f42 (Float64 Float64 Float64 Float32 Float64 Float16 Float128) Float128)
(declare-fun f43 (Float16 Float16 Float128 Float32 Float16 Float16 Float64 Float32 Float128 Float32) Float64)
(declare-fun f44 (Float32 Float32 Float64 Float16 Float16 Float64 Float64 Float128 Float64 Float128) Float16)
(declare-fun f45 (Float64 Float32) Float16)
(declare-fun f46 (Float32 Float32 Float16 Float16 Float32 Float128 Float128 Float32 Float128 Float16) Float16)
(declare-fun f47 (Float64 Float16 Float64 Float64 Float16 Float16 Float32 Float16 Float32) Float128)
(declare-fun f48 (Float32 Float64 Float16 Float32 Float128 Float16 Float32 Float16 Float64 Float32) Float128)
(declare-fun f49 (Float64 Float32 Float64 Float128 Float128 Float16 Float32 Float128 Float64 Float128) Float16)
(declare-fun p0 (Float128 Float32 Float16 Float64) Bool)
(declare-fun p1 (Float32 Float16 Float32 Float64 Float32 Float32) Bool)
(declare-fun p2 (Float64 Float128 Float64 Float16 Float64 Float64 Float64 Float16) Bool)
(declare-fun p3 (Float16) Bool)
(declare-fun p4 (Float128 Float16 Float64) Bool)
(declare-fun p5 (Float16 Float128 Float128 Float64 Float128 Float32) Bool)
(declare-fun p6 (Float16 Float64 Float128) Bool)
(declare-fun p7 (Float128 Float64 Float16 Float128 Float16 Float128) Bool)
(declare-fun p8 (Float64 Float64 Float16 Float32 Float128) Bool)
(declare-fun p9 (Float32 Float128 Float64 Float16 Float128 Float128 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float64)
(declare-const ?float62 Float128)
(declare-const ?float63 Float64)
(declare-const ?float64 Float64)
(declare-const ?float65 Float64)
(declare-const ?float66 Float64)
(declare-const ?float67 Float16)
(declare-const ?float68 Float128)
(declare-const ?float69 Float128)
(declare-const ?float70 Float16)
(declare-const ?float71 Float16)
(declare-const ?float72 Float64)
(declare-const ?float73 Float64)
(declare-const ?float74 Float16)
(declare-const ?float75 Float32)
(declare-const ?float76 Float128)
(declare-const ?float77 Float32)
(declare-const ?float78 Float64)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b0 #b001010011000100 #b0101111101001010101110000000000000101101101110010101110111110110000010101101011010011110100100100010010000101100)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b0 #b11100110110 #b0001011111111001000001101010000100101101111001100001)))
(declare-const ?float83 Float128)
(assert (= ?float83 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b0 #b10011010101 #b1001100100101001111111001011011010001111011000000101)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b0 #b111111101011000 #b0011011100111111000111001101110001110100001010010011000110101010000010100000010111001001111101101101100010111101)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b0 #b111101110010101 #b1010110111111010000101001011101001111001111001010000001010011101111000010101100100011000100111110011111011100101)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (f38 ((_ to_fp 15 113) RTZ ?float88) ((_ to_fp 15 113) RNE ?float90) ?float62)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.max ?float71 ((_ to_fp 5 11) RTN ?float63))))
(declare-const ?float102 Float64)
(assert (= ?float102 (fp.max ?float82 ?float88)))
(declare-const ?float103 Float32)
(assert (= ?float103 (fp.div RTZ ?float100 ((_ to_fp 8 24) RTP ?float64))))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.sqrt RTP ?float83)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.roundToIntegral RTP ?float66)))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.sub RTN ?float75 ((_ to_fp 8 24) RTN ?float92))))
(declare-const ?float107 Float32)
(assert (= ?float107 (f26 ((_ to_fp 8 24) RTZ ?float60) ((_ to_fp 5 11) RTP ?float69) ((_ to_fp 8 24) RTP ?float84) ?float88 ((_ to_fp 11 53) RNE ?float92))))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.mul RTZ ((_ to_fp 8 24) RTP ?float76) ?float100)))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.neg ?float69)))
(declare-const ?float110 Float32)
(assert (= ?float110 (fp.max ((_ to_fp 8 24) RTN ?float66) ?float79)))
(declare-const ?float111 Float16)
(assert (= ?float111 (f39 ?float80 ((_ to_fp 5 11) RTP ?float82) ?float92 ?float107 ((_ to_fp 8 24) RNE ?float78) ((_ to_fp 5 11) RNE ?float110) ?float84)))
(declare-const ?float112 Float128)
(assert (= ?float112 (fp.sqrt RTP ?float76)))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.sqrt RTZ ?float93)))
(declare-const ?float114 Float128)
(assert (= ?float114 (fp.sqrt RNE ?float69)))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.sqrt RTN ?float62)))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.min ?float63 ((_ to_fp 11 53) RTN ?float109))))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.sub RTZ ((_ to_fp 15 113) RTP ?float71) ?float115)))
(declare-const ?float118 Float64)
(assert (= ?float118 (fp.min ((_ to_fp 11 53) RTN ?float68) ?float61)))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.abs ?float102)))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.neg ?float90)))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.abs ?float71)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.neg ?float94)))
(declare-const ?float123 Float64)
(assert (= ?float123 (f43 ((_ to_fp 5 11) RTP ?float108) ?float97 ((_ to_fp 15 113) RTP ?float79) ((_ to_fp 8 24) RTP ?float88) ((_ to_fp 5 11) RTZ ?float76) ?float74 ?float72 ((_ to_fp 8 24) RTN ?float81) ((_ to_fp 15 113) RTN ?float106) ((_ to_fp 8 24) RTN ?float116))))
(declare-const ?float124 Float128)
(assert (= ?float124 (f32 ((_ to_fp 5 11) RTZ ?float65) ?float73 ((_ to_fp 8 24) RTZ ?float105) ?float73)))
(declare-const ?float125 Float16)
(assert (= ?float125 (fp.div RTN ?float113 ?float93)))
(declare-const ?float126 Float128)
(assert (= ?float126 (f23 ((_ to_fp 11 53) RTZ ?float91) ((_ to_fp 11 53) RTP ?float92) ((_ to_fp 15 113) RTZ ?float101) ((_ to_fp 5 11) RTP ?float120) ((_ to_fp 15 113) RTN ?float71) ((_ to_fp 8 24) RTP ?float88) ((_ to_fp 11 53) RTZ ?float113) ((_ to_fp 8 24) RTN ?float83))))
(declare-const ?float127 Float64)
(assert (= ?float127 (fp.sqrt RTN ?float116)))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.min ?float118 ((_ to_fp 11 53) RTP ?float99))))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.sqrt RTZ ?float81)))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.mul RTN ((_ to_fp 15 113) RTZ ?float73) ?float112)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.sqrt RTP ?float72)))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.sub RTN ?float76 ((_ to_fp 15 113) RTN ?float107))))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.add RTP ?float108 ((_ to_fp 8 24) RTZ ?float87))))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.max ((_ to_fp 5 11) RTZ ?float126) ?float113)))
(declare-const ?float135 Float128)
(assert (= ?float135 (f14 ((_ to_fp 11 53) RTP ?float76) ((_ to_fp 5 11) RNE ?float112) ((_ to_fp 5 11) RTN ?float78) ((_ to_fp 8 24) RTN ?float64) ?float110 ((_ to_fp 8 24) RTZ ?float98) ((_ to_fp 11 53) RTZ ?float113) ((_ to_fp 8 24) RTP ?float96) ((_ to_fp 8 24) RTN ?float82) ((_ to_fp 5 11) RTN ?float64))))
(declare-const ?float136 Float32)
(assert (= ?float136 (f34 ((_ to_fp 15 113) RNE ?float116) ((_ to_fp 8 24) RNE ?float85) ((_ to_fp 15 113) RTZ ?float77) ((_ to_fp 8 24) RTZ ?float76))))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.neg ?float72)))
(declare-const ?float138 Float64)
(assert (= ?float138 (fp.div RTN ?float81 ((_ to_fp 11 53) RTP ?float117))))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.max ?float96 ?float102)))
(declare-const ?float140 Float64)
(assert (= ?float140 (fp.roundToIntegral RTZ ?float105)))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.roundToIntegral RTN ?float115)))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.neg ?float134)))
(declare-const ?float143 Float128)
(assert (= ?float143 (f48 ((_ to_fp 8 24) RTP ?float82) ?float127 ((_ to_fp 5 11) RTN ?float119) ((_ to_fp 8 24) RTZ ?float60) ((_ to_fp 15 113) RTZ ?float66) ((_ to_fp 5 11) RNE ?float92) ?float100 ((_ to_fp 5 11) RTZ ?float68) ((_ to_fp 11 53) RTN ?float111) ((_ to_fp 8 24) RTN ?float117))))
(declare-const ?float144 Float16)
(assert (= ?float144 (f46 ((_ to_fp 8 24) RTZ ?float121) ((_ to_fp 8 24) RTN ?float61) ((_ to_fp 5 11) RTP ?float69) ((_ to_fp 5 11) RNE ?float115) ((_ to_fp 8 24) RNE ?float70) ?float104 ((_ to_fp 15 113) RTP ?float91) ((_ to_fp 8 24) RTN ?float92) ((_ to_fp 15 113) RTP ?float84) ((_ to_fp 5 11) RTZ ?float60))))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.mul RNE ((_ to_fp 11 53) RTN ?float94) ?float63)))
(declare-const ?float146 Float64)
(assert (= ?float146 (f9 ((_ to_fp 11 53) RNE ?float143) ((_ to_fp 15 113) RNE ?float131) ((_ to_fp 11 53) RTZ ?float76) ((_ to_fp 8 24) RTP ?float85))))
(declare-const ?float147 Float16)
(assert (= ?float147 (fp.min ?float93 ?float93)))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.neg ?float144)))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.min ((_ to_fp 11 53) RTP ?float148) ?float72)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.geq ?float94 ((_ to_fp 5 11) RTP ?float64))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.gt ((_ to_fp 15 113) RNE ?float65) ?float62)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNormal ?float133)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (p5 ((_ to_fp 5 11) RTZ ?float117) ?float87 ((_ to_fp 15 113) RNE ?float102) ((_ to_fp 11 53) RTZ ?float93) ((_ to_fp 15 113) RTZ ?float119) ((_ to_fp 8 24) RNE ?float84))))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNegative ?float80)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p5 ?float93 ((_ to_fp 15 113) RTZ ?float120) ?float115 ((_ to_fp 11 53) RNE ?float83) ((_ to_fp 15 113) RTP ?float90) ((_ to_fp 8 24) RTZ ?float94))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isInfinite ?float77)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p9 ((_ to_fp 8 24) RNE ?float88) ((_ to_fp 15 113) RTP ?float98) ?float102 ((_ to_fp 5 11) RTZ ?float81) ((_ to_fp 15 113) RTZ ?float101) ((_ to_fp 15 113) RTZ ?float125) ((_ to_fp 5 11) RNE ?float112))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNormal ?float81)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.lt ((_ to_fp 15 113) RTZ ?float125) ?float114)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.eq ?float134 ?float147)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.leq ?float63 ((_ to_fp 11 53) RNE ?float108))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.gt ((_ to_fp 8 24) RNE ?float70) ?float106)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (p4 ((_ to_fp 15 113) RTN ?float147) ((_ to_fp 5 11) RTZ ?float75) ((_ to_fp 11 53) RNE ?float69))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isSubnormal ?float111)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isSubnormal ?float76)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.gt ((_ to_fp 11 53) RTZ ?float132) ?float123)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isSubnormal ?float96)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.leq ?float103 ((_ to_fp 8 24) RTZ ?float85))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.eq ((_ to_fp 11 53) RNE ?float112) ?float61)))
; FINAL ASSERT
(assert (or ?bool155 (or ?bool159)))
(check-sat)


-- iteration 100 --
(declare-fun f0 (Float16 Float64 Float128 Float16 Float128 Float32 Float16 Float32 Float32) Float16)
(declare-fun f1 (Float64 Float128 Float32 Float16 Float128 Float64) Float16)
(declare-fun f2 (Float128 Float128 Float16 Float32 Float128 Float64 Float32 Float16 Float128) Float128)
(declare-fun f3 (Float16 Float64 Float64 Float32 Float16 Float32) Float128)
(declare-fun f4 (Float32) Float64)
(declare-fun f5 (Float64 Float128 Float128 Float32 Float128 Float64) Float16)
(declare-fun f6 (Float32 Float32 Float64 Float128 Float16) Float128)
(declare-fun f7 (Float64 Float32 Float32 Float16) Float128)
(declare-fun f8 (Float16 Float32 Float32 Float64 Float32 Float32 Float32 Float128 Float128) Float128)
(declare-fun f9 (Float128) Float64)
(declare-fun f10 (Float16 Float32 Float16 Float64 Float32 Float32) Float32)
(declare-fun f11 (Float64 Float16) Float128)
(declare-fun f12 (Float64) Float64)
(declare-fun f13 (Float128 Float64 Float128) Float128)
(declare-fun f14 (Float16 Float32 Float32 Float16 Float128 Float16 Float64 Float32 Float64) Float128)
(declare-fun f15 (Float128 Float128 Float128 Float32 Float64 Float32 Float128 Float64 Float128) Float128)
(declare-fun f16 (Float64 Float32 Float128 Float32 Float16) Float16)
(declare-fun f17 (Float16 Float16 Float32 Float16 Float128 Float64 Float128 Float16 Float32 Float32) Float128)
(declare-fun f18 (Float64 Float16) Float128)
(declare-fun f19 (Float128 Float128 Float32 Float16 Float32 Float128 Float128 Float16 Float64) Float32)
(declare-fun f20 (Float128 Float32 Float128 Float64 Float128) Float128)
(declare-fun f21 (Float128) Float128)
(declare-fun f22 (Float128 Float128 Float16 Float128 Float32 Float128 Float64 Float32 Float128 Float128) Float16)
(declare-fun f23 (Float32 Float16 Float32) Float64)
(declare-fun f24 (Float16 Float16) Float32)
(declare-fun f25 (Float64 Float128 Float32 Float128 Float64 Float32 Float64 Float64) Float16)
(declare-fun f26 (Float32) Float64)
(declare-fun f27 (Float128 Float128) Float16)
(declare-fun f28 (Float64 Float128) Float32)
(declare-fun f29 (Float32 Float16 Float128 Float32 Float32 Float64 Float16 Float64 Float128 Float16) Float32)
(declare-fun f30 (Float32 Float128 Float16 Float16 Float16 Float32 Float32 Float32) Float32)
(declare-fun f31 (Float16 Float16 Float64 Float16 Float16 Float128 Float64 Float32 Float16) Float32)
(declare-fun f32 (Float64 Float64 Float16 Float16) Float16)
(declare-fun f33 (Float128 Float64 Float64 Float32 Float16 Float128 Float128 Float32 Float16 Float128) Float128)
(declare-fun f34 (Float64 Float16) Float16)
(declare-fun f35 (Float16 Float16) Float32)
(declare-fun f36 (Float32 Float32 Float16) Float128)
(declare-fun f37 (Float32 Float16 Float32 Float16 Float64 Float128 Float16) Float32)
(declare-fun f38 (Float16 Float64 Float128 Float32 Float32 Float32) Float32)
(declare-fun f39 (Float64 Float64 Float128 Float128 Float128 Float16 Float128 Float64 Float16 Float128) Float32)
(declare-fun f40 (Float64 Float16 Float128 Float64 Float128 Float64 Float128 Float16) Float128)
(declare-fun f41 (Float64 Float32 Float32 Float64) Float32)
(declare-fun f42 (Float32 Float64 Float64 Float64 Float128 Float64) Float64)
(declare-fun f43 (Float16 Float64 Float32) Float32)
(declare-fun f44 (Float64 Float32 Float128) Float64)
(declare-fun f45 (Float64 Float32 Float128 Float16 Float32) Float16)
(declare-fun f46 (Float32 Float32 Float64 Float64 Float64 Float32 Float16 Float128 Float64 Float128) Float64)
(declare-fun f47 (Float16 Float128 Float16 Float128 Float128 Float16 Float64 Float32 Float128 Float32) Float32)
(declare-fun f48 (Float16 Float128) Float32)
(declare-fun f49 (Float32 Float16 Float64 Float16) Float64)
(declare-fun p0 (Float16 Float16 Float16 Float128 Float128 Float128 Float16 Float32 Float16) Bool)
(declare-fun p1 (Float32 Float128 Float128) Bool)
(declare-fun p2 (Float64 Float64 Float32 Float32 Float64 Float128 Float16 Float16 Float64) Bool)
(declare-fun p3 (Float128 Float64 Float32 Float16 Float128 Float64 Float64 Float16) Bool)
(declare-fun p4 (Float16 Float16 Float32) Bool)
(declare-fun p5 (Float16 Float16) Bool)
(declare-fun p6 (Float32 Float64 Float16) Bool)
(declare-fun p7 (Float64 Float16 Float128) Bool)
(declare-fun p8 (Float16 Float128 Float64 Float16 Float16) Bool)
(declare-fun p9 (Float64 Float128 Float128 Float128 Float64 Float64 Float16 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float16)
(declare-const ?float62 Float32)
(declare-const ?float63 Float32)
(declare-const ?float64 Float128)
(declare-const ?float65 Float16)
(declare-const ?float66 Float32)
(declare-const ?float67 Float64)
(declare-const ?float68 Float16)
(declare-const ?float69 Float64)
(declare-const ?float70 Float64)
(declare-const ?float71 Float32)
(declare-const ?float72 Float16)
(declare-const ?float73 Float32)
(declare-const ?float74 Float32)
(declare-const ?float75 Float128)
(declare-const ?float76 Float32)
(declare-const ?float77 Float32)
(declare-const ?float78 Float128)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b1 #b10100100000 #b1000001000110001010001000111010101010010100001001101)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b1 #b10101011011 #b1110110011011110110101000010000110010010010010110011)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b0 #b11101111100 #b0100011101011101100011110110011011000101111011011110)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b0 #b00011011 #b11110011101000111011001)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b1 #b00000000 #b00000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.neg ?float76)))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.div RNE ((_ to_fp 15 113) RTP ?float63) ?float88)))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.add RNE ?float98 ((_ to_fp 8 24) RTP ?float85))))
(declare-const ?float103 Float16)
(assert (= ?float103 (f22 ((_ to_fp 15 113) RTN ?float61) ((_ to_fp 15 113) RTN ?float62) ((_ to_fp 5 11) RTZ ?float78) ?float78 ((_ to_fp 8 24) RNE ?float94) ((_ to_fp 15 113) RNE ?float96) ((_ to_fp 11 53) RTP ?float96) ((_ to_fp 8 24) RTZ ?float75) ((_ to_fp 15 113) RNE ?float69) ((_ to_fp 15 113) RNE ?float69))))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.sub RTZ ?float73 ?float91)))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.roundToIntegral RTP ?float91)))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.max ((_ to_fp 11 53) RTZ ?float92) ?float87)))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.sub RTZ ((_ to_fp 8 24) RNE ?float103) ?float71)))
(declare-const ?float108 Float16)
(assert (= ?float108 (fp.mul RTP ?float60 ?float61)))
(declare-const ?float109 Float32)
(assert (= ?float109 (fp.add RNE ?float100 ((_ to_fp 8 24) RNE ?float108))))
(declare-const ?float110 Float16)
(assert (= ?float110 (f5 ((_ to_fp 11 53) RTN ?float79) ((_ to_fp 15 113) RNE ?float81) ((_ to_fp 15 113) RTP ?float76) ((_ to_fp 8 24) RTP ?float81) ((_ to_fp 15 113) RTZ ?float67) ((_ to_fp 11 53) RTN ?float66))))
(declare-const ?float111 Float128)
(assert (= ?float111 (f15 ((_ to_fp 15 113) RTN ?float79) ((_ to_fp 15 113) RTZ ?float70) ((_ to_fp 15 113) RTZ ?float69) ?float86 ((_ to_fp 11 53) RTZ ?float88) ((_ to_fp 8 24) RTZ ?float60) ((_ to_fp 15 113) RTN ?float70) ((_ to_fp 11 53) RTZ ?float94) ((_ to_fp 15 113) RTP ?float72))))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.abs ?float92)))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.div RTP ?float73 ((_ to_fp 8 24) RTZ ?float69))))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.sub RTP ?float96 ((_ to_fp 8 24) RNE ?float83))))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.min ((_ to_fp 8 24) RTN ?float88) ?float62)))
(declare-const ?float116 Float32)
(assert (= ?float116 (f28 ?float83 ((_ to_fp 15 113) RTN ?float99))))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.roundToIntegral RTZ ?float72)))
(declare-const ?float118 Float64)
(assert (= ?float118 (fp.mul RNE ?float83 ((_ to_fp 11 53) RTN ?float75))))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.add RTN ((_ to_fp 11 53) RNE ?float72) ?float69)))
(declare-const ?float120 Float16)
(assert (= ?float120 (fp.add RTN ?float82 ?float60)))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.add RTZ ?float117 ?float65)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.roundToIntegral RTN ?float82)))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.abs ?float98)))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.neg ?float106)))
(declare-const ?float125 Float128)
(assert (= ?float125 (f11 ((_ to_fp 11 53) RTZ ?float60) ((_ to_fp 5 11) RTZ ?float86))))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.add RTZ ((_ to_fp 8 24) RTZ ?float90) ?float66)))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.roundToIntegral RTP ?float126)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.mul RTZ ?float91 ((_ to_fp 8 24) RTN ?float103))))
(declare-const ?float129 Float32)
(assert (= ?float129 (f39 ((_ to_fp 11 53) RTP ?float74) ((_ to_fp 11 53) RTN ?float66) ((_ to_fp 15 113) RNE ?float104) ((_ to_fp 15 113) RTP ?float98) ((_ to_fp 15 113) RTZ ?float84) ((_ to_fp 5 11) RTP ?float105) ((_ to_fp 15 113) RTP ?float128) ((_ to_fp 11 53) RTZ ?float86) ?float108 ((_ to_fp 15 113) RTZ ?float122))))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.mul RTZ ?float65 ?float97)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.mul RNE ?float106 ?float90)))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.sqrt RNE ?float95)))
(declare-const ?float133 Float128)
(assert (= ?float133 (fp.roundToIntegral RTP ?float75)))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.min ((_ to_fp 5 11) RTN ?float105) ?float97)))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.neg ?float128)))
(declare-const ?float136 Float32)
(assert (= ?float136 (fp.neg ?float127)))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.add RTN ?float120 ?float134)))
(declare-const ?float138 Float64)
(assert (= ?float138 (fp.abs ?float67)))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.max ?float106 ?float124)))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.abs ?float93)))
(declare-const ?float141 Float32)
(assert (= ?float141 (fp.neg ?float105)))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.abs ?float121)))
(declare-const ?float143 Float128)
(assert (= ?float143 (fp.sub RTN ?float80 ((_ to_fp 15 113) RTP ?float123))))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.abs ?float126)))
(declare-const ?float145 Float128)
(assert (= ?float145 (f14 ((_ to_fp 5 11) RTP ?float89) ((_ to_fp 8 24) RTP ?float81) ((_ to_fp 8 24) RTN ?float81) ((_ to_fp 5 11) RTP ?float106) ((_ to_fp 15 113) RTN ?float114) ((_ to_fp 5 11) RTZ ?float131) ((_ to_fp 11 53) RTN ?float120) ((_ to_fp 8 24) RNE ?float130) ((_ to_fp 11 53) RTP ?float82))))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.sub RTN ((_ to_fp 8 24) RTP ?float124) ?float100)))
(declare-const ?float147 Float32)
(assert (= ?float147 (f24 ((_ to_fp 5 11) RTZ ?float93) ((_ to_fp 5 11) RNE ?float146))))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.sub RNE ((_ to_fp 11 53) RTP ?float114) ?float90)))
(declare-const ?float149 Float32)
(assert (= ?float149 (fp.sqrt RTN ?float93)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isNegative ?float98)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.leq ?float127 ?float86)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (p2 ((_ to_fp 11 53) RTZ ?float85) ((_ to_fp 11 53) RNE ?float80) ?float93 ((_ to_fp 8 24) RNE ?float111) ?float138 ((_ to_fp 15 113) RTP ?float110) ?float108 ?float92 ((_ to_fp 11 53) RTZ ?float80))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (p8 ?float120 ((_ to_fp 15 113) RTN ?float79) ?float119 ((_ to_fp 5 11) RTZ ?float67) ((_ to_fp 5 11) RNE ?float63))))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.leq ((_ to_fp 11 53) RNE ?float99) ?float84)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isPositive ?float131)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.geq ?float127 ?float77)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNaN ?float136)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.leq ((_ to_fp 8 24) RNE ?float133) ?float63)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isInfinite ?float138)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.leq ?float114 ((_ to_fp 8 24) RNE ?float106))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isZero ?float77)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isSubnormal ?float68)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNormal ?float143)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (p3 ?float101 ((_ to_fp 11 53) RNE ?float116) ((_ to_fp 8 24) RTZ ?float133) ((_ to_fp 5 11) RTP ?float106) ((_ to_fp 15 113) RTN ?float113) ((_ to_fp 11 53) RTP ?float127) ((_ to_fp 11 53) RTN ?float120) ((_ to_fp 5 11) RTZ ?float114))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isSubnormal ?float68)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.geq ?float74 ((_ to_fp 8 24) RTN ?float60))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isSubnormal ?float127)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isInfinite ?float83)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNegative ?float111)))
; FINAL ASSERT
(assert (and (and ?bool159) ?bool167))
(check-sat)


-- iteration 101 --
(declare-fun f0 (Float128 Float64 Float16 Float64 Float32 Float128 Float64) Float128)
(declare-fun f1 (Float64 Float16 Float16 Float16 Float128 Float128) Float64)
(declare-fun f2 (Float16 Float128 Float16 Float64 Float64 Float64 Float16 Float128) Float64)
(declare-fun f3 (Float128 Float64 Float64 Float128 Float32 Float32) Float32)
(declare-fun f4 (Float16) Float64)
(declare-fun f5 (Float16 Float16 Float128 Float32 Float32) Float64)
(declare-fun f6 (Float128 Float64 Float32 Float32 Float128 Float64 Float16 Float16 Float32 Float16) Float32)
(declare-fun f7 (Float32 Float128 Float16 Float64 Float64 Float16 Float128 Float64 Float64 Float16) Float64)
(declare-fun f8 (Float32 Float128 Float128 Float128) Float64)
(declare-fun f9 (Float64 Float64 Float64 Float128 Float64 Float128 Float16) Float16)
(declare-fun f10 (Float32 Float16 Float64 Float16 Float64 Float16 Float32 Float32 Float128 Float16) Float128)
(declare-fun f11 (Float128 Float64 Float64 Float32 Float64 Float64) Float128)
(declare-fun f12 (Float64 Float64 Float128) Float32)
(declare-fun f13 (Float16) Float16)
(declare-fun f14 (Float16 Float32 Float64 Float32 Float32 Float64 Float16 Float16 Float128 Float128) Float16)
(declare-fun f15 (Float16 Float128) Float128)
(declare-fun f16 (Float64 Float64 Float16) Float16)
(declare-fun f17 (Float16 Float64) Float16)
(declare-fun f18 (Float32 Float32 Float32 Float32 Float32 Float16 Float64) Float16)
(declare-fun f19 (Float32 Float64 Float128 Float128) Float16)
(declare-fun f20 (Float128 Float64 Float128 Float128 Float64 Float32) Float32)
(declare-fun f21 (Float32 Float16 Float64 Float64 Float64 Float64 Float32 Float16) Float128)
(declare-fun f22 (Float128 Float128 Float16 Float64 Float64 Float128 Float32 Float128 Float16 Float64) Float16)
(declare-fun f23 (Float64 Float32 Float32 Float128 Float128 Float32 Float64 Float32) Float32)
(declare-fun f24 (Float64 Float128 Float128 Float64 Float16 Float32 Float16 Float16 Float64 Float32) Float64)
(declare-fun f25 (Float128 Float64 Float64 Float64 Float16) Float16)
(declare-fun f26 (Float128 Float64 Float128 Float128 Float32 Float32 Float32 Float16 Float64 Float16) Float64)
(declare-fun f27 (Float16 Float64 Float128 Float128) Float16)
(declare-fun f28 (Float64 Float64) Float16)
(declare-fun f29 (Float32 Float128 Float32) Float16)
(declare-fun f30 (Float16) Float32)
(declare-fun f31 (Float32 Float32 Float16 Float16 Float64 Float32 Float64 Float64 Float64 Float32) Float32)
(declare-fun f32 (Float32 Float32 Float16 Float32 Float128 Float16 Float128 Float64 Float32 Float32) Float16)
(declare-fun f33 (Float16 Float128) Float32)
(declare-fun f34 (Float128 Float128 Float128 Float32 Float32 Float64 Float16 Float128 Float16 Float64) Float16)
(declare-fun f35 (Float64 Float128 Float32 Float32 Float128 Float64) Float64)
(declare-fun f36 (Float16 Float128) Float64)
(declare-fun f37 (Float32 Float16 Float64 Float16) Float128)
(declare-fun f38 (Float64 Float64 Float32 Float64 Float128) Float128)
(declare-fun f39 (Float16 Float128 Float64) Float64)
(declare-fun f40 (Float32 Float64 Float128 Float32) Float64)
(declare-fun f41 (Float16 Float64 Float128 Float128 Float64 Float64 Float64 Float32 Float32 Float64) Float32)
(declare-fun f42 (Float128 Float32 Float128 Float32 Float16 Float32 Float128 Float32 Float16) Float16)
(declare-fun f43 (Float128 Float64 Float16 Float128 Float32 Float128 Float32) Float64)
(declare-fun f44 (Float16 Float32 Float64 Float32 Float16 Float128 Float32 Float32 Float16) Float128)
(declare-fun f45 (Float32 Float128 Float16 Float16 Float128 Float32 Float16) Float32)
(declare-fun f46 (Float32 Float32 Float64 Float16 Float16) Float64)
(declare-fun f47 (Float64) Float16)
(declare-fun f48 (Float128 Float64) Float128)
(declare-fun f49 (Float32 Float64 Float16 Float16 Float16 Float64) Float128)
(declare-fun p0 (Float16 Float16 Float128 Float32 Float64) Bool)
(declare-fun p1 (Float16 Float64 Float32 Float64 Float32 Float16) Bool)
(declare-fun p2 (Float128) Bool)
(declare-fun p3 (Float128) Bool)
(declare-fun p4 (Float64) Bool)
(declare-fun p5 (Float128 Float16) Bool)
(declare-fun p6 (Float32 Float16 Float16 Float64) Bool)
(declare-fun p7 (Float32) Bool)
(declare-fun p8 (Float16 Float128 Float64 Float64 Float64 Float64 Float16 Float64 Float16) Bool)
(declare-fun p9 (Float16 Float16 Float16 Float64 Float64 Float32 Float128 Float16 Float16 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float128)
(declare-const ?float62 Float128)
(declare-const ?float63 Float128)
(declare-const ?float64 Float64)
(declare-const ?float65 Float128)
(declare-const ?float66 Float128)
(declare-const ?float67 Float16)
(declare-const ?float68 Float128)
(declare-const ?float69 Float64)
(declare-const ?float70 Float128)
(declare-const ?float71 Float128)
(declare-const ?float72 Float16)
(declare-const ?float73 Float16)
(declare-const ?float74 Float16)
(declare-const ?float75 Float16)
(declare-const ?float76 Float32)
(declare-const ?float77 Float16)
(declare-const ?float78 Float64)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b0 #b00101100101 #b1011000111010001101101100100000010001101110100000010)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b1 #b111011000100001 #b0111111001001000111011100101011111011001100110100100111000101011001010111010000010000010001011100010011001011110)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b0 #b11101100 #b01001110101101011001001)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b0 #b101011111011011 #b1100111001001101110011100101011111000001001110100001010101010100111100110100110100111111000110111000101001111001)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (f22 ((_ to_fp 15 113) RNE ?float93) ?float94 ?float74 ((_ to_fp 11 53) RTN ?float79) ((_ to_fp 11 53) RTZ ?float82) ((_ to_fp 15 113) RNE ?float89) ((_ to_fp 8 24) RNE ?float78) ((_ to_fp 15 113) RTN ?float82) ((_ to_fp 5 11) RTN ?float87) ((_ to_fp 11 53) RTN ?float89))))
(declare-const ?float101 Float64)
(assert (= ?float101 (f24 ((_ to_fp 11 53) RTZ ?float73) ((_ to_fp 15 113) RTZ ?float74) ((_ to_fp 15 113) RTZ ?float83) ?float99 ((_ to_fp 5 11) RTZ ?float94) ((_ to_fp 8 24) RNE ?float96) ((_ to_fp 5 11) RTP ?float63) ((_ to_fp 5 11) RTN ?float92) ((_ to_fp 11 53) RTN ?float100) ((_ to_fp 8 24) RNE ?float79))))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.add RTZ ?float86 ((_ to_fp 15 113) RTP ?float93))))
(declare-const ?float103 Float32)
(assert (= ?float103 (fp.max ((_ to_fp 8 24) RTZ ?float63) ?float81)))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.neg ?float94)))
(declare-const ?float105 Float128)
(assert (= ?float105 (fp.roundToIntegral RTN ?float104)))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.max ((_ to_fp 8 24) RNE ?float91) ?float82)))
(declare-const ?float107 Float32)
(assert (= ?float107 (f31 ((_ to_fp 8 24) RTP ?float86) ((_ to_fp 8 24) RNE ?float105) ((_ to_fp 5 11) RTZ ?float104) ((_ to_fp 5 11) RTN ?float104) ((_ to_fp 11 53) RNE ?float96) ((_ to_fp 8 24) RTZ ?float69) ((_ to_fp 11 53) RTP ?float75) ?float99 ((_ to_fp 11 53) RTP ?float73) ((_ to_fp 8 24) RTZ ?float70))))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.neg ?float102)))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.div RNE ((_ to_fp 11 53) RTP ?float98) ?float84)))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.neg ?float99)))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.add RTN ?float95 ((_ to_fp 11 53) RTN ?float66))))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.sub RNE ((_ to_fp 5 11) RTP ?float81) ?float77)))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.sqrt RTZ ?float106)))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.max ?float88 ((_ to_fp 8 24) RTN ?float92))))
(declare-const ?float115 Float16)
(assert (= ?float115 (fp.add RTN ?float75 ((_ to_fp 5 11) RNE ?float110))))
(declare-const ?float116 Float128)
(assert (= ?float116 (fp.mul RTP ((_ to_fp 15 113) RTP ?float99) ?float60)))
(declare-const ?float117 Float32)
(assert (= ?float117 (fp.add RNE ?float106 ((_ to_fp 8 24) RNE ?float72))))
(declare-const ?float118 Float128)
(assert (= ?float118 (f21 ((_ to_fp 8 24) RTN ?float70) ((_ to_fp 5 11) RTP ?float86) ((_ to_fp 11 53) RNE ?float81) ((_ to_fp 11 53) RTZ ?float91) ?float109 ?float69 ((_ to_fp 8 24) RTP ?float63) ?float96)))
(declare-const ?float119 Float16)
(assert (= ?float119 (f28 ?float110 ((_ to_fp 11 53) RTN ?float118))))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.sub RTP ?float89 ((_ to_fp 8 24) RNE ?float94))))
(declare-const ?float121 Float32)
(assert (= ?float121 (fp.add RTZ ?float120 ?float120)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.abs ?float93)))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.max ((_ to_fp 11 53) RNE ?float113) ?float110)))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.sqrt RTP ?float78)))
(declare-const ?float125 Float16)
(assert (= ?float125 (fp.max ?float72 ((_ to_fp 5 11) RTZ ?float71))))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.add RNE ?float65 ((_ to_fp 15 113) RTP ?float78))))
(declare-const ?float127 Float64)
(assert (= ?float127 (fp.add RTN ?float85 ?float123)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.abs ?float81)))
(declare-const ?float129 Float128)
(assert (= ?float129 (fp.sub RNE ?float91 ((_ to_fp 15 113) RNE ?float120))))
(declare-const ?float130 Float64)
(assert (= ?float130 (fp.abs ?float123)))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.add RTN ((_ to_fp 5 11) RTN ?float89) ?float79)))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.mul RTN ?float69 ((_ to_fp 11 53) RNE ?float77))))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.max ?float79 ((_ to_fp 5 11) RNE ?float128))))
(declare-const ?float134 Float64)
(assert (= ?float134 (fp.min ((_ to_fp 11 53) RTZ ?float90) ?float130)))
(declare-const ?float135 Float64)
(assert (= ?float135 (fp.min ((_ to_fp 11 53) RTN ?float104) ?float99)))
(declare-const ?float136 Float32)
(assert (= ?float136 (f12 ((_ to_fp 11 53) RTN ?float67) ((_ to_fp 11 53) RTN ?float96) ?float126)))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.div RTP ((_ to_fp 5 11) RTN ?float94) ?float77)))
(declare-const ?float138 Float64)
(assert (= ?float138 (f1 ((_ to_fp 11 53) RTZ ?float90) ((_ to_fp 5 11) RNE ?float123) ((_ to_fp 5 11) RTP ?float89) ((_ to_fp 5 11) RNE ?float116) ?float94 ((_ to_fp 15 113) RTZ ?float81))))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.mul RNE ((_ to_fp 5 11) RTZ ?float68) ?float79)))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.div RNE ?float107 ((_ to_fp 8 24) RTN ?float85))))
(declare-const ?float141 Float32)
(assert (= ?float141 (fp.add RTZ ?float82 ((_ to_fp 8 24) RTP ?float62))))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.div RTN ?float139 ?float67)))
(declare-const ?float143 Float128)
(assert (= ?float143 (f48 ((_ to_fp 15 113) RTP ?float109) ((_ to_fp 11 53) RTN ?float107))))
(declare-const ?float144 Float128)
(assert (= ?float144 (fp.neg ?float118)))
(declare-const ?float145 Float16)
(assert (= ?float145 (f14 ((_ to_fp 5 11) RTN ?float103) ((_ to_fp 8 24) RTP ?float85) ((_ to_fp 11 53) RTZ ?float96) ((_ to_fp 8 24) RTN ?float125) ?float141 ((_ to_fp 11 53) RTZ ?float63) ((_ to_fp 5 11) RTN ?float102) ((_ to_fp 5 11) RTN ?float117) ?float104 ?float86)))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.mul RNE ((_ to_fp 15 113) RTP ?float145) ?float108)))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.min ?float80 ((_ to_fp 8 24) RTN ?float61))))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.div RNE ((_ to_fp 11 53) RTZ ?float70) ?float135)))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.mul RTZ ((_ to_fp 15 113) RTN ?float84) ?float62)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.eq ?float80 ((_ to_fp 8 24) RTZ ?float86))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isPositive ?float120)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isSubnormal ?float142)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNormal ?float91)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.eq ?float86 ?float102)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.lt ?float115 ((_ to_fp 5 11) RNE ?float80))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNegative ?float91)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p4 ((_ to_fp 11 53) RTP ?float114))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isPositive ?float122)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p3 ((_ to_fp 15 113) RTZ ?float130))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.leq ?float90 ?float74)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.gt ((_ to_fp 11 53) RNE ?float75) ?float138)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isInfinite ?float126)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.lt ((_ to_fp 11 53) RTZ ?float81) ?float111)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isSubnormal ?float100)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.leq ?float82 ((_ to_fp 8 24) RTP ?float102))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNormal ?float114)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isPositive ?float61)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.eq ?float81 ((_ to_fp 8 24) RTZ ?float143))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNegative ?float74)))
; FINAL ASSERT
(assert (and (or (and (or (and (and (and ?bool151) ?bool169 ?bool151)) ?bool150) (or (or (and (or ?bool169 ?bool158 ?bool161) (or ?bool164 ?bool151) (and ?bool153 ?bool164 ?bool169)) (or ?bool163)))) ?bool160)))
(check-sat)


-- iteration 102 --
(declare-fun f0 (Float128 Float32 Float16 Float128 Float128 Float64 Float16 Float32 Float128 Float32) Float32)
(declare-fun f1 (Float32 Float16 Float64 Float32 Float32 Float16 Float16) Float32)
(declare-fun f2 (Float64 Float32 Float32 Float16 Float32) Float16)
(declare-fun f3 (Float64 Float64 Float64 Float128 Float128) Float128)
(declare-fun f4 (Float16 Float32 Float128 Float32 Float64 Float32 Float128 Float128) Float128)
(declare-fun f5 (Float16 Float64 Float32 Float64 Float16 Float16 Float128) Float64)
(declare-fun f6 (Float128) Float64)
(declare-fun f7 (Float64 Float64 Float32 Float128) Float16)
(declare-fun f8 (Float16 Float32 Float128) Float16)
(declare-fun f9 (Float16 Float16 Float128) Float32)
(declare-fun f10 (Float32 Float16 Float32) Float16)
(declare-fun f11 (Float64 Float16 Float32 Float16 Float32 Float32 Float64) Float64)
(declare-fun f12 (Float128 Float64) Float32)
(declare-fun f13 (Float32 Float64 Float16 Float16 Float32 Float64 Float16 Float32 Float16 Float16) Float128)
(declare-fun f14 (Float128 Float16 Float64 Float128 Float32 Float64 Float64 Float16 Float64 Float128) Float64)
(declare-fun f15 (Float128 Float128 Float32 Float128 Float16) Float32)
(declare-fun f16 (Float128 Float64 Float16 Float16) Float128)
(declare-fun f17 (Float16 Float128 Float16 Float64 Float16 Float32) Float64)
(declare-fun f18 (Float64 Float32 Float32 Float64 Float32 Float64 Float16 Float64) Float64)
(declare-fun f19 (Float64 Float16) Float128)
(declare-fun f20 (Float128 Float16 Float32 Float16 Float128 Float16) Float64)
(declare-fun f21 (Float16 Float32 Float64 Float128) Float128)
(declare-fun f22 (Float32 Float64) Float32)
(declare-fun f23 (Float64 Float16 Float64 Float16 Float16 Float128 Float128) Float16)
(declare-fun f24 (Float64 Float16 Float16 Float64 Float64 Float16 Float128 Float64 Float128) Float16)
(declare-fun f25 (Float128 Float16 Float64 Float32 Float64 Float32 Float128 Float64 Float32) Float16)
(declare-fun f26 (Float32 Float64 Float32 Float128) Float64)
(declare-fun f27 (Float64 Float64 Float16 Float16) Float128)
(declare-fun f28 (Float32 Float32 Float16 Float16 Float32 Float16 Float128) Float16)
(declare-fun f29 (Float32 Float128 Float64 Float64) Float64)
(declare-fun f30 (Float128 Float32) Float16)
(declare-fun f31 (Float128) Float16)
(declare-fun f32 (Float128 Float16 Float128 Float64 Float32 Float128 Float64 Float128) Float16)
(declare-fun f33 (Float64 Float32 Float64 Float32 Float16 Float128) Float128)
(declare-fun f34 (Float128 Float64 Float64 Float16 Float32 Float64 Float128 Float128 Float64 Float64) Float128)
(declare-fun f35 (Float16 Float16 Float128 Float128 Float32) Float128)
(declare-fun f36 (Float32 Float128 Float64 Float16 Float32 Float32 Float32 Float16) Float16)
(declare-fun f37 (Float64 Float32) Float128)
(declare-fun f38 (Float32 Float16 Float128 Float16 Float128 Float32) Float16)
(declare-fun f39 (Float64) Float32)
(declare-fun f40 (Float128 Float16 Float32 Float32 Float128 Float32 Float32) Float16)
(declare-fun f41 (Float16 Float16 Float64 Float128 Float128 Float16) Float64)
(declare-fun f42 (Float128 Float128 Float128 Float128) Float16)
(declare-fun f43 (Float32 Float128 Float16 Float16 Float32 Float32) Float64)
(declare-fun f44 (Float32 Float64 Float16 Float32 Float128) Float32)
(declare-fun f45 (Float64 Float128 Float16 Float32 Float16 Float128 Float128) Float128)
(declare-fun f46 (Float128 Float16 Float64) Float32)
(declare-fun f47 (Float32 Float128 Float16 Float32 Float64) Float32)
(declare-fun f48 (Float32 Float128 Float128 Float128 Float64 Float16) Float128)
(declare-fun f49 (Float64 Float128 Float128 Float32 Float16 Float16 Float128 Float128 Float16) Float32)
(declare-fun p0 (Float16 Float16 Float32 Float32) Bool)
(declare-fun p1 (Float16 Float32) Bool)
(declare-fun p2 (Float128 Float16 Float16 Float16 Float16 Float128) Bool)
(declare-fun p3 (Float128 Float128 Float64 Float32 Float16 Float64 Float32 Float16 Float64) Bool)
(declare-fun p4 (Float16 Float64 Float128) Bool)
(declare-fun p5 (Float128 Float64 Float128 Float16 Float32 Float64 Float32) Bool)
(declare-fun p6 (Float64 Float64) Bool)
(declare-fun p7 (Float128 Float128) Bool)
(declare-fun p8 (Float32 Float16 Float128) Bool)
(declare-fun p9 (Float128 Float128 Float64 Float32 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float128)
(declare-const ?float62 Float64)
(declare-const ?float63 Float128)
(declare-const ?float64 Float64)
(declare-const ?float65 Float32)
(declare-const ?float66 Float128)
(declare-const ?float67 Float16)
(declare-const ?float68 Float16)
(declare-const ?float69 Float16)
(declare-const ?float70 Float32)
(declare-const ?float71 Float16)
(declare-const ?float72 Float64)
(declare-const ?float73 Float32)
(declare-const ?float74 Float64)
(declare-const ?float75 Float32)
(declare-const ?float76 Float16)
(declare-const ?float77 Float64)
(declare-const ?float78 Float64)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b1 #b00010000 #b01000100001101000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b00100000 #b10011000011010000110001)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b1 #b10000010 #b10010100001110101110010)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b0 #b00111101011 #b0000111100110110000001010101101010010101001101000011)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b0 #b11101 #b0100000101)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (f32 ?float63 ?float68 ((_ to_fp 15 113) RTN ?float68) ((_ to_fp 11 53) RNE ?float73) ((_ to_fp 8 24) RTP ?float60) ((_ to_fp 15 113) RTZ ?float67) ?float97 ((_ to_fp 15 113) RNE ?float69))))
(declare-const ?float101 Float32)
(assert (= ?float101 (f49 ?float88 ((_ to_fp 15 113) RTZ ?float100) ((_ to_fp 15 113) RTZ ?float60) ((_ to_fp 8 24) RTN ?float76) ((_ to_fp 5 11) RTZ ?float77) ?float76 ?float86 ((_ to_fp 15 113) RTZ ?float67) ?float92)))
(declare-const ?float102 Float64)
(assert (= ?float102 (fp.mul RNE ?float60 ((_ to_fp 11 53) RTN ?float85))))
(declare-const ?float103 Float16)
(assert (= ?float103 (f30 ((_ to_fp 15 113) RTN ?float62) ((_ to_fp 8 24) RTZ ?float84))))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.sqrt RTZ ?float72)))
(declare-const ?float105 Float128)
(assert (= ?float105 (fp.roundToIntegral RTP ?float63)))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.mul RTP ((_ to_fp 11 53) RTN ?float103) ?float104)))
(declare-const ?float107 Float16)
(assert (= ?float107 (f32 ((_ to_fp 15 113) RTZ ?float96) ((_ to_fp 5 11) RTP ?float81) ((_ to_fp 15 113) RTN ?float75) ?float97 ((_ to_fp 8 24) RTN ?float66) ((_ to_fp 15 113) RTP ?float72) ((_ to_fp 11 53) RTP ?float92) ((_ to_fp 15 113) RTP ?float77))))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.div RTZ ?float63 ((_ to_fp 15 113) RTP ?float69))))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.min ((_ to_fp 5 11) RTP ?float88) ?float107)))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.div RNE ?float85 ?float86)))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.sqrt RTZ ?float102)))
(declare-const ?float112 Float128)
(assert (= ?float112 (fp.roundToIntegral RTZ ?float105)))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.add RNE ((_ to_fp 5 11) RTP ?float89) ?float71)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.add RTP ((_ to_fp 11 53) RTN ?float85) ?float88)))
(declare-const ?float115 Float128)
(assert (= ?float115 (f3 ((_ to_fp 11 53) RTZ ?float87) ((_ to_fp 11 53) RTN ?float71) ?float94 ((_ to_fp 15 113) RNE ?float103) ?float105)))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.add RNE ?float79 ((_ to_fp 5 11) RNE ?float85))))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.abs ?float93)))
(declare-const ?float118 Float64)
(assert (= ?float118 (fp.abs ?float74)))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.neg ?float94)))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.max ((_ to_fp 11 53) RNE ?float116) ?float94)))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.roundToIntegral RTN ?float99)))
(declare-const ?float122 Float16)
(assert (= ?float122 (f23 ((_ to_fp 11 53) RTZ ?float67) ?float103 ?float72 ((_ to_fp 5 11) RNE ?float110) ((_ to_fp 5 11) RTN ?float114) ((_ to_fp 15 113) RNE ?float64) ((_ to_fp 15 113) RTP ?float78))))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.neg ?float100)))
(declare-const ?float124 Float128)
(assert (= ?float124 (fp.roundToIntegral RTZ ?float108)))
(declare-const ?float125 Float128)
(assert (= ?float125 (f34 ((_ to_fp 15 113) RTZ ?float95) ?float121 ?float64 ((_ to_fp 5 11) RTZ ?float120) ((_ to_fp 8 24) RTN ?float121) ?float74 ((_ to_fp 15 113) RTN ?float95) ((_ to_fp 15 113) RTN ?float79) ((_ to_fp 11 53) RTZ ?float82) ?float93)))
(declare-const ?float126 Float16)
(assert (= ?float126 (fp.max ?float79 ((_ to_fp 5 11) RTZ ?float108))))
(declare-const ?float127 Float128)
(assert (= ?float127 (fp.roundToIntegral RTP ?float115)))
(declare-const ?float128 Float16)
(assert (= ?float128 (f38 ((_ to_fp 8 24) RTN ?float79) ((_ to_fp 5 11) RTN ?float99) ((_ to_fp 15 113) RTN ?float94) ((_ to_fp 5 11) RTP ?float112) ((_ to_fp 15 113) RTP ?float72) ((_ to_fp 8 24) RTN ?float125))))
(declare-const ?float129 Float128)
(assert (= ?float129 (fp.abs ?float110)))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.mul RTP ((_ to_fp 15 113) RTP ?float95) ?float110)))
(declare-const ?float131 Float128)
(assert (= ?float131 (fp.sub RTN ?float110 ?float110)))
(declare-const ?float132 Float16)
(assert (= ?float132 (f25 ((_ to_fp 15 113) RTZ ?float128) ?float107 ((_ to_fp 11 53) RTZ ?float109) ((_ to_fp 8 24) RNE ?float92) ((_ to_fp 11 53) RNE ?float124) ((_ to_fp 8 24) RTZ ?float99) ((_ to_fp 15 113) RTZ ?float98) ((_ to_fp 11 53) RNE ?float68) ?float101)))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.sqrt RTP ?float88)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.sub RTP ?float86 ?float61)))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.max ?float132 ((_ to_fp 5 11) RNE ?float129))))
(declare-const ?float136 Float64)
(assert (= ?float136 (f5 ((_ to_fp 5 11) RNE ?float124) ((_ to_fp 11 53) RTZ ?float100) ((_ to_fp 8 24) RTZ ?float127) ((_ to_fp 11 53) RTZ ?float73) ?float67 ?float69 ((_ to_fp 15 113) RTZ ?float111))))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.neg ?float93)))
(declare-const ?float138 Float64)
(assert (= ?float138 (fp.sqrt RTZ ?float93)))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.sqrt RTZ ?float66)))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.div RTZ ?float86 ?float127)))
(declare-const ?float141 Float64)
(assert (= ?float141 (f6 ((_ to_fp 15 113) RTZ ?float122))))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.add RTP ((_ to_fp 11 53) RTP ?float108) ?float93)))
(declare-const ?float143 Float128)
(assert (= ?float143 (f34 ((_ to_fp 15 113) RNE ?float135) ((_ to_fp 11 53) RTN ?float112) ((_ to_fp 11 53) RNE ?float81) ((_ to_fp 5 11) RNE ?float60) ?float98 ?float94 ((_ to_fp 15 113) RTP ?float101) ((_ to_fp 15 113) RTP ?float96) ?float104 ?float138)))
(declare-const ?float144 Float128)
(assert (= ?float144 (fp.roundToIntegral RTP ?float143)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.div RNE ?float101 ?float75)))
(declare-const ?float146 Float16)
(assert (= ?float146 (f30 ((_ to_fp 15 113) RNE ?float145) ((_ to_fp 8 24) RTP ?float129))))
(declare-const ?float147 Float64)
(assert (= ?float147 (fp.roundToIntegral RNE ?float133)))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.sub RTP ?float90 ((_ to_fp 11 53) RTN ?float127))))
(declare-const ?float149 Float32)
(assert (= ?float149 (fp.roundToIntegral RTN ?float75)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.eq ?float86 ((_ to_fp 15 113) RTP ?float141))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNegative ?float148)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.lt ?float139 ((_ to_fp 15 113) RTP ?float123))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.eq ?float145 ?float81)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.gt ?float149 ((_ to_fp 8 24) RTN ?float116))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.gt ?float64 ?float93)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.gt ((_ to_fp 5 11) RTZ ?float82) ?float135)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p6 ((_ to_fp 11 53) RTZ ?float82) ((_ to_fp 11 53) RNE ?float92))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isInfinite ?float90)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isZero ?float149)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p2 ?float66 ((_ to_fp 5 11) RTP ?float137) ?float126 ((_ to_fp 5 11) RNE ?float141) ((_ to_fp 5 11) RNE ?float64) ?float85)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNaN ?float60)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (p6 ((_ to_fp 11 53) RNE ?float115) ((_ to_fp 11 53) RTN ?float68))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (p1 ((_ to_fp 5 11) RNE ?float143) ((_ to_fp 8 24) RTP ?float85))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isPositive ?float100)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isInfinite ?float129)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.geq ((_ to_fp 11 53) RTN ?float115) ?float111)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p5 ((_ to_fp 15 113) RNE ?float120) ?float133 ((_ to_fp 15 113) RTP ?float136) ?float126 ((_ to_fp 8 24) RNE ?float87) ((_ to_fp 11 53) RTP ?float130) ((_ to_fp 8 24) RTZ ?float71))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNormal ?float142)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isInfinite ?float117)))
; FINAL ASSERT
(assert (or ?bool154))
(check-sat)


-- iteration 103 --
(declare-fun f0 (Float32 Float64 Float16 Float32 Float16 Float32 Float64 Float128 Float128) Float64)
(declare-fun f1 (Float64 Float128) Float64)
(declare-fun f2 (Float32 Float16) Float16)
(declare-fun f3 (Float64 Float64 Float32 Float64 Float32 Float128 Float64 Float64 Float64) Float16)
(declare-fun f4 (Float128 Float32 Float64 Float64) Float16)
(declare-fun f5 (Float16 Float32 Float128 Float16) Float32)
(declare-fun f6 (Float16 Float32 Float128 Float32) Float128)
(declare-fun f7 (Float16 Float32 Float32 Float128 Float128 Float32) Float16)
(declare-fun f8 (Float16 Float128 Float32 Float16 Float128 Float128 Float64 Float32) Float32)
(declare-fun f9 (Float32 Float64 Float64 Float64) Float64)
(declare-fun f10 (Float128 Float32 Float64 Float16 Float16 Float128) Float128)
(declare-fun f11 (Float32 Float32 Float32 Float32 Float32 Float32) Float128)
(declare-fun f12 (Float32 Float16 Float32) Float64)
(declare-fun f13 (Float16 Float16 Float64 Float128 Float128 Float32 Float128 Float16) Float128)
(declare-fun f14 (Float64 Float16 Float128 Float32 Float16 Float64) Float128)
(declare-fun f15 (Float32 Float32) Float32)
(declare-fun f16 (Float32 Float16 Float16 Float64 Float64 Float32) Float32)
(declare-fun f17 (Float128 Float32 Float16 Float16 Float16 Float16 Float64 Float64 Float32 Float16) Float128)
(declare-fun f18 (Float128 Float128 Float64 Float128 Float32 Float64 Float128 Float128 Float128 Float64) Float64)
(declare-fun f19 (Float64 Float64 Float128) Float32)
(declare-fun f20 (Float32) Float32)
(declare-fun f21 (Float128 Float32 Float16) Float64)
(declare-fun f22 (Float32 Float64 Float16) Float16)
(declare-fun f23 (Float128) Float16)
(declare-fun f24 (Float32 Float16 Float128 Float32 Float16 Float128 Float64 Float16 Float16 Float128) Float128)
(declare-fun f25 (Float32 Float128) Float16)
(declare-fun f26 (Float64 Float16 Float64 Float32 Float16 Float32 Float128 Float64 Float16) Float16)
(declare-fun f27 (Float32 Float32 Float16 Float32 Float32 Float64) Float32)
(declare-fun f28 (Float128 Float32 Float16 Float64 Float64 Float32) Float16)
(declare-fun f29 (Float128 Float32 Float64 Float64 Float16 Float16 Float16) Float16)
(declare-fun f30 (Float16 Float16 Float32 Float64 Float32 Float64) Float128)
(declare-fun f31 (Float64 Float32 Float128 Float64) Float32)
(declare-fun f32 (Float32 Float16 Float32 Float64 Float32 Float16 Float16 Float64 Float16 Float64) Float64)
(declare-fun f33 (Float64 Float16 Float16) Float16)
(declare-fun f34 (Float16) Float128)
(declare-fun f35 (Float128 Float128 Float64 Float16 Float64) Float16)
(declare-fun f36 (Float64 Float64 Float64 Float32 Float64 Float16 Float16) Float128)
(declare-fun f37 (Float16 Float32 Float16 Float16 Float64 Float128 Float64 Float32) Float64)
(declare-fun f38 (Float32 Float32 Float128 Float128) Float32)
(declare-fun f39 (Float64 Float32 Float128 Float64) Float64)
(declare-fun f40 (Float128) Float128)
(declare-fun f41 (Float16 Float64 Float32 Float32) Float64)
(declare-fun f42 (Float64 Float16 Float16) Float128)
(declare-fun f43 (Float128 Float32 Float64) Float32)
(declare-fun f44 (Float128 Float128 Float16 Float16 Float64 Float64 Float32) Float16)
(declare-fun f45 (Float128 Float32 Float64 Float16 Float16 Float128 Float128 Float128 Float64) Float16)
(declare-fun f46 (Float16 Float16 Float64) Float128)
(declare-fun f47 (Float32 Float16 Float16 Float32 Float128 Float32 Float64 Float128) Float64)
(declare-fun f48 (Float16 Float32 Float64 Float32 Float128 Float32 Float32 Float64) Float64)
(declare-fun f49 (Float64 Float32 Float32 Float16 Float64 Float64 Float64) Float128)
(declare-fun p0 (Float16 Float32 Float16 Float32 Float64 Float64 Float16 Float16 Float64 Float32) Bool)
(declare-fun p1 (Float128 Float64 Float32 Float16) Bool)
(declare-fun p2 (Float128 Float32 Float128 Float128 Float32 Float16 Float128 Float128 Float32 Float16) Bool)
(declare-fun p3 (Float64 Float128) Bool)
(declare-fun p4 (Float64 Float32) Bool)
(declare-fun p5 (Float64 Float128 Float32 Float16) Bool)
(declare-fun p6 (Float64 Float128 Float64 Float128 Float32 Float64 Float32 Float128 Float16) Bool)
(declare-fun p7 (Float16) Bool)
(declare-fun p8 (Float32 Float32) Bool)
(declare-fun p9 (Float128 Float64 Float16 Float32 Float128 Float64 Float16 Float64 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float64)
(declare-const ?float62 Float128)
(declare-const ?float63 Float16)
(declare-const ?float64 Float64)
(declare-const ?float65 Float32)
(declare-const ?float66 Float64)
(declare-const ?float67 Float64)
(declare-const ?float68 Float32)
(declare-const ?float69 Float16)
(declare-const ?float70 Float128)
(declare-const ?float71 Float64)
(declare-const ?float72 Float128)
(declare-const ?float73 Float128)
(declare-const ?float74 Float64)
(declare-const ?float75 Float16)
(declare-const ?float76 Float128)
(declare-const ?float77 Float128)
(declare-const ?float78 Float64)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b1 #b00110 #b1101011001)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float128)
(assert (= ?float83 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b0 #b01011 #b0110000010)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b0 #b00011 #b0100100010)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b0 #b100011001100100 #b1101000110011011000110111100011001010110011111000011011001000010011100110000010111111001010010000111000100100110)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b0 #b10100 #b1100011000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b1 #b00000001 #b00000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.max ?float84 ((_ to_fp 5 11) RTN ?float68))))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.max ?float72 ((_ to_fp 15 113) RTZ ?float74))))
(declare-const ?float102 Float64)
(assert (= ?float102 (f39 ((_ to_fp 11 53) RTN ?float96) ((_ to_fp 8 24) RTN ?float69) ?float89 ((_ to_fp 11 53) RTN ?float87))))
(declare-const ?float103 Float16)
(assert (= ?float103 (f35 ((_ to_fp 15 113) RTN ?float91) ((_ to_fp 15 113) RTZ ?float92) ((_ to_fp 11 53) RTZ ?float95) ((_ to_fp 5 11) RTZ ?float62) ?float78)))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.neg ?float99)))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.div RTZ ((_ to_fp 5 11) RNE ?float101) ?float94)))
(declare-const ?float106 Float128)
(assert (= ?float106 (f14 ((_ to_fp 11 53) RTP ?float87) ?float85 ((_ to_fp 15 113) RTZ ?float60) ((_ to_fp 8 24) RTN ?float63) ((_ to_fp 5 11) RTN ?float82) ((_ to_fp 11 53) RTZ ?float75))))
(declare-const ?float107 Float16)
(assert (= ?float107 (fp.neg ?float96)))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.abs ?float77)))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.neg ?float82)))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.min ((_ to_fp 15 113) RNE ?float71) ?float101)))
(declare-const ?float111 Float128)
(assert (= ?float111 (fp.add RTP ?float106 ?float82)))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.roundToIntegral RTP ?float84)))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.sub RTN ?float112 ?float60)))
(declare-const ?float114 Float16)
(assert (= ?float114 (f45 ((_ to_fp 15 113) RNE ?float78) ((_ to_fp 8 24) RTN ?float83) ((_ to_fp 11 53) RNE ?float96) ((_ to_fp 5 11) RTZ ?float71) ((_ to_fp 5 11) RNE ?float72) ?float101 ((_ to_fp 15 113) RTZ ?float105) ?float70 ((_ to_fp 11 53) RTP ?float106))))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.add RTN ?float76 ?float83)))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.roundToIntegral RTZ ?float92)))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.max ?float107 ((_ to_fp 5 11) RTZ ?float62))))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.mul RTZ ?float72 ?float111)))
(declare-const ?float119 Float128)
(assert (= ?float119 (fp.min ?float72 ?float118)))
(declare-const ?float120 Float16)
(assert (= ?float120 (f22 ((_ to_fp 8 24) RTP ?float100) ((_ to_fp 11 53) RTZ ?float112) ((_ to_fp 5 11) RTP ?float66))))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.mul RTP ?float118 ?float62)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.sub RTZ ?float113 ((_ to_fp 5 11) RNE ?float81))))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.mul RTZ ?float116 ((_ to_fp 5 11) RTP ?float97))))
(declare-const ?float124 Float128)
(assert (= ?float124 (fp.sub RNE ((_ to_fp 15 113) RTN ?float105) ?float111)))
(declare-const ?float125 Float16)
(assert (= ?float125 (fp.neg ?float69)))
(declare-const ?float126 Float16)
(assert (= ?float126 (f29 ((_ to_fp 15 113) RTZ ?float104) ((_ to_fp 8 24) RTN ?float115) ((_ to_fp 11 53) RNE ?float119) ?float64 ?float75 ((_ to_fp 5 11) RNE ?float66) ?float125)))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.abs ?float125)))
(declare-const ?float128 Float16)
(assert (= ?float128 (f4 ((_ to_fp 15 113) RNE ?float114) ((_ to_fp 8 24) RTZ ?float87) ((_ to_fp 11 53) RTN ?float117) ?float74)))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.roundToIntegral RTZ ?float125)))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.max ?float124 ((_ to_fp 15 113) RTZ ?float75))))
(declare-const ?float131 Float128)
(assert (= ?float131 (fp.neg ?float115)))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.sub RTP ?float83 ?float81)))
(declare-const ?float133 Float64)
(assert (= ?float133 (f12 ((_ to_fp 8 24) RTP ?float90) ((_ to_fp 5 11) RTZ ?float89) ((_ to_fp 8 24) RTP ?float128))))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.roundToIntegral RTZ ?float60)))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.min ?float100 ?float103)))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.mul RTP ?float87 ?float87)))
(declare-const ?float137 Float64)
(assert (= ?float137 (f18 ((_ to_fp 15 113) RTN ?float79) ?float106 ?float90 ((_ to_fp 15 113) RTZ ?float86) ((_ to_fp 8 24) RNE ?float121) ((_ to_fp 11 53) RTZ ?float125) ((_ to_fp 15 113) RTZ ?float99) ?float110 ((_ to_fp 15 113) RNE ?float63) ((_ to_fp 11 53) RTN ?float125))))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.roundToIntegral RTZ ?float112)))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.div RTZ ((_ to_fp 5 11) RTP ?float108) ?float128)))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.abs ?float80)))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.div RNE ?float115 ((_ to_fp 15 113) RTP ?float135))))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.min ((_ to_fp 11 53) RTP ?float85) ?float133)))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.div RTP ((_ to_fp 11 53) RNE ?float95) ?float61)))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.sub RNE ?float104 ((_ to_fp 8 24) RTP ?float141))))
(declare-const ?float145 Float16)
(assert (= ?float145 (fp.div RNE ((_ to_fp 5 11) RTN ?float87) ?float123)))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.div RNE ?float140 ?float128)))
(declare-const ?float147 Float16)
(assert (= ?float147 (fp.max ?float125 ?float79)))
(declare-const ?float148 Float128)
(assert (= ?float148 (fp.mul RTP ?float73 ?float106)))
(declare-const ?float149 Float16)
(assert (= ?float149 (f2 ((_ to_fp 8 24) RNE ?float111) ?float112)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.lt ((_ to_fp 11 53) RNE ?float148) ?float61)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p8 ((_ to_fp 8 24) RTP ?float111) ((_ to_fp 8 24) RNE ?float132))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.eq ((_ to_fp 8 24) RTP ?float78) ?float144)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.leq ((_ to_fp 15 113) RTN ?float139) ?float136)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNegative ?float142)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.eq ((_ to_fp 5 11) RNE ?float88) ?float138)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (p2 ((_ to_fp 15 113) RTN ?float128) ((_ to_fp 8 24) RNE ?float108) ((_ to_fp 15 113) RTP ?float99) ?float97 ((_ to_fp 8 24) RTP ?float72) ((_ to_fp 5 11) RTP ?float144) ((_ to_fp 15 113) RTP ?float66) ((_ to_fp 15 113) RTP ?float79) ((_ to_fp 8 24) RNE ?float91) ((_ to_fp 5 11) RTN ?float102))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.leq ?float69 ?float149)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p4 ?float66 ((_ to_fp 8 24) RTZ ?float121))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p6 ((_ to_fp 11 53) RNE ?float63) ?float148 ((_ to_fp 11 53) RTP ?float97) ((_ to_fp 15 113) RTZ ?float69) ((_ to_fp 8 24) RNE ?float140) ?float90 ((_ to_fp 8 24) RTP ?float100) ((_ to_fp 15 113) RTZ ?float147) ((_ to_fp 5 11) RTZ ?float144))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isZero ?float123)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.geq ?float105 ?float69)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.leq ?float86 ((_ to_fp 11 53) RTZ ?float89))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isInfinite ?float127)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isZero ?float70)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isPositive ?float117)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.leq ?float87 ((_ to_fp 15 113) RTZ ?float65))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNaN ?float114)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNaN ?float81)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isSubnormal ?float105)))
; FINAL ASSERT
(assert (and ?bool157))
(check-sat)


-- iteration 104 --
(declare-fun f0 (Float64 Float16 Float32 Float16 Float64 Float64 Float16 Float64 Float32 Float16) Float128)
(declare-fun f1 (Float128) Float128)
(declare-fun f2 (Float128 Float64 Float64) Float128)
(declare-fun f3 (Float64 Float32 Float64 Float32) Float32)
(declare-fun f4 (Float16 Float16 Float128 Float64 Float64 Float32 Float32 Float32 Float32 Float16) Float16)
(declare-fun f5 (Float32 Float16 Float16) Float64)
(declare-fun f6 (Float128 Float128 Float16) Float32)
(declare-fun f7 (Float32 Float32 Float32 Float128 Float128 Float16 Float16 Float64 Float128) Float128)
(declare-fun f8 (Float64) Float16)
(declare-fun f9 (Float64 Float32 Float16) Float64)
(declare-fun f10 (Float16 Float64) Float64)
(declare-fun f11 (Float16 Float128 Float64 Float128 Float32 Float16) Float64)
(declare-fun f12 (Float16 Float128 Float16 Float32 Float128 Float32 Float16) Float128)
(declare-fun f13 (Float16 Float64 Float16) Float128)
(declare-fun f14 (Float32 Float16 Float16 Float64 Float64 Float64 Float16 Float128) Float128)
(declare-fun f15 (Float64 Float16 Float128 Float32 Float64 Float32 Float16 Float64 Float128 Float16) Float128)
(declare-fun f16 (Float32 Float16 Float64 Float16 Float128 Float128 Float16 Float64) Float16)
(declare-fun f17 (Float32 Float64 Float16 Float128) Float64)
(declare-fun f18 (Float16) Float32)
(declare-fun f19 (Float128 Float32 Float64 Float32 Float128 Float32) Float16)
(declare-fun f20 (Float64 Float128) Float32)
(declare-fun f21 (Float128 Float32 Float64 Float128) Float64)
(declare-fun f22 (Float32 Float128 Float64 Float32 Float32) Float16)
(declare-fun f23 (Float16 Float16 Float128 Float128 Float64 Float64 Float128) Float64)
(declare-fun f24 (Float128) Float128)
(declare-fun f25 (Float128 Float16 Float128 Float64 Float16 Float64 Float64 Float32 Float64 Float64) Float64)
(declare-fun f26 (Float64 Float64 Float16 Float32 Float16 Float16 Float64 Float16 Float32) Float64)
(declare-fun f27 (Float128 Float128 Float16) Float128)
(declare-fun f28 (Float64 Float16 Float16 Float16 Float32 Float64 Float64) Float128)
(declare-fun f29 (Float128 Float128 Float16 Float32 Float32 Float32) Float32)
(declare-fun f30 (Float128 Float128) Float128)
(declare-fun f31 (Float64 Float64 Float64 Float128 Float16) Float32)
(declare-fun f32 (Float16 Float32 Float16 Float128 Float16 Float32 Float128) Float16)
(declare-fun f33 (Float64 Float16 Float32 Float16 Float32 Float128 Float64 Float128 Float16 Float32) Float128)
(declare-fun f34 (Float128) Float128)
(declare-fun f35 (Float128) Float32)
(declare-fun f36 (Float64) Float16)
(declare-fun f37 (Float16 Float64 Float16 Float128 Float128 Float128) Float128)
(declare-fun f38 (Float16 Float32 Float16 Float64 Float32 Float128 Float16 Float32 Float128 Float64) Float16)
(declare-fun f39 (Float64 Float32 Float16 Float32 Float32 Float16 Float32 Float64 Float16) Float64)
(declare-fun f40 (Float16 Float128 Float32 Float32) Float16)
(declare-fun f41 (Float32 Float64) Float64)
(declare-fun f42 (Float128 Float64 Float128 Float32 Float32) Float16)
(declare-fun f43 (Float16 Float32 Float64 Float64 Float32 Float128 Float128 Float16) Float128)
(declare-fun f44 (Float16 Float128 Float16) Float64)
(declare-fun f45 (Float128 Float64 Float32 Float128 Float32 Float128 Float64 Float64 Float16 Float32) Float64)
(declare-fun f46 (Float64 Float128 Float64 Float16 Float32 Float16) Float128)
(declare-fun f47 (Float16 Float64) Float64)
(declare-fun f48 (Float128) Float64)
(declare-fun f49 (Float16 Float16 Float16 Float32 Float32 Float64 Float128 Float128 Float64) Float16)
(declare-fun p0 (Float128 Float16 Float128) Bool)
(declare-fun p1 (Float128 Float32 Float128 Float32 Float64 Float64 Float128) Bool)
(declare-fun p2 (Float32 Float16 Float64 Float32) Bool)
(declare-fun p3 (Float32 Float32 Float128 Float32 Float64) Bool)
(declare-fun p4 (Float128 Float16 Float16 Float128 Float128 Float32 Float32 Float64 Float128 Float16) Bool)
(declare-fun p5 (Float64) Bool)
(declare-fun p6 (Float16) Bool)
(declare-fun p7 (Float16 Float128 Float64 Float128 Float16 Float32 Float128 Float32 Float16 Float64) Bool)
(declare-fun p8 (Float32 Float64 Float64 Float64 Float128 Float16) Bool)
(declare-fun p9 (Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float32)
(declare-const ?float62 Float64)
(declare-const ?float63 Float32)
(declare-const ?float64 Float32)
(declare-const ?float65 Float16)
(declare-const ?float66 Float128)
(declare-const ?float67 Float16)
(declare-const ?float68 Float32)
(declare-const ?float69 Float32)
(declare-const ?float70 Float128)
(declare-const ?float71 Float32)
(declare-const ?float72 Float16)
(declare-const ?float73 Float64)
(declare-const ?float74 Float64)
(declare-const ?float75 Float64)
(declare-const ?float76 Float32)
(declare-const ?float77 Float128)
(declare-const ?float78 Float32)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b0 #b01100100100 #b0000000001010011011011100001100110010101001011000010)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b1 #b01101101011 #b0110010000011111010110111111010111000110101011000111)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float87 Float32)
(assert (= ?float87 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b1 #b10100 #b0010110000)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b0 #b11011001 #b11011000111000101011111)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float64)
(assert (= ?float98 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b0 #b00000000 #b00000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.abs ?float78)))
(declare-const ?float101 Float64)
(assert (= ?float101 (fp.div RTN ((_ to_fp 11 53) RTN ?float70) ?float73)))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.neg ?float67)))
(declare-const ?float103 Float32)
(assert (= ?float103 (fp.sqrt RTN ?float71)))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.mul RTZ ?float88 ?float93)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.roundToIntegral RTZ ?float85)))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.neg ?float105)))
(declare-const ?float107 Float64)
(assert (= ?float107 (fp.roundToIntegral RTP ?float84)))
(declare-const ?float108 Float64)
(assert (= ?float108 (f10 ((_ to_fp 5 11) RTN ?float81) ?float73)))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.add RTP ?float60 ((_ to_fp 5 11) RNE ?float69))))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.roundToIntegral RTZ ?float106)))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.mul RTP ?float64 ?float69)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.abs ?float110)))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.div RNE ?float65 ((_ to_fp 5 11) RNE ?float85))))
(declare-const ?float114 Float64)
(assert (= ?float114 (f48 ((_ to_fp 15 113) RTZ ?float108))))
(declare-const ?float115 Float16)
(assert (= ?float115 (f42 ((_ to_fp 15 113) RTZ ?float109) ((_ to_fp 11 53) RTP ?float60) ((_ to_fp 15 113) RTZ ?float87) ?float87 ?float61)))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.mul RTP ?float72 ((_ to_fp 5 11) RTN ?float70))))
(declare-const ?float117 Float64)
(assert (= ?float117 (f39 ((_ to_fp 11 53) RTN ?float65) ?float111 ((_ to_fp 5 11) RTN ?float112) ?float111 ?float100 ((_ to_fp 5 11) RNE ?float100) ((_ to_fp 8 24) RTN ?float85) ((_ to_fp 11 53) RTP ?float77) ?float72)))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.div RTP ((_ to_fp 5 11) RNE ?float106) ?float72)))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.neg ?float93)))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.mul RNE ((_ to_fp 15 113) RNE ?float113) ?float70)))
(declare-const ?float121 Float64)
(assert (= ?float121 (f48 ((_ to_fp 15 113) RTN ?float96))))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.neg ?float70)))
(declare-const ?float123 Float64)
(assert (= ?float123 (f45 ((_ to_fp 15 113) RTN ?float119) ((_ to_fp 11 53) RTP ?float93) ((_ to_fp 8 24) RNE ?float95) ((_ to_fp 15 113) RTP ?float80) ?float79 ((_ to_fp 15 113) RTN ?float103) ?float121 ((_ to_fp 11 53) RTP ?float92) ((_ to_fp 5 11) RTP ?float120) ?float76)))
(declare-const ?float124 Float16)
(assert (= ?float124 (fp.min ?float82 ?float72)))
(declare-const ?float125 Float16)
(assert (= ?float125 (fp.sqrt RTZ ?float67)))
(declare-const ?float126 Float16)
(assert (= ?float126 (fp.mul RTP ((_ to_fp 5 11) RTZ ?float100) ?float115)))
(declare-const ?float127 Float64)
(assert (= ?float127 (f11 ?float115 ((_ to_fp 15 113) RNE ?float109) ((_ to_fp 11 53) RTZ ?float116) ((_ to_fp 15 113) RNE ?float68) ?float64 ((_ to_fp 5 11) RTP ?float110))))
(declare-const ?float128 Float16)
(assert (= ?float128 (fp.sqrt RTP ?float124)))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.div RNE ?float72 ((_ to_fp 5 11) RTN ?float61))))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.add RTN ((_ to_fp 5 11) RNE ?float69) ?float119)))
(declare-const ?float131 Float32)
(assert (= ?float131 (fp.min ((_ to_fp 8 24) RTN ?float89) ?float111)))
(declare-const ?float132 Float64)
(assert (= ?float132 (f17 ?float94 ((_ to_fp 11 53) RTP ?float69) ?float130 ((_ to_fp 15 113) RTP ?float68))))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.div RTN ?float79 ((_ to_fp 8 24) RTZ ?float112))))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.abs ?float66)))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.max ((_ to_fp 5 11) RTP ?float91) ?float119)))
(declare-const ?float136 Float128)
(assert (= ?float136 (f37 ((_ to_fp 5 11) RTP ?float77) ((_ to_fp 11 53) RTP ?float100) ((_ to_fp 5 11) RTN ?float101) ((_ to_fp 15 113) RTP ?float135) ((_ to_fp 15 113) RNE ?float69) ((_ to_fp 15 113) RTP ?float88))))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.roundToIntegral RNE ?float77)))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.sqrt RTN ?float82)))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.add RTZ ((_ to_fp 15 113) RNE ?float131) ?float95)))
(declare-const ?float140 Float64)
(assert (= ?float140 (fp.max ?float132 ((_ to_fp 11 53) RTZ ?float95))))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.neg ?float128)))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.neg ?float110)))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.sub RTP ?float83 ?float114)))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.mul RTP ?float108 ?float127)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.roundToIntegral RTP ?float127)))
(declare-const ?float146 Float128)
(assert (= ?float146 (f28 ((_ to_fp 11 53) RTN ?float125) ((_ to_fp 5 11) RTN ?float91) ?float96 ?float96 ((_ to_fp 8 24) RTZ ?float125) ((_ to_fp 11 53) RNE ?float93) ?float142)))
(declare-const ?float147 Float16)
(assert (= ?float147 (fp.mul RTZ ?float138 ((_ to_fp 5 11) RTN ?float83))))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.roundToIntegral RTZ ?float128)))
(declare-const ?float149 Float32)
(assert (= ?float149 (fp.max ?float99 ((_ to_fp 8 24) RTN ?float128))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.leq ((_ to_fp 11 53) RTN ?float120) ?float81)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.leq ((_ to_fp 11 53) RTN ?float96) ?float123)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.gt ?float144 ((_ to_fp 11 53) RTP ?float131))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNegative ?float120)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p2 ((_ to_fp 8 24) RTN ?float82) ?float72 ((_ to_fp 11 53) RTZ ?float149) ((_ to_fp 8 24) RTN ?float120))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.eq ?float106 ?float123)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNegative ?float67)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNormal ?float74)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNegative ?float143)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isInfinite ?float134)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNegative ?float85)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNormal ?float90)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isInfinite ?float124)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (p7 ((_ to_fp 5 11) RNE ?float69) ((_ to_fp 15 113) RNE ?float62) ?float75 ((_ to_fp 15 113) RTP ?float103) ((_ to_fp 5 11) RTZ ?float123) ((_ to_fp 8 24) RTP ?float89) ((_ to_fp 15 113) RTP ?float142) ((_ to_fp 8 24) RTZ ?float110) ((_ to_fp 5 11) RTN ?float121) ?float85)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isZero ?float93)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p0 ((_ to_fp 15 113) RTP ?float63) ?float141 ((_ to_fp 15 113) RNE ?float130))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p8 ((_ to_fp 8 24) RTP ?float127) ?float112 ?float123 ((_ to_fp 11 53) RTP ?float80) ((_ to_fp 15 113) RNE ?float62) ((_ to_fp 5 11) RNE ?float146))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.lt ?float94 ((_ to_fp 8 24) RTN ?float146))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isZero ?float109)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p9 ((_ to_fp 5 11) RNE ?float100))))
; FINAL ASSERT
(assert (or ?bool168))
(check-sat)


-- iteration 105 --
(declare-fun f0 (Float64 Float128) Float64)
(declare-fun f1 (Float16 Float16 Float32 Float64 Float16 Float32) Float64)
(declare-fun f2 (Float16 Float16 Float64 Float32 Float32 Float16 Float16 Float128 Float16 Float32) Float16)
(declare-fun f3 (Float128 Float16 Float64 Float64 Float64 Float128) Float32)
(declare-fun f4 (Float64 Float32 Float128 Float128) Float128)
(declare-fun f5 (Float64 Float16 Float64 Float16 Float32 Float128 Float64) Float64)
(declare-fun f6 (Float32 Float32 Float16 Float16 Float128 Float16 Float32) Float64)
(declare-fun f7 (Float32 Float128 Float32 Float64 Float128 Float128) Float64)
(declare-fun f8 (Float32 Float16 Float32 Float128 Float16 Float16 Float64 Float64) Float16)
(declare-fun f9 (Float128 Float64 Float16 Float32 Float16 Float64) Float64)
(declare-fun f10 (Float64 Float16 Float64) Float32)
(declare-fun f11 (Float128 Float16 Float128 Float32 Float128 Float64 Float16 Float128) Float128)
(declare-fun f12 (Float16 Float128 Float64 Float32 Float16) Float32)
(declare-fun f13 (Float64 Float16) Float128)
(declare-fun f14 (Float128 Float32 Float64 Float128 Float32 Float64 Float16) Float16)
(declare-fun f15 (Float16 Float32 Float32 Float16 Float128 Float128 Float64) Float32)
(declare-fun f16 (Float128 Float16 Float16 Float16 Float16 Float16) Float64)
(declare-fun f17 (Float16 Float32 Float32 Float64 Float64 Float64 Float64) Float128)
(declare-fun f18 (Float16 Float16 Float16 Float16 Float64 Float64) Float128)
(declare-fun f19 (Float32 Float128 Float128) Float16)
(declare-fun f20 (Float128 Float32 Float16 Float64 Float128 Float32) Float128)
(declare-fun f21 (Float32 Float16 Float128 Float128) Float16)
(declare-fun f22 (Float32 Float64 Float64 Float128) Float128)
(declare-fun f23 (Float128 Float64 Float32 Float32 Float64 Float32 Float128 Float64 Float16 Float64) Float16)
(declare-fun f24 (Float64 Float32 Float64 Float16 Float32 Float16 Float32 Float32) Float16)
(declare-fun f25 (Float16 Float64 Float16 Float16) Float64)
(declare-fun f26 (Float64 Float32 Float128 Float128 Float64 Float64 Float16 Float64 Float32) Float128)
(declare-fun f27 (Float64 Float16 Float16 Float16 Float32 Float64 Float16 Float16 Float32 Float16) Float64)
(declare-fun f28 (Float16) Float128)
(declare-fun f29 (Float32 Float16) Float64)
(declare-fun f30 (Float32 Float32 Float32) Float128)
(declare-fun f31 (Float16 Float32 Float128 Float64 Float32 Float64 Float32 Float64 Float128) Float128)
(declare-fun f32 (Float64 Float64 Float16) Float64)
(declare-fun f33 (Float128 Float128 Float64 Float128 Float128 Float16 Float128 Float64 Float16) Float16)
(declare-fun f34 (Float128 Float64 Float64 Float32) Float16)
(declare-fun f35 (Float32 Float64 Float32 Float16 Float16 Float32) Float32)
(declare-fun f36 (Float16 Float64 Float128 Float128 Float32 Float32 Float64 Float128 Float128) Float16)
(declare-fun f37 (Float128 Float64 Float32 Float128 Float64 Float128 Float128 Float128 Float32) Float64)
(declare-fun f38 (Float16 Float32 Float64 Float32 Float16 Float32 Float64 Float128 Float16 Float128) Float128)
(declare-fun f39 (Float16) Float64)
(declare-fun f40 (Float64 Float128 Float64 Float64 Float16 Float128) Float128)
(declare-fun f41 (Float64 Float128 Float64 Float32 Float32) Float32)
(declare-fun f42 (Float64 Float128 Float128 Float64 Float64) Float16)
(declare-fun f43 (Float16) Float128)
(declare-fun f44 (Float128 Float16 Float64 Float128 Float64 Float64 Float128 Float64 Float64) Float128)
(declare-fun f45 (Float32) Float16)
(declare-fun f46 (Float32 Float64 Float32 Float64 Float64 Float64 Float64 Float32 Float16) Float16)
(declare-fun f47 (Float32) Float64)
(declare-fun f48 (Float16 Float64 Float128 Float128 Float32 Float32 Float64 Float32 Float32) Float128)
(declare-fun f49 (Float64 Float16 Float16 Float128 Float128 Float16 Float16 Float64) Float128)
(declare-fun p0 (Float64) Bool)
(declare-fun p1 (Float128 Float128 Float16) Bool)
(declare-fun p2 (Float16 Float16 Float64 Float16 Float16) Bool)
(declare-fun p3 (Float32 Float64 Float128 Float16 Float16) Bool)
(declare-fun p4 (Float16 Float128) Bool)
(declare-fun p5 (Float128 Float16 Float16 Float64 Float128 Float32) Bool)
(declare-fun p6 (Float128 Float32 Float128 Float64 Float32 Float32 Float16 Float32 Float16 Float32) Bool)
(declare-fun p7 (Float32 Float16 Float128 Float64 Float32 Float128 Float16 Float128) Bool)
(declare-fun p8 (Float128 Float16 Float128 Float128) Bool)
(declare-fun p9 (Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float128)
(declare-const ?float62 Float32)
(declare-const ?float63 Float32)
(declare-const ?float64 Float128)
(declare-const ?float65 Float32)
(declare-const ?float66 Float32)
(declare-const ?float67 Float32)
(declare-const ?float68 Float32)
(declare-const ?float69 Float16)
(declare-const ?float70 Float32)
(declare-const ?float71 Float64)
(declare-const ?float72 Float32)
(declare-const ?float73 Float128)
(declare-const ?float74 Float128)
(declare-const ?float75 Float16)
(declare-const ?float76 Float16)
(declare-const ?float77 Float64)
(declare-const ?float78 Float64)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float83 Float128)
(assert (= ?float83 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b0 #b110000000011000 #b1111001000001110010000101000001110110011011010011111010001101111011000110000101011010010111011110001001110011101)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b1 #b11001000111 #b0100001000000010100010111001010001001000101101010100)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b0 #b00010000 #b01000000110111110101110)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b0 #b01010111 #b00001011010001111101001)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b1 #b00000001 #b00000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.min ?float91 ?float67)))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.neg ?float86)))
(declare-const ?float102 Float32)
(assert (= ?float102 (f35 ?float70 ((_ to_fp 11 53) RNE ?float87) ?float68 ((_ to_fp 5 11) RTZ ?float62) ?float92 ?float84)))
(declare-const ?float103 Float128)
(assert (= ?float103 (fp.abs ?float101)))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.roundToIntegral RTN ?float100)))
(declare-const ?float105 Float128)
(assert (= ?float105 (fp.mul RNE ((_ to_fp 15 113) RTP ?float60) ?float86)))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.abs ?float104)))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.sub RTP ((_ to_fp 8 24) RTN ?float79) ?float93)))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.div RTZ ?float88 ?float64)))
(declare-const ?float109 Float16)
(assert (= ?float109 (f42 ((_ to_fp 11 53) RNE ?float80) ?float61 ((_ to_fp 15 113) RTZ ?float60) ((_ to_fp 11 53) RTN ?float81) ((_ to_fp 11 53) RTZ ?float96))))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.abs ?float60)))
(declare-const ?float111 Float32)
(assert (= ?float111 (f15 ?float76 ((_ to_fp 8 24) RNE ?float78) ?float93 ((_ to_fp 5 11) RTZ ?float90) ((_ to_fp 15 113) RNE ?float71) ?float74 ((_ to_fp 11 53) RNE ?float110))))
(declare-const ?float112 Float128)
(assert (= ?float112 (fp.max ((_ to_fp 15 113) RTZ ?float77) ?float64)))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.max ?float96 ((_ to_fp 5 11) RNE ?float74))))
(declare-const ?float114 Float16)
(assert (= ?float114 (f2 ((_ to_fp 5 11) RTP ?float107) ((_ to_fp 5 11) RTZ ?float102) ?float90 ?float67 ((_ to_fp 8 24) RTZ ?float110) ((_ to_fp 5 11) RNE ?float72) ((_ to_fp 5 11) RTN ?float66) ?float61 ((_ to_fp 5 11) RTZ ?float80) ((_ to_fp 8 24) RNE ?float60))))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.sqrt RNE ?float71)))
(declare-const ?float116 Float128)
(assert (= ?float116 (fp.neg ?float105)))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.roundToIntegral RTN ?float73)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.min ?float107 ((_ to_fp 8 24) RNE ?float61))))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.abs ?float107)))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.min ?float106 ((_ to_fp 8 24) RNE ?float86))))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.sqrt RTP ?float116)))
(declare-const ?float122 Float32)
(assert (= ?float122 (fp.neg ?float93)))
(declare-const ?float123 Float16)
(assert (= ?float123 (f45 ((_ to_fp 8 24) RNE ?float109))))
(declare-const ?float124 Float16)
(assert (= ?float124 (f45 ?float72)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.add RTN ((_ to_fp 8 24) RTP ?float86) ?float94)))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.sqrt RTZ ?float81)))
(declare-const ?float127 Float64)
(assert (= ?float127 (f6 ((_ to_fp 8 24) RTP ?float117) ?float104 ?float109 ((_ to_fp 5 11) RTP ?float68) ((_ to_fp 15 113) RNE ?float62) ((_ to_fp 5 11) RTN ?float86) ((_ to_fp 8 24) RTN ?float61))))
(declare-const ?float128 Float128)
(assert (= ?float128 (f17 ((_ to_fp 5 11) RTZ ?float66) ?float66 ?float91 ((_ to_fp 11 53) RTZ ?float94) ((_ to_fp 11 53) RTN ?float83) ((_ to_fp 11 53) RTZ ?float108) ?float90)))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.add RNE ((_ to_fp 8 24) RTZ ?float123) ?float125)))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.div RNE ?float125 ((_ to_fp 8 24) RTN ?float74))))
(declare-const ?float131 Float128)
(assert (= ?float131 (fp.sub RTZ ((_ to_fp 15 113) RTZ ?float109) ?float101)))
(declare-const ?float132 Float128)
(assert (= ?float132 (f22 ((_ to_fp 8 24) RNE ?float83) ((_ to_fp 11 53) RTN ?float73) ((_ to_fp 11 53) RTP ?float122) ?float116)))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.sub RNE ?float65 ((_ to_fp 8 24) RTZ ?float126))))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.sub RTZ ((_ to_fp 5 11) RTZ ?float129) ?float114)))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.sub RTZ ?float87 ((_ to_fp 5 11) RTN ?float129))))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.sub RTZ ?float74 ((_ to_fp 15 113) RTN ?float80))))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.neg ?float73)))
(declare-const ?float138 Float64)
(assert (= ?float138 (f1 ((_ to_fp 5 11) RTN ?float65) ((_ to_fp 5 11) RTZ ?float63) ((_ to_fp 8 24) RNE ?float86) ((_ to_fp 11 53) RNE ?float124) ((_ to_fp 5 11) RTN ?float95) ((_ to_fp 8 24) RTZ ?float123))))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.max ((_ to_fp 11 53) RTZ ?float135) ?float138)))
(declare-const ?float140 Float128)
(assert (= ?float140 (f40 ((_ to_fp 11 53) RTP ?float113) ((_ to_fp 15 113) RTZ ?float139) ((_ to_fp 11 53) RTP ?float93) ((_ to_fp 11 53) RTZ ?float74) ((_ to_fp 5 11) RTZ ?float128) ((_ to_fp 15 113) RTP ?float60))))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.div RTN ((_ to_fp 15 113) RTN ?float93) ?float103)))
(declare-const ?float142 Float32)
(assert (= ?float142 (fp.div RTP ?float80 ?float104)))
(declare-const ?float143 Float128)
(assert (= ?float143 (f44 ((_ to_fp 15 113) RTN ?float124) ((_ to_fp 5 11) RTZ ?float136) ((_ to_fp 11 53) RTZ ?float118) ((_ to_fp 15 113) RTZ ?float106) ((_ to_fp 11 53) RTP ?float113) ((_ to_fp 11 53) RTP ?float113) ?float126 ((_ to_fp 11 53) RNE ?float134) ((_ to_fp 11 53) RTP ?float132))))
(declare-const ?float144 Float32)
(assert (= ?float144 (f35 ((_ to_fp 8 24) RNE ?float124) ?float71 ?float68 ?float114 ?float123 ?float125)))
(declare-const ?float145 Float128)
(assert (= ?float145 (fp.roundToIntegral RTN ?float117)))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.max ?float131 ((_ to_fp 15 113) RNE ?float125))))
(declare-const ?float147 Float32)
(assert (= ?float147 (f15 ((_ to_fp 5 11) RNE ?float140) ((_ to_fp 8 24) RTN ?float71) ((_ to_fp 8 24) RTN ?float82) ((_ to_fp 5 11) RTZ ?float72) ?float101 ((_ to_fp 15 113) RTZ ?float75) ?float77)))
(declare-const ?float148 Float32)
(assert (= ?float148 (fp.min ?float80 ?float68)))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.sqrt RTN ?float116)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.lt ((_ to_fp 8 24) RTP ?float69) ?float130)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.leq ((_ to_fp 15 113) RTP ?float93) ?float141)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (p4 ((_ to_fp 5 11) RTZ ?float62) ?float116)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isSubnormal ?float79)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.lt ((_ to_fp 15 113) RTN ?float60) ?float126)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p7 ((_ to_fp 8 24) RTN ?float108) ((_ to_fp 5 11) RNE ?float89) ((_ to_fp 15 113) RTZ ?float144) ?float127 ((_ to_fp 8 24) RTZ ?float90) ((_ to_fp 15 113) RNE ?float89) ?float113 ?float85)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isSubnormal ?float148)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p3 ((_ to_fp 8 24) RTP ?float78) ((_ to_fp 11 53) RTN ?float103) ((_ to_fp 15 113) RTZ ?float122) ((_ to_fp 5 11) RNE ?float93) ((_ to_fp 5 11) RTN ?float95))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p5 ((_ to_fp 15 113) RNE ?float110) ((_ to_fp 5 11) RTZ ?float128) ((_ to_fp 5 11) RTP ?float107) ((_ to_fp 11 53) RTN ?float82) ((_ to_fp 15 113) RTZ ?float104) ((_ to_fp 8 24) RTZ ?float105))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.gt ((_ to_fp 15 113) RTP ?float134) ?float131)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isZero ?float60)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.eq ?float70 ((_ to_fp 8 24) RNE ?float136))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (p0 ((_ to_fp 11 53) RTZ ?float81))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.eq ?float103 ?float81)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (p1 ((_ to_fp 15 113) RNE ?float129) ?float83 ((_ to_fp 5 11) RTP ?float122))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isNaN ?float136)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNaN ?float124)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.eq ((_ to_fp 8 24) RNE ?float139) ?float119)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isZero ?float138)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNormal ?float147)))
; FINAL ASSERT
(assert (or (and (and (or ?bool157) (and ?bool162)) ?bool161 ?bool165) (or (and ?bool155 ?bool153 ?bool168))))
(check-sat)


-- iteration 106 --
(declare-fun f0 (Float32 Float16 Float32 Float64 Float64 Float64 Float64 Float64 Float128 Float16) Float128)
(declare-fun f1 (Float16 Float16 Float16 Float128 Float64 Float64) Float128)
(declare-fun f2 (Float64 Float128 Float32 Float16 Float64 Float128 Float128 Float32 Float128 Float16) Float64)
(declare-fun f3 (Float16 Float128) Float128)
(declare-fun f4 (Float16 Float64 Float128 Float128 Float16 Float16 Float64) Float32)
(declare-fun f5 (Float64 Float128 Float64 Float16 Float128 Float16 Float64) Float32)
(declare-fun f6 (Float64 Float64 Float32 Float32 Float16 Float32 Float32 Float128) Float16)
(declare-fun f7 (Float128 Float128 Float128 Float16 Float32 Float64 Float128) Float128)
(declare-fun f8 (Float16 Float128 Float64 Float32 Float16 Float32) Float32)
(declare-fun f9 (Float128 Float32 Float16 Float32 Float64 Float128 Float64) Float128)
(declare-fun f10 (Float16 Float32 Float32 Float64 Float32 Float128 Float16) Float64)
(declare-fun f11 (Float128 Float128 Float64 Float32 Float16 Float128) Float128)
(declare-fun f12 (Float32) Float32)
(declare-fun f13 (Float32 Float16 Float32 Float16 Float32 Float32 Float16 Float16 Float128 Float64) Float128)
(declare-fun f14 (Float16 Float128 Float64 Float16 Float128 Float16 Float16) Float32)
(declare-fun f15 (Float32 Float32 Float128) Float64)
(declare-fun f16 (Float32 Float16 Float16) Float128)
(declare-fun f17 (Float16 Float16 Float64) Float128)
(declare-fun f18 (Float16 Float128 Float64 Float128 Float32 Float16 Float64 Float64) Float32)
(declare-fun f19 (Float32 Float128 Float64 Float16) Float128)
(declare-fun f20 (Float128 Float64 Float64 Float128 Float128 Float32 Float128 Float128) Float16)
(declare-fun f21 (Float128 Float16 Float128 Float16 Float64 Float32 Float64 Float128) Float128)
(declare-fun f22 (Float128 Float16 Float32 Float128 Float128 Float128 Float64 Float128) Float128)
(declare-fun f23 (Float32 Float128 Float64 Float32 Float32 Float32 Float128 Float16 Float32) Float16)
(declare-fun f24 (Float32 Float128 Float16) Float32)
(declare-fun f25 (Float16 Float32 Float128 Float128 Float16 Float64 Float64) Float64)
(declare-fun f26 (Float128 Float128 Float32 Float64 Float128 Float128 Float128 Float32) Float32)
(declare-fun f27 (Float128 Float128 Float64 Float64 Float64 Float64 Float16 Float128 Float16 Float128) Float64)
(declare-fun f28 (Float32 Float128 Float16 Float32 Float32 Float64 Float16 Float128) Float16)
(declare-fun f29 (Float64 Float64 Float128 Float128 Float128 Float64 Float32) Float64)
(declare-fun f30 (Float16 Float128 Float16 Float16 Float64 Float128 Float16 Float16 Float16) Float128)
(declare-fun f31 (Float32 Float16 Float32 Float16 Float16 Float16 Float128 Float64 Float128) Float128)
(declare-fun f32 (Float64 Float128 Float32 Float16 Float16 Float32) Float128)
(declare-fun f33 (Float32 Float64 Float64 Float16 Float128 Float64 Float64) Float16)
(declare-fun f34 (Float64 Float128 Float128 Float16 Float32 Float16 Float64 Float32) Float16)
(declare-fun f35 (Float16 Float32 Float32 Float32 Float16 Float16 Float128 Float16 Float16) Float64)
(declare-fun f36 (Float32) Float32)
(declare-fun f37 (Float16) Float16)
(declare-fun f38 (Float128 Float128 Float16 Float64 Float32 Float128 Float128 Float128 Float16 Float32) Float64)
(declare-fun f39 (Float32 Float128 Float32) Float16)
(declare-fun f40 (Float64 Float128 Float16 Float128 Float32 Float16 Float32 Float16 Float32) Float64)
(declare-fun f41 (Float64 Float128 Float128 Float32 Float64 Float32 Float128 Float16 Float128 Float64) Float128)
(declare-fun f42 (Float128 Float16 Float16 Float32 Float32 Float64 Float128) Float128)
(declare-fun f43 (Float64 Float128 Float16 Float64 Float128 Float128 Float32 Float128 Float32 Float128) Float16)
(declare-fun f44 (Float128 Float32 Float32 Float64 Float16 Float64 Float64 Float128) Float128)
(declare-fun f45 (Float16 Float64 Float64 Float16 Float64 Float64) Float32)
(declare-fun f46 (Float32 Float16 Float16 Float16 Float128 Float128 Float32) Float64)
(declare-fun f47 (Float16 Float64 Float64 Float16 Float64 Float16) Float64)
(declare-fun f48 (Float32 Float32 Float64 Float16 Float32 Float16 Float16 Float64 Float128 Float16) Float32)
(declare-fun f49 (Float64 Float64 Float32 Float64 Float32 Float16 Float64 Float64) Float128)
(declare-fun p0 (Float64 Float16 Float16 Float64 Float32 Float32 Float64 Float16 Float32 Float16) Bool)
(declare-fun p1 (Float128 Float32 Float32 Float16 Float128 Float16 Float128) Bool)
(declare-fun p2 (Float16 Float32 Float32 Float64 Float128 Float128 Float32) Bool)
(declare-fun p3 (Float128 Float32 Float64 Float16 Float32 Float64 Float64 Float64) Bool)
(declare-fun p4 (Float16 Float16 Float64 Float64) Bool)
(declare-fun p5 (Float16) Bool)
(declare-fun p6 (Float128 Float64 Float64) Bool)
(declare-fun p7 (Float32 Float16 Float16 Float64 Float16 Float64 Float64) Bool)
(declare-fun p8 (Float32 Float32 Float64 Float64 Float16) Bool)
(declare-fun p9 (Float16 Float128 Float64 Float32 Float64 Float128 Float16 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float128)
(declare-const ?float62 Float32)
(declare-const ?float63 Float64)
(declare-const ?float64 Float16)
(declare-const ?float65 Float16)
(declare-const ?float66 Float32)
(declare-const ?float67 Float16)
(declare-const ?float68 Float16)
(declare-const ?float69 Float128)
(declare-const ?float70 Float16)
(declare-const ?float71 Float128)
(declare-const ?float72 Float32)
(declare-const ?float73 Float32)
(declare-const ?float74 Float16)
(declare-const ?float75 Float16)
(declare-const ?float76 Float32)
(declare-const ?float77 Float64)
(declare-const ?float78 Float16)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float84 Float128)
(assert (= ?float84 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b0 #b010000000000100 #b1001001011110001010111110111011110110100010011000101001101100010001100011001010011111100010100101111011101000111)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b0 #b001001001001110 #b0000100101011010111111101011001010101001011111011000111010111000100100001011010101000000111111101111110111100011)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b0 #b00111101001 #b1111101110000111110001100100010000001100110001000001)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.abs ?float75)))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.sub RTP ?float92 ((_ to_fp 15 113) RNE ?float77))))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.neg ?float97)))
(declare-const ?float103 Float32)
(assert (= ?float103 (f48 ((_ to_fp 8 24) RTN ?float86) ((_ to_fp 8 24) RTP ?float93) ((_ to_fp 11 53) RTZ ?float78) ((_ to_fp 5 11) RTP ?float79) ((_ to_fp 8 24) RTZ ?float65) ((_ to_fp 5 11) RTP ?float81) ((_ to_fp 5 11) RNE ?float99) ((_ to_fp 11 53) RTP ?float84) ((_ to_fp 15 113) RTN ?float86) ?float68)))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.roundToIntegral RTZ ?float76)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.mul RTZ ?float95 ((_ to_fp 11 53) RTZ ?float87))))
(declare-const ?float106 Float32)
(assert (= ?float106 (f4 ((_ to_fp 5 11) RNE ?float92) ((_ to_fp 11 53) RTP ?float100) ((_ to_fp 15 113) RTP ?float78) ((_ to_fp 15 113) RTZ ?float95) ((_ to_fp 5 11) RNE ?float94) ((_ to_fp 5 11) RNE ?float84) ((_ to_fp 11 53) RTP ?float65))))
(declare-const ?float107 Float128)
(assert (= ?float107 (fp.sub RTP ((_ to_fp 15 113) RTZ ?float104) ?float85)))
(declare-const ?float108 Float16)
(assert (= ?float108 (fp.add RTZ ?float64 ((_ to_fp 5 11) RNE ?float103))))
(declare-const ?float109 Float64)
(assert (= ?float109 (f27 ?float87 ((_ to_fp 15 113) RTN ?float65) ?float93 ((_ to_fp 11 53) RNE ?float83) ?float93 ?float96 ((_ to_fp 5 11) RTN ?float77) ((_ to_fp 15 113) RTN ?float98) ((_ to_fp 5 11) RTP ?float81) ?float84)))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.add RTN ?float96 ?float63)))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.roundToIntegral RTN ?float81)))
(declare-const ?float112 Float128)
(assert (= ?float112 (f31 ((_ to_fp 8 24) RTP ?float79) ((_ to_fp 5 11) RNE ?float104) ((_ to_fp 8 24) RNE ?float85) ((_ to_fp 5 11) RTZ ?float76) ((_ to_fp 5 11) RTZ ?float88) ((_ to_fp 5 11) RTZ ?float102) ((_ to_fp 15 113) RTP ?float77) ((_ to_fp 11 53) RTP ?float94) ((_ to_fp 15 113) RNE ?float67))))
(declare-const ?float113 Float128)
(assert (= ?float113 (fp.abs ?float88)))
(declare-const ?float114 Float128)
(assert (= ?float114 (fp.abs ?float112)))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.max ((_ to_fp 15 113) RTP ?float95) ?float71)))
(declare-const ?float116 Float64)
(assert (= ?float116 (f40 ((_ to_fp 11 53) RTN ?float101) ?float69 ((_ to_fp 5 11) RNE ?float96) ?float113 ((_ to_fp 8 24) RTN ?float86) ((_ to_fp 5 11) RTZ ?float80) ?float91 ((_ to_fp 5 11) RNE ?float80) ((_ to_fp 8 24) RTN ?float93))))
(declare-const ?float117 Float32)
(assert (= ?float117 (fp.roundToIntegral RTN ?float81)))
(declare-const ?float118 Float64)
(assert (= ?float118 (fp.mul RTZ ?float116 ?float109)))
(declare-const ?float119 Float128)
(assert (= ?float119 (fp.min ((_ to_fp 15 113) RTN ?float108) ?float80)))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.max ((_ to_fp 8 24) RNE ?float78) ?float103)))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.mul RNE ((_ to_fp 15 113) RTZ ?float65) ?float99)))
(declare-const ?float122 Float32)
(assert (= ?float122 (fp.max ((_ to_fp 8 24) RTZ ?float63) ?float111)))
(declare-const ?float123 Float128)
(assert (= ?float123 (f1 ((_ to_fp 5 11) RTP ?float71) ((_ to_fp 5 11) RTZ ?float122) ?float98 ?float113 ((_ to_fp 11 53) RTP ?float66) ((_ to_fp 11 53) RNE ?float67))))
(declare-const ?float124 Float128)
(assert (= ?float124 (fp.add RTZ ?float114 ((_ to_fp 15 113) RTN ?float110))))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.div RTP ((_ to_fp 8 24) RTZ ?float100) ?float62)))
(declare-const ?float126 Float64)
(assert (= ?float126 (fp.abs ?float77)))
(declare-const ?float127 Float128)
(assert (= ?float127 (fp.neg ?float88)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.min ((_ to_fp 8 24) RTZ ?float67) ?float76)))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.sub RTP ((_ to_fp 8 24) RTN ?float74) ?float60)))
(declare-const ?float130 Float64)
(assert (= ?float130 (fp.min ((_ to_fp 11 53) RTN ?float99) ?float63)))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.sqrt RNE ?float98)))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.sqrt RNE ?float71)))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.sub RNE ?float116 ?float95)))
(declare-const ?float134 Float64)
(assert (= ?float134 (f27 ?float89 ((_ to_fp 15 113) RNE ?float82) ?float118 ((_ to_fp 11 53) RTN ?float104) ?float96 ?float96 ((_ to_fp 5 11) RTP ?float130) ?float119 ((_ to_fp 5 11) RNE ?float87) ((_ to_fp 15 113) RTP ?float100))))
(declare-const ?float135 Float64)
(assert (= ?float135 (fp.max ?float79 ?float116)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.roundToIntegral RTP ?float100)))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.abs ?float64)))
(declare-const ?float138 Float128)
(assert (= ?float138 (fp.sqrt RNE ?float84)))
(declare-const ?float139 Float64)
(assert (= ?float139 (f27 ((_ to_fp 15 113) RTN ?float75) ((_ to_fp 15 113) RTP ?float95) ?float86 ((_ to_fp 11 53) RTP ?float114) ((_ to_fp 11 53) RTZ ?float125) ((_ to_fp 11 53) RTZ ?float132) ((_ to_fp 5 11) RTN ?float99) ?float102 ((_ to_fp 5 11) RNE ?float134) ?float138)))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.sub RTP ((_ to_fp 15 113) RNE ?float83) ?float99)))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.abs ?float79)))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.add RNE ?float99 ?float97)))
(declare-const ?float143 Float128)
(assert (= ?float143 (fp.sqrt RTN ?float94)))
(declare-const ?float144 Float128)
(assert (= ?float144 (f31 ((_ to_fp 8 24) RTZ ?float112) ((_ to_fp 5 11) RTN ?float139) ?float66 ((_ to_fp 5 11) RTP ?float81) ?float70 ((_ to_fp 5 11) RNE ?float101) ((_ to_fp 15 113) RNE ?float86) ((_ to_fp 11 53) RTP ?float73) ((_ to_fp 15 113) RNE ?float95))))
(declare-const ?float145 Float16)
(assert (= ?float145 (fp.add RTN ?float78 ?float83)))
(declare-const ?float146 Float64)
(assert (= ?float146 (fp.div RTN ?float135 ?float141)))
(declare-const ?float147 Float16)
(assert (= ?float147 (f23 ?float66 ?float124 ?float141 ((_ to_fp 8 24) RTP ?float74) ((_ to_fp 8 24) RTZ ?float85) ((_ to_fp 8 24) RTZ ?float136) ((_ to_fp 15 113) RTZ ?float137) ((_ to_fp 5 11) RTZ ?float80) ((_ to_fp 8 24) RNE ?float118))))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.roundToIntegral RTN ?float86)))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.max ?float68 ?float100)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isPositive ?float96)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.geq ((_ to_fp 5 11) RNE ?float118) ?float78)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNaN ?float74)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isSubnormal ?float76)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNormal ?float86)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p5 ((_ to_fp 5 11) RNE ?float89))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.eq ((_ to_fp 8 24) RNE ?float147) ?float104)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p5 ((_ to_fp 5 11) RTN ?float119))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p6 ?float138 ((_ to_fp 11 53) RNE ?float78) ((_ to_fp 11 53) RTZ ?float87))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p5 ((_ to_fp 5 11) RTN ?float105))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isZero ?float129)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.leq ?float135 ?float105)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNaN ?float72)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.gt ((_ to_fp 15 113) RNE ?float141) ?float102)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isNaN ?float86)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p3 ?float140 ((_ to_fp 8 24) RTP ?float121) ?float141 ?float108 ((_ to_fp 8 24) RTP ?float93) ((_ to_fp 11 53) RTN ?float69) ((_ to_fp 11 53) RTN ?float81) ((_ to_fp 11 53) RTZ ?float121))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isSubnormal ?float119)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNegative ?float119)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (p9 ((_ to_fp 5 11) RTN ?float135) ?float84 ((_ to_fp 11 53) RTP ?float66) ?float120 ((_ to_fp 11 53) RNE ?float61) ((_ to_fp 15 113) RNE ?float110) ((_ to_fp 5 11) RNE ?float140) ((_ to_fp 8 24) RTZ ?float135))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNormal ?float142)))
; FINAL ASSERT
(assert (or (and ?bool156 (or ?bool165))))
(check-sat)


-- iteration 107 --
(declare-fun f0 (Float16 Float32 Float16 Float128 Float32 Float16 Float128 Float128 Float16 Float128) Float128)
(declare-fun f1 (Float128 Float64 Float128 Float32 Float32) Float32)
(declare-fun f2 (Float64 Float128 Float128 Float16 Float128 Float64 Float16) Float128)
(declare-fun f3 (Float16 Float16 Float16 Float128 Float16 Float32 Float64 Float64 Float128) Float32)
(declare-fun f4 (Float32 Float64 Float64) Float16)
(declare-fun f5 (Float16 Float64 Float128 Float32 Float128 Float16 Float16) Float64)
(declare-fun f6 (Float32 Float128) Float16)
(declare-fun f7 (Float128 Float32 Float16 Float128) Float128)
(declare-fun f8 (Float32 Float128 Float64 Float64 Float16) Float128)
(declare-fun f9 (Float64 Float32 Float64 Float32 Float64 Float16 Float32) Float128)
(declare-fun f10 (Float128 Float64 Float16 Float32 Float16 Float32 Float32) Float64)
(declare-fun f11 (Float128 Float32 Float64 Float64) Float32)
(declare-fun f12 (Float64 Float64 Float32 Float32 Float128 Float128 Float128 Float128 Float16 Float64) Float32)
(declare-fun f13 (Float16 Float128 Float32 Float64 Float128 Float128 Float16) Float128)
(declare-fun f14 (Float32 Float128 Float16 Float128 Float64 Float16 Float128) Float32)
(declare-fun f15 (Float64 Float64 Float64 Float16) Float128)
(declare-fun f16 (Float64 Float16 Float128 Float64 Float128 Float128 Float16 Float16 Float16) Float32)
(declare-fun f17 (Float32 Float16 Float16 Float16 Float128 Float16 Float32 Float32) Float128)
(declare-fun f18 (Float16 Float16 Float128 Float32 Float32) Float16)
(declare-fun f19 (Float64 Float64 Float128) Float32)
(declare-fun f20 (Float64) Float128)
(declare-fun f21 (Float16 Float16 Float128) Float32)
(declare-fun f22 (Float32 Float32 Float16 Float32 Float16 Float16 Float128 Float128) Float64)
(declare-fun f23 (Float16 Float128 Float16 Float16 Float128 Float16 Float32 Float16 Float128 Float64) Float128)
(declare-fun f24 (Float64 Float128 Float32 Float16 Float16) Float64)
(declare-fun f25 (Float64 Float32 Float16 Float16 Float64) Float16)
(declare-fun f26 (Float64 Float32 Float32 Float32) Float16)
(declare-fun f27 (Float32 Float32 Float128 Float32 Float64 Float128 Float64) Float128)
(declare-fun f28 (Float32 Float16 Float128 Float64 Float128 Float16 Float64 Float128 Float32) Float64)
(declare-fun f29 (Float64 Float32 Float128 Float32 Float64 Float16 Float64 Float32 Float16) Float16)
(declare-fun f30 (Float128 Float16 Float128 Float32 Float128 Float128 Float64 Float128) Float64)
(declare-fun f31 (Float16 Float128) Float16)
(declare-fun f32 (Float128) Float64)
(declare-fun f33 (Float128 Float128 Float16 Float16 Float32 Float16 Float32 Float64) Float32)
(declare-fun f34 (Float32 Float64 Float32 Float32 Float32 Float32 Float128 Float16) Float64)
(declare-fun f35 (Float16 Float32 Float16 Float16 Float32) Float64)
(declare-fun f36 (Float32 Float32 Float128 Float64 Float32 Float64 Float128 Float128 Float128 Float128) Float64)
(declare-fun f37 (Float16 Float16 Float32) Float16)
(declare-fun f38 (Float64 Float16 Float128 Float128 Float16) Float32)
(declare-fun f39 (Float64 Float16 Float128 Float32 Float16) Float16)
(declare-fun f40 (Float128 Float32 Float64) Float16)
(declare-fun f41 (Float16 Float128 Float128 Float32 Float16 Float32 Float32 Float16 Float128 Float128) Float32)
(declare-fun f42 (Float32 Float32 Float16 Float16 Float64 Float16 Float128 Float64 Float128) Float32)
(declare-fun f43 (Float128 Float64) Float128)
(declare-fun f44 (Float32) Float32)
(declare-fun f45 (Float32 Float16 Float128) Float128)
(declare-fun f46 (Float16) Float64)
(declare-fun f47 (Float16 Float128 Float64) Float32)
(declare-fun f48 (Float128 Float128 Float64 Float128 Float64 Float16 Float64 Float32 Float16 Float128) Float32)
(declare-fun f49 (Float32 Float64 Float32 Float16 Float128 Float32 Float128 Float64 Float16) Float64)
(declare-fun p0 (Float64 Float32 Float128) Bool)
(declare-fun p1 (Float16 Float32) Bool)
(declare-fun p2 (Float32 Float64 Float16 Float64 Float32 Float64 Float16 Float16) Bool)
(declare-fun p3 (Float32 Float16 Float128) Bool)
(declare-fun p4 (Float64 Float16 Float32 Float64 Float16 Float16 Float32) Bool)
(declare-fun p5 (Float128 Float32 Float128 Float16 Float64 Float128) Bool)
(declare-fun p6 (Float32 Float16 Float32 Float32 Float32) Bool)
(declare-fun p7 (Float32 Float128 Float32) Bool)
(declare-fun p8 (Float32) Bool)
(declare-fun p9 (Float32 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float16)
(declare-const ?float62 Float32)
(declare-const ?float63 Float32)
(declare-const ?float64 Float16)
(declare-const ?float65 Float32)
(declare-const ?float66 Float32)
(declare-const ?float67 Float128)
(declare-const ?float68 Float128)
(declare-const ?float69 Float16)
(declare-const ?float70 Float16)
(declare-const ?float71 Float128)
(declare-const ?float72 Float16)
(declare-const ?float73 Float128)
(declare-const ?float74 Float16)
(declare-const ?float75 Float64)
(declare-const ?float76 Float128)
(declare-const ?float77 Float64)
(declare-const ?float78 Float64)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b0 #b00100 #b0110011010)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b0 #b01001001110 #b1000110010000010111111011111110011010101000010001001)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b1 #b11100 #b1000100010)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b0 #b100111101010001 #b1101011010101010110010101001101000011001110110101110111111111110110010111010111011001101101101100000101000001001)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.neg ?float90)))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.add RTN ((_ to_fp 8 24) RNE ?float80) ?float98)))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.sqrt RTN ?float87)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.neg ?float85)))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.div RTN ((_ to_fp 5 11) RTP ?float99) ?float69)))
(declare-const ?float105 Float128)
(assert (= ?float105 (f13 ((_ to_fp 5 11) RTP ?float62) ((_ to_fp 15 113) RNE ?float104) ((_ to_fp 8 24) RTP ?float64) ((_ to_fp 11 53) RTN ?float96) ((_ to_fp 15 113) RTZ ?float64) ((_ to_fp 15 113) RTP ?float78) ((_ to_fp 5 11) RTN ?float67))))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.neg ?float81)))
(declare-const ?float107 Float128)
(assert (= ?float107 (fp.mul RTZ ?float96 ((_ to_fp 15 113) RTN ?float75))))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.mul RTP ?float79 ((_ to_fp 8 24) RTP ?float96))))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.abs ?float86)))
(declare-const ?float110 Float32)
(assert (= ?float110 (fp.abs ?float108)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.add RTZ ?float103 ?float85)))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.min ((_ to_fp 5 11) RTP ?float65) ?float88)))
(declare-const ?float113 Float128)
(assert (= ?float113 (fp.sub RNE ?float87 ((_ to_fp 15 113) RTN ?float65))))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.abs ?float101)))
(declare-const ?float115 Float32)
(assert (= ?float115 (f12 ?float78 ((_ to_fp 11 53) RTN ?float103) ((_ to_fp 8 24) RTP ?float80) ?float65 ((_ to_fp 15 113) RNE ?float110) ((_ to_fp 15 113) RTZ ?float72) ((_ to_fp 15 113) RTP ?float114) ((_ to_fp 15 113) RTP ?float90) ((_ to_fp 5 11) RTZ ?float67) ?float83)))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.div RNE ((_ to_fp 11 53) RTN ?float66) ?float86)))
(declare-const ?float117 Float32)
(assert (= ?float117 (fp.div RTP ?float60 ((_ to_fp 8 24) RTP ?float83))))
(declare-const ?float118 Float64)
(assert (= ?float118 (fp.neg ?float116)))
(declare-const ?float119 Float128)
(assert (= ?float119 (f9 ((_ to_fp 11 53) RNE ?float73) ?float100 ((_ to_fp 11 53) RTP ?float70) ((_ to_fp 8 24) RTN ?float68) ((_ to_fp 11 53) RTN ?float87) ((_ to_fp 5 11) RTZ ?float76) ((_ to_fp 8 24) RTN ?float76))))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.mul RTN ((_ to_fp 8 24) RTN ?float74) ?float79)))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.max ?float107 ?float93)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.neg ?float88)))
(declare-const ?float123 Float16)
(assert (= ?float123 (f6 ((_ to_fp 8 24) RTN ?float78) ((_ to_fp 15 113) RTZ ?float99))))
(declare-const ?float124 Float16)
(assert (= ?float124 (fp.mul RNE ?float112 ?float72)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.abs ?float117)))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.add RTZ ((_ to_fp 8 24) RTP ?float85) ?float66)))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.roundToIntegral RTZ ?float100)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.div RTZ ((_ to_fp 8 24) RTZ ?float119) ?float120)))
(declare-const ?float129 Float128)
(assert (= ?float129 (fp.neg ?float113)))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.max ?float65 ((_ to_fp 8 24) RNE ?float64))))
(declare-const ?float131 Float16)
(assert (= ?float131 (f6 ((_ to_fp 8 24) RTN ?float105) ?float87)))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.max ((_ to_fp 15 113) RTN ?float117) ?float105)))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.min ((_ to_fp 8 24) RNE ?float83) ?float125)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.mul RNE ((_ to_fp 15 113) RTZ ?float66) ?float105)))
(declare-const ?float135 Float128)
(assert (= ?float135 (f27 ((_ to_fp 8 24) RTZ ?float122) ((_ to_fp 8 24) RTN ?float83) ((_ to_fp 15 113) RTZ ?float108) ((_ to_fp 8 24) RNE ?float75) ((_ to_fp 11 53) RTZ ?float65) ?float102 ?float75)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.min ?float69 ((_ to_fp 5 11) RTZ ?float99))))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.div RTP ?float90 ((_ to_fp 8 24) RTP ?float123))))
(declare-const ?float138 Float32)
(assert (= ?float138 (fp.roundToIntegral RTN ?float110)))
(declare-const ?float139 Float64)
(assert (= ?float139 (f24 ((_ to_fp 11 53) RNE ?float91) ?float71 ((_ to_fp 8 24) RNE ?float64) ?float69 ((_ to_fp 5 11) RTN ?float78))))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.mul RTP ((_ to_fp 8 24) RTZ ?float132) ?float114)))
(declare-const ?float141 Float16)
(assert (= ?float141 (f31 ((_ to_fp 5 11) RTN ?float99) ?float96)))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.roundToIntegral RTN ?float80)))
(declare-const ?float143 Float128)
(assert (= ?float143 (fp.mul RTP ?float97 ((_ to_fp 15 113) RTZ ?float83))))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.sqrt RTP ?float79)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.neg ?float144)))
(declare-const ?float146 Float16)
(assert (= ?float146 (f25 ((_ to_fp 11 53) RTP ?float114) ?float114 ((_ to_fp 5 11) RTZ ?float128) ((_ to_fp 5 11) RTN ?float101) ((_ to_fp 11 53) RNE ?float79))))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.roundToIntegral RNE ?float130)))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.min ?float72 ?float85)))
(declare-const ?float149 Float32)
(assert (= ?float149 (fp.sub RNE ?float133 ?float147)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.geq ((_ to_fp 8 24) RTP ?float77) ?float127)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.lt ?float85 ?float72)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isInfinite ?float97)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isInfinite ?float120)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNormal ?float143)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isInfinite ?float137)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.leq ?float111 ((_ to_fp 5 11) RTZ ?float100))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNaN ?float98)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isZero ?float105)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p7 ((_ to_fp 8 24) RTP ?float113) ((_ to_fp 15 113) RTZ ?float146) ((_ to_fp 8 24) RTN ?float95))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.gt ?float103 ?float80)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNaN ?float120)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isZero ?float82)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.eq ?float127 ((_ to_fp 8 24) RTZ ?float104))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (p2 ((_ to_fp 8 24) RTP ?float81) ((_ to_fp 11 53) RTZ ?float97) ((_ to_fp 5 11) RTP ?float127) ((_ to_fp 11 53) RTN ?float74) ?float126 ((_ to_fp 11 53) RTN ?float110) ((_ to_fp 5 11) RTN ?float100) ?float88)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isPositive ?float110)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.eq ?float149 ?float63)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isSubnormal ?float145)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.leq ((_ to_fp 5 11) RTN ?float116) ?float88)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNaN ?float137)))
; FINAL ASSERT
(assert (or (and ?bool155 ?bool162 ?bool159) ?bool151 ?bool157))
(check-sat)


-- iteration 108 --
(declare-fun f0 (Float64 Float128 Float16 Float16 Float128) Float64)
(declare-fun f1 (Float16 Float64 Float128 Float128 Float32 Float128 Float16 Float64 Float32 Float16) Float64)
(declare-fun f2 (Float32 Float32 Float16 Float128 Float64 Float16) Float64)
(declare-fun f3 (Float32 Float32 Float32 Float16 Float16 Float128 Float16) Float64)
(declare-fun f4 (Float128) Float32)
(declare-fun f5 (Float64 Float128) Float32)
(declare-fun f6 (Float128 Float64 Float64 Float32) Float128)
(declare-fun f7 (Float32) Float16)
(declare-fun f8 (Float64 Float16 Float64 Float16 Float64 Float64 Float64 Float64) Float16)
(declare-fun f9 (Float16 Float16 Float32 Float32 Float128 Float64 Float16) Float64)
(declare-fun f10 (Float32 Float32 Float16 Float32 Float64 Float64) Float32)
(declare-fun f11 (Float16 Float64 Float16 Float32 Float16) Float128)
(declare-fun f12 (Float16 Float32 Float64 Float32 Float64 Float16 Float16 Float128 Float32 Float128) Float64)
(declare-fun f13 (Float16 Float128 Float64 Float32 Float128 Float128 Float16) Float128)
(declare-fun f14 (Float128) Float32)
(declare-fun f15 (Float16 Float128 Float64 Float64 Float32 Float128 Float16 Float16 Float128) Float32)
(declare-fun f16 (Float16 Float32 Float64) Float16)
(declare-fun f17 (Float16 Float64 Float64 Float64 Float32 Float64) Float128)
(declare-fun f18 (Float128 Float32 Float64 Float64 Float16 Float64 Float128 Float128 Float16 Float64) Float16)
(declare-fun f19 (Float32 Float32 Float128) Float16)
(declare-fun f20 (Float16 Float64) Float64)
(declare-fun f21 (Float32 Float128 Float16) Float32)
(declare-fun f22 (Float64 Float128 Float128 Float16 Float32) Float128)
(declare-fun f23 (Float32 Float32 Float16) Float128)
(declare-fun f24 (Float16 Float16 Float16 Float16 Float64 Float32 Float16) Float128)
(declare-fun f25 (Float128 Float32 Float16 Float32 Float128 Float32 Float64) Float16)
(declare-fun f26 (Float128 Float32 Float16 Float128 Float64 Float128 Float64 Float128 Float64) Float64)
(declare-fun f27 (Float32 Float32) Float32)
(declare-fun f28 (Float32 Float64 Float64) Float64)
(declare-fun f29 (Float32 Float16 Float128 Float32 Float64 Float64 Float128 Float64) Float128)
(declare-fun f30 (Float128) Float128)
(declare-fun f31 (Float16 Float64) Float16)
(declare-fun f32 (Float128 Float16 Float64 Float32 Float64 Float128 Float16) Float64)
(declare-fun f33 (Float64 Float16 Float32 Float32) Float16)
(declare-fun f34 (Float32 Float128 Float128 Float128 Float128 Float128 Float16 Float128 Float32) Float128)
(declare-fun f35 (Float16 Float64 Float64 Float128 Float64 Float16 Float32) Float64)
(declare-fun f36 (Float32 Float16 Float32 Float128 Float16 Float128 Float16 Float32) Float128)
(declare-fun f37 (Float64 Float128 Float64 Float32 Float128 Float64 Float16 Float32) Float16)
(declare-fun f38 (Float32 Float128 Float64 Float64 Float64 Float32 Float64 Float32) Float16)
(declare-fun f39 (Float128 Float32) Float128)
(declare-fun f40 (Float16 Float32 Float64 Float128 Float32 Float128 Float16 Float16) Float16)
(declare-fun f41 (Float16 Float128 Float64 Float32 Float128 Float64 Float128 Float128 Float64 Float16) Float64)
(declare-fun f42 (Float128 Float64 Float32 Float32 Float128 Float16) Float64)
(declare-fun f43 (Float128 Float16 Float64 Float32) Float128)
(declare-fun f44 (Float64 Float32 Float32 Float64 Float128 Float32 Float16 Float16) Float128)
(declare-fun f45 (Float64 Float128 Float64 Float16 Float16 Float128 Float32 Float32 Float16) Float128)
(declare-fun f46 (Float128) Float32)
(declare-fun f47 (Float16 Float16 Float128 Float64 Float128 Float16 Float32 Float64 Float128) Float32)
(declare-fun f48 (Float128 Float128 Float64 Float16 Float32 Float128 Float128 Float32 Float16 Float128) Float128)
(declare-fun f49 (Float64 Float32 Float16) Float16)
(declare-fun p0 (Float32 Float32 Float128 Float64 Float64 Float32 Float128 Float128 Float64 Float64) Bool)
(declare-fun p1 (Float16 Float64 Float16 Float64 Float128 Float16) Bool)
(declare-fun p2 (Float16 Float16 Float16 Float32 Float32 Float32) Bool)
(declare-fun p3 (Float16 Float32 Float16 Float32 Float128 Float128 Float64 Float128 Float16) Bool)
(declare-fun p4 (Float64 Float64) Bool)
(declare-fun p5 (Float32 Float32 Float128 Float16 Float32 Float64 Float64 Float64 Float64 Float16) Bool)
(declare-fun p6 (Float32 Float32 Float32) Bool)
(declare-fun p7 (Float128 Float128 Float64 Float16) Bool)
(declare-fun p8 (Float64 Float64 Float16 Float64 Float16) Bool)
(declare-fun p9 (Float64 Float64 Float64 Float64 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float64)
(declare-const ?float62 Float32)
(declare-const ?float63 Float64)
(declare-const ?float64 Float32)
(declare-const ?float65 Float64)
(declare-const ?float66 Float64)
(declare-const ?float67 Float128)
(declare-const ?float68 Float128)
(declare-const ?float69 Float16)
(declare-const ?float70 Float128)
(declare-const ?float71 Float16)
(declare-const ?float72 Float64)
(declare-const ?float73 Float32)
(declare-const ?float74 Float16)
(declare-const ?float75 Float64)
(declare-const ?float76 Float16)
(declare-const ?float77 Float64)
(declare-const ?float78 Float64)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b0 #b00011111 #b01000011100010010001101)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b1 #b01101000 #b01100100111010101011110)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b0 #b01110110010 #b0110111011100111000100101010001000011110011001111111)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b0 #b10000 #b1101100111)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b0 #b01110010 #b11000010000110110111000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b11000 #b1011110010)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b0 #b00000000 #b00000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.div RNE ((_ to_fp 5 11) RTZ ?float80) ?float87)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.add RTZ ?float69 ?float100)))
(declare-const ?float102 Float64)
(assert (= ?float102 (f1 ((_ to_fp 5 11) RTP ?float92) ?float61 ((_ to_fp 15 113) RTN ?float78) ((_ to_fp 15 113) RTN ?float63) ((_ to_fp 8 24) RNE ?float87) ((_ to_fp 15 113) RTN ?float90) ?float87 ?float93 ?float62 ?float74)))
(declare-const ?float103 Float32)
(assert (= ?float103 (fp.min ?float89 ((_ to_fp 8 24) RTZ ?float66))))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.min ((_ to_fp 5 11) RTP ?float63) ?float91)))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.sub RTN ?float69 ?float96)))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.mul RTZ ?float86 ?float68)))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.sqrt RTP ?float64)))
(declare-const ?float108 Float32)
(assert (= ?float108 (f21 ((_ to_fp 8 24) RTZ ?float83) ((_ to_fp 15 113) RNE ?float62) ?float105)))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.sub RTZ ?float76 ((_ to_fp 5 11) RTP ?float81))))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.min ?float70 ((_ to_fp 15 113) RNE ?float105))))
(declare-const ?float111 Float128)
(assert (= ?float111 (fp.mul RTP ((_ to_fp 15 113) RTP ?float99) ?float67)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.sqrt RTN ?float102)))
(declare-const ?float113 Float64)
(assert (= ?float113 (f12 ((_ to_fp 5 11) RTN ?float64) ((_ to_fp 8 24) RTZ ?float69) ?float66 ?float81 ?float93 ((_ to_fp 5 11) RTZ ?float82) ((_ to_fp 5 11) RTZ ?float62) ?float110 ((_ to_fp 8 24) RNE ?float88) ((_ to_fp 15 113) RTP ?float89))))
(declare-const ?float114 Float64)
(assert (= ?float114 (f26 ?float110 ((_ to_fp 8 24) RTZ ?float96) ((_ to_fp 5 11) RTN ?float70) ((_ to_fp 15 113) RTP ?float90) ((_ to_fp 11 53) RNE ?float71) ((_ to_fp 15 113) RTZ ?float112) ((_ to_fp 11 53) RTN ?float98) ?float97 ((_ to_fp 11 53) RNE ?float83))))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.mul RNE ?float99 ((_ to_fp 8 24) RTP ?float112))))
(declare-const ?float116 Float16)
(assert (= ?float116 (f16 ((_ to_fp 5 11) RTN ?float103) ?float64 ((_ to_fp 11 53) RTZ ?float91))))
(declare-const ?float117 Float128)
(assert (= ?float117 (fp.sub RTN ((_ to_fp 15 113) RTN ?float66) ?float97)))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.add RTP ?float87 ((_ to_fp 5 11) RTP ?float88))))
(declare-const ?float119 Float32)
(assert (= ?float119 (fp.roundToIntegral RTP ?float115)))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.sqrt RTN ?float117)))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.max ?float68 ((_ to_fp 15 113) RTZ ?float94))))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.sqrt RTP ?float98)))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.sqrt RTZ ?float83)))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.div RNE ((_ to_fp 8 24) RNE ?float118) ?float81)))
(declare-const ?float125 Float128)
(assert (= ?float125 (fp.neg ?float80)))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.div RTP ((_ to_fp 15 113) RTN ?float99) ?float86)))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.mul RTN ?float105 ((_ to_fp 5 11) RNE ?float125))))
(declare-const ?float128 Float16)
(assert (= ?float128 (fp.sqrt RTZ ?float94)))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.max ?float87 ((_ to_fp 5 11) RTZ ?float65))))
(declare-const ?float130 Float16)
(assert (= ?float130 (f16 ?float116 ((_ to_fp 8 24) RNE ?float65) ((_ to_fp 11 53) RTP ?float117))))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.mul RNE ?float65 ((_ to_fp 11 53) RTZ ?float106))))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.sqrt RTP ?float108)))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.neg ?float93)))
(declare-const ?float134 Float32)
(assert (= ?float134 (fp.mul RTN ?float62 ?float73)))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.sub RNE ((_ to_fp 8 24) RTZ ?float97) ?float119)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.sub RTN ?float100 ((_ to_fp 5 11) RNE ?float106))))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.div RTP ?float90 ?float101)))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.div RTZ ?float74 ((_ to_fp 5 11) RNE ?float88))))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.roundToIntegral RNE ?float121)))
(declare-const ?float140 Float16)
(assert (= ?float140 (f38 ((_ to_fp 8 24) RTP ?float136) ((_ to_fp 15 113) RNE ?float94) ((_ to_fp 11 53) RTN ?float103) ((_ to_fp 11 53) RTN ?float64) ((_ to_fp 11 53) RTN ?float100) ?float135 ((_ to_fp 11 53) RTZ ?float96) ?float124)))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.max ?float80 ((_ to_fp 15 113) RTN ?float137))))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.add RNE ?float96 ((_ to_fp 5 11) RTN ?float141))))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.min ?float133 ((_ to_fp 11 53) RNE ?float99))))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.add RNE ?float128 ((_ to_fp 5 11) RTN ?float125))))
(declare-const ?float145 Float16)
(assert (= ?float145 (fp.mul RTP ((_ to_fp 5 11) RTP ?float120) ?float101)))
(declare-const ?float146 Float64)
(assert (= ?float146 (f2 ((_ to_fp 8 24) RTZ ?float72) ((_ to_fp 8 24) RTN ?float122) ((_ to_fp 5 11) RNE ?float97) ((_ to_fp 15 113) RTP ?float93) ((_ to_fp 11 53) RTZ ?float141) ?float87)))
(declare-const ?float147 Float16)
(assert (= ?float147 (f40 ((_ to_fp 5 11) RTP ?float88) ?float108 ?float66 ((_ to_fp 15 113) RTP ?float134) ?float107 ?float80 ((_ to_fp 5 11) RTN ?float79) ((_ to_fp 5 11) RNE ?float63))))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.mul RTP ?float72 ((_ to_fp 11 53) RTZ ?float97))))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.div RTP ?float142 ((_ to_fp 5 11) RTP ?float139))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isNaN ?float65)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isSubnormal ?float79)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isSubnormal ?float128)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.leq ((_ to_fp 11 53) RTN ?float126) ?float93)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p5 ((_ to_fp 8 24) RTZ ?float68) ((_ to_fp 8 24) RTZ ?float101) ((_ to_fp 15 113) RNE ?float114) ?float69 ((_ to_fp 8 24) RTN ?float123) ?float63 ((_ to_fp 11 53) RNE ?float98) ((_ to_fp 11 53) RTN ?float67) ((_ to_fp 11 53) RTZ ?float92) ((_ to_fp 5 11) RNE ?float102))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isNormal ?float96)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isPositive ?float98)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isPositive ?float129)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isZero ?float106)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isZero ?float115)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNegative ?float136)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNormal ?float93)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.leq ((_ to_fp 8 24) RTP ?float133) ?float89)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.leq ((_ to_fp 11 53) RNE ?float96) ?float72)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isInfinite ?float70)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.lt ?float78 ?float82)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.geq ?float122 ((_ to_fp 15 113) RTN ?float93))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.geq ?float67 ((_ to_fp 15 113) RTZ ?float147))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isInfinite ?float122)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.gt ((_ to_fp 8 24) RTP ?float80) ?float135)))
; FINAL ASSERT
(assert (and (and (or (and (or ?bool166 ?bool158 ?bool167)) ?bool160 ?bool154) (and (and (and ?bool169) (and ?bool159 ?bool163)) ?bool167) ?bool163)))
(check-sat)


-- iteration 109 --
(declare-fun f0 (Float128 Float128 Float128 Float128 Float16 Float16) Float64)
(declare-fun f1 (Float32 Float64 Float32 Float128 Float64 Float128) Float32)
(declare-fun f2 (Float128 Float64 Float64 Float32 Float16 Float64) Float128)
(declare-fun f3 (Float32 Float32 Float16 Float16 Float32 Float64 Float128 Float32 Float128) Float32)
(declare-fun f4 (Float64 Float32 Float128 Float16 Float32 Float16 Float64 Float64 Float64 Float16) Float128)
(declare-fun f5 (Float64 Float128 Float32 Float128) Float16)
(declare-fun f6 (Float64 Float16) Float32)
(declare-fun f7 (Float128 Float64 Float64) Float32)
(declare-fun f8 (Float64 Float64 Float64 Float128 Float64 Float32 Float32 Float32 Float128) Float128)
(declare-fun f9 (Float64 Float64 Float16) Float16)
(declare-fun f10 (Float32 Float32) Float32)
(declare-fun f11 (Float32 Float16 Float128) Float128)
(declare-fun f12 (Float64 Float32 Float32 Float64 Float128 Float32 Float128 Float32) Float16)
(declare-fun f13 (Float32 Float16 Float32 Float128 Float128 Float32 Float128 Float128) Float64)
(declare-fun f14 (Float128 Float32 Float16 Float64 Float64 Float16 Float64 Float16 Float64 Float32) Float64)
(declare-fun f15 (Float128 Float64 Float32) Float16)
(declare-fun f16 (Float128 Float64) Float128)
(declare-fun f17 (Float32 Float128 Float128) Float32)
(declare-fun f18 (Float128 Float16 Float128 Float16 Float32 Float128 Float64 Float32 Float16 Float16) Float32)
(declare-fun f19 (Float128 Float32 Float64) Float32)
(declare-fun f20 (Float128 Float16 Float32 Float128 Float16 Float16 Float128 Float128 Float16 Float128) Float16)
(declare-fun f21 (Float128 Float16 Float64 Float32 Float32) Float128)
(declare-fun f22 (Float16 Float128 Float64 Float128 Float128 Float128 Float16 Float16) Float16)
(declare-fun f23 (Float32 Float16 Float128 Float32 Float16 Float32) Float16)
(declare-fun f24 (Float16) Float16)
(declare-fun f25 (Float128) Float32)
(declare-fun f26 (Float16 Float16 Float32 Float64 Float16 Float32) Float64)
(declare-fun f27 (Float32 Float64 Float16 Float128 Float128 Float32 Float16 Float64 Float32) Float16)
(declare-fun f28 (Float64 Float16) Float128)
(declare-fun f29 (Float32 Float64 Float128 Float32 Float128) Float16)
(declare-fun f30 (Float16) Float64)
(declare-fun f31 (Float32 Float128 Float16 Float32 Float16 Float32 Float16) Float128)
(declare-fun f32 (Float32 Float16 Float32 Float32 Float128 Float32) Float128)
(declare-fun f33 (Float64 Float32 Float32) Float64)
(declare-fun f34 (Float128 Float64) Float128)
(declare-fun f35 (Float128 Float64) Float32)
(declare-fun f36 (Float128) Float32)
(declare-fun f37 (Float128 Float64 Float128) Float64)
(declare-fun f38 (Float16 Float32) Float16)
(declare-fun f39 (Float128 Float32 Float16 Float64 Float16 Float16 Float64 Float64 Float64 Float32) Float32)
(declare-fun f40 (Float16 Float32 Float128 Float32 Float128 Float128 Float16 Float16 Float64 Float32) Float64)
(declare-fun f41 (Float128 Float128 Float32 Float32 Float32 Float128 Float128 Float64 Float128) Float64)
(declare-fun f42 (Float16 Float128 Float128 Float64 Float32 Float128 Float64) Float32)
(declare-fun f43 (Float32 Float32 Float16 Float32 Float64) Float16)
(declare-fun f44 (Float128 Float16 Float64 Float32) Float32)
(declare-fun f45 (Float16 Float128 Float32 Float64 Float32 Float32 Float64) Float64)
(declare-fun f46 (Float32 Float64 Float16 Float128) Float32)
(declare-fun f47 (Float32 Float64 Float16 Float128 Float64 Float32 Float128 Float128 Float128) Float64)
(declare-fun f48 (Float16 Float32 Float64 Float128 Float16 Float64 Float16 Float64) Float16)
(declare-fun f49 (Float32 Float64 Float128) Float16)
(declare-fun p0 (Float128) Bool)
(declare-fun p1 (Float128 Float16 Float16 Float64 Float128) Bool)
(declare-fun p2 (Float16 Float32 Float128) Bool)
(declare-fun p3 (Float64) Bool)
(declare-fun p4 (Float32 Float64 Float128 Float32 Float128 Float16 Float32 Float16 Float64) Bool)
(declare-fun p5 (Float32 Float128 Float128 Float64 Float32 Float32) Bool)
(declare-fun p6 (Float64 Float64 Float32 Float16) Bool)
(declare-fun p7 (Float16 Float128 Float128 Float64 Float128) Bool)
(declare-fun p8 (Float16 Float32 Float32) Bool)
(declare-fun p9 (Float16 Float128 Float32 Float128 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float128)
(declare-const ?float62 Float32)
(declare-const ?float63 Float16)
(declare-const ?float64 Float64)
(declare-const ?float65 Float16)
(declare-const ?float66 Float32)
(declare-const ?float67 Float16)
(declare-const ?float68 Float16)
(declare-const ?float69 Float64)
(declare-const ?float70 Float64)
(declare-const ?float71 Float32)
(declare-const ?float72 Float64)
(declare-const ?float73 Float128)
(declare-const ?float74 Float32)
(declare-const ?float75 Float16)
(declare-const ?float76 Float128)
(declare-const ?float77 Float64)
(declare-const ?float78 Float128)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b0 #b010010111011110 #b1100011111110110001000100000111110000100010001000010101011010111110001011010101000111000111001000110001011111100)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float128)
(assert (= ?float84 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float32)
(assert (= ?float85 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b0 #b111000111011101 #b1000110000100011011010011010101011011000100110101001010010100100111000000111101100000011110100111101010010110110)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b0 #b11010 #b0010101011)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float64)
(assert (= ?float92 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b1 #b11010 #b1100001100)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b1 #b01001 #b1011000110)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.add RNE ?float95 ?float85)))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.min ?float76 ?float73)))
(declare-const ?float102 Float32)
(assert (= ?float102 (f1 ((_ to_fp 8 24) RTN ?float63) ((_ to_fp 11 53) RNE ?float89) ((_ to_fp 8 24) RTP ?float60) ((_ to_fp 15 113) RTN ?float71) ((_ to_fp 11 53) RTP ?float71) ((_ to_fp 15 113) RNE ?float87))))
(declare-const ?float103 Float128)
(assert (= ?float103 (fp.roundToIntegral RTZ ?float61)))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.sub RTN ((_ to_fp 15 113) RTP ?float96) ?float103)))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.neg ?float62)))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.neg ?float92)))
(declare-const ?float107 Float64)
(assert (= ?float107 (fp.sub RTZ ((_ to_fp 11 53) RTN ?float102) ?float69)))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.roundToIntegral RTN ?float76)))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.min ?float60 ((_ to_fp 15 113) RTP ?float89))))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.add RTP ((_ to_fp 11 53) RTP ?float108) ?float96)))
(declare-const ?float111 Float16)
(assert (= ?float111 (f29 ((_ to_fp 8 24) RTZ ?float99) ((_ to_fp 11 53) RTZ ?float88) ?float98 ((_ to_fp 8 24) RNE ?float60) ?float80)))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.roundToIntegral RTN ?float105)))
(declare-const ?float113 Float128)
(assert (= ?float113 (fp.min ?float108 ((_ to_fp 15 113) RTZ ?float71))))
(declare-const ?float114 Float128)
(assert (= ?float114 (fp.neg ?float86)))
(declare-const ?float115 Float32)
(assert (= ?float115 (f42 ((_ to_fp 5 11) RNE ?float76) ((_ to_fp 15 113) RTP ?float112) ((_ to_fp 15 113) RTZ ?float67) ((_ to_fp 11 53) RNE ?float108) ((_ to_fp 8 24) RNE ?float81) ((_ to_fp 15 113) RTP ?float85) ((_ to_fp 11 53) RTP ?float98))))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.sub RTN ((_ to_fp 11 53) RTP ?float104) ?float70)))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.min ?float93 ?float63)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.div RTN ((_ to_fp 8 24) RNE ?float60) ?float74)))
(declare-const ?float119 Float128)
(assert (= ?float119 (fp.div RTZ ?float78 ((_ to_fp 15 113) RTZ ?float107))))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.div RNE ((_ to_fp 15 113) RTZ ?float111) ?float82)))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.max ?float60 ((_ to_fp 15 113) RTZ ?float67))))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.sqrt RTZ ?float108)))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.div RTP ?float89 ((_ to_fp 5 11) RTZ ?float110))))
(declare-const ?float124 Float16)
(assert (= ?float124 (fp.max ?float65 ((_ to_fp 5 11) RTZ ?float100))))
(declare-const ?float125 Float128)
(assert (= ?float125 (fp.sqrt RTN ?float122)))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.mul RNE ((_ to_fp 15 113) RTN ?float87) ?float60)))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.add RTN ((_ to_fp 8 24) RNE ?float91) ?float66)))
(declare-const ?float128 Float16)
(assert (= ?float128 (fp.abs ?float94)))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.roundToIntegral RTZ ?float79)))
(declare-const ?float130 Float64)
(assert (= ?float130 (fp.mul RTZ ((_ to_fp 11 53) RTN ?float78) ?float72)))
(declare-const ?float131 Float128)
(assert (= ?float131 (fp.min ((_ to_fp 15 113) RNE ?float89) ?float103)))
(declare-const ?float132 Float128)
(assert (= ?float132 (f4 ((_ to_fp 11 53) RTZ ?float67) ((_ to_fp 8 24) RTN ?float68) ?float98 ((_ to_fp 5 11) RTZ ?float78) ?float74 ((_ to_fp 5 11) RTN ?float109) ((_ to_fp 11 53) RNE ?float108) ((_ to_fp 11 53) RTN ?float67) ?float106 ((_ to_fp 5 11) RTN ?float101))))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.sub RNE ((_ to_fp 8 24) RTP ?float81) ?float79)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.neg ?float125)))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.mul RTZ ((_ to_fp 15 113) RTN ?float92) ?float82)))
(declare-const ?float136 Float32)
(assert (= ?float136 (fp.mul RTN ?float100 ((_ to_fp 8 24) RTP ?float75))))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.mul RTP ?float120 ?float125)))
(declare-const ?float138 Float32)
(assert (= ?float138 (fp.mul RTZ ?float95 ((_ to_fp 8 24) RTP ?float121))))
(declare-const ?float139 Float16)
(assert (= ?float139 (f5 ?float72 ((_ to_fp 15 113) RTN ?float115) ((_ to_fp 8 24) RTP ?float60) ?float104)))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.div RTZ ((_ to_fp 15 113) RNE ?float99) ?float61)))
(declare-const ?float141 Float16)
(assert (= ?float141 (f48 ((_ to_fp 5 11) RTN ?float101) ((_ to_fp 8 24) RTN ?float65) ((_ to_fp 11 53) RTZ ?float100) ?float108 ((_ to_fp 5 11) RTN ?float97) ((_ to_fp 11 53) RNE ?float135) ((_ to_fp 5 11) RNE ?float120) ((_ to_fp 11 53) RTP ?float115))))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.neg ?float63)))
(declare-const ?float143 Float128)
(assert (= ?float143 (fp.neg ?float84)))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.roundToIntegral RTP ?float85)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.add RTZ ?float85 ((_ to_fp 8 24) RNE ?float99))))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.mul RTZ ?float128 ((_ to_fp 5 11) RTZ ?float129))))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.mul RTN ?float114 ?float86)))
(declare-const ?float148 Float64)
(assert (= ?float148 (f41 ?float98 ((_ to_fp 15 113) RNE ?float142) ((_ to_fp 8 24) RTZ ?float96) ((_ to_fp 8 24) RTN ?float143) ((_ to_fp 8 24) RTZ ?float61) ((_ to_fp 15 113) RTP ?float100) ?float80 ((_ to_fp 11 53) RTP ?float139) ((_ to_fp 15 113) RTN ?float87))))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.abs ?float92)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isPositive ?float121)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isInfinite ?float131)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isInfinite ?float92)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNormal ?float96)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isSubnormal ?float137)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p2 ((_ to_fp 5 11) RNE ?float137) ((_ to_fp 8 24) RTZ ?float126) ((_ to_fp 15 113) RNE ?float66))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.lt ((_ to_fp 15 113) RTZ ?float127) ?float119)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isZero ?float98)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isInfinite ?float121)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.eq ?float86 ?float113)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isSubnormal ?float75)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.lt ?float98 ((_ to_fp 15 113) RNE ?float128))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.eq ?float124 ((_ to_fp 5 11) RTZ ?float60))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.geq ?float95 ((_ to_fp 8 24) RNE ?float135))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (p4 ((_ to_fp 8 24) RTZ ?float117) ((_ to_fp 11 53) RTP ?float67) ((_ to_fp 15 113) RTP ?float99) ?float102 ((_ to_fp 15 113) RTZ ?float95) ?float87 ?float136 ((_ to_fp 5 11) RNE ?float102) ((_ to_fp 11 53) RTZ ?float73))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isNegative ?float75)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNegative ?float121)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isPositive ?float105)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNaN ?float146)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isSubnormal ?float106)))
; FINAL ASSERT
(assert (and ?bool164 ?bool151))
(check-sat)


-- iteration 110 --
(declare-fun f0 (Float16 Float64 Float16 Float16 Float16 Float16 Float16 Float16 Float32 Float16) Float16)
(declare-fun f1 (Float64) Float32)
(declare-fun f2 (Float64 Float64 Float64 Float16 Float16) Float16)
(declare-fun f3 (Float64 Float64 Float64 Float64 Float32 Float16 Float32 Float16 Float64) Float16)
(declare-fun f4 (Float16 Float64 Float64 Float128 Float32 Float128 Float64 Float64 Float128) Float64)
(declare-fun f5 (Float64 Float16 Float128 Float64 Float64) Float64)
(declare-fun f6 (Float16 Float32 Float128 Float64 Float128 Float32) Float32)
(declare-fun f7 (Float32 Float16 Float16 Float128 Float32 Float32 Float16 Float128 Float16) Float32)
(declare-fun f8 (Float16 Float16 Float64) Float128)
(declare-fun f9 (Float32 Float32 Float32 Float128 Float64 Float32 Float16 Float64 Float32) Float128)
(declare-fun f10 (Float32 Float32 Float32) Float128)
(declare-fun f11 (Float128 Float32 Float32) Float16)
(declare-fun f12 (Float128) Float128)
(declare-fun f13 (Float64 Float64 Float32 Float128 Float32 Float128 Float16 Float16 Float16 Float64) Float16)
(declare-fun f14 (Float16) Float64)
(declare-fun f15 (Float128) Float16)
(declare-fun f16 (Float128 Float32) Float32)
(declare-fun f17 (Float32 Float32) Float32)
(declare-fun f18 (Float16 Float128 Float64 Float64 Float32) Float16)
(declare-fun f19 (Float16 Float32 Float128 Float64 Float128 Float32 Float64) Float32)
(declare-fun f20 (Float128 Float16) Float128)
(declare-fun f21 (Float128 Float64 Float128 Float64 Float64 Float64 Float128) Float128)
(declare-fun f22 (Float64 Float128 Float64 Float128 Float64 Float128 Float64 Float64) Float64)
(declare-fun f23 (Float64 Float128 Float128 Float64) Float64)
(declare-fun f24 (Float16 Float64 Float64 Float32 Float32) Float64)
(declare-fun f25 (Float64 Float32 Float128 Float64) Float16)
(declare-fun f26 (Float64 Float32 Float32) Float64)
(declare-fun f27 (Float32 Float64) Float16)
(declare-fun f28 (Float128 Float64 Float64 Float16 Float16 Float32 Float128 Float32 Float128) Float16)
(declare-fun f29 (Float64 Float32 Float32 Float32 Float64 Float32 Float128) Float128)
(declare-fun f30 (Float64 Float16) Float128)
(declare-fun f31 (Float64 Float64 Float32 Float64 Float16) Float64)
(declare-fun f32 (Float32 Float128 Float128 Float16 Float32) Float64)
(declare-fun f33 (Float128 Float16 Float16 Float32 Float16 Float32 Float64 Float128 Float16 Float64) Float64)
(declare-fun f34 (Float16 Float32 Float64 Float128 Float128 Float32 Float16 Float64) Float128)
(declare-fun f35 (Float128 Float32 Float64 Float64) Float32)
(declare-fun f36 (Float64 Float32) Float128)
(declare-fun f37 (Float128 Float32 Float128) Float32)
(declare-fun f38 (Float32 Float32 Float16 Float32 Float32 Float128 Float32 Float32) Float32)
(declare-fun f39 (Float16 Float128 Float16 Float32 Float128 Float16 Float64 Float128 Float32) Float128)
(declare-fun f40 (Float16 Float32 Float128 Float128 Float16 Float128) Float16)
(declare-fun f41 (Float128 Float16 Float128 Float128 Float32 Float32 Float32 Float16 Float64 Float128) Float128)
(declare-fun f42 (Float128 Float16 Float64 Float32 Float16 Float16 Float32 Float16 Float32) Float16)
(declare-fun f43 (Float128 Float64 Float64 Float16 Float128 Float128) Float64)
(declare-fun f44 (Float16 Float32 Float64 Float32 Float64 Float64 Float64 Float64) Float32)
(declare-fun f45 (Float128 Float16 Float64 Float128 Float64 Float128 Float16 Float128 Float64 Float64) Float64)
(declare-fun f46 (Float16 Float32 Float64 Float128 Float32 Float128 Float128 Float32 Float16 Float32) Float16)
(declare-fun f47 (Float128 Float32 Float32 Float16 Float128 Float128 Float32 Float128) Float128)
(declare-fun f48 (Float64 Float128 Float32 Float32 Float16 Float32) Float128)
(declare-fun f49 (Float32 Float64 Float16 Float16 Float16 Float64 Float128 Float32) Float64)
(declare-fun p0 (Float64 Float16 Float16 Float64 Float32 Float128 Float128 Float16 Float64 Float16) Bool)
(declare-fun p1 (Float128 Float32 Float32 Float16) Bool)
(declare-fun p2 (Float32 Float16 Float16 Float128 Float16 Float128 Float16 Float64) Bool)
(declare-fun p3 (Float32 Float64) Bool)
(declare-fun p4 (Float64 Float64 Float128 Float128 Float64 Float16 Float32 Float64) Bool)
(declare-fun p5 (Float128 Float32 Float32 Float64 Float128 Float128 Float64 Float64) Bool)
(declare-fun p6 (Float32 Float16) Bool)
(declare-fun p7 (Float32 Float128 Float16 Float32 Float16 Float16 Float128 Float16 Float128) Bool)
(declare-fun p8 (Float32 Float64 Float128 Float128 Float16 Float32 Float16) Bool)
(declare-fun p9 (Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float64)
(declare-const ?float62 Float32)
(declare-const ?float63 Float32)
(declare-const ?float64 Float128)
(declare-const ?float65 Float128)
(declare-const ?float66 Float64)
(declare-const ?float67 Float32)
(declare-const ?float68 Float32)
(declare-const ?float69 Float128)
(declare-const ?float70 Float16)
(declare-const ?float71 Float16)
(declare-const ?float72 Float128)
(declare-const ?float73 Float64)
(declare-const ?float74 Float64)
(declare-const ?float75 Float128)
(declare-const ?float76 Float64)
(declare-const ?float77 Float16)
(declare-const ?float78 Float16)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float83 Float64)
(assert (= ?float83 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b1 #b110110000100110 #b0010010110110111011110011111001010110000011001111010011111000011001000100110100101111001010001101001111101010110)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b01000111110 #b1000100011101001000010001010010010000011110101111100)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b0 #b00011100110 #b1000011111010001100100101011101100001100101000011101)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float98 Float64)
(assert (= ?float98 (fp #b0 #b10010111001 #b1001000001100010011010011110010001101001010110001000)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b1 #b111101010101110 #b0011101110001111111101011101000101001010110010011111011001100110100001111001100010101011011110000010010011101010)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (f47 ((_ to_fp 15 113) RTN ?float77) ((_ to_fp 8 24) RNE ?float65) ((_ to_fp 8 24) RTZ ?float98) ((_ to_fp 5 11) RTN ?float92) ((_ to_fp 15 113) RTP ?float66) ((_ to_fp 15 113) RNE ?float66) ((_ to_fp 8 24) RTZ ?float80) ((_ to_fp 15 113) RTP ?float95))))
(declare-const ?float101 Float16)
(assert (= ?float101 (f40 ((_ to_fp 5 11) RTZ ?float63) ((_ to_fp 8 24) RTN ?float83) ?float65 ?float80 ?float91 ((_ to_fp 15 113) RTP ?float71))))
(declare-const ?float102 Float64)
(assert (= ?float102 (fp.abs ?float98)))
(declare-const ?float103 Float128)
(assert (= ?float103 (fp.max ?float64 ?float92)))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.min ((_ to_fp 15 113) RTZ ?float67) ?float80)))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.sub RTN ?float97 ?float71)))
(declare-const ?float106 Float16)
(assert (= ?float106 (fp.mul RTP ?float91 ?float77)))
(declare-const ?float107 Float16)
(assert (= ?float107 (fp.roundToIntegral RTZ ?float71)))
(declare-const ?float108 Float64)
(assert (= ?float108 (f26 ?float90 ?float62 ((_ to_fp 8 24) RTN ?float100))))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.sqrt RNE ?float72)))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.sqrt RNE ?float60)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.min ?float101 ?float97)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.sub RNE ?float88 ((_ to_fp 11 53) RTN ?float101))))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.div RTZ ((_ to_fp 5 11) RTP ?float79) ?float77)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.mul RTN ((_ to_fp 11 53) RTP ?float101) ?float108)))
(declare-const ?float115 Float16)
(assert (= ?float115 (fp.div RTZ ((_ to_fp 5 11) RTZ ?float98) ?float93)))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.abs ?float114)))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.mul RNE ?float108 ((_ to_fp 11 53) RNE ?float99))))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.add RTZ ((_ to_fp 5 11) RTP ?float65) ?float77)))
(declare-const ?float119 Float64)
(assert (= ?float119 (f24 ((_ to_fp 5 11) RTZ ?float79) ((_ to_fp 11 53) RTN ?float81) ?float116 ((_ to_fp 8 24) RTN ?float87) ((_ to_fp 8 24) RTP ?float80))))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.sqrt RNE ?float74)))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.max ((_ to_fp 5 11) RTP ?float114) ?float106)))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.sqrt RNE ?float60)))
(declare-const ?float123 Float64)
(assert (= ?float123 (f49 ((_ to_fp 8 24) RNE ?float76) ?float88 ((_ to_fp 5 11) RTZ ?float96) ((_ to_fp 5 11) RNE ?float92) ?float95 ((_ to_fp 11 53) RTN ?float84) ?float100 ((_ to_fp 8 24) RTZ ?float109))))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.abs ?float108)))
(declare-const ?float125 Float16)
(assert (= ?float125 (fp.div RTP ?float70 ?float121)))
(declare-const ?float126 Float32)
(assert (= ?float126 (f7 ((_ to_fp 8 24) RTP ?float78) ((_ to_fp 5 11) RNE ?float112) ((_ to_fp 5 11) RTN ?float102) ((_ to_fp 15 113) RNE ?float67) ((_ to_fp 8 24) RNE ?float78) ?float63 ((_ to_fp 5 11) RTN ?float99) ?float75 ((_ to_fp 5 11) RTP ?float92))))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.add RTP ?float113 ((_ to_fp 5 11) RTN ?float89))))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.mul RNE ((_ to_fp 15 113) RTZ ?float91) ?float65)))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.neg ?float61)))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.roundToIntegral RTZ ?float85)))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.max ((_ to_fp 5 11) RTZ ?float126) ?float106)))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.neg ?float117)))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.sub RNE ?float94 ?float108)))
(declare-const ?float134 Float64)
(assert (= ?float134 (fp.sqrt RTN ?float88)))
(declare-const ?float135 Float128)
(assert (= ?float135 (f20 ((_ to_fp 15 113) RNE ?float126) ?float85)))
(declare-const ?float136 Float128)
(assert (= ?float136 (f9 ((_ to_fp 8 24) RTN ?float88) ((_ to_fp 8 24) RTN ?float99) ((_ to_fp 8 24) RTZ ?float119) ((_ to_fp 15 113) RNE ?float123) ?float134 ((_ to_fp 8 24) RTZ ?float130) ?float118 ((_ to_fp 11 53) RTP ?float78) ((_ to_fp 8 24) RNE ?float77))))
(declare-const ?float137 Float16)
(assert (= ?float137 (fp.div RTZ ?float97 ?float105)))
(declare-const ?float138 Float128)
(assert (= ?float138 (fp.add RTN ?float99 ((_ to_fp 15 113) RTP ?float119))))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.sub RTN ?float76 ?float123)))
(declare-const ?float140 Float64)
(assert (= ?float140 (fp.sub RNE ?float83 ((_ to_fp 11 53) RTN ?float113))))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.roundToIntegral RNE ?float132)))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.mul RNE ?float135 ?float60)))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.sub RTZ ?float123 ?float120)))
(declare-const ?float144 Float128)
(assert (= ?float144 (f8 ((_ to_fp 5 11) RTN ?float89) ((_ to_fp 5 11) RTZ ?float75) ?float120)))
(declare-const ?float145 Float32)
(assert (= ?float145 (f16 ?float109 ((_ to_fp 8 24) RTP ?float133))))
(declare-const ?float146 Float64)
(assert (= ?float146 (fp.sqrt RTP ?float143)))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.neg ?float122)))
(declare-const ?float148 Float32)
(assert (= ?float148 (fp.neg ?float67)))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.roundToIntegral RTZ ?float74)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.lt ?float70 ((_ to_fp 5 11) RTZ ?float65))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isSubnormal ?float113)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (p5 ((_ to_fp 15 113) RNE ?float107) ((_ to_fp 8 24) RTP ?float78) ((_ to_fp 8 24) RNE ?float65) ?float133 ((_ to_fp 15 113) RTN ?float82) ((_ to_fp 15 113) RTN ?float71) ?float74 ((_ to_fp 11 53) RTP ?float60))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isZero ?float95)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNormal ?float82)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isInfinite ?float89)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isInfinite ?float111)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p7 ((_ to_fp 8 24) RTP ?float128) ((_ to_fp 15 113) RTZ ?float133) ?float105 ((_ to_fp 8 24) RNE ?float144) ((_ to_fp 5 11) RTN ?float116) ?float97 ((_ to_fp 15 113) RTZ ?float106) ?float131 ((_ to_fp 15 113) RNE ?float129))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNegative ?float79)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.gt ?float116 ?float66)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.geq ?float66 ((_ to_fp 11 53) RNE ?float86))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.lt ?float92 ((_ to_fp 15 113) RTP ?float129))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.lt ?float117 ((_ to_fp 11 53) RTP ?float99))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isZero ?float69)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isZero ?float86)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isNegative ?float139)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.geq ((_ to_fp 11 53) RTN ?float93) ?float134)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isSubnormal ?float100)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isSubnormal ?float113)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isPositive ?float86)))
; FINAL ASSERT
(assert (and ?bool166 (or (or ?bool153) ?bool153 ?bool156)))
(check-sat)


-- iteration 111 --
(declare-fun f0 (Float128 Float128) Float64)
(declare-fun f1 (Float32 Float128 Float32 Float128) Float32)
(declare-fun f2 (Float32 Float64 Float32) Float16)
(declare-fun f3 (Float16 Float32 Float128 Float32 Float64 Float32 Float128 Float128) Float64)
(declare-fun f4 (Float128 Float64 Float32 Float16 Float16 Float32 Float128 Float64 Float32 Float16) Float16)
(declare-fun f5 (Float16 Float128) Float32)
(declare-fun f6 (Float64 Float128 Float128 Float128 Float32 Float64 Float16 Float16 Float32) Float32)
(declare-fun f7 (Float32 Float128 Float16 Float32) Float64)
(declare-fun f8 (Float32 Float16 Float32 Float32 Float32 Float16 Float32 Float16 Float16) Float128)
(declare-fun f9 (Float128 Float16 Float64 Float128 Float128 Float128) Float128)
(declare-fun f10 (Float128 Float128 Float128 Float64) Float64)
(declare-fun f11 (Float16 Float128 Float128 Float16) Float32)
(declare-fun f12 (Float128 Float32 Float128 Float64 Float32 Float32 Float32 Float64 Float32 Float32) Float16)
(declare-fun f13 (Float64 Float128 Float128 Float64 Float32) Float16)
(declare-fun f14 (Float64 Float128 Float16 Float16 Float32 Float64 Float64 Float64 Float32 Float64) Float32)
(declare-fun f15 (Float128 Float64) Float128)
(declare-fun f16 (Float128 Float128 Float32 Float128 Float128) Float128)
(declare-fun f17 (Float16 Float16 Float128 Float64 Float16 Float64) Float16)
(declare-fun f18 (Float32 Float32 Float64 Float64 Float16 Float128 Float64 Float16) Float128)
(declare-fun f19 (Float64 Float32 Float64 Float128 Float128 Float64 Float64 Float64 Float64 Float128) Float128)
(declare-fun f20 (Float64 Float16 Float32) Float16)
(declare-fun f21 (Float128 Float128 Float32 Float16 Float16 Float128 Float128 Float16 Float16) Float64)
(declare-fun f22 (Float64 Float64 Float64 Float64 Float32 Float128 Float64 Float128 Float16) Float16)
(declare-fun f23 (Float64 Float64 Float16 Float128 Float64 Float32) Float128)
(declare-fun f24 (Float16 Float64 Float32 Float16) Float32)
(declare-fun f25 (Float128 Float64 Float64 Float32 Float64 Float32 Float128 Float128 Float128) Float128)
(declare-fun f26 (Float128) Float32)
(declare-fun f27 (Float128 Float128 Float128 Float32 Float64 Float64 Float64) Float32)
(declare-fun f28 (Float128 Float32 Float32 Float16 Float16 Float128) Float32)
(declare-fun f29 (Float16 Float32 Float128 Float128 Float64) Float64)
(declare-fun f30 (Float32 Float128 Float16 Float16 Float32 Float32 Float32 Float128) Float16)
(declare-fun f31 (Float128 Float64 Float32) Float128)
(declare-fun f32 (Float64 Float128 Float128 Float16) Float32)
(declare-fun f33 (Float64 Float64 Float32 Float32 Float128 Float16 Float16 Float128 Float32 Float64) Float64)
(declare-fun f34 (Float64 Float64 Float32) Float32)
(declare-fun f35 (Float128 Float32 Float64 Float16 Float16 Float64 Float32) Float128)
(declare-fun f36 (Float64 Float128 Float32 Float32 Float32 Float128) Float32)
(declare-fun f37 (Float32 Float16 Float32 Float64 Float128 Float32 Float64) Float128)
(declare-fun f38 (Float64 Float16 Float128) Float16)
(declare-fun f39 (Float16 Float128 Float64) Float64)
(declare-fun f40 (Float64 Float16 Float16 Float32 Float16) Float16)
(declare-fun f41 (Float16 Float32 Float32 Float64 Float32 Float128 Float16 Float16 Float32) Float32)
(declare-fun f42 (Float32 Float64 Float64) Float16)
(declare-fun f43 (Float32 Float32 Float128 Float128 Float128 Float128 Float32 Float128) Float32)
(declare-fun f44 (Float128) Float16)
(declare-fun f45 (Float64 Float32 Float128 Float64 Float64 Float64 Float64 Float64 Float64 Float32) Float16)
(declare-fun f46 (Float64 Float16 Float64 Float32 Float16 Float128) Float32)
(declare-fun f47 (Float64 Float128 Float64 Float64 Float128 Float16 Float16) Float32)
(declare-fun f48 (Float64 Float128) Float64)
(declare-fun f49 (Float32 Float128 Float16 Float32 Float128 Float128 Float64) Float128)
(declare-fun p0 (Float16 Float64) Bool)
(declare-fun p1 (Float16 Float128 Float16 Float16 Float32) Bool)
(declare-fun p2 (Float32 Float64 Float16 Float16 Float16 Float32) Bool)
(declare-fun p3 (Float64 Float128) Bool)
(declare-fun p4 (Float64) Bool)
(declare-fun p5 (Float32 Float128 Float64 Float32 Float32 Float16 Float64 Float128) Bool)
(declare-fun p6 (Float64 Float128) Bool)
(declare-fun p7 (Float128 Float16 Float128) Bool)
(declare-fun p8 (Float64 Float64) Bool)
(declare-fun p9 (Float16 Float16 Float16 Float32 Float64 Float64 Float32 Float16 Float64 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float64)
(declare-const ?float62 Float32)
(declare-const ?float63 Float16)
(declare-const ?float64 Float32)
(declare-const ?float65 Float64)
(declare-const ?float66 Float16)
(declare-const ?float67 Float32)
(declare-const ?float68 Float32)
(declare-const ?float69 Float64)
(declare-const ?float70 Float128)
(declare-const ?float71 Float128)
(declare-const ?float72 Float128)
(declare-const ?float73 Float128)
(declare-const ?float74 Float32)
(declare-const ?float75 Float16)
(declare-const ?float76 Float32)
(declare-const ?float77 Float64)
(declare-const ?float78 Float16)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b1 #b01101 #b1111111011)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b0 #b00111001010 #b0010001100011101101010110001100010110000010101101000)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b0 #b01101110 #b10101001010101011110000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b0 #b101110000111011 #b1110111000001111101011101001011101001001111011111100101010000100111000110000010010001010001011110110100111101101)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b0 #b11001110010 #b0111001010101100011010110100000000110010010110101000)))
(declare-const ?float92 Float64)
(assert (= ?float92 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (fp.sqrt RNE ?float92)))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.mul RTN ((_ to_fp 8 24) RNE ?float63) ?float98)))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.mul RTP ?float64 ?float67)))
(declare-const ?float103 Float128)
(assert (= ?float103 (fp.min ?float88 ?float73)))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.neg ?float61)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.max ?float87 ?float93)))
(declare-const ?float106 Float16)
(assert (= ?float106 (f44 ((_ to_fp 15 113) RTN ?float75))))
(declare-const ?float107 Float64)
(assert (= ?float107 (fp.neg ?float69)))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.add RNE ?float61 ?float93)))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.max ?float72 ((_ to_fp 15 113) RTN ?float100))))
(declare-const ?float110 Float32)
(assert (= ?float110 (fp.abs ?float95)))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.abs ?float61)))
(declare-const ?float112 Float32)
(assert (= ?float112 (f6 ((_ to_fp 11 53) RTZ ?float103) ((_ to_fp 15 113) RTP ?float101) ((_ to_fp 15 113) RTZ ?float69) ((_ to_fp 15 113) RTN ?float104) ?float95 ((_ to_fp 11 53) RNE ?float72) ?float66 ((_ to_fp 5 11) RTN ?float111) ((_ to_fp 8 24) RNE ?float71))))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.mul RTZ ?float69 ((_ to_fp 11 53) RTN ?float88))))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.div RNE ?float100 ?float113)))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.neg ?float95)))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.neg ?float62)))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.abs ?float84)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.sqrt RTN ?float115)))
(declare-const ?float119 Float32)
(assert (= ?float119 (f34 ?float65 ?float69 ((_ to_fp 8 24) RTZ ?float82))))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.min ((_ to_fp 11 53) RNE ?float62) ?float69)))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.abs ?float108)))
(declare-const ?float122 Float64)
(assert (= ?float122 (f7 ((_ to_fp 8 24) RTP ?float92) ((_ to_fp 15 113) RTP ?float104) ?float96 ((_ to_fp 8 24) RTP ?float66))))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.mul RNE ?float115 ?float62)))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.abs ?float114)))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.add RTN ?float61 ?float121)))
(declare-const ?float126 Float16)
(assert (= ?float126 (fp.mul RTP ?float96 ((_ to_fp 5 11) RTN ?float109))))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.neg ?float78)))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.max ?float79 ?float82)))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.add RTP ?float128 ?float128)))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.max ((_ to_fp 5 11) RTZ ?float100) ?float97)))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.min ?float94 ((_ to_fp 5 11) RTN ?float64))))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.min ((_ to_fp 5 11) RTP ?float107) ?float75)))
(declare-const ?float133 Float128)
(assert (= ?float133 (f9 ((_ to_fp 15 113) RNE ?float96) ((_ to_fp 5 11) RTN ?float108) ?float120 ((_ to_fp 15 113) RTN ?float129) ((_ to_fp 15 113) RNE ?float124) ((_ to_fp 15 113) RTZ ?float129))))
(declare-const ?float134 Float128)
(assert (= ?float134 (f18 ((_ to_fp 8 24) RTZ ?float92) ((_ to_fp 8 24) RTN ?float113) ((_ to_fp 11 53) RTP ?float73) ((_ to_fp 11 53) RTP ?float94) ((_ to_fp 5 11) RNE ?float99) ?float73 ((_ to_fp 11 53) RTZ ?float75) ?float75)))
(declare-const ?float135 Float64)
(assert (= ?float135 (fp.neg ?float113)))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.div RTZ ?float79 ((_ to_fp 11 53) RNE ?float75))))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.sqrt RTZ ?float124)))
(declare-const ?float138 Float64)
(assert (= ?float138 (fp.add RTZ ?float60 ?float114)))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.add RTP ?float129 ?float82)))
(declare-const ?float140 Float64)
(assert (= ?float140 (fp.mul RNE ?float100 ?float104)))
(declare-const ?float141 Float32)
(assert (= ?float141 (fp.add RNE ?float86 ((_ to_fp 8 24) RTP ?float125))))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.roundToIntegral RTN ?float87)))
(declare-const ?float143 Float16)
(assert (= ?float143 (f40 ?float135 ((_ to_fp 5 11) RNE ?float86) ?float132 ((_ to_fp 8 24) RNE ?float78) ((_ to_fp 5 11) RTN ?float68))))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.roundToIntegral RTN ?float95)))
(declare-const ?float145 Float16)
(assert (= ?float145 (fp.min ((_ to_fp 5 11) RTZ ?float74) ?float96)))
(declare-const ?float146 Float64)
(assert (= ?float146 (fp.sub RTZ ?float87 ?float120)))
(declare-const ?float147 Float32)
(assert (= ?float147 (f47 ?float122 ((_ to_fp 15 113) RTZ ?float139) ((_ to_fp 11 53) RTZ ?float86) ((_ to_fp 11 53) RTP ?float130) ((_ to_fp 15 113) RTN ?float119) ((_ to_fp 5 11) RTN ?float88) ((_ to_fp 5 11) RTN ?float71))))
(declare-const ?float148 Float128)
(assert (= ?float148 (fp.min ?float134 ((_ to_fp 15 113) RTP ?float143))))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.sqrt RTP ?float92)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isNaN ?float91)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p2 ((_ to_fp 8 24) RTN ?float71) ?float125 ((_ to_fp 5 11) RNE ?float70) ((_ to_fp 5 11) RTN ?float92) ((_ to_fp 5 11) RTZ ?float86) ((_ to_fp 8 24) RNE ?float136))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (p3 ((_ to_fp 11 53) RTP ?float98) ((_ to_fp 15 113) RNE ?float82))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (p0 ((_ to_fp 5 11) RTZ ?float72) ?float129)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.lt ?float104 ((_ to_fp 11 53) RTP ?float67))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isSubnormal ?float102)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isSubnormal ?float94)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNormal ?float75)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.lt ((_ to_fp 11 53) RNE ?float148) ?float87)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.lt ?float113 ?float121)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isZero ?float96)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNaN ?float74)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isSubnormal ?float75)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.geq ?float142 ?float114)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (p4 ((_ to_fp 11 53) RTN ?float70))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p2 ((_ to_fp 8 24) RTZ ?float135) ((_ to_fp 11 53) RTZ ?float63) ((_ to_fp 5 11) RNE ?float124) ?float66 ((_ to_fp 5 11) RNE ?float149) ?float86)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.eq ((_ to_fp 11 53) RNE ?float147) ?float121)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.leq ?float77 ?float120)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNormal ?float135)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.geq ?float113 ?float120)))
; FINAL ASSERT
(assert (and ?bool161 ?bool156))
(check-sat)


-- iteration 112 --
(declare-fun f0 (Float128 Float64) Float64)
(declare-fun f1 (Float32 Float16 Float128) Float128)
(declare-fun f2 (Float128 Float32 Float16 Float64 Float16 Float16 Float16 Float64 Float32 Float32) Float32)
(declare-fun f3 (Float16 Float128 Float32 Float32 Float32 Float128 Float128 Float128 Float64 Float128) Float32)
(declare-fun f4 (Float32 Float16 Float64 Float64 Float128) Float32)
(declare-fun f5 (Float128 Float32 Float128 Float128 Float16 Float32) Float128)
(declare-fun f6 (Float128 Float128 Float16 Float128 Float16 Float128 Float32 Float64 Float128 Float128) Float128)
(declare-fun f7 (Float16 Float128 Float16) Float16)
(declare-fun f8 (Float32 Float128) Float128)
(declare-fun f9 (Float32 Float16 Float32) Float128)
(declare-fun f10 (Float16 Float16 Float128 Float32 Float32 Float16 Float32 Float16 Float16 Float32) Float64)
(declare-fun f11 (Float32 Float128 Float32) Float128)
(declare-fun f12 (Float128 Float32 Float32 Float128 Float16 Float16) Float32)
(declare-fun f13 (Float32 Float32 Float16 Float128) Float32)
(declare-fun f14 (Float128 Float32 Float128 Float128 Float16 Float16 Float16 Float32 Float64 Float64) Float64)
(declare-fun f15 (Float64 Float128 Float32 Float128 Float32 Float64 Float64 Float16 Float16 Float16) Float32)
(declare-fun f16 (Float32 Float128 Float32 Float16 Float32 Float16 Float128) Float16)
(declare-fun f17 (Float32 Float128 Float32 Float16 Float64) Float32)
(declare-fun f18 (Float64 Float32) Float16)
(declare-fun f19 (Float128) Float16)
(declare-fun f20 (Float16 Float16) Float64)
(declare-fun f21 (Float64 Float32 Float64) Float64)
(declare-fun f22 (Float16 Float16 Float128 Float32 Float64 Float64 Float128 Float16) Float16)
(declare-fun f23 (Float32 Float32 Float64 Float64 Float32 Float64 Float64 Float64 Float64 Float64) Float16)
(declare-fun f24 (Float16 Float128 Float32 Float128 Float128 Float64 Float32) Float32)
(declare-fun f25 (Float128 Float128 Float64 Float32 Float64 Float128 Float64) Float16)
(declare-fun f26 (Float128 Float32 Float128 Float64) Float32)
(declare-fun f27 (Float32 Float32 Float16 Float64 Float128 Float16 Float64 Float32 Float32 Float32) Float128)
(declare-fun f28 (Float64) Float64)
(declare-fun f29 (Float128 Float16 Float16) Float128)
(declare-fun f30 (Float16 Float128 Float32 Float16 Float16) Float32)
(declare-fun f31 (Float32 Float32 Float64 Float32 Float16 Float16) Float128)
(declare-fun f32 (Float64 Float64) Float128)
(declare-fun f33 (Float64 Float128 Float128 Float16 Float32 Float32 Float32 Float64 Float16) Float128)
(declare-fun f34 (Float128 Float32 Float32 Float128 Float64 Float64 Float16) Float32)
(declare-fun f35 (Float64 Float128 Float128 Float32 Float16 Float128) Float16)
(declare-fun f36 (Float128 Float64 Float32 Float128) Float64)
(declare-fun f37 (Float16 Float16 Float128 Float64 Float128 Float64 Float32) Float16)
(declare-fun f38 (Float128 Float16 Float128 Float128 Float16 Float64) Float128)
(declare-fun f39 (Float64 Float64 Float64 Float64 Float128 Float128 Float32) Float128)
(declare-fun f40 (Float16) Float16)
(declare-fun f41 (Float128 Float128 Float16 Float128 Float128) Float32)
(declare-fun f42 (Float64) Float32)
(declare-fun f43 (Float16 Float32 Float16) Float32)
(declare-fun f44 (Float128 Float128 Float128 Float16) Float32)
(declare-fun f45 (Float16 Float128 Float64) Float64)
(declare-fun f46 (Float16 Float32 Float128 Float32 Float128 Float128 Float32) Float32)
(declare-fun f47 (Float128 Float64 Float128 Float128 Float128 Float64) Float128)
(declare-fun f48 (Float128 Float16 Float32 Float32 Float16) Float16)
(declare-fun f49 (Float64 Float32) Float16)
(declare-fun p0 (Float32 Float64 Float64 Float32 Float64 Float32 Float16 Float64 Float32) Bool)
(declare-fun p1 (Float64 Float128 Float32 Float128 Float32 Float16 Float32 Float128 Float16 Float16) Bool)
(declare-fun p2 (Float32 Float128 Float64 Float64 Float16 Float128 Float64 Float128 Float128) Bool)
(declare-fun p3 (Float32 Float16 Float32 Float64 Float128 Float16 Float128 Float128) Bool)
(declare-fun p4 (Float16 Float128 Float16 Float128 Float16 Float16 Float128 Float32 Float128) Bool)
(declare-fun p5 (Float16 Float16 Float128 Float64 Float128 Float32 Float32 Float128 Float32 Float32) Bool)
(declare-fun p6 (Float64 Float128 Float32 Float16 Float16 Float128 Float16 Float64 Float64) Bool)
(declare-fun p7 (Float32 Float64 Float64 Float64 Float32 Float128 Float64 Float64 Float128) Bool)
(declare-fun p8 (Float16 Float128 Float32 Float64 Float16 Float64 Float128 Float16 Float32 Float16) Bool)
(declare-fun p9 (Float16 Float128 Float128 Float32 Float32 Float32 Float32 Float64 Float64 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float128)
(declare-const ?float62 Float16)
(declare-const ?float63 Float64)
(declare-const ?float64 Float128)
(declare-const ?float65 Float64)
(declare-const ?float66 Float128)
(declare-const ?float67 Float16)
(declare-const ?float68 Float128)
(declare-const ?float69 Float64)
(declare-const ?float70 Float128)
(declare-const ?float71 Float128)
(declare-const ?float72 Float32)
(declare-const ?float73 Float32)
(declare-const ?float74 Float128)
(declare-const ?float75 Float128)
(declare-const ?float76 Float128)
(declare-const ?float77 Float16)
(declare-const ?float78 Float16)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b1 #b11001 #b1001110111)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b0 #b00000 #b0010100100)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b1 #b00110100 #b11110110001011010010100)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (f24 ((_ to_fp 5 11) RNE ?float91) ?float75 ((_ to_fp 8 24) RTP ?float97) ((_ to_fp 15 113) RTP ?float62) ((_ to_fp 15 113) RNE ?float84) ((_ to_fp 11 53) RTP ?float97) ((_ to_fp 8 24) RTN ?float88))))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.add RTZ ((_ to_fp 15 113) RTP ?float83) ?float74)))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.sub RNE ?float88 ?float61)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.min ((_ to_fp 5 11) RNE ?float84) ?float77)))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.abs ?float93)))
(declare-const ?float105 Float16)
(assert (= ?float105 (f19 ?float61)))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.roundToIntegral RTZ ?float86)))
(declare-const ?float107 Float64)
(assert (= ?float107 (fp.neg ?float93)))
(declare-const ?float108 Float32)
(assert (= ?float108 (f4 ((_ to_fp 8 24) RTZ ?float103) ((_ to_fp 5 11) RNE ?float86) ((_ to_fp 11 53) RTZ ?float98) ((_ to_fp 11 53) RNE ?float73) ((_ to_fp 15 113) RNE ?float86))))
(declare-const ?float109 Float128)
(assert (= ?float109 (f11 ((_ to_fp 8 24) RTZ ?float76) ?float88 ((_ to_fp 8 24) RTZ ?float77))))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.roundToIntegral RTN ?float80)))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.div RTZ ((_ to_fp 8 24) RTZ ?float94) ?float84)))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.mul RTP ?float60 ?float111)))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.neg ?float62)))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.mul RTN ?float108 ((_ to_fp 8 24) RTZ ?float63))))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.add RTN ?float75 ?float68)))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.sub RNE ?float78 ((_ to_fp 5 11) RNE ?float91))))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.mul RTZ ?float105 ((_ to_fp 5 11) RTN ?float110))))
(declare-const ?float118 Float128)
(assert (= ?float118 (f38 ((_ to_fp 15 113) RTZ ?float60) ((_ to_fp 5 11) RNE ?float101) ((_ to_fp 15 113) RTP ?float83) ((_ to_fp 15 113) RTN ?float78) ((_ to_fp 5 11) RNE ?float93) ?float93)))
(declare-const ?float119 Float128)
(assert (= ?float119 (fp.sub RTN ?float70 ?float70)))
(declare-const ?float120 Float16)
(assert (= ?float120 (f23 ((_ to_fp 8 24) RTZ ?float115) ((_ to_fp 8 24) RTP ?float113) ((_ to_fp 11 53) RTZ ?float84) ((_ to_fp 11 53) RTP ?float76) ((_ to_fp 8 24) RTN ?float117) ((_ to_fp 11 53) RTN ?float74) ?float110 ((_ to_fp 11 53) RNE ?float91) ((_ to_fp 11 53) RNE ?float88) ((_ to_fp 11 53) RTZ ?float117))))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.mul RTP ?float90 ((_ to_fp 5 11) RTZ ?float60))))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.neg ?float101)))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.mul RTP ?float110 ((_ to_fp 11 53) RNE ?float92))))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.div RTP ?float110 ?float110)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.min ((_ to_fp 8 24) RTP ?float75) ?float111)))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.max ((_ to_fp 15 113) RNE ?float108) ?float70)))
(declare-const ?float127 Float64)
(assert (= ?float127 (fp.max ?float65 ((_ to_fp 11 53) RTN ?float101))))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.abs ?float61)))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.sqrt RNE ?float93)))
(declare-const ?float130 Float64)
(assert (= ?float130 (fp.add RTP ?float86 ?float65)))
(declare-const ?float131 Float128)
(assert (= ?float131 (fp.min ?float87 ?float61)))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.max ?float98 ((_ to_fp 8 24) RTZ ?float110))))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.sqrt RNE ?float110)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.add RTP ?float126 ((_ to_fp 15 113) RNE ?float79))))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.neg ?float96)))
(declare-const ?float136 Float16)
(assert (= ?float136 (f49 ((_ to_fp 11 53) RTN ?float101) ((_ to_fp 8 24) RNE ?float130))))
(declare-const ?float137 Float16)
(assert (= ?float137 (f22 ?float77 ?float136 ((_ to_fp 15 113) RTP ?float84) ?float98 ((_ to_fp 11 53) RTN ?float72) ((_ to_fp 11 53) RNE ?float71) ((_ to_fp 15 113) RTP ?float85) ((_ to_fp 5 11) RTN ?float70))))
(declare-const ?float138 Float32)
(assert (= ?float138 (f12 ((_ to_fp 15 113) RNE ?float106) ((_ to_fp 8 24) RNE ?float122) ((_ to_fp 8 24) RTZ ?float77) ((_ to_fp 15 113) RTN ?float83) ?float117 ((_ to_fp 5 11) RNE ?float102))))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.add RTN ((_ to_fp 15 113) RTZ ?float124) ?float71)))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.add RTN ?float61 ?float102)))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.abs ?float86)))
(declare-const ?float142 Float32)
(assert (= ?float142 (f34 ((_ to_fp 15 113) RTN ?float86) ((_ to_fp 8 24) RTN ?float90) ((_ to_fp 8 24) RTP ?float116) ((_ to_fp 15 113) RTP ?float62) ((_ to_fp 11 53) RTZ ?float77) ?float80 ((_ to_fp 5 11) RTP ?float68))))
(declare-const ?float143 Float32)
(assert (= ?float143 (fp.min ((_ to_fp 8 24) RNE ?float104) ?float98)))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.add RTN ((_ to_fp 8 24) RTN ?float119) ?float114)))
(declare-const ?float145 Float128)
(assert (= ?float145 (fp.roundToIntegral RTP ?float71)))
(declare-const ?float146 Float128)
(assert (= ?float146 (f6 ((_ to_fp 15 113) RNE ?float116) ((_ to_fp 15 113) RNE ?float93) ?float113 ((_ to_fp 15 113) RTZ ?float137) ?float62 ?float118 ((_ to_fp 8 24) RTZ ?float96) ((_ to_fp 11 53) RTN ?float105) ((_ to_fp 15 113) RTP ?float141) ((_ to_fp 15 113) RNE ?float141))))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.add RNE ((_ to_fp 8 24) RTP ?float105) ?float84)))
(declare-const ?float148 Float128)
(assert (= ?float148 (fp.roundToIntegral RTP ?float95)))
(declare-const ?float149 Float128)
(assert (= ?float149 (f11 ((_ to_fp 8 24) RTP ?float88) ((_ to_fp 15 113) RNE ?float132) ((_ to_fp 8 24) RTZ ?float93))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.eq ((_ to_fp 8 24) RTP ?float71) ?float73)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNormal ?float114)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isSubnormal ?float79)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNormal ?float109)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.gt ((_ to_fp 15 113) RTN ?float137) ?float135)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p9 ((_ to_fp 5 11) RTZ ?float128) ((_ to_fp 15 113) RNE ?float130) ((_ to_fp 15 113) RTP ?float129) ((_ to_fp 8 24) RTP ?float86) ((_ to_fp 8 24) RTP ?float104) ?float108 ((_ to_fp 8 24) RTP ?float113) ((_ to_fp 11 53) RTZ ?float136) ((_ to_fp 11 53) RTZ ?float64) ((_ to_fp 5 11) RNE ?float148))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.lt ?float112 ((_ to_fp 8 24) RTZ ?float81))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isSubnormal ?float146)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNegative ?float108)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.geq ?float127 ?float141)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isZero ?float147)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.gt ((_ to_fp 11 53) RTN ?float89) ?float133)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (p2 ((_ to_fp 8 24) RNE ?float115) ((_ to_fp 15 113) RTZ ?float114) ((_ to_fp 11 53) RNE ?float88) ?float127 ?float85 ?float146 ((_ to_fp 11 53) RTP ?float103) ((_ to_fp 15 113) RTZ ?float130) ((_ to_fp 15 113) RTZ ?float136))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.gt ?float114 ((_ to_fp 8 24) RTP ?float131))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.geq ?float111 ?float143)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.lt ((_ to_fp 15 113) RTN ?float117) ?float102)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p5 ((_ to_fp 5 11) RTZ ?float93) ?float77 ?float96 ((_ to_fp 11 53) RNE ?float120) ((_ to_fp 15 113) RTZ ?float107) ((_ to_fp 8 24) RTZ ?float88) ?float143 ((_ to_fp 15 113) RTP ?float130) ((_ to_fp 8 24) RTZ ?float130) ((_ to_fp 8 24) RNE ?float92))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isPositive ?float75)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.eq ?float112 ((_ to_fp 8 24) RTP ?float64))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p2 ((_ to_fp 8 24) RTP ?float81) ?float135 ((_ to_fp 11 53) RTP ?float81) ((_ to_fp 11 53) RTP ?float97) ?float103 ((_ to_fp 15 113) RTP ?float80) ((_ to_fp 11 53) RTN ?float147) ((_ to_fp 15 113) RTZ ?float113) ?float102)))
; FINAL ASSERT
(assert (or ?bool152))
(check-sat)


-- iteration 113 --
(declare-fun f0 (Float64 Float128 Float128 Float32) Float16)
(declare-fun f1 (Float32 Float128 Float32 Float64 Float16 Float128 Float128 Float16) Float32)
(declare-fun f2 (Float64 Float128 Float32 Float128 Float128 Float16) Float16)
(declare-fun f3 (Float128 Float16 Float16) Float32)
(declare-fun f4 (Float64 Float32 Float128 Float64 Float64 Float128 Float32 Float32 Float64) Float16)
(declare-fun f5 (Float32 Float128) Float32)
(declare-fun f6 (Float16 Float16 Float32 Float16 Float32 Float64 Float16 Float16 Float16 Float64) Float64)
(declare-fun f7 (Float64 Float32 Float64 Float32 Float128 Float64 Float128 Float128 Float64) Float64)
(declare-fun f8 (Float128 Float16 Float64 Float128 Float16 Float16 Float16 Float64 Float64 Float16) Float16)
(declare-fun f9 (Float16 Float128 Float128 Float64 Float32 Float16 Float16 Float128 Float32 Float128) Float32)
(declare-fun f10 (Float16 Float64 Float64 Float32 Float32 Float128) Float128)
(declare-fun f11 (Float64 Float64 Float64 Float128 Float16 Float128 Float128) Float32)
(declare-fun f12 (Float128 Float16 Float128 Float128 Float64 Float16) Float32)
(declare-fun f13 (Float64 Float16 Float32 Float64 Float64) Float64)
(declare-fun f14 (Float16 Float128 Float16) Float16)
(declare-fun f15 (Float128 Float128 Float32 Float16 Float16 Float32 Float64) Float128)
(declare-fun f16 (Float32 Float64 Float128 Float32 Float32 Float64 Float16 Float32) Float128)
(declare-fun f17 (Float128 Float16 Float128 Float128 Float64 Float128 Float16) Float64)
(declare-fun f18 (Float64 Float128 Float128 Float64 Float64 Float128 Float64) Float16)
(declare-fun f19 (Float32 Float128 Float64 Float16 Float16 Float128 Float32 Float64 Float32) Float64)
(declare-fun f20 (Float64 Float128 Float128 Float128) Float32)
(declare-fun f21 (Float32 Float16 Float16 Float32 Float32) Float64)
(declare-fun f22 (Float32 Float16 Float128 Float128 Float128) Float128)
(declare-fun f23 (Float32 Float32 Float16 Float32 Float128) Float16)
(declare-fun f24 (Float32 Float64 Float32 Float16 Float128 Float16 Float16) Float64)
(declare-fun f25 (Float128 Float32 Float32 Float16 Float64) Float16)
(declare-fun f26 (Float32) Float32)
(declare-fun f27 (Float64 Float16 Float64 Float32 Float32 Float16) Float16)
(declare-fun f28 (Float16 Float16 Float128 Float128 Float32 Float16 Float32) Float128)
(declare-fun f29 (Float128 Float16 Float128 Float64 Float32 Float16 Float128 Float128 Float64 Float16) Float64)
(declare-fun f30 (Float16 Float32 Float16 Float64 Float128 Float128 Float64) Float16)
(declare-fun f31 (Float32) Float16)
(declare-fun f32 (Float128 Float64 Float64 Float32 Float128) Float128)
(declare-fun f33 (Float128) Float64)
(declare-fun f34 (Float16 Float32 Float64 Float128 Float128 Float64 Float64 Float64 Float16 Float16) Float64)
(declare-fun f35 (Float16 Float128 Float128 Float16 Float16 Float16 Float64 Float16) Float128)
(declare-fun f36 (Float64) Float64)
(declare-fun f37 (Float16 Float16) Float32)
(declare-fun f38 (Float16 Float16) Float32)
(declare-fun f39 (Float64) Float128)
(declare-fun f40 (Float64 Float32 Float16) Float16)
(declare-fun f41 (Float16 Float64 Float32 Float16 Float16 Float32 Float32 Float32) Float16)
(declare-fun f42 (Float32 Float64 Float128 Float128 Float64 Float128 Float64 Float64 Float64) Float128)
(declare-fun f43 (Float16 Float16) Float32)
(declare-fun f44 (Float16 Float128 Float32) Float32)
(declare-fun f45 (Float16 Float128) Float128)
(declare-fun f46 (Float16 Float128 Float32) Float64)
(declare-fun f47 (Float64 Float128 Float128 Float32 Float16 Float64 Float32 Float32 Float64) Float64)
(declare-fun f48 (Float16 Float32 Float128 Float64 Float64 Float128) Float16)
(declare-fun f49 (Float16 Float32 Float32 Float16) Float32)
(declare-fun p0 (Float32 Float16 Float128 Float16 Float128 Float128 Float32) Bool)
(declare-fun p1 (Float32 Float64 Float32 Float64 Float64 Float32 Float16) Bool)
(declare-fun p2 (Float16 Float32 Float32 Float16) Bool)
(declare-fun p3 (Float128 Float128) Bool)
(declare-fun p4 (Float16 Float16 Float64 Float64 Float128 Float16 Float64 Float32 Float64 Float16) Bool)
(declare-fun p5 (Float128 Float128 Float64 Float128 Float32) Bool)
(declare-fun p6 (Float32 Float16 Float128 Float128 Float16 Float64 Float16 Float16 Float128) Bool)
(declare-fun p7 (Float16 Float64 Float128 Float64) Bool)
(declare-fun p8 (Float128 Float128 Float128 Float64 Float64) Bool)
(declare-fun p9 (Float16 Float32 Float128 Float128 Float128 Float64 Float128 Float128 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float16)
(declare-const ?float61 Float128)
(declare-const ?float62 Float16)
(declare-const ?float63 Float128)
(declare-const ?float64 Float64)
(declare-const ?float65 Float32)
(declare-const ?float66 Float32)
(declare-const ?float67 Float128)
(declare-const ?float68 Float64)
(declare-const ?float69 Float16)
(declare-const ?float70 Float128)
(declare-const ?float71 Float16)
(declare-const ?float72 Float64)
(declare-const ?float73 Float128)
(declare-const ?float74 Float16)
(declare-const ?float75 Float32)
(declare-const ?float76 Float16)
(declare-const ?float77 Float128)
(declare-const ?float78 Float32)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b1 #b10000000011 #b1011110011010010111001001011111000000101110110101100)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float84 Float128)
(assert (= ?float84 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b0 #b01111001100 #b0101011011100100101010010001011100011011000100000000)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b1 #b01011110 #b00011010001110100010011)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b0 #b00001 #b0101100110)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float64)
(assert (= ?float98 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b0 #b00000000 #b00000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (fp.sub RTP ((_ to_fp 15 113) RNE ?float96) ?float63)))
(declare-const ?float101 Float128)
(assert (= ?float101 (f45 ((_ to_fp 5 11) RTZ ?float77) ((_ to_fp 15 113) RTP ?float87))))
(declare-const ?float102 Float16)
(assert (= ?float102 (f27 ((_ to_fp 11 53) RTZ ?float91) ((_ to_fp 5 11) RTN ?float84) ((_ to_fp 11 53) RTP ?float60) ((_ to_fp 8 24) RTP ?float68) ((_ to_fp 8 24) RTP ?float60) ((_ to_fp 5 11) RTP ?float101))))
(declare-const ?float103 Float128)
(assert (= ?float103 (fp.sub RTP ?float100 ?float89)))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.roundToIntegral RNE ?float66)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.sqrt RNE ?float80)))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.max ?float67 ?float97)))
(declare-const ?float107 Float128)
(assert (= ?float107 (fp.sub RTN ?float61 ?float100)))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.sqrt RTP ?float68)))
(declare-const ?float109 Float64)
(assert (= ?float109 (f29 ?float77 ((_ to_fp 5 11) RTZ ?float81) ((_ to_fp 15 113) RTZ ?float75) ((_ to_fp 11 53) RNE ?float75) ?float65 ((_ to_fp 5 11) RTN ?float63) ?float97 ((_ to_fp 15 113) RTN ?float96) ((_ to_fp 11 53) RTN ?float63) ((_ to_fp 5 11) RNE ?float106))))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.abs ?float105)))
(declare-const ?float111 Float128)
(assert (= ?float111 (fp.sub RTZ ?float106 ?float101)))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.add RTN ?float93 ?float92)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.max ?float98 ((_ to_fp 11 53) RTN ?float102))))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.roundToIntegral RTZ ?float99)))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.min ?float70 ((_ to_fp 15 113) RTN ?float75))))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.div RNE ?float96 ((_ to_fp 5 11) RTP ?float109))))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.add RNE ?float64 ?float105)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.sqrt RTN ?float81)))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.add RNE ?float110 ?float117)))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.mul RTZ ?float77 ?float70)))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.sqrt RTN ?float92)))
(declare-const ?float122 Float32)
(assert (= ?float122 (fp.min ?float83 ?float83)))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.add RTZ ((_ to_fp 8 24) RNE ?float93) ?float66)))
(declare-const ?float124 Float64)
(assert (= ?float124 (f36 ?float85)))
(declare-const ?float125 Float64)
(assert (= ?float125 (f13 ?float85 ((_ to_fp 5 11) RTP ?float75) ((_ to_fp 8 24) RTZ ?float106) ((_ to_fp 11 53) RTZ ?float63) ?float88)))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.neg ?float107)))
(declare-const ?float127 Float128)
(assert (= ?float127 (fp.sqrt RTP ?float111)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.add RNE ?float79 ((_ to_fp 8 24) RNE ?float108))))
(declare-const ?float129 Float128)
(assert (= ?float129 (fp.sqrt RNE ?float89)))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.mul RTP ?float106 ?float127)))
(declare-const ?float131 Float16)
(assert (= ?float131 (f48 ((_ to_fp 5 11) RTN ?float75) ?float78 ?float61 ((_ to_fp 11 53) RTP ?float63) ((_ to_fp 11 53) RNE ?float74) ?float63)))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.sqrt RTN ?float76)))
(declare-const ?float133 Float128)
(assert (= ?float133 (fp.add RTN ?float70 ?float130)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.min ((_ to_fp 15 113) RNE ?float68) ?float120)))
(declare-const ?float135 Float64)
(assert (= ?float135 (f19 ?float81 ?float63 ((_ to_fp 11 53) RTN ?float99) ((_ to_fp 5 11) RNE ?float114) ?float69 ?float86 ((_ to_fp 8 24) RTZ ?float84) ((_ to_fp 11 53) RNE ?float84) ((_ to_fp 8 24) RTN ?float98))))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.sqrt RNE ?float120)))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.mul RTN ?float110 ?float125)))
(declare-const ?float138 Float32)
(assert (= ?float138 (f12 ((_ to_fp 15 113) RTP ?float62) ?float92 ((_ to_fp 15 113) RTP ?float99) ((_ to_fp 15 113) RTP ?float122) ((_ to_fp 11 53) RTN ?float104) ?float62)))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.mul RTZ ?float69 ((_ to_fp 5 11) RNE ?float125))))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.sub RTN ((_ to_fp 8 24) RTZ ?float95) ?float82)))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.mul RTZ ((_ to_fp 5 11) RNE ?float119) ?float74)))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.sub RTN ?float137 ((_ to_fp 11 53) RTP ?float127))))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.max ((_ to_fp 11 53) RTN ?float91) ?float98)))
(declare-const ?float144 Float128)
(assert (= ?float144 (fp.div RTP ?float100 ((_ to_fp 15 113) RTZ ?float82))))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.mul RTN ?float105 ?float117)))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.add RTZ ((_ to_fp 8 24) RTP ?float69) ?float104)))
(declare-const ?float147 Float128)
(assert (= ?float147 (f35 ((_ to_fp 5 11) RTN ?float66) ((_ to_fp 15 113) RTN ?float125) ?float134 ?float116 ((_ to_fp 5 11) RTN ?float118) ((_ to_fp 5 11) RTZ ?float77) ?float80 ((_ to_fp 5 11) RTZ ?float124))))
(declare-const ?float148 Float128)
(assert (= ?float148 (fp.add RTN ((_ to_fp 15 113) RTP ?float109) ?float61)))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.min ((_ to_fp 5 11) RTN ?float72) ?float132)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.lt ?float98 ((_ to_fp 11 53) RTN ?float70))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNormal ?float148)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isSubnormal ?float105)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNaN ?float131)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isSubnormal ?float101)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isNormal ?float99)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNegative ?float115)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNormal ?float87)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.gt ((_ to_fp 5 11) RTZ ?float68) ?float96)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isSubnormal ?float138)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.leq ?float143 ((_ to_fp 11 53) RTP ?float130))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.gt ((_ to_fp 5 11) RTN ?float147) ?float131)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.eq ((_ to_fp 5 11) RTN ?float75) ?float92)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (p4 ((_ to_fp 5 11) RTN ?float73) ((_ to_fp 5 11) RTP ?float117) ?float109 ((_ to_fp 11 53) RNE ?float131) ((_ to_fp 15 113) RTP ?float66) ((_ to_fp 5 11) RTN ?float73) ((_ to_fp 11 53) RTZ ?float66) ((_ to_fp 8 24) RTN ?float68) ?float143 ((_ to_fp 5 11) RNE ?float78))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isNormal ?float140)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isNegative ?float99)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.gt ?float99 ?float138)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.leq ((_ to_fp 15 113) RNE ?float65) ?float111)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.gt ?float78 ((_ to_fp 8 24) RTP ?float92))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p0 ?float78 ((_ to_fp 5 11) RTN ?float136) ((_ to_fp 15 113) RTN ?float141) ?float74 ((_ to_fp 15 113) RTP ?float80) ?float144 ((_ to_fp 8 24) RTN ?float60))))
; FINAL ASSERT
(assert (or ?bool155))
(check-sat)


-- iteration 114 --
(declare-fun f0 (Float64 Float128) Float128)
(declare-fun f1 (Float64 Float16 Float32 Float64 Float32 Float32 Float16 Float16 Float16 Float16) Float16)
(declare-fun f2 (Float64 Float64) Float128)
(declare-fun f3 (Float128 Float128 Float64 Float16 Float128 Float128) Float16)
(declare-fun f4 (Float32 Float16 Float32 Float64 Float32 Float128) Float64)
(declare-fun f5 (Float16 Float64 Float16 Float32 Float32 Float128 Float64 Float64 Float16 Float16) Float128)
(declare-fun f6 (Float64 Float16 Float64) Float16)
(declare-fun f7 (Float128 Float32) Float16)
(declare-fun f8 (Float64 Float64 Float64 Float32) Float128)
(declare-fun f9 (Float16 Float64 Float128 Float64) Float16)
(declare-fun f10 (Float32) Float32)
(declare-fun f11 (Float64 Float32 Float16 Float64 Float16 Float32 Float32 Float64) Float64)
(declare-fun f12 (Float16 Float64 Float128 Float32 Float128 Float128 Float16 Float128 Float32 Float128) Float64)
(declare-fun f13 (Float64 Float128 Float128 Float64 Float32 Float64 Float32 Float64 Float16) Float32)
(declare-fun f14 (Float32 Float32 Float64) Float16)
(declare-fun f15 (Float64 Float16 Float64 Float16) Float16)
(declare-fun f16 (Float32 Float64 Float128) Float32)
(declare-fun f17 (Float32 Float16 Float16 Float16 Float16) Float32)
(declare-fun f18 (Float16 Float128 Float128 Float64 Float128 Float128) Float32)
(declare-fun f19 (Float64 Float128 Float64 Float16 Float64 Float64) Float64)
(declare-fun f20 (Float128 Float32 Float64 Float128 Float128 Float64 Float32) Float64)
(declare-fun f21 (Float16) Float128)
(declare-fun f22 (Float64 Float128) Float16)
(declare-fun f23 (Float128 Float32 Float64 Float128 Float64 Float64 Float64 Float128) Float32)
(declare-fun f24 (Float64) Float32)
(declare-fun f25 (Float64) Float64)
(declare-fun f26 (Float64 Float64 Float32 Float128 Float16 Float64) Float32)
(declare-fun f27 (Float32 Float64 Float64 Float64 Float32 Float16 Float64 Float32 Float32 Float16) Float16)
(declare-fun f28 (Float32 Float16 Float64 Float64 Float16 Float128 Float32 Float32 Float64) Float16)
(declare-fun f29 (Float64 Float64 Float32 Float64) Float32)
(declare-fun f30 (Float16 Float32 Float32 Float16 Float16) Float64)
(declare-fun f31 (Float32 Float16 Float64 Float32 Float128 Float128 Float64 Float16) Float64)
(declare-fun f32 (Float16 Float128 Float64 Float16 Float32 Float64 Float64 Float64) Float16)
(declare-fun f33 (Float128 Float64 Float128) Float128)
(declare-fun f34 (Float32 Float64) Float32)
(declare-fun f35 (Float64 Float64 Float16) Float128)
(declare-fun f36 (Float64 Float64) Float16)
(declare-fun f37 (Float128 Float16 Float64) Float32)
(declare-fun f38 (Float32 Float16 Float32 Float64 Float16 Float16 Float64 Float128 Float16 Float128) Float16)
(declare-fun f39 (Float128 Float128) Float128)
(declare-fun f40 (Float64 Float16 Float64 Float32) Float16)
(declare-fun f41 (Float16 Float32 Float16 Float32 Float128 Float128 Float64 Float128 Float16) Float32)
(declare-fun f42 (Float32 Float128) Float32)
(declare-fun f43 (Float128 Float64 Float32 Float32 Float16 Float128) Float32)
(declare-fun f44 (Float32 Float64) Float32)
(declare-fun f45 (Float64 Float32 Float64 Float16 Float32 Float16 Float32) Float128)
(declare-fun f46 (Float64 Float128 Float16) Float16)
(declare-fun f47 (Float16) Float32)
(declare-fun f48 (Float32 Float128 Float16 Float64 Float64 Float32 Float128 Float32 Float128 Float16) Float32)
(declare-fun f49 (Float32) Float32)
(declare-fun p0 (Float16 Float64 Float64) Bool)
(declare-fun p1 (Float64 Float32 Float128 Float128 Float32 Float16) Bool)
(declare-fun p2 (Float32 Float128 Float32) Bool)
(declare-fun p3 (Float16 Float64 Float128 Float32 Float32 Float16 Float16) Bool)
(declare-fun p4 (Float128 Float16 Float128 Float64 Float32 Float16 Float64 Float128 Float32 Float16) Bool)
(declare-fun p5 (Float16) Bool)
(declare-fun p6 (Float16 Float32 Float32) Bool)
(declare-fun p7 (Float16 Float128 Float128 Float32 Float16) Bool)
(declare-fun p8 (Float32 Float16 Float128) Bool)
(declare-fun p9 (Float64 Float32 Float64 Float16 Float32 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float32)
(declare-const ?float62 Float32)
(declare-const ?float63 Float128)
(declare-const ?float64 Float128)
(declare-const ?float65 Float64)
(declare-const ?float66 Float16)
(declare-const ?float67 Float128)
(declare-const ?float68 Float64)
(declare-const ?float69 Float128)
(declare-const ?float70 Float64)
(declare-const ?float71 Float32)
(declare-const ?float72 Float32)
(declare-const ?float73 Float128)
(declare-const ?float74 Float128)
(declare-const ?float75 Float32)
(declare-const ?float76 Float128)
(declare-const ?float77 Float32)
(declare-const ?float78 Float128)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b0 #b110100001101101 #b1011011000100000101110010011000111101110110010100111101110101100100000011010111011100100001010011010100111111110)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b0 #b011000101000010 #b1110100111000011011110110010100100001010000001011001011100100010101010110001101010001010101000010011100111001101)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b0 #b111111001100000 #b1011010011000111001001000101111001010111000110010010111111011010000111010110000101000010110111001110100010111001)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float64)
(assert (= ?float98 (fp #b1 #b11100110010 #b1010111011101000000100101111000101100110000110011110)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b0 #b11110 #b1101011001)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (fp.div RNE ?float68 ((_ to_fp 11 53) RNE ?float84))))
(declare-const ?float101 Float32)
(assert (= ?float101 (fp.roundToIntegral RNE ?float93)))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.mul RNE ((_ to_fp 8 24) RTP ?float79) ?float82)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.min ?float99 ((_ to_fp 5 11) RTZ ?float86))))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.min ((_ to_fp 8 24) RTP ?float74) ?float102)))
(declare-const ?float105 Float128)
(assert (= ?float105 (fp.add RTZ ?float74 ?float92)))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.div RTN ((_ to_fp 8 24) RTZ ?float86) ?float61)))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.add RTZ ((_ to_fp 8 24) RNE ?float103) ?float72)))
(declare-const ?float108 Float16)
(assert (= ?float108 (f15 ?float70 ((_ to_fp 5 11) RTP ?float91) ?float97 ((_ to_fp 5 11) RTN ?float107))))
(declare-const ?float109 Float32)
(assert (= ?float109 (f17 ?float106 ((_ to_fp 5 11) RTZ ?float107) ?float85 ((_ to_fp 5 11) RTZ ?float104) ((_ to_fp 5 11) RTN ?float68))))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.roundToIntegral RTP ?float69)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.add RTN ((_ to_fp 5 11) RTN ?float82) ?float103)))
(declare-const ?float112 Float128)
(assert (= ?float112 (fp.abs ?float76)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.roundToIntegral RNE ?float97)))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.sub RTN ?float96 ((_ to_fp 8 24) RTZ ?float73))))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.min ((_ to_fp 8 24) RTZ ?float99) ?float101)))
(declare-const ?float116 Float128)
(assert (= ?float116 (fp.abs ?float91)))
(declare-const ?float117 Float16)
(assert (= ?float117 (f6 ((_ to_fp 11 53) RNE ?float91) ((_ to_fp 5 11) RNE ?float98) ((_ to_fp 11 53) RNE ?float63))))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.sqrt RNE ?float64)))
(declare-const ?float119 Float128)
(assert (= ?float119 (fp.neg ?float67)))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.neg ?float81)))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.min ((_ to_fp 15 113) RNE ?float99) ?float69)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.roundToIntegral RTP ?float108)))
(declare-const ?float123 Float128)
(assert (= ?float123 (fp.abs ?float69)))
(declare-const ?float124 Float128)
(assert (= ?float124 (fp.neg ?float64)))
(declare-const ?float125 Float32)
(assert (= ?float125 (f26 ((_ to_fp 11 53) RTZ ?float67) ((_ to_fp 11 53) RNE ?float84) ((_ to_fp 8 24) RTP ?float60) ((_ to_fp 15 113) RTN ?float113) ((_ to_fp 5 11) RTN ?float70) ((_ to_fp 11 53) RTZ ?float111))))
(declare-const ?float126 Float32)
(assert (= ?float126 (f34 ((_ to_fp 8 24) RTP ?float85) ((_ to_fp 11 53) RTN ?float104))))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.abs ?float102)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.max ?float62 ?float71)))
(declare-const ?float129 Float128)
(assert (= ?float129 (fp.abs ?float121)))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.div RTP ((_ to_fp 8 24) RTZ ?float112) ?float126)))
(declare-const ?float131 Float128)
(assert (= ?float131 (fp.sqrt RTP ?float60)))
(declare-const ?float132 Float32)
(assert (= ?float132 (f34 ((_ to_fp 8 24) RTP ?float117) ((_ to_fp 11 53) RTP ?float62))))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.max ((_ to_fp 8 24) RTN ?float67) ?float130)))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.div RTZ ?float66 ((_ to_fp 5 11) RTZ ?float63))))
(declare-const ?float135 Float64)
(assert (= ?float135 (f4 ?float72 ?float117 ((_ to_fp 8 24) RTN ?float119) ((_ to_fp 11 53) RTZ ?float78) ((_ to_fp 8 24) RTN ?float70) ?float131)))
(declare-const ?float136 Float32)
(assert (= ?float136 (fp.sub RTP ?float83 ?float94)))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.abs ?float60)))
(declare-const ?float138 Float128)
(assert (= ?float138 (fp.min ?float118 ((_ to_fp 15 113) RNE ?float82))))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.min ?float116 ((_ to_fp 15 113) RTP ?float125))))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.sqrt RTN ?float130)))
(declare-const ?float141 Float32)
(assert (= ?float141 (fp.roundToIntegral RTZ ?float82)))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.roundToIntegral RTN ?float64)))
(declare-const ?float143 Float128)
(assert (= ?float143 (fp.sqrt RTN ?float131)))
(declare-const ?float144 Float128)
(assert (= ?float144 (fp.min ?float119 ((_ to_fp 15 113) RTP ?float120))))
(declare-const ?float145 Float64)
(assert (= ?float145 (f4 ((_ to_fp 8 24) RTP ?float90) ((_ to_fp 5 11) RTP ?float115) ((_ to_fp 8 24) RNE ?float108) ?float100 ((_ to_fp 8 24) RTZ ?float139) ((_ to_fp 15 113) RNE ?float101))))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.sqrt RTP ?float139)))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.add RTZ ?float138 ?float74)))
(declare-const ?float148 Float128)
(assert (= ?float148 (f21 ((_ to_fp 5 11) RTN ?float61))))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.add RTZ ((_ to_fp 15 113) RTZ ?float80) ?float147)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isZero ?float126)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p1 ((_ to_fp 11 53) RTP ?float140) ?float107 ((_ to_fp 15 113) RTN ?float106) ((_ to_fp 15 113) RTZ ?float134) ((_ to_fp 8 24) RTZ ?float137) ((_ to_fp 5 11) RTZ ?float78))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (p6 ((_ to_fp 5 11) RNE ?float121) ((_ to_fp 8 24) RNE ?float70) ((_ to_fp 8 24) RTN ?float74))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.eq ?float95 ?float121)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isPositive ?float146)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.geq ((_ to_fp 5 11) RNE ?float137) ?float111)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (p8 ((_ to_fp 8 24) RNE ?float70) ((_ to_fp 5 11) RTZ ?float79) ((_ to_fp 15 113) RTN ?float96))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p3 ((_ to_fp 5 11) RTZ ?float130) ((_ to_fp 11 53) RTP ?float69) ((_ to_fp 15 113) RTP ?float117) ((_ to_fp 8 24) RTN ?float76) ((_ to_fp 8 24) RTZ ?float116) ((_ to_fp 5 11) RTZ ?float116) ((_ to_fp 5 11) RTZ ?float139))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isInfinite ?float96)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isNaN ?float116)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p1 ((_ to_fp 11 53) RTP ?float77) ((_ to_fp 8 24) RTZ ?float79) ?float86 ((_ to_fp 15 113) RNE ?float65) ((_ to_fp 8 24) RTZ ?float121) ((_ to_fp 5 11) RTP ?float125))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNaN ?float147)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.leq ?float64 ((_ to_fp 15 113) RTP ?float113))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNaN ?float83)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.lt ((_ to_fp 5 11) RTN ?float140) ?float122)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.geq ((_ to_fp 15 113) RTZ ?float114) ?float146)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p2 ?float130 ((_ to_fp 15 113) RNE ?float133) ?float62)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isPositive ?float139)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNaN ?float89)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNormal ?float81)))
; FINAL ASSERT
(assert (and ?bool151 ?bool152 (and (and ?bool167 (or ?bool162 (or ?bool156))) (and ?bool150 (and ?bool162 (and ?bool163 (or (and ?bool164) (or ?bool158 ?bool163 ?bool167) (and ?bool166 ?bool169))) ?bool156) (and ?bool159)))))
(check-sat)


-- iteration 115 --
(declare-fun f0 (Float32 Float16) Float64)
(declare-fun f1 (Float64 Float64 Float64 Float32 Float64 Float64 Float128 Float64 Float16 Float16) Float64)
(declare-fun f2 (Float32 Float32 Float32) Float64)
(declare-fun f3 (Float16 Float128 Float64) Float128)
(declare-fun f4 (Float16 Float128) Float16)
(declare-fun f5 (Float32 Float16 Float16 Float64) Float32)
(declare-fun f6 (Float64 Float32 Float32) Float64)
(declare-fun f7 (Float128 Float32 Float64 Float32 Float64 Float128 Float128 Float32 Float64 Float128) Float16)
(declare-fun f8 (Float32 Float64) Float32)
(declare-fun f9 (Float64 Float32 Float128 Float64 Float16 Float128) Float128)
(declare-fun f10 (Float16 Float64 Float32 Float16 Float16) Float128)
(declare-fun f11 (Float32) Float32)
(declare-fun f12 (Float128) Float32)
(declare-fun f13 (Float32 Float16 Float16 Float128 Float64 Float16 Float128) Float32)
(declare-fun f14 (Float64 Float16 Float32 Float128 Float16 Float32 Float128 Float128) Float16)
(declare-fun f15 (Float64 Float128 Float64 Float32 Float128) Float64)
(declare-fun f16 (Float64 Float64 Float16 Float32 Float32 Float64) Float64)
(declare-fun f17 (Float64 Float16 Float64) Float32)
(declare-fun f18 (Float32) Float128)
(declare-fun f19 (Float16 Float128 Float32) Float32)
(declare-fun f20 (Float16) Float16)
(declare-fun f21 (Float32 Float32 Float128 Float16 Float16 Float32 Float128 Float128) Float32)
(declare-fun f22 (Float64 Float64 Float128 Float128) Float16)
(declare-fun f23 (Float64 Float64 Float64 Float16) Float16)
(declare-fun f24 (Float64 Float64 Float32 Float32 Float16 Float32 Float32 Float128 Float16 Float64) Float128)
(declare-fun f25 (Float32) Float128)
(declare-fun f26 (Float16) Float16)
(declare-fun f27 (Float128 Float128 Float32 Float32) Float64)
(declare-fun f28 (Float64 Float64 Float64 Float16 Float64 Float16 Float16) Float32)
(declare-fun f29 (Float128 Float16 Float128 Float128) Float16)
(declare-fun f30 (Float64 Float32 Float64 Float128 Float32 Float128 Float16) Float128)
(declare-fun f31 (Float128 Float64 Float32 Float16 Float16 Float128 Float16 Float128 Float32) Float64)
(declare-fun f32 (Float128 Float32 Float128 Float128 Float64 Float32) Float16)
(declare-fun f33 (Float32) Float128)
(declare-fun f34 (Float64 Float64 Float64 Float32 Float128) Float32)
(declare-fun f35 (Float16 Float16 Float64 Float64 Float16) Float128)
(declare-fun f36 (Float16 Float128 Float64 Float32 Float128 Float32 Float64 Float64 Float32 Float64) Float16)
(declare-fun f37 (Float16 Float32 Float128 Float32 Float128 Float16 Float16) Float64)
(declare-fun f38 (Float16 Float64 Float128 Float16) Float32)
(declare-fun f39 (Float16 Float32 Float64 Float16 Float16 Float32 Float128) Float64)
(declare-fun f40 (Float128 Float64 Float128 Float128) Float128)
(declare-fun f41 (Float64 Float32) Float128)
(declare-fun f42 (Float128 Float32 Float128 Float16) Float32)
(declare-fun f43 (Float16 Float32 Float128) Float32)
(declare-fun f44 (Float32 Float16 Float16) Float32)
(declare-fun f45 (Float32 Float16 Float32 Float32 Float32 Float64 Float16 Float16 Float16) Float128)
(declare-fun f46 (Float16 Float128 Float128 Float16) Float32)
(declare-fun f47 (Float64 Float64 Float16 Float16 Float128 Float64 Float32) Float64)
(declare-fun f48 (Float128 Float16 Float64) Float128)
(declare-fun f49 (Float16 Float16 Float16 Float16 Float32 Float16 Float64 Float32) Float64)
(declare-fun p0 (Float128 Float128 Float32) Bool)
(declare-fun p1 (Float64 Float16 Float16 Float32 Float128 Float64 Float128) Bool)
(declare-fun p2 (Float32 Float128) Bool)
(declare-fun p3 (Float16 Float64 Float64 Float16 Float64 Float64 Float16) Bool)
(declare-fun p4 (Float16) Bool)
(declare-fun p5 (Float64 Float64) Bool)
(declare-fun p6 (Float64 Float32 Float32 Float128 Float16 Float32) Bool)
(declare-fun p7 (Float32 Float128 Float32 Float16 Float64) Bool)
(declare-fun p8 (Float32 Float16 Float16 Float128 Float128 Float64 Float32 Float16 Float64) Bool)
(declare-fun p9 (Float64 Float16 Float32 Float32 Float32 Float64 Float64 Float32 Float16 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float16)
(declare-const ?float62 Float64)
(declare-const ?float63 Float128)
(declare-const ?float64 Float32)
(declare-const ?float65 Float64)
(declare-const ?float66 Float32)
(declare-const ?float67 Float32)
(declare-const ?float68 Float32)
(declare-const ?float69 Float64)
(declare-const ?float70 Float128)
(declare-const ?float71 Float32)
(declare-const ?float72 Float64)
(declare-const ?float73 Float64)
(declare-const ?float74 Float32)
(declare-const ?float75 Float64)
(declare-const ?float76 Float128)
(declare-const ?float77 Float64)
(declare-const ?float78 Float16)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b0 #b00110011010 #b1100001110110111011010011111100111111001111101110010)))
(declare-const ?float83 Float128)
(assert (= ?float83 (fp #b0 #b001100011100101 #b1101010011101001001111101000001111010001010111011110000001110101001000101000011011000010111010001011011100101111)))
(declare-const ?float84 Float128)
(assert (= ?float84 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b0 #b00011100 #b01001100110111011011100)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (fp.add RNE ?float83 ?float92)))
(declare-const ?float101 Float64)
(assert (= ?float101 (fp.mul RTN ?float99 ?float90)))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.mul RTZ ((_ to_fp 5 11) RTN ?float62) ?float94)))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.roundToIntegral RTZ ?float86)))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.min ?float64 ?float64)))
(declare-const ?float105 Float64)
(assert (= ?float105 (f37 ((_ to_fp 5 11) RTZ ?float65) ((_ to_fp 8 24) RTN ?float101) ((_ to_fp 15 113) RTP ?float77) ((_ to_fp 8 24) RTP ?float80) ((_ to_fp 15 113) RNE ?float77) ?float81 ?float96)))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.neg ?float82)))
(declare-const ?float107 Float16)
(assert (= ?float107 (f22 ((_ to_fp 11 53) RTP ?float64) ((_ to_fp 11 53) RTP ?float81) ?float84 ((_ to_fp 15 113) RTP ?float90))))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.mul RTP ?float71 ((_ to_fp 8 24) RTZ ?float107))))
(declare-const ?float109 Float32)
(assert (= ?float109 (fp.neg ?float64)))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.sqrt RTN ?float107)))
(declare-const ?float111 Float64)
(assert (= ?float111 (f37 ((_ to_fp 5 11) RTZ ?float86) ((_ to_fp 8 24) RTP ?float76) ((_ to_fp 15 113) RNE ?float106) ((_ to_fp 8 24) RTZ ?float61) ((_ to_fp 15 113) RTZ ?float89) ?float94 ((_ to_fp 5 11) RTN ?float93))))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.div RTN ?float99 ((_ to_fp 11 53) RTP ?float83))))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.abs ?float99)))
(declare-const ?float114 Float16)
(assert (= ?float114 (f23 ((_ to_fp 11 53) RNE ?float97) ((_ to_fp 11 53) RTN ?float108) ((_ to_fp 11 53) RNE ?float64) ((_ to_fp 5 11) RNE ?float104))))
(declare-const ?float115 Float32)
(assert (= ?float115 (f46 ((_ to_fp 5 11) RTN ?float68) ((_ to_fp 15 113) RNE ?float62) ((_ to_fp 15 113) RTZ ?float95) ((_ to_fp 5 11) RTZ ?float80))))
(declare-const ?float116 Float64)
(assert (= ?float116 (f1 ((_ to_fp 11 53) RNE ?float60) ((_ to_fp 11 53) RNE ?float98) ?float77 ((_ to_fp 8 24) RTZ ?float78) ((_ to_fp 11 53) RTZ ?float83) ((_ to_fp 11 53) RTP ?float109) ((_ to_fp 15 113) RTP ?float89) ?float91 ((_ to_fp 5 11) RNE ?float76) ?float102)))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.mul RTP ?float94 ((_ to_fp 5 11) RTZ ?float93))))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.add RTP ((_ to_fp 8 24) RTZ ?float106) ?float95)))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.min ?float103 ((_ to_fp 11 53) RTP ?float107))))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.sub RTN ((_ to_fp 8 24) RTZ ?float103) ?float118)))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.abs ?float105)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.sqrt RTZ ?float81)))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.div RNE ((_ to_fp 8 24) RTN ?float117) ?float115)))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.add RTN ?float86 ?float113)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.mul RNE ((_ to_fp 8 24) RTZ ?float107) ?float108)))
(declare-const ?float126 Float32)
(assert (= ?float126 (fp.neg ?float60)))
(declare-const ?float127 Float32)
(assert (= ?float127 (f19 ((_ to_fp 5 11) RTP ?float62) ((_ to_fp 15 113) RTP ?float113) ?float123)))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.add RNE ?float70 ?float79)))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.add RNE ?float127 ?float127)))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.add RTP ?float93 ?float127)))
(declare-const ?float131 Float32)
(assert (= ?float131 (fp.add RNE ?float120 ((_ to_fp 8 24) RTP ?float100))))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.neg ?float91)))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.sub RTN ?float66 ?float98)))
(declare-const ?float134 Float32)
(assert (= ?float134 (f46 ((_ to_fp 5 11) RNE ?float113) ((_ to_fp 15 113) RTZ ?float106) ((_ to_fp 15 113) RTP ?float129) ?float110)))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.sqrt RTZ ?float122)))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.min ?float73 ?float87)))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.min ((_ to_fp 8 24) RTN ?float79) ?float125)))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.abs ?float61)))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.add RTP ((_ to_fp 8 24) RNE ?float88) ?float98)))
(declare-const ?float140 Float64)
(assert (= ?float140 (fp.abs ?float116)))
(declare-const ?float141 Float32)
(assert (= ?float141 (fp.div RTP ((_ to_fp 8 24) RTP ?float90) ?float130)))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.mul RNE ?float75 ?float103)))
(declare-const ?float143 Float128)
(assert (= ?float143 (fp.div RTP ?float79 ((_ to_fp 15 113) RTN ?float96))))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.add RTP ?float125 ((_ to_fp 8 24) RTP ?float85))))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.mul RTZ ?float80 ((_ to_fp 11 53) RTZ ?float126))))
(declare-const ?float146 Float64)
(assert (= ?float146 (f39 ((_ to_fp 5 11) RTP ?float75) ((_ to_fp 8 24) RTP ?float119) ?float72 ((_ to_fp 5 11) RTZ ?float108) ((_ to_fp 5 11) RTP ?float91) ((_ to_fp 8 24) RTZ ?float138) ((_ to_fp 15 113) RTZ ?float74))))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.abs ?float83)))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.sqrt RTP ?float91)))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.roundToIntegral RTZ ?float124)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.lt ((_ to_fp 11 53) RTZ ?float64) ?float121)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p9 ((_ to_fp 11 53) RTP ?float118) ((_ to_fp 5 11) RNE ?float89) ?float71 ((_ to_fp 8 24) RTZ ?float88) ((_ to_fp 8 24) RTP ?float63) ((_ to_fp 11 53) RTZ ?float122) ?float113 ?float68 ((_ to_fp 5 11) RTZ ?float98) ((_ to_fp 15 113) RNE ?float149))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (p9 ((_ to_fp 11 53) RNE ?float100) ((_ to_fp 5 11) RTZ ?float125) ?float118 ?float66 ((_ to_fp 8 24) RTZ ?float116) ((_ to_fp 11 53) RNE ?float96) ?float73 ((_ to_fp 8 24) RTZ ?float100) ((_ to_fp 5 11) RTZ ?float133) ?float128)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isPositive ?float69)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isPositive ?float64)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p3 ((_ to_fp 5 11) RTP ?float140) ((_ to_fp 11 53) RNE ?float71) ((_ to_fp 11 53) RTP ?float118) ((_ to_fp 5 11) RNE ?float64) ((_ to_fp 11 53) RTZ ?float133) ?float148 ((_ to_fp 5 11) RTP ?float84))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (p4 ((_ to_fp 5 11) RTN ?float80))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isPositive ?float113)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.lt ?float118 ?float120)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.geq ((_ to_fp 11 53) RTN ?float78) ?float87)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.eq ?float88 ((_ to_fp 15 113) RTZ ?float126))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.lt ?float97 ((_ to_fp 15 113) RTP ?float140))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isInfinite ?float90)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNegative ?float118)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.geq ?float110 ((_ to_fp 5 11) RTZ ?float77))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isInfinite ?float145)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p3 ?float122 ((_ to_fp 11 53) RTZ ?float104) ?float91 ((_ to_fp 5 11) RTP ?float143) ?float146 ?float140 ((_ to_fp 5 11) RTN ?float93))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p4 ?float110)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (p8 ((_ to_fp 8 24) RTN ?float73) ?float110 ((_ to_fp 5 11) RTP ?float71) ((_ to_fp 15 113) RNE ?float67) ?float143 ?float69 ?float134 ((_ to_fp 5 11) RNE ?float133) ((_ to_fp 11 53) RTP ?float92))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.lt ((_ to_fp 11 53) RTP ?float85) ?float89)))
; FINAL ASSERT
(assert (or (and (and (or ?bool153 ?bool166) ?bool161 ?bool150) (or (or ?bool168) (and ?bool157 (or (and ?bool157) (or ?bool169 (or ?bool156) ?bool168)) ?bool161))) (or ?bool154) ?bool150))
(check-sat)


-- iteration 116 --
(declare-fun f0 (Float16 Float128 Float64 Float16 Float16 Float16 Float32) Float32)
(declare-fun f1 (Float128 Float16 Float32 Float64 Float64 Float16 Float128 Float128) Float32)
(declare-fun f2 (Float16 Float32 Float16 Float128 Float128 Float32 Float16) Float16)
(declare-fun f3 (Float16 Float128 Float128 Float32 Float16) Float16)
(declare-fun f4 (Float16 Float128 Float16 Float32 Float16 Float64 Float128 Float16 Float128) Float16)
(declare-fun f5 (Float32) Float16)
(declare-fun f6 (Float128 Float32 Float32 Float64 Float16) Float16)
(declare-fun f7 (Float128 Float64 Float32 Float128) Float16)
(declare-fun f8 (Float32 Float128 Float16 Float64 Float16 Float32 Float64 Float128 Float64) Float32)
(declare-fun f9 (Float64 Float64 Float128 Float64) Float16)
(declare-fun f10 (Float32 Float32 Float128 Float128) Float32)
(declare-fun f11 (Float16 Float64 Float16 Float32) Float16)
(declare-fun f12 (Float16 Float128 Float32 Float64) Float16)
(declare-fun f13 (Float64 Float16) Float16)
(declare-fun f14 (Float128 Float16 Float128 Float64 Float128 Float32 Float32 Float64 Float16 Float64) Float128)
(declare-fun f15 (Float64 Float16 Float16 Float128) Float32)
(declare-fun f16 (Float16 Float32 Float64 Float64) Float128)
(declare-fun f17 (Float128 Float32) Float64)
(declare-fun f18 (Float128 Float64 Float16) Float128)
(declare-fun f19 (Float32 Float16 Float64 Float128 Float16) Float64)
(declare-fun f20 (Float32 Float64 Float16 Float16 Float16 Float64) Float64)
(declare-fun f21 (Float16 Float128 Float16 Float32 Float128 Float64) Float16)
(declare-fun f22 (Float64 Float64 Float16 Float64 Float16) Float32)
(declare-fun f23 (Float128 Float16 Float64 Float64 Float16 Float32) Float128)
(declare-fun f24 (Float16 Float32 Float128 Float32 Float32 Float64 Float64 Float64 Float64) Float64)
(declare-fun f25 (Float32 Float128 Float32 Float128 Float32) Float128)
(declare-fun f26 (Float16 Float64 Float64 Float64 Float128 Float16 Float32 Float32 Float128 Float32) Float64)
(declare-fun f27 (Float16 Float128 Float64 Float128) Float32)
(declare-fun f28 (Float16 Float32 Float128 Float128 Float32 Float128 Float128) Float32)
(declare-fun f29 (Float128 Float64 Float32 Float32 Float32 Float128) Float32)
(declare-fun f30 (Float32 Float16 Float64 Float16 Float128 Float16) Float32)
(declare-fun f31 (Float128 Float64 Float128 Float32 Float32 Float64 Float64) Float16)
(declare-fun f32 (Float16 Float32 Float16 Float64 Float128) Float16)
(declare-fun f33 (Float128 Float64 Float32 Float64 Float128 Float128 Float16 Float16) Float64)
(declare-fun f34 (Float32 Float128 Float128 Float16 Float128 Float32 Float128 Float64 Float32 Float16) Float64)
(declare-fun f35 (Float16 Float32 Float32 Float128 Float16 Float16 Float128 Float128 Float16) Float32)
(declare-fun f36 (Float16 Float128 Float16 Float128 Float16) Float64)
(declare-fun f37 (Float32 Float128 Float32 Float128 Float128 Float16 Float32) Float32)
(declare-fun f38 (Float16 Float64) Float64)
(declare-fun f39 (Float16 Float16 Float64 Float64 Float32 Float64 Float32 Float64 Float64 Float64) Float64)
(declare-fun f40 (Float128 Float16) Float64)
(declare-fun f41 (Float64 Float128 Float16 Float16 Float16 Float32) Float16)
(declare-fun f42 (Float128 Float128 Float16 Float64 Float32 Float16 Float64 Float32) Float64)
(declare-fun f43 (Float32 Float128 Float128 Float32 Float64 Float64) Float128)
(declare-fun f44 (Float32 Float64 Float128 Float64 Float16 Float64 Float32) Float128)
(declare-fun f45 (Float64 Float128 Float64 Float16 Float64 Float16 Float32 Float32 Float32 Float128) Float16)
(declare-fun f46 (Float64 Float16 Float32) Float128)
(declare-fun f47 (Float64 Float16 Float64 Float128 Float32 Float128) Float16)
(declare-fun f48 (Float128 Float16 Float64) Float128)
(declare-fun f49 (Float64 Float64 Float32 Float32 Float16 Float64) Float64)
(declare-fun p0 (Float64 Float128 Float128 Float128 Float16) Bool)
(declare-fun p1 (Float32 Float128 Float16 Float128 Float64 Float128 Float16 Float128 Float128 Float128) Bool)
(declare-fun p2 (Float64) Bool)
(declare-fun p3 (Float128 Float32 Float128 Float16) Bool)
(declare-fun p4 (Float16 Float64 Float16 Float64 Float16 Float128 Float128 Float64 Float32 Float128) Bool)
(declare-fun p5 (Float32 Float32 Float16 Float64 Float32 Float128 Float64 Float32) Bool)
(declare-fun p6 (Float32 Float128 Float16 Float128 Float16 Float16 Float32 Float64 Float16) Bool)
(declare-fun p7 (Float32 Float64 Float128 Float64 Float128 Float32 Float32 Float16) Bool)
(declare-fun p8 (Float32 Float128 Float64 Float128 Float16 Float16 Float128 Float16 Float32 Float16) Bool)
(declare-fun p9 (Float32 Float64 Float32 Float16 Float16 Float128 Float64 Float16 Float16 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float128)
(declare-const ?float62 Float128)
(declare-const ?float63 Float32)
(declare-const ?float64 Float32)
(declare-const ?float65 Float32)
(declare-const ?float66 Float32)
(declare-const ?float67 Float32)
(declare-const ?float68 Float32)
(declare-const ?float69 Float64)
(declare-const ?float70 Float128)
(declare-const ?float71 Float128)
(declare-const ?float72 Float16)
(declare-const ?float73 Float32)
(declare-const ?float74 Float32)
(declare-const ?float75 Float16)
(declare-const ?float76 Float32)
(declare-const ?float77 Float128)
(declare-const ?float78 Float128)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b1 #b11110 #b0111010111)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b0 #b10000000011 #b1000111001100100010110100100100101001000110001000000)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float92 Float64)
(assert (= ?float92 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b0 #b11100 #b1001111100)))
(declare-const ?float98 Float64)
(assert (= ?float98 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (fp.neg ?float87)))
(declare-const ?float101 Float64)
(assert (= ?float101 (fp.roundToIntegral RTP ?float81)))
(declare-const ?float102 Float64)
(assert (= ?float102 (fp.max ?float98 ?float89)))
(declare-const ?float103 Float64)
(assert (= ?float103 (f39 ((_ to_fp 5 11) RTZ ?float88) ?float75 ((_ to_fp 11 53) RTZ ?float74) ?float69 ((_ to_fp 8 24) RTP ?float102) ?float88 ((_ to_fp 8 24) RTN ?float99) ((_ to_fp 11 53) RTN ?float73) ((_ to_fp 11 53) RTP ?float94) ((_ to_fp 11 53) RTZ ?float94))))
(declare-const ?float104 Float64)
(assert (= ?float104 (f39 ((_ to_fp 5 11) RTP ?float68) ((_ to_fp 5 11) RTN ?float103) ((_ to_fp 11 53) RNE ?float78) ((_ to_fp 11 53) RTN ?float78) ((_ to_fp 8 24) RTP ?float70) ((_ to_fp 11 53) RNE ?float83) ?float76 ((_ to_fp 11 53) RTN ?float61) ((_ to_fp 11 53) RNE ?float83) ((_ to_fp 11 53) RNE ?float73))))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.neg ?float84)))
(declare-const ?float106 Float16)
(assert (= ?float106 (fp.add RTN ((_ to_fp 5 11) RTZ ?float82) ?float72)))
(declare-const ?float107 Float128)
(assert (= ?float107 (fp.abs ?float62)))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.add RNE ?float60 ((_ to_fp 15 113) RNE ?float80))))
(declare-const ?float109 Float128)
(assert (= ?float109 (f23 ((_ to_fp 15 113) RTN ?float106) ((_ to_fp 5 11) RTP ?float87) ?float102 ((_ to_fp 11 53) RTZ ?float97) ((_ to_fp 5 11) RTN ?float91) ((_ to_fp 8 24) RTZ ?float83))))
(declare-const ?float110 Float128)
(assert (= ?float110 (f43 ((_ to_fp 8 24) RNE ?float80) ?float107 ((_ to_fp 15 113) RTN ?float88) ?float73 ((_ to_fp 11 53) RTN ?float84) ((_ to_fp 11 53) RTN ?float76))))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.neg ?float91)))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.div RTP ((_ to_fp 5 11) RTN ?float88) ?float93)))
(declare-const ?float113 Float32)
(assert (= ?float113 (fp.roundToIntegral RTZ ?float68)))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.abs ?float93)))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.max ?float91 ((_ to_fp 8 24) RTN ?float84))))
(declare-const ?float116 Float128)
(assert (= ?float116 (fp.sub RTP ((_ to_fp 15 113) RTZ ?float63) ?float62)))
(declare-const ?float117 Float128)
(assert (= ?float117 (f18 ((_ to_fp 15 113) RTN ?float66) ((_ to_fp 11 53) RTP ?float71) ((_ to_fp 5 11) RNE ?float104))))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.max ((_ to_fp 5 11) RNE ?float61) ?float83)))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.sqrt RTN ?float84)))
(declare-const ?float120 Float32)
(assert (= ?float120 (fp.sub RTZ ((_ to_fp 8 24) RTN ?float86) ?float113)))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.roundToIntegral RNE ?float110)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.mul RTZ ?float80 ((_ to_fp 5 11) RTN ?float77))))
(declare-const ?float123 Float16)
(assert (= ?float123 (f45 ((_ to_fp 11 53) RTZ ?float61) ?float95 ((_ to_fp 11 53) RTP ?float119) ((_ to_fp 5 11) RTP ?float77) ((_ to_fp 11 53) RNE ?float121) ((_ to_fp 5 11) RTZ ?float100) ((_ to_fp 8 24) RTN ?float109) ((_ to_fp 8 24) RTZ ?float102) ?float90 ((_ to_fp 15 113) RTP ?float93))))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.sub RTP ?float104 ((_ to_fp 11 53) RTP ?float108))))
(declare-const ?float125 Float16)
(assert (= ?float125 (fp.mul RTN ?float83 ?float86)))
(declare-const ?float126 Float16)
(assert (= ?float126 (f21 ?float106 ?float116 ((_ to_fp 5 11) RTN ?float71) ((_ to_fp 8 24) RNE ?float124) ((_ to_fp 15 113) RTP ?float123) ((_ to_fp 11 53) RTZ ?float97))))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.div RTN ?float113 ?float73)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.min ?float91 ?float74)))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.div RNE ((_ to_fp 5 11) RNE ?float116) ?float119)))
(declare-const ?float130 Float32)
(assert (= ?float130 (fp.min ?float115 ((_ to_fp 8 24) RTN ?float80))))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.mul RTZ ?float88 ((_ to_fp 11 53) RTN ?float64))))
(declare-const ?float132 Float64)
(assert (= ?float132 (f38 ?float86 ((_ to_fp 11 53) RTN ?float121))))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.roundToIntegral RTP ?float90)))
(declare-const ?float134 Float32)
(assert (= ?float134 (f37 ?float115 ((_ to_fp 15 113) RTZ ?float74) ((_ to_fp 8 24) RTN ?float61) ((_ to_fp 15 113) RNE ?float96) ((_ to_fp 15 113) RTP ?float74) ((_ to_fp 5 11) RNE ?float69) ?float63)))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.mul RTZ ((_ to_fp 15 113) RTZ ?float134) ?float61)))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.sqrt RNE ?float116)))
(declare-const ?float137 Float32)
(assert (= ?float137 (f28 ((_ to_fp 5 11) RNE ?float117) ((_ to_fp 8 24) RTP ?float89) ((_ to_fp 15 113) RTP ?float98) ((_ to_fp 15 113) RTP ?float131) ((_ to_fp 8 24) RTZ ?float88) ?float61 ?float70)))
(declare-const ?float138 Float128)
(assert (= ?float138 (fp.neg ?float136)))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.sqrt RTN ?float109)))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.neg ?float113)))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.abs ?float132)))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.sub RTP ?float61 ((_ to_fp 15 113) RTZ ?float137))))
(declare-const ?float143 Float16)
(assert (= ?float143 (fp.roundToIntegral RTP ?float80)))
(declare-const ?float144 Float128)
(assert (= ?float144 (f16 ?float114 ?float90 ((_ to_fp 11 53) RTP ?float86) ?float141)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.neg ?float66)))
(declare-const ?float146 Float64)
(assert (= ?float146 (f24 ((_ to_fp 5 11) RTN ?float87) ?float63 ?float138 ?float134 ((_ to_fp 8 24) RTN ?float110) ?float81 ((_ to_fp 11 53) RNE ?float108) ((_ to_fp 11 53) RNE ?float136) ((_ to_fp 11 53) RNE ?float108))))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.abs ?float95)))
(declare-const ?float148 Float128)
(assert (= ?float148 (fp.max ?float117 ((_ to_fp 15 113) RTZ ?float91))))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.sub RTN ?float98 ((_ to_fp 11 53) RNE ?float125))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isInfinite ?float124)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isInfinite ?float69)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNormal ?float141)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.leq ?float91 ((_ to_fp 8 24) RTP ?float70))))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNegative ?float107)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isNegative ?float89)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNormal ?float75)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNegative ?float146)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isZero ?float73)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p7 ((_ to_fp 8 24) RTP ?float148) ((_ to_fp 11 53) RTP ?float120) ((_ to_fp 15 113) RTP ?float124) ((_ to_fp 11 53) RTP ?float140) ((_ to_fp 15 113) RTP ?float140) ((_ to_fp 8 24) RNE ?float93) ((_ to_fp 8 24) RTP ?float97) ((_ to_fp 5 11) RTP ?float111))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.eq ((_ to_fp 15 113) RTP ?float140) ?float147)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (p8 ((_ to_fp 8 24) RTP ?float102) ?float62 ((_ to_fp 11 53) RNE ?float66) ((_ to_fp 15 113) RNE ?float92) ((_ to_fp 5 11) RTP ?float139) ((_ to_fp 5 11) RNE ?float113) ((_ to_fp 15 113) RTZ ?float63) ((_ to_fp 5 11) RTP ?float103) ((_ to_fp 8 24) RTP ?float149) ?float126)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNegative ?float86)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.lt ?float108 ((_ to_fp 15 113) RTP ?float83))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isNaN ?float93)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.leq ((_ to_fp 8 24) RTN ?float101) ?float67)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p5 ((_ to_fp 8 24) RTP ?float71) ((_ to_fp 8 24) RTZ ?float69) ?float118 ((_ to_fp 11 53) RNE ?float83) ((_ to_fp 8 24) RTZ ?float123) ((_ to_fp 15 113) RTZ ?float86) ((_ to_fp 11 53) RTN ?float82) ((_ to_fp 8 24) RTZ ?float81))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNormal ?float91)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNegative ?float68)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.gt ?float91 ((_ to_fp 8 24) RNE ?float87))))
; FINAL ASSERT
(assert (and (and (or (and ?bool168 ?bool166 (and ?bool164 (or (and ?bool168 ?bool152)) (and (or ?bool157 ?bool152) (or ?bool150 ?bool163)))) ?bool168) (or ?bool152 ?bool158 (or (or (and ?bool151) ?bool168 (or (and ?bool168 ?bool154))) (or (or ?bool151 ?bool155) (or (and ?bool154 ?bool150)) ?bool153) ?bool162)) (and ?bool151)) (or ?bool168 (or (and ?bool154 (or (and (and ?bool151 ?bool167) ?bool165) (and ?bool166)))))))
(check-sat)


-- iteration 117 --
(declare-fun f0 (Float32 Float32 Float128 Float16 Float16 Float32 Float64 Float32 Float16 Float128) Float32)
(declare-fun f1 (Float16 Float64 Float128 Float128 Float64 Float64) Float64)
(declare-fun f2 (Float128 Float64 Float16 Float16 Float64 Float64 Float128) Float32)
(declare-fun f3 (Float16 Float64 Float64) Float64)
(declare-fun f4 (Float128 Float64 Float64 Float128) Float64)
(declare-fun f5 (Float64 Float32 Float32 Float32 Float128 Float16 Float128 Float128) Float64)
(declare-fun f6 (Float128 Float128 Float32) Float128)
(declare-fun f7 (Float128 Float128 Float64) Float128)
(declare-fun f8 (Float16 Float16 Float64 Float32 Float64 Float16 Float32) Float32)
(declare-fun f9 (Float64 Float32 Float16) Float32)
(declare-fun f10 (Float32) Float16)
(declare-fun f11 (Float64 Float16 Float64 Float16 Float64) Float64)
(declare-fun f12 (Float32 Float128 Float64 Float32) Float64)
(declare-fun f13 (Float16 Float128 Float32 Float128 Float16 Float32 Float128 Float64) Float128)
(declare-fun f14 (Float128 Float64 Float16 Float128 Float32 Float128) Float16)
(declare-fun f15 (Float16 Float64 Float64 Float16 Float32 Float32) Float128)
(declare-fun f16 (Float128 Float64 Float128 Float64 Float128 Float16) Float16)
(declare-fun f17 (Float64 Float128) Float64)
(declare-fun f18 (Float128 Float32 Float128 Float64 Float64 Float128 Float32 Float128) Float128)
(declare-fun f19 (Float32 Float128 Float64 Float128 Float64 Float64 Float64 Float16 Float16 Float128) Float16)
(declare-fun f20 (Float64 Float128 Float128 Float128 Float16 Float64 Float128) Float128)
(declare-fun f21 (Float16 Float16 Float64 Float32 Float128 Float32 Float64 Float64 Float64 Float64) Float32)
(declare-fun f22 (Float16 Float16 Float64 Float32 Float32 Float32) Float16)
(declare-fun f23 (Float16 Float16 Float128 Float64 Float32 Float128 Float16 Float128) Float16)
(declare-fun f24 (Float32 Float64 Float32 Float32 Float16 Float64 Float64 Float64 Float16) Float32)
(declare-fun f25 (Float16 Float128 Float16) Float32)
(declare-fun f26 (Float128 Float32 Float128) Float16)
(declare-fun f27 (Float64) Float32)
(declare-fun f28 (Float128 Float128) Float32)
(declare-fun f29 (Float32 Float16 Float16 Float64 Float32 Float64 Float128 Float128 Float16) Float16)
(declare-fun f30 (Float32 Float16 Float128 Float128 Float64 Float16 Float16 Float128) Float64)
(declare-fun f31 (Float32 Float128 Float64 Float64 Float32 Float16 Float128 Float32 Float64) Float32)
(declare-fun f32 (Float64 Float64 Float16 Float128 Float16 Float16 Float16 Float32 Float16) Float128)
(declare-fun f33 (Float128 Float32 Float32 Float32 Float16 Float128 Float32 Float64 Float64 Float64) Float64)
(declare-fun f34 (Float32) Float64)
(declare-fun f35 (Float64 Float32 Float64 Float32) Float128)
(declare-fun f36 (Float16 Float128 Float128 Float16 Float16 Float128 Float32) Float16)
(declare-fun f37 (Float64 Float128 Float64 Float16 Float32 Float32 Float64) Float32)
(declare-fun f38 (Float32) Float32)
(declare-fun f39 (Float32 Float64 Float128 Float16 Float32 Float128 Float128 Float64) Float128)
(declare-fun f40 (Float16 Float32 Float64 Float16 Float32 Float64 Float32 Float64) Float128)
(declare-fun f41 (Float64 Float64 Float32 Float32 Float128 Float128 Float128 Float64) Float64)
(declare-fun f42 (Float32 Float16 Float16 Float32 Float32 Float16) Float128)
(declare-fun f43 (Float32 Float64) Float16)
(declare-fun f44 (Float64 Float128 Float16 Float16 Float32 Float64 Float128 Float32 Float16 Float16) Float16)
(declare-fun f45 (Float32 Float64 Float32 Float128 Float64) Float16)
(declare-fun f46 (Float128 Float32 Float128 Float64 Float128 Float16 Float32 Float128) Float32)
(declare-fun f47 (Float128 Float64 Float32 Float128) Float16)
(declare-fun f48 (Float128 Float64 Float64) Float128)
(declare-fun f49 (Float128 Float16 Float64) Float16)
(declare-fun p0 (Float16 Float64 Float64 Float128 Float128 Float32) Bool)
(declare-fun p1 (Float64 Float128 Float128) Bool)
(declare-fun p2 (Float32 Float16) Bool)
(declare-fun p3 (Float128) Bool)
(declare-fun p4 (Float32 Float32 Float16 Float64 Float128 Float16 Float64 Float128 Float128 Float32) Bool)
(declare-fun p5 (Float32 Float128) Bool)
(declare-fun p6 (Float128 Float32 Float64 Float128 Float64 Float64 Float64 Float128 Float128) Bool)
(declare-fun p7 (Float128) Bool)
(declare-fun p8 (Float128 Float64) Bool)
(declare-fun p9 (Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float64)
(declare-const ?float62 Float128)
(declare-const ?float63 Float128)
(declare-const ?float64 Float64)
(declare-const ?float65 Float32)
(declare-const ?float66 Float16)
(declare-const ?float67 Float16)
(declare-const ?float68 Float64)
(declare-const ?float69 Float16)
(declare-const ?float70 Float16)
(declare-const ?float71 Float16)
(declare-const ?float72 Float32)
(declare-const ?float73 Float64)
(declare-const ?float74 Float32)
(declare-const ?float75 Float32)
(declare-const ?float76 Float16)
(declare-const ?float77 Float64)
(declare-const ?float78 Float32)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b0 #b00011001010 #b0101001001000011111001111110110011101110010110100101)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b0 #b101010111010110 #b0011101101110010010001010010010000001101101011111101001011110101101001111101010011100110100000110001111101101111)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b0 #b111111100100000 #b1010110110101011111010000001111001100111001001110110010000101000010101000101010100101000101011100100100110000110)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b0 #b100110010010110 #b1111000001100101000011000111010001010000110101011011111101000101000100011110000011011001100110001001101000100111)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.mul RNE ?float78 ?float83)))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.max ((_ to_fp 15 113) RTZ ?float83) ?float97)))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.sqrt RNE ?float96)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.mul RTP ?float70 ?float71)))
(declare-const ?float104 Float32)
(assert (= ?float104 (f27 ?float77)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.div RTZ ((_ to_fp 11 53) RTZ ?float84) ?float68)))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.sub RTN ?float73 ((_ to_fp 11 53) RTN ?float74))))
(declare-const ?float107 Float128)
(assert (= ?float107 (fp.sqrt RTP ?float98)))
(declare-const ?float108 Float16)
(assert (= ?float108 (fp.div RTN ?float86 ((_ to_fp 5 11) RTP ?float84))))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.add RTN ?float103 ((_ to_fp 5 11) RTP ?float83))))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.sub RTZ ?float109 ((_ to_fp 5 11) RTN ?float73))))
(declare-const ?float111 Float16)
(assert (= ?float111 (f23 ((_ to_fp 5 11) RTP ?float60) ((_ to_fp 5 11) RTP ?float64) ?float87 ((_ to_fp 11 53) RNE ?float65) ((_ to_fp 8 24) RTZ ?float101) ((_ to_fp 15 113) RTP ?float76) ((_ to_fp 5 11) RTN ?float84) ((_ to_fp 15 113) RTZ ?float100))))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.neg ?float70)))
(declare-const ?float113 Float16)
(assert (= ?float113 (f36 ((_ to_fp 5 11) RTN ?float60) ((_ to_fp 15 113) RTP ?float83) ((_ to_fp 15 113) RTN ?float66) ?float69 ?float109 ?float97 ((_ to_fp 8 24) RTN ?float73))))
(declare-const ?float114 Float32)
(assert (= ?float114 (f0 ((_ to_fp 8 24) RNE ?float87) ((_ to_fp 8 24) RTN ?float105) ((_ to_fp 15 113) RTZ ?float68) ((_ to_fp 5 11) RTP ?float85) ((_ to_fp 5 11) RTZ ?float107) ((_ to_fp 8 24) RTN ?float76) ((_ to_fp 11 53) RTP ?float75) ((_ to_fp 8 24) RTP ?float61) ?float110 ((_ to_fp 15 113) RTN ?float80))))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.max ((_ to_fp 11 53) RNE ?float93) ?float90)))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.mul RTN ?float69 ((_ to_fp 5 11) RTZ ?float98))))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.min ?float77 ((_ to_fp 11 53) RNE ?float72))))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.div RTZ ((_ to_fp 15 113) RTZ ?float64) ?float87)))
(declare-const ?float119 Float128)
(assert (= ?float119 (fp.abs ?float63)))
(declare-const ?float120 Float32)
(assert (= ?float120 (f27 ((_ to_fp 11 53) RTN ?float75))))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.sqrt RTN ?float69)))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.add RTP ((_ to_fp 15 113) RTN ?float92) ?float63)))
(declare-const ?float123 Float16)
(assert (= ?float123 (f49 ((_ to_fp 15 113) RTP ?float90) ?float121 ?float61)))
(declare-const ?float124 Float16)
(assert (= ?float124 (fp.sub RTN ?float67 ?float112)))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.add RTP ((_ to_fp 11 53) RTZ ?float102) ?float115)))
(declare-const ?float126 Float16)
(assert (= ?float126 (fp.max ?float111 ?float69)))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.div RTN ((_ to_fp 5 11) RTZ ?float90) ?float111)))
(declare-const ?float128 Float16)
(assert (= ?float128 (fp.sub RTP ?float112 ?float70)))
(declare-const ?float129 Float64)
(assert (= ?float129 (f3 ((_ to_fp 5 11) RTZ ?float73) ((_ to_fp 11 53) RNE ?float114) ((_ to_fp 11 53) RTZ ?float122))))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.sqrt RTP ?float123)))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.mul RNE ((_ to_fp 5 11) RTZ ?float90) ?float113)))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.roundToIntegral RTN ?float116)))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.div RTP ((_ to_fp 5 11) RNE ?float83) ?float69)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.sqrt RTP ?float107)))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.sqrt RTN ?float81)))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.roundToIntegral RTN ?float98)))
(declare-const ?float137 Float64)
(assert (= ?float137 (f1 ((_ to_fp 5 11) RTZ ?float78) ((_ to_fp 11 53) RNE ?float79) ((_ to_fp 15 113) RNE ?float96) ?float79 ?float77 ((_ to_fp 11 53) RTP ?float126))))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.div RTP ?float127 ((_ to_fp 5 11) RNE ?float100))))
(declare-const ?float139 Float128)
(assert (= ?float139 (f35 ((_ to_fp 11 53) RTN ?float98) ?float74 ((_ to_fp 11 53) RTP ?float74) ((_ to_fp 8 24) RTN ?float109))))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.div RTZ ?float91 ((_ to_fp 5 11) RTP ?float98))))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.neg ?float61)))
(declare-const ?float142 Float128)
(assert (= ?float142 (f18 ((_ to_fp 15 113) RTZ ?float67) ((_ to_fp 8 24) RTN ?float79) ((_ to_fp 15 113) RTN ?float88) ((_ to_fp 11 53) RTP ?float94) ((_ to_fp 11 53) RTN ?float92) ((_ to_fp 15 113) RNE ?float90) ((_ to_fp 8 24) RTZ ?float124) ((_ to_fp 15 113) RTN ?float64))))
(declare-const ?float143 Float32)
(assert (= ?float143 (fp.neg ?float72)))
(declare-const ?float144 Float32)
(assert (= ?float144 (f8 ((_ to_fp 5 11) RTP ?float81) ?float140 ((_ to_fp 11 53) RTZ ?float118) ?float75 ((_ to_fp 11 53) RTN ?float86) ?float76 ((_ to_fp 8 24) RTZ ?float134))))
(declare-const ?float145 Float128)
(assert (= ?float145 (fp.add RTN ?float136 ((_ to_fp 15 113) RNE ?float123))))
(declare-const ?float146 Float64)
(assert (= ?float146 (fp.max ?float68 ((_ to_fp 11 53) RNE ?float63))))
(declare-const ?float147 Float64)
(assert (= ?float147 (fp.mul RNE ((_ to_fp 11 53) RNE ?float110) ?float90)))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.sub RNE ((_ to_fp 11 53) RNE ?float70) ?float77)))
(declare-const ?float149 Float32)
(assert (= ?float149 (f2 ((_ to_fp 15 113) RTN ?float70) ((_ to_fp 11 53) RTN ?float109) ((_ to_fp 5 11) RTN ?float117) ((_ to_fp 5 11) RTP ?float92) ?float77 ?float115 ((_ to_fp 15 113) RNE ?float127))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isInfinite ?float108)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isSubnormal ?float90)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNegative ?float128)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.leq ((_ to_fp 11 53) RTN ?float83) ?float95)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isSubnormal ?float62)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isNaN ?float109)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNaN ?float127)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p9 ((_ to_fp 15 113) RTZ ?float76))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNormal ?float139)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.geq ((_ to_fp 11 53) RTN ?float113) ?float105)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNegative ?float137)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (p8 ((_ to_fp 15 113) RTN ?float89) ((_ to_fp 11 53) RTN ?float83))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (p5 ((_ to_fp 8 24) RTZ ?float60) ((_ to_fp 15 113) RTN ?float100))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.leq ((_ to_fp 15 113) RTP ?float130) ?float94)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.eq ((_ to_fp 5 11) RNE ?float81) ?float108)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p1 ?float99 ((_ to_fp 15 113) RNE ?float128) ((_ to_fp 15 113) RTZ ?float146))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.eq ?float104 ((_ to_fp 8 24) RTP ?float97))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isNormal ?float135)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isPositive ?float123)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.lt ((_ to_fp 15 113) RTN ?float114) ?float122)))
; FINAL ASSERT
(assert (or ?bool169 (and ?bool156) (and (and ?bool154 ?bool161 (and ?bool168)) (and ?bool156 ?bool168))))
(check-sat)


-- iteration 118 --
(declare-fun f0 (Float128 Float16) Float128)
(declare-fun f1 (Float128 Float128 Float128 Float128 Float16 Float128 Float128 Float32) Float32)
(declare-fun f2 (Float16 Float32) Float16)
(declare-fun f3 (Float64 Float16 Float128) Float32)
(declare-fun f4 (Float128 Float128 Float16 Float32 Float64 Float32 Float128) Float64)
(declare-fun f5 (Float64 Float128 Float64 Float16 Float16 Float64 Float128) Float16)
(declare-fun f6 (Float16) Float32)
(declare-fun f7 (Float32 Float16 Float32 Float128 Float16 Float32 Float64) Float32)
(declare-fun f8 (Float128 Float64 Float16 Float32 Float16 Float128 Float128 Float128 Float64) Float32)
(declare-fun f9 (Float128 Float64 Float128 Float32 Float128 Float32 Float32 Float128) Float64)
(declare-fun f10 (Float16) Float16)
(declare-fun f11 (Float16 Float128 Float128) Float128)
(declare-fun f12 (Float128 Float16 Float16 Float64 Float32 Float32 Float128 Float64) Float128)
(declare-fun f13 (Float16 Float16 Float128 Float64 Float16 Float64 Float64 Float128 Float32) Float128)
(declare-fun f14 (Float32 Float16 Float128) Float16)
(declare-fun f15 (Float16 Float64 Float128 Float64 Float128) Float128)
(declare-fun f16 (Float32 Float128 Float128) Float32)
(declare-fun f17 (Float64 Float64 Float16 Float64 Float64 Float32 Float32 Float32 Float32) Float64)
(declare-fun f18 (Float128 Float16 Float16 Float16 Float64 Float16 Float16 Float16 Float64) Float128)
(declare-fun f19 (Float64 Float16 Float128 Float16 Float64 Float128 Float128) Float128)
(declare-fun f20 (Float64 Float128 Float16 Float32 Float32 Float64 Float64 Float32) Float64)
(declare-fun f21 (Float128 Float32 Float32 Float128 Float128 Float16 Float64) Float128)
(declare-fun f22 (Float64 Float64 Float16) Float16)
(declare-fun f23 (Float64 Float16 Float16 Float128 Float128) Float16)
(declare-fun f24 (Float64 Float32 Float64 Float64) Float16)
(declare-fun f25 (Float128 Float64 Float16 Float32 Float64 Float128 Float64 Float16) Float128)
(declare-fun f26 (Float16 Float128 Float32 Float32 Float128 Float16 Float16 Float128 Float64) Float128)
(declare-fun f27 (Float128) Float32)
(declare-fun f28 (Float16 Float16 Float32 Float16 Float64 Float64 Float128 Float128 Float32) Float16)
(declare-fun f29 (Float64) Float64)
(declare-fun f30 (Float64 Float64 Float128) Float64)
(declare-fun f31 (Float32 Float16 Float16 Float16 Float128 Float32 Float16 Float128 Float32) Float16)
(declare-fun f32 (Float16) Float16)
(declare-fun f33 (Float128 Float32) Float64)
(declare-fun f34 (Float128 Float128 Float16 Float128 Float64 Float128) Float16)
(declare-fun f35 (Float128 Float16 Float128 Float16) Float32)
(declare-fun f36 (Float128 Float128 Float32 Float128 Float16 Float16 Float32) Float32)
(declare-fun f37 (Float32 Float32 Float32 Float16) Float128)
(declare-fun f38 (Float32 Float128) Float128)
(declare-fun f39 (Float32 Float128) Float16)
(declare-fun f40 (Float16 Float16 Float64 Float32 Float64 Float32 Float16 Float64 Float128) Float32)
(declare-fun f41 (Float64 Float128 Float32) Float128)
(declare-fun f42 (Float32 Float128 Float128 Float64) Float64)
(declare-fun f43 (Float128 Float64 Float128) Float64)
(declare-fun f44 (Float32 Float64 Float16 Float32 Float64 Float64 Float128 Float16 Float16) Float128)
(declare-fun f45 (Float64 Float16 Float128 Float32) Float128)
(declare-fun f46 (Float16 Float64) Float64)
(declare-fun f47 (Float64 Float16 Float32 Float32 Float64 Float16 Float64) Float64)
(declare-fun f48 (Float128 Float32) Float128)
(declare-fun f49 (Float128 Float32 Float64) Float16)
(declare-fun p0 (Float64 Float128 Float32 Float128) Bool)
(declare-fun p1 (Float128 Float32 Float128 Float16) Bool)
(declare-fun p2 (Float64) Bool)
(declare-fun p3 (Float64 Float64 Float32 Float128 Float16) Bool)
(declare-fun p4 (Float64 Float64 Float128 Float64 Float128) Bool)
(declare-fun p5 (Float64 Float128 Float32 Float32) Bool)
(declare-fun p6 (Float64 Float32 Float32 Float32) Bool)
(declare-fun p7 (Float128 Float128 Float64 Float32 Float64 Float64 Float128) Bool)
(declare-fun p8 (Float16) Bool)
(declare-fun p9 (Float16 Float32 Float64 Float64 Float128 Float16 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float64)
(declare-const ?float62 Float16)
(declare-const ?float63 Float128)
(declare-const ?float64 Float128)
(declare-const ?float65 Float32)
(declare-const ?float66 Float128)
(declare-const ?float67 Float32)
(declare-const ?float68 Float64)
(declare-const ?float69 Float16)
(declare-const ?float70 Float32)
(declare-const ?float71 Float64)
(declare-const ?float72 Float64)
(declare-const ?float73 Float128)
(declare-const ?float74 Float64)
(declare-const ?float75 Float64)
(declare-const ?float76 Float32)
(declare-const ?float77 Float16)
(declare-const ?float78 Float128)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float85 Float16)
(assert (= ?float85 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b1 #b011111110010110 #b0000000010101110001010100010100100111001010011111101111000011010011110010101010000101100101100101000110011111111)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b1 #b10011100010 #b1011100111010101001001011100001100100111101100111111)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b0 #b11001 #b1110011111)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float32)
(assert (= ?float95 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float98 Float64)
(assert (= ?float98 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b1 #b00000001 #b00000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (fp.neg ?float75)))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.add RTP ?float96 ?float73)))
(declare-const ?float102 Float64)
(assert (= ?float102 (fp.neg ?float89)))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.add RTP ?float71 ?float82)))
(declare-const ?float104 Float64)
(assert (= ?float104 (f30 ((_ to_fp 11 53) RTZ ?float81) ?float82 ((_ to_fp 15 113) RTZ ?float95))))
(declare-const ?float105 Float32)
(assert (= ?float105 (fp.neg ?float86)))
(declare-const ?float106 Float128)
(assert (= ?float106 (f11 ((_ to_fp 5 11) RTN ?float63) ((_ to_fp 15 113) RNE ?float98) ?float64)))
(declare-const ?float107 Float128)
(assert (= ?float107 (fp.div RTZ ?float63 ?float66)))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.sqrt RNE ?float106)))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.roundToIntegral RTN ?float100)))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.abs ?float106)))
(declare-const ?float111 Float64)
(assert (= ?float111 (f17 ?float98 ((_ to_fp 11 53) RNE ?float64) ?float77 ?float90 ((_ to_fp 11 53) RTZ ?float108) ((_ to_fp 8 24) RTZ ?float85) ((_ to_fp 8 24) RTN ?float89) ((_ to_fp 8 24) RTZ ?float103) ?float99)))
(declare-const ?float112 Float32)
(assert (= ?float112 (f3 ?float94 ((_ to_fp 5 11) RTZ ?float89) ((_ to_fp 15 113) RNE ?float105))))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.mul RTZ ((_ to_fp 11 53) RNE ?float64) ?float111)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.abs ?float60)))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.roundToIntegral RTN ?float91)))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.div RTZ ?float81 ?float65)))
(declare-const ?float117 Float32)
(assert (= ?float117 (fp.sqrt RNE ?float99)))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.max ((_ to_fp 15 113) RTN ?float79) ?float101)))
(declare-const ?float119 Float128)
(assert (= ?float119 (fp.add RTP ((_ to_fp 15 113) RTN ?float91) ?float78)))
(declare-const ?float120 Float16)
(assert (= ?float120 (fp.sqrt RTP ?float62)))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.add RTP ?float63 ?float108)))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.abs ?float78)))
(declare-const ?float123 Float128)
(assert (= ?float123 (fp.add RTZ ?float122 ((_ to_fp 15 113) RTZ ?float72))))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.max ?float94 ?float72)))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.mul RTP ((_ to_fp 11 53) RTZ ?float91) ?float114)))
(declare-const ?float126 Float64)
(assert (= ?float126 (fp.div RTN ?float114 ((_ to_fp 11 53) RTP ?float83))))
(declare-const ?float127 Float128)
(assert (= ?float127 (fp.neg ?float63)))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.add RTN ?float74 ((_ to_fp 11 53) RNE ?float106))))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.sqrt RNE ?float116)))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.min ?float88 ((_ to_fp 15 113) RTZ ?float85))))
(declare-const ?float131 Float16)
(assert (= ?float131 (f32 ((_ to_fp 5 11) RNE ?float71))))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.div RNE ?float118 ?float127)))
(declare-const ?float133 Float128)
(assert (= ?float133 (f38 ((_ to_fp 8 24) RNE ?float94) ((_ to_fp 15 113) RNE ?float104))))
(declare-const ?float134 Float64)
(assert (= ?float134 (fp.div RTN ((_ to_fp 11 53) RTZ ?float117) ?float75)))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.div RTP ?float132 ?float118)))
(declare-const ?float136 Float32)
(assert (= ?float136 (fp.abs ?float99)))
(declare-const ?float137 Float128)
(assert (= ?float137 (f26 ((_ to_fp 5 11) RTZ ?float100) ((_ to_fp 15 113) RTZ ?float102) ((_ to_fp 8 24) RTZ ?float64) ((_ to_fp 8 24) RTP ?float64) ?float107 ((_ to_fp 5 11) RTP ?float116) ((_ to_fp 5 11) RTP ?float76) ((_ to_fp 15 113) RTN ?float89) ?float113)))
(declare-const ?float138 Float128)
(assert (= ?float138 (fp.neg ?float63)))
(declare-const ?float139 Float128)
(assert (= ?float139 (f45 ((_ to_fp 11 53) RTN ?float107) ((_ to_fp 5 11) RTN ?float100) ?float73 ?float117)))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.sub RTN ((_ to_fp 15 113) RNE ?float86) ?float73)))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.roundToIntegral RNE ?float137)))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.sub RTN ?float118 ?float127)))
(declare-const ?float143 Float16)
(assert (= ?float143 (fp.min ((_ to_fp 5 11) RTP ?float71) ?float131)))
(declare-const ?float144 Float64)
(assert (= ?float144 (f43 ((_ to_fp 15 113) RTN ?float100) ((_ to_fp 11 53) RNE ?float120) ?float135)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.roundToIntegral RTN ?float125)))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.neg ?float130)))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.sqrt RTZ ?float133)))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.abs ?float68)))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.max ?float108 ((_ to_fp 15 113) RTP ?float85))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.gt ?float127 ((_ to_fp 15 113) RTZ ?float136))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.eq ?float97 ((_ to_fp 8 24) RTP ?float79))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (p4 ((_ to_fp 11 53) RTP ?float108) ?float134 ?float119 ((_ to_fp 11 53) RTN ?float65) ((_ to_fp 15 113) RNE ?float128))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.gt ?float93 ?float127)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.geq ?float97 ((_ to_fp 8 24) RNE ?float103))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.leq ?float95 ?float129)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.eq ?float103 ?float82)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNormal ?float142)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.leq ?float91 ((_ to_fp 8 24) RTP ?float103))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isZero ?float78)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.lt ?float111 ((_ to_fp 11 53) RTZ ?float138))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isSubnormal ?float74)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNaN ?float126)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.eq ?float119 ?float147)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.lt ((_ to_fp 11 53) RNE ?float92) ?float134)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p3 ?float114 ?float75 ((_ to_fp 8 24) RTN ?float111) ?float106 ((_ to_fp 5 11) RTP ?float132))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNegative ?float125)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p2 ((_ to_fp 11 53) RNE ?float146))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.geq ?float144 ((_ to_fp 11 53) RTN ?float117))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.gt ?float68 ?float71)))
; FINAL ASSERT
(assert (and ?bool156 (or (or (or (or ?bool154 ?bool167) ?bool167) (and ?bool160)) (or ?bool154 ?bool156) (or ?bool166 (or (and ?bool162 ?bool158) ?bool162 ?bool164) ?bool168))))
(check-sat)


-- iteration 119 --
(declare-fun f0 (Float64 Float32 Float32) Float16)
(declare-fun f1 (Float32 Float16 Float16 Float32) Float32)
(declare-fun f2 (Float32 Float128 Float64 Float32 Float64 Float64 Float128 Float128) Float32)
(declare-fun f3 (Float16 Float128 Float128) Float16)
(declare-fun f4 (Float32 Float64 Float16 Float16 Float64 Float16 Float32 Float128 Float32 Float16) Float32)
(declare-fun f5 (Float64) Float16)
(declare-fun f6 (Float128 Float64 Float32 Float32 Float128 Float128 Float128 Float16) Float32)
(declare-fun f7 (Float16 Float64 Float16 Float64 Float32 Float16 Float64 Float16) Float32)
(declare-fun f8 (Float64 Float128 Float64 Float64 Float16 Float32 Float32) Float64)
(declare-fun f9 (Float32 Float64 Float32) Float64)
(declare-fun f10 (Float16 Float64 Float64 Float64 Float128 Float32 Float64) Float128)
(declare-fun f11 (Float64 Float32 Float32 Float128 Float128 Float128 Float64 Float32) Float16)
(declare-fun f12 (Float16 Float64 Float32 Float128 Float16 Float128) Float16)
(declare-fun f13 (Float128 Float128 Float16 Float32 Float16 Float64 Float128 Float16) Float128)
(declare-fun f14 (Float32 Float16 Float128 Float128 Float32 Float32 Float128) Float32)
(declare-fun f15 (Float16 Float64 Float32 Float64 Float32 Float64 Float16 Float16) Float16)
(declare-fun f16 (Float64 Float16 Float32 Float64 Float16 Float16 Float128) Float16)
(declare-fun f17 (Float16 Float32 Float64 Float16) Float32)
(declare-fun f18 (Float16 Float32) Float16)
(declare-fun f19 (Float128 Float32 Float64 Float32 Float32 Float16 Float32) Float32)
(declare-fun f20 (Float32 Float128 Float32 Float64) Float32)
(declare-fun f21 (Float32 Float16 Float16) Float64)
(declare-fun f22 (Float16 Float16 Float64) Float64)
(declare-fun f23 (Float16) Float64)
(declare-fun f24 (Float64 Float64 Float128) Float16)
(declare-fun f25 (Float64 Float64 Float64) Float32)
(declare-fun f26 (Float64 Float64 Float32 Float64 Float64 Float32 Float64) Float32)
(declare-fun f27 (Float64 Float16 Float16) Float64)
(declare-fun f28 (Float16 Float64 Float32 Float32 Float32 Float128 Float32) Float32)
(declare-fun f29 (Float128 Float32 Float16 Float32 Float64 Float32 Float16 Float16 Float32 Float32) Float128)
(declare-fun f30 (Float128 Float64 Float128 Float16 Float16 Float128 Float16 Float128) Float128)
(declare-fun f31 (Float128 Float16 Float32 Float128) Float32)
(declare-fun f32 (Float32 Float16 Float128 Float16 Float64 Float64 Float32 Float128 Float128) Float32)
(declare-fun f33 (Float32 Float16 Float16 Float16 Float16 Float64 Float16) Float128)
(declare-fun f34 (Float16 Float16 Float128 Float128 Float16 Float128 Float128 Float128 Float128) Float32)
(declare-fun f35 (Float32 Float128 Float128 Float16) Float16)
(declare-fun f36 (Float16 Float128 Float64 Float32 Float128 Float16 Float32 Float128) Float64)
(declare-fun f37 (Float64) Float64)
(declare-fun f38 (Float128 Float128) Float16)
(declare-fun f39 (Float64 Float64 Float64 Float32) Float32)
(declare-fun f40 (Float64 Float16 Float128 Float64) Float32)
(declare-fun f41 (Float128 Float64 Float128 Float64 Float32 Float16 Float128 Float128 Float32 Float32) Float32)
(declare-fun f42 (Float16) Float16)
(declare-fun f43 (Float16 Float16 Float64 Float32 Float16 Float128 Float64) Float128)
(declare-fun f44 (Float128) Float64)
(declare-fun f45 (Float32 Float128 Float64 Float32) Float16)
(declare-fun f46 (Float16) Float128)
(declare-fun f47 (Float32 Float32 Float16) Float32)
(declare-fun f48 (Float32 Float32 Float16 Float32 Float64 Float32 Float128 Float32 Float128 Float16) Float16)
(declare-fun f49 (Float128) Float32)
(declare-fun p0 (Float128 Float128 Float32 Float16 Float16 Float128 Float32 Float32 Float128) Bool)
(declare-fun p1 (Float16 Float32 Float32 Float64 Float64) Bool)
(declare-fun p2 (Float32 Float16 Float16 Float64) Bool)
(declare-fun p3 (Float16 Float64 Float32) Bool)
(declare-fun p4 (Float64 Float128 Float32 Float32 Float64 Float32 Float32 Float128 Float32 Float64) Bool)
(declare-fun p5 (Float64 Float32 Float32 Float128 Float32 Float128 Float128 Float128) Bool)
(declare-fun p6 (Float32 Float32 Float16) Bool)
(declare-fun p7 (Float128 Float16 Float128 Float64 Float128 Float128 Float16 Float128) Bool)
(declare-fun p8 (Float64 Float16 Float32 Float64 Float32 Float32) Bool)
(declare-fun p9 (Float16 Float16 Float128 Float16 Float128 Float128 Float64 Float128 Float128 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float32)
(declare-const ?float62 Float64)
(declare-const ?float63 Float64)
(declare-const ?float64 Float16)
(declare-const ?float65 Float64)
(declare-const ?float66 Float32)
(declare-const ?float67 Float16)
(declare-const ?float68 Float64)
(declare-const ?float69 Float16)
(declare-const ?float70 Float16)
(declare-const ?float71 Float16)
(declare-const ?float72 Float32)
(declare-const ?float73 Float64)
(declare-const ?float74 Float64)
(declare-const ?float75 Float128)
(declare-const ?float76 Float128)
(declare-const ?float77 Float16)
(declare-const ?float78 Float16)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b0 #b11001101100 #b1110110000000011001011110111000110101010000000111000)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b1 #b011011000000111 #b0110010101011001100100001111000010110111000111010001011111010111101100001111011111000101101001000001110011000010)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b1 #b00010 #b0010110000)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b1 #b00000001 #b00000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (fp.sub RTN ?float92 ((_ to_fp 15 113) RTZ ?float88))))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.max ?float94 ?float77)))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.sqrt RNE ?float85)))
(declare-const ?float103 Float128)
(assert (= ?float103 (f29 ((_ to_fp 15 113) RTZ ?float71) ((_ to_fp 8 24) RTP ?float76) ?float71 ((_ to_fp 8 24) RNE ?float78) ((_ to_fp 11 53) RTN ?float64) ((_ to_fp 8 24) RTZ ?float68) ((_ to_fp 5 11) RNE ?float75) ((_ to_fp 5 11) RTP ?float63) ((_ to_fp 8 24) RTN ?float96) ?float90)))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.abs ?float73)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.add RNE ?float74 ?float79)))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.max ?float103 ((_ to_fp 15 113) RNE ?float66))))
(declare-const ?float107 Float16)
(assert (= ?float107 (fp.sqrt RTN ?float78)))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.roundToIntegral RTN ?float102)))
(declare-const ?float109 Float32)
(assert (= ?float109 (f7 ((_ to_fp 5 11) RNE ?float89) ?float104 ((_ to_fp 5 11) RTN ?float104) ?float68 ((_ to_fp 8 24) RTZ ?float70) ?float95 ((_ to_fp 11 53) RTZ ?float72) ((_ to_fp 5 11) RTP ?float82))))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.div RTN ?float94 ((_ to_fp 5 11) RTZ ?float92))))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.abs ?float63)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.sub RTP ?float79 ((_ to_fp 11 53) RTP ?float90))))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.sub RTZ ((_ to_fp 11 53) RTP ?float85) ?float111)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.add RTN ?float112 ?float104)))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.sqrt RTP ?float74)))
(declare-const ?float116 Float32)
(assert (= ?float116 (f32 ((_ to_fp 8 24) RTP ?float100) ((_ to_fp 5 11) RTP ?float104) ((_ to_fp 15 113) RTP ?float73) ((_ to_fp 5 11) RTZ ?float83) ?float79 ((_ to_fp 11 53) RTP ?float99) ((_ to_fp 8 24) RTP ?float87) ((_ to_fp 15 113) RTZ ?float115) ((_ to_fp 15 113) RNE ?float80))))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.add RNE ?float104 ?float114)))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.max ?float82 ((_ to_fp 15 113) RTP ?float63))))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.sub RTN ?float71 ?float98)))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.add RTP ?float111 ((_ to_fp 11 53) RTP ?float86))))
(declare-const ?float121 Float16)
(assert (= ?float121 (f45 ?float66 ((_ to_fp 15 113) RTN ?float89) ((_ to_fp 11 53) RNE ?float90) ((_ to_fp 8 24) RNE ?float60))))
(declare-const ?float122 Float64)
(assert (= ?float122 (fp.max ?float88 ?float115)))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.max ?float86 ?float83)))
(declare-const ?float124 Float16)
(assert (= ?float124 (f38 ((_ to_fp 15 113) RTZ ?float105) ?float106)))
(declare-const ?float125 Float128)
(assert (= ?float125 (fp.div RTZ ?float118 ((_ to_fp 15 113) RTN ?float105))))
(declare-const ?float126 Float64)
(assert (= ?float126 (fp.div RTZ ?float68 ((_ to_fp 11 53) RTN ?float64))))
(declare-const ?float127 Float64)
(assert (= ?float127 (fp.div RNE ?float126 ?float111)))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.mul RTP ?float108 ((_ to_fp 15 113) RNE ?float114))))
(declare-const ?float129 Float128)
(assert (= ?float129 (f30 ((_ to_fp 15 113) RNE ?float62) ?float68 ((_ to_fp 15 113) RTN ?float110) ?float124 ?float77 ?float108 ?float67 ((_ to_fp 15 113) RNE ?float113))))
(declare-const ?float130 Float64)
(assert (= ?float130 (fp.roundToIntegral RTZ ?float91)))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.roundToIntegral RTP ?float111)))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.sqrt RTN ?float118)))
(declare-const ?float133 Float32)
(assert (= ?float133 (f4 ((_ to_fp 8 24) RNE ?float115) ((_ to_fp 11 53) RTP ?float77) ?float124 ((_ to_fp 5 11) RTN ?float114) ((_ to_fp 11 53) RTN ?float72) ((_ to_fp 5 11) RNE ?float104) ((_ to_fp 8 24) RTZ ?float92) ?float118 ((_ to_fp 8 24) RTN ?float132) ?float69)))
(declare-const ?float134 Float64)
(assert (= ?float134 (fp.neg ?float127)))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.max ((_ to_fp 15 113) RTN ?float112) ?float129)))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.neg ?float117)))
(declare-const ?float137 Float128)
(assert (= ?float137 (f29 ((_ to_fp 15 113) RTP ?float74) ?float80 ((_ to_fp 5 11) RTP ?float129) ((_ to_fp 8 24) RTZ ?float100) ?float115 ((_ to_fp 8 24) RTZ ?float113) ((_ to_fp 5 11) RNE ?float68) ((_ to_fp 5 11) RTN ?float99) ?float123 ((_ to_fp 8 24) RTP ?float89))))
(declare-const ?float138 Float128)
(assert (= ?float138 (fp.sub RTP ?float106 ((_ to_fp 15 113) RNE ?float90))))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.div RTP ((_ to_fp 11 53) RTZ ?float70) ?float112)))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.sub RTN ?float135 ?float125)))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.sqrt RTP ?float106)))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.sub RTZ ?float78 ((_ to_fp 5 11) RTZ ?float118))))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.roundToIntegral RNE ?float131)))
(declare-const ?float144 Float128)
(assert (= ?float144 (fp.roundToIntegral RTZ ?float118)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.min ?float96 ?float114)))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.abs ?float142)))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.div RNE ?float128 ?float138)))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.neg ?float64)))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.roundToIntegral RTN ?float136)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.lt ?float138 ?float108)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.gt ?float96 ((_ to_fp 11 53) RTZ ?float85))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.leq ((_ to_fp 5 11) RNE ?float129) ?float124)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.leq ?float143 ?float88)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isNegative ?float110)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isNegative ?float92)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.lt ?float117 ?float89)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.leq ?float119 ((_ to_fp 5 11) RTP ?float66))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.eq ((_ to_fp 15 113) RTN ?float119) ?float85)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p0 ((_ to_fp 15 113) RNE ?float145) ((_ to_fp 15 113) RTZ ?float60) ((_ to_fp 8 24) RTZ ?float115) ?float142 ((_ to_fp 5 11) RTN ?float85) ((_ to_fp 15 113) RTP ?float83) ((_ to_fp 8 24) RTN ?float89) ((_ to_fp 8 24) RNE ?float62) ((_ to_fp 15 113) RTZ ?float115))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.eq ((_ to_fp 11 53) RTN ?float144) ?float96)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (p2 ((_ to_fp 8 24) RTP ?float127) ((_ to_fp 5 11) RNE ?float65) ((_ to_fp 5 11) RTP ?float75) ((_ to_fp 11 53) RNE ?float85))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNormal ?float94)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.lt ((_ to_fp 11 53) RTN ?float77) ?float68)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.geq ?float107 ?float70)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isNegative ?float97)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.lt ?float70 ((_ to_fp 5 11) RTZ ?float89))))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.leq ?float69 ((_ to_fp 5 11) RTN ?float131))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.geq ?float101 ((_ to_fp 5 11) RTZ ?float103))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNegative ?float86)))
; FINAL ASSERT
(assert (or ?bool160 (or (and (and (and (and (and ?bool151 ?bool169 ?bool150) (and ?bool163 ?bool155 ?bool160) ?bool153)) ?bool159) ?bool151) (and (and ?bool159 (and (and ?bool155) (and (or ?bool167 ?bool162 ?bool156) (and ?bool152 ?bool152 ?bool155) ?bool169))) ?bool164 ?bool150))))
(check-sat)


-- iteration 120 --
(declare-fun f0 (Float128 Float32 Float128 Float32 Float64 Float128 Float16 Float128) Float128)
(declare-fun f1 (Float128 Float128 Float16 Float16) Float16)
(declare-fun f2 (Float64) Float128)
(declare-fun f3 (Float128 Float128) Float32)
(declare-fun f4 (Float64) Float16)
(declare-fun f5 (Float16 Float32 Float64 Float16 Float64 Float16 Float32) Float16)
(declare-fun f6 (Float16) Float128)
(declare-fun f7 (Float64 Float16 Float32 Float128 Float64 Float64 Float128) Float16)
(declare-fun f8 (Float64 Float64 Float32 Float64 Float64) Float32)
(declare-fun f9 (Float64) Float128)
(declare-fun f10 (Float32) Float16)
(declare-fun f11 (Float128 Float64 Float128 Float32) Float64)
(declare-fun f12 (Float16 Float64 Float64 Float64 Float32 Float32 Float64) Float16)
(declare-fun f13 (Float32 Float64 Float32 Float64) Float128)
(declare-fun f14 (Float128 Float32) Float64)
(declare-fun f15 (Float64) Float64)
(declare-fun f16 (Float128 Float32 Float64 Float32 Float64 Float64 Float32 Float16) Float128)
(declare-fun f17 (Float64 Float32 Float128 Float64 Float32 Float64 Float64) Float64)
(declare-fun f18 (Float32 Float16 Float128 Float16 Float64) Float64)
(declare-fun f19 (Float32) Float16)
(declare-fun f20 (Float128 Float128 Float64) Float128)
(declare-fun f21 (Float16 Float64 Float64 Float128 Float128 Float32) Float64)
(declare-fun f22 (Float32 Float32 Float128 Float64 Float128 Float16 Float64) Float16)
(declare-fun f23 (Float64 Float128 Float32) Float64)
(declare-fun f24 (Float32 Float64 Float32 Float128 Float64) Float64)
(declare-fun f25 (Float64 Float32 Float64 Float128 Float64 Float128) Float128)
(declare-fun f26 (Float32 Float16 Float128 Float128 Float64) Float64)
(declare-fun f27 (Float32 Float16 Float32 Float16 Float32 Float32) Float128)
(declare-fun f28 (Float32 Float64 Float32 Float16 Float32 Float32 Float128 Float128 Float64 Float64) Float128)
(declare-fun f29 (Float32 Float16 Float16 Float16 Float16 Float64 Float64 Float16 Float16 Float128) Float64)
(declare-fun f30 (Float64 Float16 Float32 Float128) Float64)
(declare-fun f31 (Float16) Float32)
(declare-fun f32 (Float32 Float128 Float32 Float128 Float128 Float32) Float16)
(declare-fun f33 (Float16 Float16 Float32 Float64 Float64 Float32 Float32 Float128) Float16)
(declare-fun f34 (Float16) Float32)
(declare-fun f35 (Float32 Float32 Float64 Float32 Float16 Float128 Float64 Float64 Float128 Float32) Float16)
(declare-fun f36 (Float64) Float128)
(declare-fun f37 (Float128 Float64 Float32 Float16) Float64)
(declare-fun f38 (Float32 Float128 Float16 Float128 Float128 Float32) Float128)
(declare-fun f39 (Float128 Float64) Float128)
(declare-fun f40 (Float32) Float16)
(declare-fun f41 (Float16 Float128 Float128 Float32 Float32) Float32)
(declare-fun f42 (Float128 Float32 Float64 Float64 Float32) Float128)
(declare-fun f43 (Float64 Float16 Float32 Float32 Float16) Float16)
(declare-fun f44 (Float64) Float64)
(declare-fun f45 (Float32 Float64 Float32 Float128) Float16)
(declare-fun f46 (Float128 Float128) Float128)
(declare-fun f47 (Float32 Float32 Float32 Float128 Float16 Float128 Float64) Float32)
(declare-fun f48 (Float16 Float32) Float64)
(declare-fun f49 (Float64 Float16 Float16 Float32 Float32 Float64 Float32 Float64 Float64 Float32) Float64)
(declare-fun p0 (Float16) Bool)
(declare-fun p1 (Float16 Float64 Float64 Float32 Float16 Float32 Float16 Float16 Float32) Bool)
(declare-fun p2 (Float64 Float64 Float32 Float64 Float16) Bool)
(declare-fun p3 (Float32 Float64 Float16 Float128 Float32) Bool)
(declare-fun p4 (Float64 Float128 Float128 Float128 Float128 Float16 Float128 Float128 Float128 Float64) Bool)
(declare-fun p5 (Float128 Float32) Bool)
(declare-fun p6 (Float64) Bool)
(declare-fun p7 (Float16 Float32) Bool)
(declare-fun p8 (Float64 Float32 Float64 Float64 Float16 Float32 Float64) Bool)
(declare-fun p9 (Float16 Float64 Float16 Float64 Float128 Float16 Float64 Float64 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float16)
(declare-const ?float62 Float128)
(declare-const ?float63 Float32)
(declare-const ?float64 Float16)
(declare-const ?float65 Float16)
(declare-const ?float66 Float64)
(declare-const ?float67 Float64)
(declare-const ?float68 Float32)
(declare-const ?float69 Float64)
(declare-const ?float70 Float128)
(declare-const ?float71 Float128)
(declare-const ?float72 Float16)
(declare-const ?float73 Float128)
(declare-const ?float74 Float16)
(declare-const ?float75 Float64)
(declare-const ?float76 Float64)
(declare-const ?float77 Float32)
(declare-const ?float78 Float32)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b1 #b010100011101011 #b0001110100111101101110110001001110000001110111000110111111101100110101011101010101101011010111111000001110111011)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b1 #b10110001100 #b1001110111100100000010001110000011001111100010101011)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b0 #b10001 #b1111111010)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float90 Float128)
(assert (= ?float90 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float96 Float32)
(assert (= ?float96 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.sqrt RNE ?float89)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.sub RTN ?float81 ((_ to_fp 5 11) RTP ?float90))))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.mul RTP ?float70 ?float85)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.abs ?float92)))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.sqrt RNE ?float71)))
(declare-const ?float105 Float16)
(assert (= ?float105 (fp.sub RTZ ?float89 ((_ to_fp 5 11) RTZ ?float90))))
(declare-const ?float106 Float16)
(assert (= ?float106 (fp.min ((_ to_fp 5 11) RTP ?float69) ?float65)))
(declare-const ?float107 Float32)
(assert (= ?float107 (fp.roundToIntegral RNE ?float68)))
(declare-const ?float108 Float16)
(assert (= ?float108 (fp.mul RTN ?float79 ((_ to_fp 5 11) RTN ?float75))))
(declare-const ?float109 Float64)
(assert (= ?float109 (f37 ((_ to_fp 15 113) RTN ?float86) ((_ to_fp 11 53) RNE ?float62) ((_ to_fp 8 24) RNE ?float85) ((_ to_fp 5 11) RTP ?float90))))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.roundToIntegral RTP ?float88)))
(declare-const ?float111 Float128)
(assert (= ?float111 (fp.mul RTZ ?float99 ((_ to_fp 15 113) RTN ?float94))))
(declare-const ?float112 Float64)
(assert (= ?float112 (f29 ((_ to_fp 8 24) RTP ?float92) ?float106 ((_ to_fp 5 11) RTN ?float96) ?float101 ((_ to_fp 5 11) RTN ?float98) ((_ to_fp 11 53) RTZ ?float85) ((_ to_fp 11 53) RTP ?float101) ((_ to_fp 5 11) RTN ?float78) ?float100 ((_ to_fp 15 113) RTN ?float96))))
(declare-const ?float113 Float128)
(assert (= ?float113 (f9 ((_ to_fp 11 53) RNE ?float77))))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.mul RTP ?float95 ?float106)))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.roundToIntegral RTN ?float91)))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.div RTZ ?float87 ?float69)))
(declare-const ?float117 Float16)
(assert (= ?float117 (f12 ((_ to_fp 5 11) RTP ?float97) ?float115 ((_ to_fp 11 53) RTN ?float96) ((_ to_fp 11 53) RTN ?float92) ((_ to_fp 8 24) RNE ?float100) ((_ to_fp 8 24) RTZ ?float81) ((_ to_fp 11 53) RTN ?float103))))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.add RNE ?float72 ((_ to_fp 5 11) RTZ ?float116))))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.sub RTN ?float117 ?float92)))
(declare-const ?float120 Float64)
(assert (= ?float120 (f29 ((_ to_fp 8 24) RTZ ?float60) ?float118 ((_ to_fp 5 11) RTN ?float66) ((_ to_fp 5 11) RTP ?float116) ?float92 ((_ to_fp 11 53) RNE ?float102) ((_ to_fp 11 53) RTZ ?float98) ?float94 ?float106 ((_ to_fp 15 113) RNE ?float108))))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.sqrt RTN ?float103)))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.neg ?float102)))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.mul RNE ?float98 ((_ to_fp 8 24) RTN ?float88))))
(declare-const ?float124 Float16)
(assert (= ?float124 (fp.mul RNE ((_ to_fp 5 11) RTN ?float73) ?float117)))
(declare-const ?float125 Float32)
(assert (= ?float125 (f8 ?float76 ((_ to_fp 11 53) RTN ?float61) ((_ to_fp 8 24) RTZ ?float88) ?float120 ((_ to_fp 11 53) RTN ?float85))))
(declare-const ?float126 Float64)
(assert (= ?float126 (fp.mul RNE ((_ to_fp 11 53) RNE ?float114) ?float75)))
(declare-const ?float127 Float128)
(assert (= ?float127 (fp.abs ?float104)))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.div RNE ?float70 ((_ to_fp 15 113) RTZ ?float82))))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.abs ?float109)))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.div RTN ((_ to_fp 5 11) RTN ?float125) ?float74)))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.sqrt RTN ?float88)))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.div RNE ((_ to_fp 5 11) RTP ?float116) ?float88)))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.roundToIntegral RTN ?float98)))
(declare-const ?float134 Float32)
(assert (= ?float134 (fp.min ((_ to_fp 8 24) RTP ?float117) ?float78)))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.min ?float108 ((_ to_fp 5 11) RNE ?float69))))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.min ?float89 ?float130)))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.div RTZ ((_ to_fp 11 53) RTN ?float100) ?float126)))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.abs ?float131)))
(declare-const ?float139 Float16)
(assert (= ?float139 (f45 ((_ to_fp 8 24) RTN ?float84) ?float84 ((_ to_fp 8 24) RTN ?float62) ((_ to_fp 15 113) RTZ ?float87))))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.max ?float80 ((_ to_fp 5 11) RTZ ?float78))))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.neg ?float94)))
(declare-const ?float142 Float128)
(assert (= ?float142 (fp.neg ?float70)))
(declare-const ?float143 Float128)
(assert (= ?float143 (fp.roundToIntegral RTN ?float111)))
(declare-const ?float144 Float128)
(assert (= ?float144 (fp.sqrt RTN ?float90)))
(declare-const ?float145 Float128)
(assert (= ?float145 (fp.sqrt RNE ?float142)))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.max ((_ to_fp 8 24) RTP ?float109) ?float134)))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.add RTP ?float85 ((_ to_fp 15 113) RTN ?float84))))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.sqrt RTP ?float136)))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.neg ?float82)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isZero ?float71)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p6 ((_ to_fp 11 53) RNE ?float92))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNormal ?float72)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.eq ?float62 ((_ to_fp 15 113) RTZ ?float75))))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isSubnormal ?float111)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p7 ?float79 ((_ to_fp 8 24) RNE ?float80))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.leq ((_ to_fp 15 113) RTP ?float141) ?float90)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.gt ?float112 ((_ to_fp 11 53) RTZ ?float102))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isInfinite ?float63)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isInfinite ?float64)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isPositive ?float78)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.leq ((_ to_fp 5 11) RTZ ?float62) ?float101)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.eq ?float143 ?float143)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNegative ?float92)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (p1 ?float110 ((_ to_fp 11 53) RTP ?float90) ((_ to_fp 11 53) RTP ?float131) ((_ to_fp 8 24) RTZ ?float118) ?float141 ((_ to_fp 8 24) RTZ ?float130) ?float94 ((_ to_fp 5 11) RTP ?float84) ((_ to_fp 8 24) RNE ?float82))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p6 ((_ to_fp 11 53) RTP ?float119))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNaN ?float117)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isInfinite ?float85)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.gt ?float136 ((_ to_fp 5 11) RTN ?float86))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.leq ?float101 ((_ to_fp 5 11) RNE ?float145))))
; FINAL ASSERT
(assert (and ?bool153 (or ?bool166 (or (or ?bool156 (or ?bool150)) ?bool156) ?bool166) (and ?bool152 ?bool167)))
(check-sat)


-- iteration 121 --
(declare-fun f0 (Float128 Float128 Float32 Float128 Float32 Float32 Float32) Float64)
(declare-fun f1 (Float16 Float32 Float64 Float16 Float16 Float16 Float32 Float16 Float16 Float64) Float128)
(declare-fun f2 (Float32) Float32)
(declare-fun f3 (Float32 Float64 Float64) Float64)
(declare-fun f4 (Float128 Float16 Float16 Float64) Float32)
(declare-fun f5 (Float16 Float64) Float128)
(declare-fun f6 (Float128 Float128 Float64 Float32) Float128)
(declare-fun f7 (Float64 Float32 Float16 Float64 Float64 Float128) Float128)
(declare-fun f8 (Float32 Float128) Float16)
(declare-fun f9 (Float32 Float64 Float16 Float64 Float32) Float16)
(declare-fun f10 (Float64 Float16 Float32 Float16 Float64 Float64 Float64 Float32 Float16) Float32)
(declare-fun f11 (Float128 Float128 Float64 Float16) Float16)
(declare-fun f12 (Float16 Float128 Float64 Float128 Float64 Float16 Float32 Float128 Float32) Float128)
(declare-fun f13 (Float16) Float128)
(declare-fun f14 (Float32 Float16) Float32)
(declare-fun f15 (Float16 Float128) Float16)
(declare-fun f16 (Float128 Float128 Float16 Float128) Float16)
(declare-fun f17 (Float32 Float64 Float128 Float128 Float128 Float32 Float16 Float64) Float16)
(declare-fun f18 (Float64 Float32 Float64 Float16 Float32 Float128 Float32 Float128) Float32)
(declare-fun f19 (Float32 Float16 Float128 Float32 Float32 Float64 Float64 Float32) Float32)
(declare-fun f20 (Float32 Float64 Float64 Float16 Float16 Float16 Float128 Float128) Float64)
(declare-fun f21 (Float16 Float16) Float128)
(declare-fun f22 (Float64 Float128 Float64 Float32 Float64 Float128 Float16) Float128)
(declare-fun f23 (Float64 Float16 Float128 Float128 Float128) Float128)
(declare-fun f24 (Float16 Float16 Float16 Float64 Float128 Float16 Float128 Float32) Float128)
(declare-fun f25 (Float64 Float64 Float16) Float16)
(declare-fun f26 (Float16 Float128 Float16) Float64)
(declare-fun f27 (Float64 Float64 Float16 Float64 Float32) Float64)
(declare-fun f28 (Float64 Float32 Float32 Float128 Float16 Float32 Float128 Float16 Float64) Float32)
(declare-fun f29 (Float32 Float128 Float64 Float16 Float32 Float32 Float16 Float32) Float32)
(declare-fun f30 (Float64 Float128 Float128 Float16) Float128)
(declare-fun f31 (Float32 Float16 Float16 Float32 Float128 Float16) Float32)
(declare-fun f32 (Float128 Float16 Float16) Float64)
(declare-fun f33 (Float64 Float16 Float128 Float16 Float16 Float128 Float16 Float128) Float32)
(declare-fun f34 (Float64 Float128 Float128 Float128) Float64)
(declare-fun f35 (Float32 Float64 Float128 Float16 Float32 Float16 Float64 Float64) Float32)
(declare-fun f36 (Float16 Float128 Float32 Float64) Float32)
(declare-fun f37 (Float128) Float128)
(declare-fun f38 (Float128 Float128 Float32 Float128 Float16 Float32) Float32)
(declare-fun f39 (Float64 Float128 Float16 Float128 Float16) Float128)
(declare-fun f40 (Float32) Float128)
(declare-fun f41 (Float32 Float32 Float32 Float64 Float128 Float16 Float16 Float16 Float32 Float64) Float32)
(declare-fun f42 (Float128 Float32 Float16 Float64 Float64 Float32 Float32 Float32 Float32 Float128) Float32)
(declare-fun f43 (Float64 Float32) Float16)
(declare-fun f44 (Float64 Float32 Float32 Float128 Float128 Float16 Float128) Float128)
(declare-fun f45 (Float64 Float32 Float16 Float128 Float32 Float16 Float32 Float64) Float16)
(declare-fun f46 (Float128) Float128)
(declare-fun f47 (Float16 Float64 Float16 Float16 Float64 Float16 Float64) Float64)
(declare-fun f48 (Float64 Float64 Float32 Float128 Float32 Float32 Float64 Float64) Float32)
(declare-fun f49 (Float32 Float16 Float128 Float64 Float32) Float32)
(declare-fun p0 (Float64) Bool)
(declare-fun p1 (Float128 Float32 Float32 Float32 Float64) Bool)
(declare-fun p2 (Float64) Bool)
(declare-fun p3 (Float128 Float128 Float16 Float32 Float64 Float16 Float16 Float128) Bool)
(declare-fun p4 (Float64 Float64 Float16 Float16 Float32) Bool)
(declare-fun p5 (Float128) Bool)
(declare-fun p6 (Float16 Float64 Float16 Float16 Float64 Float16 Float32 Float32) Bool)
(declare-fun p7 (Float32 Float64 Float128 Float64 Float16) Bool)
(declare-fun p8 (Float32) Bool)
(declare-fun p9 (Float64 Float128 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float16)
(declare-const ?float62 Float128)
(declare-const ?float63 Float16)
(declare-const ?float64 Float32)
(declare-const ?float65 Float16)
(declare-const ?float66 Float128)
(declare-const ?float67 Float16)
(declare-const ?float68 Float64)
(declare-const ?float69 Float128)
(declare-const ?float70 Float64)
(declare-const ?float71 Float16)
(declare-const ?float72 Float32)
(declare-const ?float73 Float128)
(declare-const ?float74 Float64)
(declare-const ?float75 Float16)
(declare-const ?float76 Float128)
(declare-const ?float77 Float16)
(declare-const ?float78 Float64)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b0 #b01000111011 #b0000100111111000100001110001010101111000110111111110)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b10010011 #b11000101011011010111010)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b0 #b10101 #b1010000101)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float92 Float64)
(assert (= ?float92 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b1 #b00101111111 #b0000110010000010100000011101011011000011100001010110)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.max ((_ to_fp 8 24) RNE ?float61) ?float79)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.min ?float88 ?float71)))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.max ?float90 ?float77)))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.mul RTZ ?float74 ((_ to_fp 11 53) RTZ ?float62))))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.sqrt RTN ?float68)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.neg ?float99)))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.sqrt RTZ ?float69)))
(declare-const ?float107 Float64)
(assert (= ?float107 (fp.neg ?float103)))
(declare-const ?float108 Float16)
(assert (= ?float108 (fp.min ?float65 ((_ to_fp 5 11) RTP ?float62))))
(declare-const ?float109 Float32)
(assert (= ?float109 (fp.neg ?float79)))
(declare-const ?float110 Float128)
(assert (= ?float110 (f13 ?float87)))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.max ?float107 ((_ to_fp 11 53) RTN ?float66))))
(declare-const ?float112 Float128)
(assert (= ?float112 (fp.max ((_ to_fp 15 113) RTZ ?float72) ?float110)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.add RTP ?float92 ((_ to_fp 11 53) RNE ?float89))))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.max ?float88 ?float75)))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.roundToIntegral RTN ?float76)))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.max ?float65 ((_ to_fp 5 11) RTN ?float105))))
(declare-const ?float117 Float32)
(assert (= ?float117 (f38 ((_ to_fp 15 113) RNE ?float85) ((_ to_fp 15 113) RNE ?float101) ((_ to_fp 8 24) RTN ?float95) ((_ to_fp 15 113) RTZ ?float113) ((_ to_fp 5 11) RNE ?float80) ((_ to_fp 8 24) RTN ?float78))))
(declare-const ?float118 Float64)
(assert (= ?float118 (fp.max ?float70 ((_ to_fp 11 53) RTP ?float98))))
(declare-const ?float119 Float128)
(assert (= ?float119 (fp.neg ?float110)))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.sub RTP ?float111 ((_ to_fp 11 53) RNE ?float87))))
(declare-const ?float121 Float32)
(assert (= ?float121 (f10 ((_ to_fp 11 53) RTP ?float91) ((_ to_fp 5 11) RTZ ?float86) ((_ to_fp 8 24) RNE ?float85) ((_ to_fp 5 11) RTN ?float112) ((_ to_fp 11 53) RNE ?float115) ((_ to_fp 11 53) RTN ?float114) ((_ to_fp 11 53) RTN ?float61) ((_ to_fp 8 24) RTZ ?float119) ?float61)))
(declare-const ?float122 Float32)
(assert (= ?float122 (fp.min ((_ to_fp 8 24) RTP ?float104) ?float109)))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.sqrt RTZ ?float91)))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.add RTZ ?float96 ((_ to_fp 11 53) RNE ?float86))))
(declare-const ?float125 Float128)
(assert (= ?float125 (fp.mul RTZ ?float110 ((_ to_fp 15 113) RTN ?float107))))
(declare-const ?float126 Float16)
(assert (= ?float126 (fp.add RNE ((_ to_fp 5 11) RTP ?float120) ?float71)))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.add RTN ?float90 ?float93)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.neg ?float97)))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.roundToIntegral RTN ?float105)))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.mul RTZ ?float65 ?float88)))
(declare-const ?float131 Float128)
(assert (= ?float131 (f22 ((_ to_fp 11 53) RTZ ?float65) ?float125 ((_ to_fp 11 53) RTN ?float130) ((_ to_fp 8 24) RTN ?float60) ?float124 ?float110 ((_ to_fp 5 11) RTN ?float110))))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.neg ?float74)))
(declare-const ?float133 Float128)
(assert (= ?float133 (f46 ((_ to_fp 15 113) RTP ?float122))))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.abs ?float62)))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.roundToIntegral RTP ?float79)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.abs ?float130)))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.div RTN ?float117 ((_ to_fp 8 24) RTZ ?float114))))
(declare-const ?float138 Float128)
(assert (= ?float138 (fp.max ((_ to_fp 15 113) RTZ ?float124) ?float115)))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.add RTN ?float88 ((_ to_fp 5 11) RTN ?float107))))
(declare-const ?float140 Float64)
(assert (= ?float140 (fp.sqrt RTZ ?float107)))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.abs ?float131)))
(declare-const ?float142 Float32)
(assert (= ?float142 (fp.div RTP ((_ to_fp 8 24) RNE ?float101) ?float97)))
(declare-const ?float143 Float16)
(assert (= ?float143 (fp.abs ?float75)))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.neg ?float104)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.mul RNE ((_ to_fp 11 53) RTP ?float73) ?float60)))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.sqrt RTZ ?float125)))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.sqrt RTN ?float112)))
(declare-const ?float148 Float64)
(assert (= ?float148 (fp.div RNE ?float96 ((_ to_fp 11 53) RNE ?float147))))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.sqrt RTZ ?float145)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isSubnormal ?float83)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isSubnormal ?float120)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isZero ?float145)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNegative ?float145)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isPositive ?float95)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isZero ?float87)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.leq ((_ to_fp 5 11) RTN ?float81) ?float123)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.eq ?float89 ((_ to_fp 8 24) RTN ?float93))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNormal ?float99)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isNormal ?float136)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isSubnormal ?float82)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isSubnormal ?float126)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.gt ?float142 ((_ to_fp 8 24) RNE ?float78))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.lt ?float119 ((_ to_fp 15 113) RNE ?float143))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.lt ((_ to_fp 11 53) RTP ?float125) ?float144)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.gt ?float129 ?float129)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.gt ((_ to_fp 15 113) RTZ ?float84) ?float66)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isPositive ?float67)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.eq ?float76 ((_ to_fp 15 113) RTZ ?float102))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNaN ?float80)))
; FINAL ASSERT
(assert (or (and (and (or (or ?bool154) (or (and ?bool150 ?bool152) ?bool166) ?bool155)) (or ?bool156 (or (and ?bool159 (and ?bool166 ?bool154 ?bool167)) ?bool164 (and (and (or ?bool166 ?bool152)))) ?bool160) ?bool165) (and ?bool161) (or (or ?bool165 ?bool151 (and ?bool155 (and (and (or ?bool169) ?bool169) ?bool163))) ?bool164)))
(check-sat)


-- iteration 122 --
(declare-fun f0 (Float16 Float32 Float64 Float128 Float128 Float32 Float64) Float128)
(declare-fun f1 (Float128 Float128 Float64 Float16) Float64)
(declare-fun f2 (Float64 Float128 Float32 Float64 Float128 Float128 Float64) Float16)
(declare-fun f3 (Float16 Float64) Float128)
(declare-fun f4 (Float32 Float64 Float16 Float64 Float32 Float64) Float64)
(declare-fun f5 (Float128 Float128 Float64 Float32 Float128 Float128) Float16)
(declare-fun f6 (Float32 Float16) Float32)
(declare-fun f7 (Float32 Float32 Float64 Float128 Float32 Float32 Float32 Float128 Float128) Float128)
(declare-fun f8 (Float32 Float32) Float128)
(declare-fun f9 (Float16 Float32 Float32 Float128) Float32)
(declare-fun f10 (Float128 Float16 Float128 Float128 Float64) Float16)
(declare-fun f11 (Float32 Float16 Float128 Float16 Float128 Float128 Float128 Float64 Float128 Float16) Float64)
(declare-fun f12 (Float32 Float128 Float128 Float128 Float32) Float32)
(declare-fun f13 (Float16 Float128 Float32 Float64 Float64 Float32 Float128 Float64 Float16 Float128) Float64)
(declare-fun f14 (Float64 Float128 Float16 Float64 Float64 Float64 Float32) Float64)
(declare-fun f15 (Float128 Float128 Float32 Float64 Float16 Float64 Float128) Float16)
(declare-fun f16 (Float16 Float128 Float64 Float32 Float32 Float16 Float128) Float64)
(declare-fun f17 (Float128) Float128)
(declare-fun f18 (Float16 Float32 Float64 Float16 Float64) Float16)
(declare-fun f19 (Float16) Float64)
(declare-fun f20 (Float128 Float128 Float32 Float32) Float64)
(declare-fun f21 (Float16 Float16 Float16 Float64 Float32 Float128 Float32 Float64 Float32) Float64)
(declare-fun f22 (Float64) Float32)
(declare-fun f23 (Float64 Float32 Float128 Float64 Float32 Float128 Float128) Float16)
(declare-fun f24 (Float32 Float16 Float32 Float16 Float32 Float32) Float128)
(declare-fun f25 (Float32 Float64 Float128 Float128 Float128 Float32 Float32) Float128)
(declare-fun f26 (Float128) Float16)
(declare-fun f27 (Float128 Float16 Float64) Float16)
(declare-fun f28 (Float64 Float16 Float32 Float128 Float16 Float64 Float16 Float32 Float32 Float16) Float64)
(declare-fun f29 (Float128 Float64 Float16) Float64)
(declare-fun f30 (Float16 Float16 Float16 Float32 Float16 Float32 Float64) Float16)
(declare-fun f31 (Float16 Float32 Float32 Float128 Float16 Float16 Float128) Float32)
(declare-fun f32 (Float32 Float16 Float128) Float128)
(declare-fun f33 (Float128) Float64)
(declare-fun f34 (Float16 Float128 Float16 Float16 Float128 Float32 Float16 Float128 Float128) Float32)
(declare-fun f35 (Float128 Float32 Float16) Float64)
(declare-fun f36 (Float32) Float16)
(declare-fun f37 (Float16 Float16 Float128) Float16)
(declare-fun f38 (Float64 Float64 Float64) Float32)
(declare-fun f39 (Float128 Float32) Float16)
(declare-fun f40 (Float32 Float32 Float16 Float64 Float16) Float32)
(declare-fun f41 (Float128 Float64) Float16)
(declare-fun f42 (Float32) Float128)
(declare-fun f43 (Float128 Float128 Float32 Float16 Float16 Float128 Float32 Float32 Float16) Float16)
(declare-fun f44 (Float32 Float32 Float32 Float64 Float32 Float32 Float32) Float64)
(declare-fun f45 (Float64 Float32) Float64)
(declare-fun f46 (Float16 Float16 Float16) Float128)
(declare-fun f47 (Float16) Float16)
(declare-fun f48 (Float128) Float128)
(declare-fun f49 (Float64 Float32 Float16 Float16 Float16 Float32) Float16)
(declare-fun p0 (Float32 Float16 Float64 Float16 Float16) Bool)
(declare-fun p1 (Float16 Float16 Float32 Float64 Float16 Float128 Float16) Bool)
(declare-fun p2 (Float16 Float64 Float128 Float32 Float16) Bool)
(declare-fun p3 (Float16 Float64 Float64 Float32 Float128 Float32) Bool)
(declare-fun p4 (Float64 Float64 Float32 Float16) Bool)
(declare-fun p5 (Float128 Float64 Float128) Bool)
(declare-fun p6 (Float128 Float32 Float16 Float128 Float16 Float32 Float128 Float32) Bool)
(declare-fun p7 (Float128 Float32 Float32 Float32 Float64 Float128) Bool)
(declare-fun p8 (Float64 Float64 Float128 Float32 Float128 Float16 Float16) Bool)
(declare-fun p9 (Float32 Float16 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float128)
(declare-const ?float62 Float16)
(declare-const ?float63 Float64)
(declare-const ?float64 Float64)
(declare-const ?float65 Float32)
(declare-const ?float66 Float64)
(declare-const ?float67 Float64)
(declare-const ?float68 Float16)
(declare-const ?float69 Float16)
(declare-const ?float70 Float128)
(declare-const ?float71 Float64)
(declare-const ?float72 Float32)
(declare-const ?float73 Float64)
(declare-const ?float74 Float32)
(declare-const ?float75 Float32)
(declare-const ?float76 Float128)
(declare-const ?float77 Float16)
(declare-const ?float78 Float16)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b0 #b001110110011100 #b1110000011100001011000101110101000011111001111010010001000011110110110011000101110101110101000100101111011000111)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float84 Float64)
(assert (= ?float84 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b0 #b101111110101110 #b1011011100100100010111100011100110000101010100011101011000011100101001111001000010011101110110010010001100001100)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b0 #b10000000 #b00010111100100100000111)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float128)
(assert (= ?float91 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float94 Float64)
(assert (= ?float94 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float32)
(assert (= ?float97 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float98 Float64)
(assert (= ?float98 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float64)
(assert (= ?float99 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.mul RNE ?float89 ((_ to_fp 8 24) RNE ?float67))))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.neg ?float70)))
(declare-const ?float102 Float64)
(assert (= ?float102 (fp.roundToIntegral RTN ?float67)))
(declare-const ?float103 Float64)
(assert (= ?float103 (fp.mul RTP ((_ to_fp 11 53) RTN ?float68) ?float86)))
(declare-const ?float104 Float32)
(assert (= ?float104 (fp.neg ?float65)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.abs ?float88)))
(declare-const ?float106 Float32)
(assert (= ?float106 (fp.max ?float92 ?float72)))
(declare-const ?float107 Float64)
(assert (= ?float107 (f28 ((_ to_fp 11 53) RTP ?float70) ((_ to_fp 5 11) RTZ ?float105) ((_ to_fp 8 24) RTZ ?float76) ((_ to_fp 15 113) RTN ?float90) ((_ to_fp 5 11) RTZ ?float106) ?float86 ((_ to_fp 5 11) RTN ?float102) ((_ to_fp 8 24) RNE ?float77) ?float106 ((_ to_fp 5 11) RTZ ?float101))))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.mul RTP ?float65 ?float89)))
(declare-const ?float109 Float64)
(assert (= ?float109 (fp.max ((_ to_fp 11 53) RTN ?float89) ?float88)))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.roundToIntegral RTN ?float91)))
(declare-const ?float111 Float128)
(assert (= ?float111 (fp.add RTP ?float85 ?float82)))
(declare-const ?float112 Float16)
(assert (= ?float112 (fp.min ((_ to_fp 5 11) RTN ?float65) ?float69)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.neg ?float63)))
(declare-const ?float114 Float128)
(assert (= ?float114 (fp.mul RTZ ?float61 ((_ to_fp 15 113) RTZ ?float64))))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.roundToIntegral RTN ?float83)))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.add RTP ?float66 ?float63)))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.abs ?float63)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.add RNE ?float89 ((_ to_fp 8 24) RTP ?float67))))
(declare-const ?float119 Float64)
(assert (= ?float119 (f13 ((_ to_fp 5 11) RNE ?float82) ?float85 ((_ to_fp 8 24) RTN ?float94) ?float109 ((_ to_fp 11 53) RTP ?float75) ((_ to_fp 8 24) RTN ?float98) ((_ to_fp 15 113) RNE ?float65) ?float117 ((_ to_fp 5 11) RTP ?float85) ((_ to_fp 15 113) RTZ ?float75))))
(declare-const ?float120 Float64)
(assert (= ?float120 (fp.min ?float66 ?float90)))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.add RTZ ?float82 ((_ to_fp 15 113) RNE ?float98))))
(declare-const ?float122 Float64)
(assert (= ?float122 (fp.max ?float66 ?float95)))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.sqrt RNE ?float116)))
(declare-const ?float124 Float128)
(assert (= ?float124 (fp.mul RTZ ?float70 ((_ to_fp 15 113) RTN ?float102))))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.sub RTN ((_ to_fp 11 53) RTZ ?float79) ?float63)))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.sqrt RTP ?float87)))
(declare-const ?float127 Float64)
(assert (= ?float127 (fp.abs ?float123)))
(declare-const ?float128 Float64)
(assert (= ?float128 (f13 ((_ to_fp 5 11) RTP ?float104) ?float101 ((_ to_fp 8 24) RTP ?float67) ?float81 ?float71 ((_ to_fp 8 24) RTZ ?float62) ((_ to_fp 15 113) RTN ?float95) ((_ to_fp 11 53) RTZ ?float78) ((_ to_fp 5 11) RTZ ?float83) ((_ to_fp 15 113) RTP ?float104))))
(declare-const ?float129 Float128)
(assert (= ?float129 (fp.add RNE ?float76 ((_ to_fp 15 113) RTN ?float83))))
(declare-const ?float130 Float32)
(assert (= ?float130 (f12 ((_ to_fp 8 24) RTP ?float79) ((_ to_fp 15 113) RNE ?float102) ((_ to_fp 15 113) RTN ?float105) ((_ to_fp 15 113) RNE ?float122) ((_ to_fp 8 24) RTP ?float95))))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.div RTN ((_ to_fp 11 53) RTZ ?float114) ?float84)))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.add RNE ?float125 ?float81)))
(declare-const ?float133 Float128)
(assert (= ?float133 (fp.abs ?float124)))
(declare-const ?float134 Float64)
(assert (= ?float134 (fp.min ((_ to_fp 11 53) RTZ ?float62) ?float99)))
(declare-const ?float135 Float64)
(assert (= ?float135 (fp.abs ?float86)))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.add RTP ((_ to_fp 15 113) RTP ?float88) ?float82)))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.add RNE ?float117 ?float94)))
(declare-const ?float138 Float32)
(assert (= ?float138 (fp.mul RNE ?float130 ?float65)))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.roundToIntegral RTZ ?float135)))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.sqrt RTZ ?float138)))
(declare-const ?float141 Float16)
(assert (= ?float141 (f18 ((_ to_fp 5 11) RTZ ?float117) ((_ to_fp 8 24) RTN ?float64) ((_ to_fp 11 53) RTZ ?float85) ((_ to_fp 5 11) RTP ?float96) ((_ to_fp 11 53) RTP ?float92))))
(declare-const ?float142 Float32)
(assert (= ?float142 (fp.neg ?float106)))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.neg ?float128)))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.abs ?float102)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.abs ?float102)))
(declare-const ?float146 Float64)
(assert (= ?float146 (fp.max ?float94 ?float139)))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.mul RNE ?float100 ?float83)))
(declare-const ?float148 Float32)
(assert (= ?float148 (fp.sub RTP ?float60 ?float72)))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.abs ?float76)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p1 ((_ to_fp 5 11) RTZ ?float61) ((_ to_fp 5 11) RTZ ?float142) ((_ to_fp 8 24) RTN ?float112) ?float145 ((_ to_fp 5 11) RTZ ?float148) ((_ to_fp 15 113) RNE ?float137) ((_ to_fp 5 11) RTZ ?float113))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNaN ?float90)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isInfinite ?float135)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (p7 ((_ to_fp 15 113) RTP ?float115) ((_ to_fp 8 24) RTP ?float73) ?float74 ((_ to_fp 8 24) RTZ ?float103) ((_ to_fp 11 53) RTP ?float101) ((_ to_fp 15 113) RTP ?float104))))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p6 ((_ to_fp 15 113) RTZ ?float74) ((_ to_fp 8 24) RNE ?float126) ((_ to_fp 5 11) RTN ?float144) ?float79 ((_ to_fp 5 11) RNE ?float93) ?float72 ?float124 ((_ to_fp 8 24) RTZ ?float85))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p6 ((_ to_fp 15 113) RTN ?float104) ?float93 ((_ to_fp 5 11) RTP ?float116) ((_ to_fp 15 113) RTP ?float98) ((_ to_fp 5 11) RTN ?float148) ((_ to_fp 8 24) RTZ ?float87) ((_ to_fp 15 113) RTN ?float72) ?float75)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNegative ?float64)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.eq ?float128 ?float99)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNegative ?float137)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isZero ?float137)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.leq ?float77 ((_ to_fp 5 11) RTP ?float149))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isZero ?float108)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isZero ?float126)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNaN ?float124)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (p3 ((_ to_fp 5 11) RTN ?float94) ?float67 ?float105 ((_ to_fp 8 24) RNE ?float67) ((_ to_fp 15 113) RTP ?float113) ?float83)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p8 ((_ to_fp 11 53) RTN ?float142) ?float127 ((_ to_fp 15 113) RNE ?float72) ((_ to_fp 8 24) RTP ?float135) ((_ to_fp 15 113) RNE ?float84) ((_ to_fp 5 11) RTP ?float143) ((_ to_fp 5 11) RTP ?float91))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNegative ?float131)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.isZero ?float60)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNaN ?float131)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isSubnormal ?float115)))
; FINAL ASSERT
(assert (or (and ?bool162 ?bool159 (or ?bool161)) (and (or ?bool165 (or ?bool168 (or (or (and ?bool167) (or ?bool161 ?bool169) ?bool167) (and (and ?bool161)) ?bool168))) ?bool168)))
(check-sat)


-- iteration 123 --
(declare-fun f0 (Float128 Float128 Float64 Float32 Float32 Float16) Float32)
(declare-fun f1 (Float32 Float64 Float64) Float16)
(declare-fun f2 (Float16) Float64)
(declare-fun f3 (Float16) Float128)
(declare-fun f4 (Float32 Float16 Float32 Float64 Float32 Float32 Float128 Float16 Float64) Float32)
(declare-fun f5 (Float16) Float32)
(declare-fun f6 (Float32 Float128 Float64 Float32 Float64 Float64 Float128 Float32 Float128 Float128) Float64)
(declare-fun f7 (Float16 Float128) Float64)
(declare-fun f8 (Float64 Float64 Float64 Float128 Float128 Float128 Float16 Float128 Float128 Float64) Float32)
(declare-fun f9 (Float64 Float16) Float32)
(declare-fun f10 (Float128 Float64 Float64 Float16) Float32)
(declare-fun f11 (Float128 Float16 Float16) Float32)
(declare-fun f12 (Float128 Float64) Float64)
(declare-fun f13 (Float32 Float32 Float32 Float16) Float128)
(declare-fun f14 (Float128 Float16 Float32 Float16 Float16 Float64 Float128 Float64 Float128 Float64) Float32)
(declare-fun f15 (Float16 Float64 Float128 Float32 Float64 Float128 Float128 Float32 Float128 Float128) Float64)
(declare-fun f16 (Float16 Float128 Float32) Float128)
(declare-fun f17 (Float64 Float128) Float128)
(declare-fun f18 (Float128 Float128 Float128 Float32) Float128)
(declare-fun f19 (Float64 Float128 Float128 Float128 Float128 Float32) Float32)
(declare-fun f20 (Float16 Float32 Float128 Float32 Float16 Float16 Float128 Float32 Float16) Float64)
(declare-fun f21 (Float16 Float16 Float128 Float16 Float32 Float16 Float16 Float32) Float128)
(declare-fun f22 (Float16 Float128 Float16 Float128 Float32 Float16 Float32 Float128 Float64 Float16) Float64)
(declare-fun f23 (Float16 Float128 Float32 Float64) Float128)
(declare-fun f24 (Float32) Float16)
(declare-fun f25 (Float64 Float32 Float128) Float16)
(declare-fun f26 (Float32 Float32 Float128 Float64 Float128 Float32 Float64 Float32 Float64) Float32)
(declare-fun f27 (Float16) Float32)
(declare-fun f28 (Float16 Float64 Float64 Float128 Float64 Float64 Float32) Float128)
(declare-fun f29 (Float128) Float32)
(declare-fun f30 (Float16 Float16 Float32 Float64 Float64 Float16 Float64 Float128 Float64) Float32)
(declare-fun f31 (Float64 Float128 Float128 Float16) Float32)
(declare-fun f32 (Float64 Float128 Float16 Float16 Float64) Float32)
(declare-fun f33 (Float64 Float64 Float32 Float32 Float32 Float16) Float128)
(declare-fun f34 (Float16 Float16 Float16 Float32 Float16 Float16 Float128 Float128 Float64) Float128)
(declare-fun f35 (Float32 Float64 Float128 Float128 Float64) Float32)
(declare-fun f36 (Float32) Float64)
(declare-fun f37 (Float16 Float64 Float16 Float128) Float64)
(declare-fun f38 (Float16 Float32 Float16 Float128 Float128 Float16 Float16 Float64) Float128)
(declare-fun f39 (Float64 Float16 Float64 Float128 Float64 Float32 Float16 Float128) Float32)
(declare-fun f40 (Float128 Float128 Float16 Float128 Float32) Float64)
(declare-fun f41 (Float64 Float128 Float64 Float128 Float32) Float128)
(declare-fun f42 (Float64 Float32 Float64 Float64 Float64 Float64 Float16 Float128 Float32) Float128)
(declare-fun f43 (Float32 Float32 Float16 Float128 Float64 Float32 Float32 Float64 Float128 Float128) Float16)
(declare-fun f44 (Float32 Float32) Float128)
(declare-fun f45 (Float16 Float32 Float16 Float16) Float128)
(declare-fun f46 (Float128 Float64 Float16 Float64 Float128 Float128 Float16 Float32 Float32) Float32)
(declare-fun f47 (Float32 Float32 Float16 Float64 Float16 Float64) Float64)
(declare-fun f48 (Float64 Float64 Float128 Float32 Float16 Float64 Float64) Float16)
(declare-fun f49 (Float128 Float16 Float32 Float128 Float64 Float16 Float64 Float128) Float128)
(declare-fun p0 (Float64 Float16 Float64 Float128 Float32) Bool)
(declare-fun p1 (Float16 Float16 Float128 Float16 Float128) Bool)
(declare-fun p2 (Float32 Float32 Float16 Float16) Bool)
(declare-fun p3 (Float32 Float64 Float32 Float32 Float64 Float128 Float16 Float16 Float32 Float16) Bool)
(declare-fun p4 (Float32 Float64 Float64 Float64 Float16 Float16) Bool)
(declare-fun p5 (Float64) Bool)
(declare-fun p6 (Float64 Float64 Float128) Bool)
(declare-fun p7 (Float128 Float32 Float64 Float128 Float32 Float128) Bool)
(declare-fun p8 (Float128 Float128 Float32 Float64 Float16 Float16 Float32 Float32 Float128) Bool)
(declare-fun p9 (Float128 Float32 Float32 Float16 Float16 Float64 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float16)
(declare-const ?float62 Float64)
(declare-const ?float63 Float32)
(declare-const ?float64 Float64)
(declare-const ?float65 Float64)
(declare-const ?float66 Float16)
(declare-const ?float67 Float16)
(declare-const ?float68 Float128)
(declare-const ?float69 Float64)
(declare-const ?float70 Float16)
(declare-const ?float71 Float16)
(declare-const ?float72 Float16)
(declare-const ?float73 Float32)
(declare-const ?float74 Float128)
(declare-const ?float75 Float32)
(declare-const ?float76 Float128)
(declare-const ?float77 Float128)
(declare-const ?float78 Float128)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float128)
(assert (= ?float83 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b0 #b000001101000000 #b1010100001001111001011111011111011011011011010101000001001111011111011101010111100001010100101000011011100010010)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b0 #b00110100111 #b0011100000011000000001010111000100101101100101101000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b0 #b01001 #b1000110001)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b1 #b11100 #b0011010001)))
(declare-const ?float98 Float16)
(assert (= ?float98 (fp #b1 #b11100 #b0111101111)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b1 #b101010110011011 #b0110101110001001110110010000001001110001001110110111001011000100001001010000001001110111110000000100100101100100)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (f45 ?float67 ((_ to_fp 8 24) RTZ ?float69) ?float67 ((_ to_fp 5 11) RTZ ?float91))))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.div RTN ?float68 ?float83)))
(declare-const ?float102 Float128)
(assert (= ?float102 (f34 ((_ to_fp 5 11) RTP ?float91) ?float98 ((_ to_fp 5 11) RNE ?float62) ((_ to_fp 8 24) RTN ?float70) ((_ to_fp 5 11) RNE ?float101) ?float79 ((_ to_fp 15 113) RTP ?float64) ?float99 ?float62)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.sub RTZ ((_ to_fp 5 11) RTZ ?float95) ?float94)))
(declare-const ?float104 Float128)
(assert (= ?float104 (fp.sub RTZ ((_ to_fp 15 113) RTN ?float71) ?float74)))
(declare-const ?float105 Float64)
(assert (= ?float105 (f20 ((_ to_fp 5 11) RTZ ?float87) ((_ to_fp 8 24) RTP ?float99) ((_ to_fp 15 113) RTP ?float98) ((_ to_fp 8 24) RNE ?float78) ?float70 ?float94 ((_ to_fp 15 113) RTZ ?float79) ((_ to_fp 8 24) RNE ?float102) ((_ to_fp 5 11) RTP ?float76))))
(declare-const ?float106 Float64)
(assert (= ?float106 (fp.sqrt RTN ?float105)))
(declare-const ?float107 Float128)
(assert (= ?float107 (f34 ?float72 ((_ to_fp 5 11) RTP ?float76) ((_ to_fp 5 11) RTZ ?float99) ((_ to_fp 8 24) RTP ?float103) ((_ to_fp 5 11) RNE ?float92) ?float61 ((_ to_fp 15 113) RTZ ?float94) ((_ to_fp 15 113) RNE ?float75) ((_ to_fp 11 53) RNE ?float72))))
(declare-const ?float108 Float32)
(assert (= ?float108 (f19 ((_ to_fp 11 53) RTN ?float101) ((_ to_fp 15 113) RTZ ?float103) ?float88 ((_ to_fp 15 113) RTZ ?float61) ((_ to_fp 15 113) RTN ?float71) ((_ to_fp 8 24) RTP ?float79))))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.add RTZ ?float79 ?float94)))
(declare-const ?float110 Float128)
(assert (= ?float110 (fp.min ?float101 ((_ to_fp 15 113) RTZ ?float79))))
(declare-const ?float111 Float128)
(assert (= ?float111 (fp.add RTZ ?float88 ((_ to_fp 15 113) RTP ?float93))))
(declare-const ?float112 Float16)
(assert (= ?float112 (f25 ((_ to_fp 11 53) RTP ?float72) ((_ to_fp 8 24) RTN ?float93) ((_ to_fp 15 113) RTP ?float94))))
(declare-const ?float113 Float128)
(assert (= ?float113 (fp.neg ?float100)))
(declare-const ?float114 Float128)
(assert (= ?float114 (fp.min ?float83 ((_ to_fp 15 113) RTZ ?float112))))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.div RTZ ((_ to_fp 15 113) RTN ?float84) ?float77)))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.min ((_ to_fp 11 53) RTP ?float91) ?float90)))
(declare-const ?float117 Float128)
(assert (= ?float117 (f21 ((_ to_fp 5 11) RTP ?float102) ((_ to_fp 5 11) RNE ?float78) ((_ to_fp 15 113) RTP ?float75) ?float67 ?float108 ((_ to_fp 5 11) RNE ?float83) ?float84 ((_ to_fp 8 24) RNE ?float103))))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.mul RTN ?float77 ?float68)))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.sub RTN ?float62 ((_ to_fp 11 53) RNE ?float101))))
(declare-const ?float120 Float16)
(assert (= ?float120 (f43 ((_ to_fp 8 24) RTP ?float82) ((_ to_fp 8 24) RTP ?float118) ((_ to_fp 5 11) RTN ?float89) ?float83 ((_ to_fp 11 53) RTZ ?float67) ((_ to_fp 8 24) RNE ?float114) ((_ to_fp 8 24) RTP ?float100) ((_ to_fp 11 53) RNE ?float103) ((_ to_fp 15 113) RTZ ?float93) ?float114)))
(declare-const ?float121 Float32)
(assert (= ?float121 (f31 ?float62 ((_ to_fp 15 113) RTZ ?float73) ?float96 ?float109)))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.mul RTN ?float77 ?float104)))
(declare-const ?float123 Float128)
(assert (= ?float123 (f45 ?float84 ((_ to_fp 8 24) RTZ ?float80) ((_ to_fp 5 11) RTZ ?float75) ((_ to_fp 5 11) RTN ?float64))))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.mul RTN ?float75 ?float91)))
(declare-const ?float125 Float128)
(assert (= ?float125 (f17 ?float69 ((_ to_fp 15 113) RNE ?float106))))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.mul RTZ ((_ to_fp 15 113) RTN ?float62) ?float78)))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.max ?float94 ?float66)))
(declare-const ?float128 Float64)
(assert (= ?float128 (f20 ((_ to_fp 5 11) RNE ?float60) ((_ to_fp 8 24) RNE ?float95) ((_ to_fp 15 113) RNE ?float63) ((_ to_fp 8 24) RTP ?float107) ((_ to_fp 5 11) RTP ?float95) ((_ to_fp 5 11) RNE ?float119) ?float118 ((_ to_fp 8 24) RTN ?float112) ?float72)))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.max ?float93 ((_ to_fp 5 11) RTP ?float63))))
(declare-const ?float130 Float64)
(assert (= ?float130 (fp.roundToIntegral RTZ ?float64)))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.sqrt RTP ?float109)))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.mul RTN ?float88 ((_ to_fp 15 113) RNE ?float72))))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.abs ?float61)))
(declare-const ?float134 Float16)
(assert (= ?float134 (fp.sqrt RTP ?float129)))
(declare-const ?float135 Float64)
(assert (= ?float135 (fp.max ((_ to_fp 11 53) RTN ?float127) ?float69)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.add RNE ?float61 ((_ to_fp 5 11) RNE ?float91))))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.max ?float85 ?float111)))
(declare-const ?float138 Float16)
(assert (= ?float138 (f25 ((_ to_fp 11 53) RNE ?float111) ((_ to_fp 8 24) RTZ ?float95) ?float96)))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.neg ?float124)))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.neg ?float88)))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.sqrt RNE ?float85)))
(declare-const ?float142 Float64)
(assert (= ?float142 (f2 ((_ to_fp 5 11) RNE ?float115))))
(declare-const ?float143 Float64)
(assert (= ?float143 (fp.sqrt RTP ?float116)))
(declare-const ?float144 Float128)
(assert (= ?float144 (fp.roundToIntegral RNE ?float110)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.mul RTN ?float139 ?float92)))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.abs ?float101)))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.sqrt RTN ?float104)))
(declare-const ?float148 Float128)
(assert (= ?float148 (f23 ((_ to_fp 5 11) RTZ ?float92) ((_ to_fp 15 113) RNE ?float135) ?float91 ((_ to_fp 11 53) RNE ?float99))))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.abs ?float115)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.gt ?float99 ?float99)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNormal ?float116)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isZero ?float140)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.leq ((_ to_fp 15 113) RTP ?float70) ?float114)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isInfinite ?float121)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isNaN ?float147)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (p8 ((_ to_fp 15 113) RTN ?float139) ?float77 ((_ to_fp 8 24) RTP ?float68) ((_ to_fp 11 53) RTP ?float76) ((_ to_fp 5 11) RTN ?float140) ?float97 ((_ to_fp 8 24) RNE ?float125) ((_ to_fp 8 24) RNE ?float117) ((_ to_fp 15 113) RNE ?float136))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p6 ?float142 ((_ to_fp 11 53) RTP ?float73) ((_ to_fp 15 113) RTZ ?float60))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isPositive ?float60)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.gt ?float117 ?float123)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.lt ?float75 ((_ to_fp 8 24) RNE ?float112))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isZero ?float100)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.eq ?float118 ((_ to_fp 15 113) RTN ?float94))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isNormal ?float83)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isNaN ?float84)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.geq ((_ to_fp 5 11) RTZ ?float143) ?float127)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (p8 ?float148 ?float100 ((_ to_fp 8 24) RNE ?float68) ((_ to_fp 11 53) RTN ?float113) ?float112 ((_ to_fp 5 11) RTP ?float119) ((_ to_fp 8 24) RTP ?float87) ((_ to_fp 8 24) RTZ ?float142) ?float88)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.geq ?float79 ((_ to_fp 5 11) RTN ?float63))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isPositive ?float134)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNormal ?float61)))
; FINAL ASSERT
(assert (or (and ?bool158 ?bool154 ?bool153) ?bool151 ?bool158))
(check-sat)


-- iteration 124 --
(declare-fun f0 (Float32 Float32 Float32 Float32 Float16 Float128 Float64 Float32 Float128 Float32) Float32)
(declare-fun f1 (Float64 Float32 Float32 Float16 Float32) Float16)
(declare-fun f2 (Float64 Float128 Float16 Float128 Float64) Float64)
(declare-fun f3 (Float16 Float16 Float16 Float64 Float128 Float32 Float64 Float128 Float128) Float32)
(declare-fun f4 (Float16 Float64) Float64)
(declare-fun f5 (Float32 Float16 Float64 Float32 Float16) Float32)
(declare-fun f6 (Float16 Float32 Float128 Float16 Float16 Float32 Float16 Float64 Float64) Float32)
(declare-fun f7 (Float128 Float64 Float128 Float32 Float32 Float32 Float32 Float128 Float32 Float32) Float128)
(declare-fun f8 (Float128 Float16 Float16) Float128)
(declare-fun f9 (Float64 Float16 Float16 Float64 Float128 Float16 Float32) Float32)
(declare-fun f10 (Float64 Float128 Float128 Float16 Float16) Float128)
(declare-fun f11 (Float32 Float32 Float64 Float16 Float16 Float128 Float128) Float64)
(declare-fun f12 (Float16 Float128 Float64 Float128 Float128) Float64)
(declare-fun f13 (Float32 Float128 Float32 Float128 Float128 Float128) Float128)
(declare-fun f14 (Float16 Float128 Float64 Float16 Float32 Float128 Float128 Float16 Float64 Float16) Float16)
(declare-fun f15 (Float32 Float16 Float32 Float128 Float64 Float128 Float64 Float32 Float16) Float64)
(declare-fun f16 (Float16 Float16 Float64 Float64 Float128) Float16)
(declare-fun f17 (Float64 Float16 Float64 Float64) Float64)
(declare-fun f18 (Float128 Float16 Float32 Float32 Float32 Float128) Float16)
(declare-fun f19 (Float32 Float128 Float64 Float64 Float16 Float16 Float16 Float16) Float64)
(declare-fun f20 (Float128 Float32 Float16 Float128) Float128)
(declare-fun f21 (Float64 Float128 Float64 Float128 Float64 Float32 Float64 Float32) Float64)
(declare-fun f22 (Float64 Float64 Float16 Float32 Float64 Float16) Float128)
(declare-fun f23 (Float16) Float16)
(declare-fun f24 (Float64 Float64 Float128) Float16)
(declare-fun f25 (Float16 Float32 Float16 Float16 Float16 Float64) Float64)
(declare-fun f26 (Float16 Float64) Float16)
(declare-fun f27 (Float64 Float64 Float128 Float64 Float128 Float128 Float64 Float64 Float16 Float64) Float32)
(declare-fun f28 (Float64 Float16 Float64 Float32 Float64 Float64 Float128 Float128) Float32)
(declare-fun f29 (Float32 Float32 Float128 Float128 Float64 Float64 Float32) Float64)
(declare-fun f30 (Float128 Float64 Float64 Float128 Float128 Float16 Float128 Float128) Float128)
(declare-fun f31 (Float128 Float128 Float64 Float64 Float64 Float32 Float128 Float64) Float16)
(declare-fun f32 (Float128) Float32)
(declare-fun f33 (Float128) Float64)
(declare-fun f34 (Float32 Float64 Float16 Float16 Float64) Float128)
(declare-fun f35 (Float128 Float128 Float64 Float64 Float128 Float16 Float128 Float16 Float16 Float128) Float32)
(declare-fun f36 (Float128 Float16 Float32 Float128 Float16 Float32 Float128 Float32 Float128) Float64)
(declare-fun f37 (Float32 Float128) Float16)
(declare-fun f38 (Float16 Float32 Float16 Float64 Float16 Float16) Float32)
(declare-fun f39 (Float64) Float128)
(declare-fun f40 (Float16 Float16 Float32 Float128 Float128 Float64 Float32 Float64) Float64)
(declare-fun f41 (Float32 Float16 Float128 Float16 Float32 Float32) Float32)
(declare-fun f42 (Float16) Float128)
(declare-fun f43 (Float64 Float128 Float128 Float16 Float16 Float128 Float128 Float16) Float32)
(declare-fun f44 (Float64 Float128 Float64 Float16 Float16) Float16)
(declare-fun f45 (Float32 Float32 Float32 Float128 Float32 Float32 Float16 Float32 Float64) Float64)
(declare-fun f46 (Float128 Float128 Float16 Float16 Float16 Float64 Float128 Float32 Float16 Float128) Float64)
(declare-fun f47 (Float16 Float32 Float16 Float128 Float64 Float64 Float32 Float32 Float32) Float128)
(declare-fun f48 (Float16 Float64 Float32 Float16 Float16 Float16 Float32 Float64) Float16)
(declare-fun f49 (Float64 Float32 Float64 Float128) Float32)
(declare-fun p0 (Float64 Float128 Float64 Float64 Float16 Float32) Bool)
(declare-fun p1 (Float16 Float64 Float64 Float16 Float64 Float16) Bool)
(declare-fun p2 (Float128 Float32 Float128 Float128 Float16 Float128 Float32 Float16 Float64 Float32) Bool)
(declare-fun p3 (Float64 Float32 Float64 Float32 Float64 Float32 Float32) Bool)
(declare-fun p4 (Float16 Float128 Float64 Float32 Float32 Float16 Float32 Float64 Float128) Bool)
(declare-fun p5 (Float128 Float64 Float32 Float128 Float16 Float64 Float64 Float16) Bool)
(declare-fun p6 (Float16 Float128 Float32 Float32 Float32 Float64 Float32 Float32) Bool)
(declare-fun p7 (Float128 Float16 Float64 Float64) Bool)
(declare-fun p8 (Float16 Float64) Bool)
(declare-fun p9 (Float16 Float32 Float128 Float64 Float16) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float32)
(declare-const ?float61 Float16)
(declare-const ?float62 Float128)
(declare-const ?float63 Float128)
(declare-const ?float64 Float64)
(declare-const ?float65 Float32)
(declare-const ?float66 Float128)
(declare-const ?float67 Float64)
(declare-const ?float68 Float128)
(declare-const ?float69 Float64)
(declare-const ?float70 Float32)
(declare-const ?float71 Float32)
(declare-const ?float72 Float16)
(declare-const ?float73 Float128)
(declare-const ?float74 Float16)
(declare-const ?float75 Float64)
(declare-const ?float76 Float32)
(declare-const ?float77 Float128)
(declare-const ?float78 Float32)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b1 #b11101 #b1101001110)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float16)
(assert (= ?float88 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float89 Float128)
(assert (= ?float89 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b0 #b01101 #b0011111010)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float93 Float16)
(assert (= ?float93 (fp #b1 #b01011 #b1101110101)))
(declare-const ?float94 Float32)
(assert (= ?float94 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b0 #b000011100100000 #b0001000000110011111100110100010110111101001000010110111110101010111111011100100000001100010110100011010101000001)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float128)
(assert (= ?float99 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float32)
(assert (= ?float100 (fp.abs ?float86)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.roundToIntegral RNE ?float72)))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.max ?float77 ((_ to_fp 15 113) RTN ?float71))))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.mul RTZ ?float74 ?float101)))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.max ((_ to_fp 5 11) RTN ?float80) ?float90)))
(declare-const ?float105 Float128)
(assert (= ?float105 (fp.max ((_ to_fp 15 113) RNE ?float96) ?float102)))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.min ((_ to_fp 15 113) RTN ?float103) ?float73)))
(declare-const ?float107 Float128)
(assert (= ?float107 (fp.abs ?float105)))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.max ?float85 ((_ to_fp 15 113) RTN ?float92))))
(declare-const ?float109 Float16)
(assert (= ?float109 (f44 ((_ to_fp 11 53) RTP ?float77) ((_ to_fp 15 113) RTP ?float60) ((_ to_fp 11 53) RTZ ?float80) ?float82 ((_ to_fp 5 11) RTZ ?float77))))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.neg ?float69)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.mul RNE ((_ to_fp 5 11) RNE ?float77) ?float83)))
(declare-const ?float112 Float128)
(assert (= ?float112 (f10 ?float64 ((_ to_fp 15 113) RNE ?float69) ((_ to_fp 15 113) RTN ?float84) ((_ to_fp 5 11) RTP ?float87) ?float88)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.min ((_ to_fp 11 53) RTP ?float103) ?float67)))
(declare-const ?float114 Float32)
(assert (= ?float114 (fp.min ((_ to_fp 8 24) RTN ?float99) ?float78)))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.div RTP ?float71 ((_ to_fp 8 24) RTN ?float101))))
(declare-const ?float116 Float128)
(assert (= ?float116 (fp.min ?float97 ?float77)))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.max ?float82 ((_ to_fp 5 11) RTN ?float105))))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.sub RNE ?float116 ((_ to_fp 15 113) RTZ ?float61))))
(declare-const ?float119 Float32)
(assert (= ?float119 (f38 ((_ to_fp 5 11) RTN ?float65) ((_ to_fp 8 24) RTZ ?float74) ((_ to_fp 5 11) RTZ ?float73) ((_ to_fp 11 53) RTZ ?float84) ((_ to_fp 5 11) RTZ ?float112) ((_ to_fp 5 11) RTP ?float79))))
(declare-const ?float120 Float64)
(assert (= ?float120 (f36 ((_ to_fp 15 113) RTN ?float117) ((_ to_fp 5 11) RTN ?float87) ((_ to_fp 8 24) RTP ?float97) ((_ to_fp 15 113) RTN ?float72) ?float90 ((_ to_fp 8 24) RTN ?float61) ((_ to_fp 15 113) RNE ?float104) ((_ to_fp 8 24) RTP ?float117) ((_ to_fp 15 113) RTN ?float104))))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.abs ?float69)))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.min ((_ to_fp 15 113) RNE ?float76) ?float77)))
(declare-const ?float123 Float16)
(assert (= ?float123 (fp.sqrt RTZ ?float95)))
(declare-const ?float124 Float16)
(assert (= ?float124 (fp.min ((_ to_fp 5 11) RTZ ?float116) ?float104)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.min ?float100 ((_ to_fp 8 24) RTN ?float62))))
(declare-const ?float126 Float128)
(assert (= ?float126 (fp.abs ?float62)))
(declare-const ?float127 Float32)
(assert (= ?float127 (f49 ((_ to_fp 11 53) RTZ ?float106) ((_ to_fp 8 24) RTZ ?float102) ((_ to_fp 11 53) RTP ?float117) ((_ to_fp 15 113) RTZ ?float119))))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.sub RNE ((_ to_fp 15 113) RTN ?float67) ?float99)))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.roundToIntegral RTP ?float76)))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.roundToIntegral RTZ ?float68)))
(declare-const ?float131 Float128)
(assert (= ?float131 (f42 ((_ to_fp 5 11) RNE ?float112))))
(declare-const ?float132 Float128)
(assert (= ?float132 (f22 ((_ to_fp 11 53) RTP ?float114) ((_ to_fp 11 53) RTZ ?float130) ((_ to_fp 5 11) RTZ ?float94) ((_ to_fp 8 24) RTN ?float63) ((_ to_fp 11 53) RNE ?float70) ((_ to_fp 5 11) RNE ?float100))))
(declare-const ?float133 Float128)
(assert (= ?float133 (fp.min ?float99 ((_ to_fp 15 113) RTP ?float74))))
(declare-const ?float134 Float32)
(assert (= ?float134 (fp.sqrt RNE ?float125)))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.min ?float66 ?float126)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.neg ?float88)))
(declare-const ?float137 Float128)
(assert (= ?float137 (fp.sqrt RTN ?float102)))
(declare-const ?float138 Float128)
(assert (= ?float138 (f47 ((_ to_fp 5 11) RTZ ?float69) ((_ to_fp 8 24) RNE ?float104) ?float81 ((_ to_fp 15 113) RTN ?float94) ?float64 ((_ to_fp 11 53) RTN ?float112) ((_ to_fp 8 24) RTZ ?float104) ((_ to_fp 8 24) RNE ?float99) ((_ to_fp 8 24) RNE ?float126))))
(declare-const ?float139 Float64)
(assert (= ?float139 (fp.sub RTZ ?float110 ((_ to_fp 11 53) RNE ?float89))))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.mul RTP ?float118 ((_ to_fp 15 113) RTN ?float92))))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.max ?float128 ((_ to_fp 15 113) RNE ?float76))))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.abs ?float117)))
(declare-const ?float143 Float16)
(assert (= ?float143 (fp.sub RTZ ((_ to_fp 5 11) RNE ?float71) ?float103)))
(declare-const ?float144 Float128)
(assert (= ?float144 (fp.min ((_ to_fp 15 113) RTN ?float110) ?float80)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.neg ?float65)))
(declare-const ?float146 Float128)
(assert (= ?float146 (fp.sqrt RTN ?float97)))
(declare-const ?float147 Float32)
(assert (= ?float147 (fp.div RNE ((_ to_fp 8 24) RTZ ?float107) ?float92)))
(declare-const ?float148 Float128)
(assert (= ?float148 (f39 ((_ to_fp 11 53) RTN ?float61))))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.neg ?float117)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.eq ((_ to_fp 8 24) RTN ?float61) ?float119)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isPositive ?float144)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.gt ?float122 ((_ to_fp 15 113) RTP ?float114))))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isPositive ?float78)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.lt ((_ to_fp 15 113) RTZ ?float134) ?float126)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p0 ((_ to_fp 11 53) RNE ?float80) ((_ to_fp 15 113) RNE ?float90) ((_ to_fp 11 53) RTP ?float73) ((_ to_fp 11 53) RNE ?float138) ((_ to_fp 5 11) RTN ?float141) ((_ to_fp 8 24) RTN ?float118))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isNegative ?float130)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isPositive ?float94)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNaN ?float110)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isZero ?float70)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNormal ?float83)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNaN ?float139)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isSubnormal ?float139)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (p2 ?float128 ((_ to_fp 8 24) RNE ?float88) ((_ to_fp 15 113) RTP ?float60) ((_ to_fp 15 113) RTP ?float100) ((_ to_fp 5 11) RNE ?float131) ((_ to_fp 15 113) RNE ?float100) ((_ to_fp 8 24) RTZ ?float77) ((_ to_fp 5 11) RTP ?float147) ((_ to_fp 11 53) RTN ?float100) ((_ to_fp 8 24) RTP ?float118))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.gt ?float75 ((_ to_fp 11 53) RTN ?float63))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isSubnormal ?float84)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNormal ?float120)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p7 ((_ to_fp 15 113) RNE ?float81) ?float74 ((_ to_fp 11 53) RTP ?float62) ((_ to_fp 11 53) RTN ?float108))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (p1 ((_ to_fp 5 11) RTN ?float118) ?float139 ((_ to_fp 11 53) RNE ?float134) ((_ to_fp 5 11) RTZ ?float115) ((_ to_fp 11 53) RNE ?float133) ?float93)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.gt ((_ to_fp 8 24) RTN ?float72) ?float84)))
; FINAL ASSERT
(assert (and (or ?bool169 ?bool154 ?bool153)))
(check-sat)


-- iteration 125 --
(declare-fun f0 (Float16 Float32 Float64 Float32 Float64 Float16) Float64)
(declare-fun f1 (Float128 Float32 Float16 Float16 Float128 Float64 Float32 Float32 Float16) Float16)
(declare-fun f2 (Float32 Float16 Float32 Float32 Float128 Float32 Float32) Float64)
(declare-fun f3 (Float32 Float16) Float64)
(declare-fun f4 (Float32 Float128 Float64 Float16 Float64 Float128) Float64)
(declare-fun f5 (Float128 Float32 Float16 Float16) Float16)
(declare-fun f6 (Float32 Float128 Float128 Float64 Float64 Float16 Float32 Float64) Float128)
(declare-fun f7 (Float32 Float64 Float32 Float16 Float32 Float32 Float64) Float16)
(declare-fun f8 (Float64) Float64)
(declare-fun f9 (Float128 Float128 Float64 Float64 Float64 Float16 Float32) Float128)
(declare-fun f10 (Float128 Float64 Float128 Float64 Float128 Float32) Float16)
(declare-fun f11 (Float128 Float32 Float16 Float64 Float32 Float16) Float32)
(declare-fun f12 (Float32 Float128 Float128 Float16 Float128 Float32 Float128 Float128) Float64)
(declare-fun f13 (Float128 Float32 Float128 Float64 Float16 Float32 Float16 Float16 Float32) Float64)
(declare-fun f14 (Float16 Float128 Float32 Float64 Float16 Float128 Float128 Float64) Float32)
(declare-fun f15 (Float128 Float128 Float64 Float128 Float16) Float16)
(declare-fun f16 (Float64 Float128 Float16 Float128 Float16 Float64) Float128)
(declare-fun f17 (Float64 Float16 Float32 Float128 Float64 Float32 Float128 Float16) Float16)
(declare-fun f18 (Float32 Float16) Float16)
(declare-fun f19 (Float32 Float128 Float64 Float32 Float128) Float32)
(declare-fun f20 (Float16 Float16 Float32 Float16) Float64)
(declare-fun f21 (Float16 Float128) Float128)
(declare-fun f22 (Float16 Float64 Float16 Float16 Float16 Float64 Float16 Float16) Float16)
(declare-fun f23 (Float32 Float32 Float64 Float128 Float128) Float16)
(declare-fun f24 (Float64) Float16)
(declare-fun f25 (Float128 Float16 Float32 Float128 Float16 Float64) Float16)
(declare-fun f26 (Float16 Float64 Float128) Float32)
(declare-fun f27 (Float32 Float64) Float16)
(declare-fun f28 (Float16 Float16 Float32 Float64 Float64 Float16 Float32 Float64) Float32)
(declare-fun f29 (Float16 Float32) Float16)
(declare-fun f30 (Float32 Float128 Float128 Float32 Float16 Float64 Float32 Float64 Float32) Float32)
(declare-fun f31 (Float128 Float32 Float16) Float128)
(declare-fun f32 (Float16) Float64)
(declare-fun f33 (Float32 Float32 Float64) Float128)
(declare-fun f34 (Float16 Float128 Float128 Float16 Float16 Float128) Float64)
(declare-fun f35 (Float32) Float64)
(declare-fun f36 (Float64) Float16)
(declare-fun f37 (Float32 Float128 Float128) Float32)
(declare-fun f38 (Float64 Float128 Float32 Float64 Float64 Float64 Float32 Float128) Float32)
(declare-fun f39 (Float16 Float64 Float128) Float32)
(declare-fun f40 (Float64 Float128 Float32 Float128 Float32 Float128 Float32) Float128)
(declare-fun f41 (Float32) Float128)
(declare-fun f42 (Float128 Float32 Float32 Float32) Float16)
(declare-fun f43 (Float128 Float32) Float64)
(declare-fun f44 (Float16) Float64)
(declare-fun f45 (Float16 Float32 Float128) Float16)
(declare-fun f46 (Float64 Float64 Float16 Float32 Float32 Float128 Float32 Float64) Float16)
(declare-fun f47 (Float32 Float128 Float128 Float32 Float64) Float128)
(declare-fun f48 (Float64 Float16 Float64 Float128) Float128)
(declare-fun f49 (Float16 Float16 Float128 Float16) Float128)
(declare-fun p0 (Float128 Float16 Float32 Float16 Float128 Float64 Float64 Float16 Float32) Bool)
(declare-fun p1 (Float32 Float64 Float128 Float16 Float64 Float32) Bool)
(declare-fun p2 (Float32 Float64 Float128) Bool)
(declare-fun p3 (Float64 Float64 Float32 Float128 Float16 Float16) Bool)
(declare-fun p4 (Float64) Bool)
(declare-fun p5 (Float32 Float16 Float64 Float64 Float32 Float16 Float32 Float64) Bool)
(declare-fun p6 (Float16 Float128 Float32 Float16 Float64 Float64 Float64 Float32) Bool)
(declare-fun p7 (Float128 Float128 Float128 Float32 Float32) Bool)
(declare-fun p8 (Float64 Float128 Float16 Float64 Float64 Float32 Float64 Float128) Bool)
(declare-fun p9 (Float64 Float128 Float32 Float64 Float64 Float32) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float128)
(declare-const ?float61 Float16)
(declare-const ?float62 Float64)
(declare-const ?float63 Float64)
(declare-const ?float64 Float16)
(declare-const ?float65 Float16)
(declare-const ?float66 Float16)
(declare-const ?float67 Float64)
(declare-const ?float68 Float16)
(declare-const ?float69 Float64)
(declare-const ?float70 Float64)
(declare-const ?float71 Float64)
(declare-const ?float72 Float16)
(declare-const ?float73 Float32)
(declare-const ?float74 Float128)
(declare-const ?float75 Float16)
(declare-const ?float76 Float16)
(declare-const ?float77 Float32)
(declare-const ?float78 Float16)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b0 #b10010101110 #b1000011011011010111011011011110010010001011111110010)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float92 Float64)
(assert (= ?float92 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float95 Float16)
(assert (= ?float95 (fp #b0 #b10000 #b0000011101)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b1 #b00001 #b0000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (f45 ((_ to_fp 5 11) RTN ?float69) ((_ to_fp 8 24) RNE ?float95) ((_ to_fp 15 113) RNE ?float64))))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.roundToIntegral RNE ?float64)))
(declare-const ?float102 Float16)
(assert (= ?float102 (fp.min ((_ to_fp 5 11) RTP ?float90) ?float101)))
(declare-const ?float103 Float32)
(assert (= ?float103 (f39 ((_ to_fp 5 11) RTP ?float77) ((_ to_fp 11 53) RTP ?float95) ((_ to_fp 15 113) RTP ?float76))))
(declare-const ?float104 Float64)
(assert (= ?float104 (fp.abs ?float93)))
(declare-const ?float105 Float16)
(assert (= ?float105 (f18 ((_ to_fp 8 24) RNE ?float78) ((_ to_fp 5 11) RTP ?float74))))
(declare-const ?float106 Float64)
(assert (= ?float106 (f32 ?float64)))
(declare-const ?float107 Float64)
(assert (= ?float107 (fp.sqrt RTZ ?float67)))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.add RTN ?float74 ((_ to_fp 15 113) RTZ ?float98))))
(declare-const ?float109 Float16)
(assert (= ?float109 (fp.mul RTZ ((_ to_fp 5 11) RTZ ?float69) ?float105)))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.add RTZ ?float63 ((_ to_fp 11 53) RNE ?float72))))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.abs ?float79)))
(declare-const ?float112 Float128)
(assert (= ?float112 (f47 ((_ to_fp 8 24) RTN ?float72) ((_ to_fp 15 113) RTN ?float111) ((_ to_fp 15 113) RNE ?float98) ((_ to_fp 8 24) RTP ?float107) ?float90)))
(declare-const ?float113 Float64)
(assert (= ?float113 (fp.mul RNE ?float70 ?float69)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.abs ?float92)))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.add RTN ?float106 ?float97)))
(declare-const ?float116 Float64)
(assert (= ?float116 (fp.div RNE ?float93 ((_ to_fp 11 53) RTZ ?float76))))
(declare-const ?float117 Float16)
(assert (= ?float117 (f10 ((_ to_fp 15 113) RTZ ?float111) ((_ to_fp 11 53) RTP ?float99) ((_ to_fp 15 113) RTZ ?float94) ((_ to_fp 11 53) RTZ ?float96) ((_ to_fp 15 113) RTP ?float66) ((_ to_fp 8 24) RTZ ?float109))))
(declare-const ?float118 Float128)
(assert (= ?float118 (fp.div RTZ ?float87 ((_ to_fp 15 113) RTZ ?float99))))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.abs ?float94)))
(declare-const ?float120 Float16)
(assert (= ?float120 (fp.min ?float76 ((_ to_fp 5 11) RTZ ?float87))))
(declare-const ?float121 Float128)
(assert (= ?float121 (fp.sqrt RNE ?float112)))
(declare-const ?float122 Float16)
(assert (= ?float122 (f36 ((_ to_fp 11 53) RTN ?float111))))
(declare-const ?float123 Float32)
(assert (= ?float123 (fp.min ((_ to_fp 8 24) RTN ?float113) ?float73)))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.sqrt RTZ ?float103)))
(declare-const ?float125 Float64)
(assert (= ?float125 (fp.roundToIntegral RTZ ?float106)))
(declare-const ?float126 Float128)
(assert (= ?float126 (f40 ((_ to_fp 11 53) RTN ?float120) ((_ to_fp 15 113) RTP ?float70) ?float111 ((_ to_fp 15 113) RNE ?float93) ?float111 ?float112 ((_ to_fp 8 24) RTZ ?float87))))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.neg ?float105)))
(declare-const ?float128 Float128)
(assert (= ?float128 (fp.div RTP ((_ to_fp 15 113) RTP ?float63) ?float121)))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.add RNE ((_ to_fp 5 11) RTP ?float85) ?float122)))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.roundToIntegral RNE ?float96)))
(declare-const ?float131 Float32)
(assert (= ?float131 (fp.neg ?float98)))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.max ?float111 ((_ to_fp 8 24) RTZ ?float112))))
(declare-const ?float133 Float64)
(assert (= ?float133 (f34 ((_ to_fp 5 11) RTN ?float118) ((_ to_fp 15 113) RTP ?float64) ((_ to_fp 15 113) RTZ ?float129) ?float129 ((_ to_fp 5 11) RTP ?float128) ((_ to_fp 15 113) RTN ?float117))))
(declare-const ?float134 Float32)
(assert (= ?float134 (fp.max ((_ to_fp 8 24) RTZ ?float127) ?float81)))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.abs ?float77)))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.roundToIntegral RTP ?float80)))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.roundToIntegral RTN ?float115)))
(declare-const ?float138 Float128)
(assert (= ?float138 (fp.div RTP ?float88 ((_ to_fp 15 113) RTN ?float76))))
(declare-const ?float139 Float128)
(assert (= ?float139 (fp.neg ?float87)))
(declare-const ?float140 Float64)
(assert (= ?float140 (fp.abs ?float116)))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.sub RTZ ?float136 ((_ to_fp 15 113) RTN ?float109))))
(declare-const ?float142 Float16)
(assert (= ?float142 (fp.sqrt RTP ?float127)))
(declare-const ?float143 Float64)
(assert (= ?float143 (f43 ((_ to_fp 15 113) RTZ ?float61) ((_ to_fp 8 24) RTZ ?float126))))
(declare-const ?float144 Float64)
(assert (= ?float144 (fp.roundToIntegral RTP ?float62)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.sub RTZ ((_ to_fp 8 24) RTP ?float136) ?float77)))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.roundToIntegral RNE ?float94)))
(declare-const ?float147 Float16)
(assert (= ?float147 (fp.mul RTZ ?float65 ((_ to_fp 5 11) RTP ?float145))))
(declare-const ?float148 Float128)
(assert (= ?float148 (f41 ((_ to_fp 8 24) RTP ?float141))))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.min ((_ to_fp 15 113) RTN ?float116) ?float139)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.geq ?float106 ((_ to_fp 11 53) RTZ ?float64))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p4 ?float143)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isZero ?float76)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isPositive ?float118)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.leq ((_ to_fp 11 53) RTZ ?float76) ?float89)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isNegative ?float90)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.gt ?float116 ((_ to_fp 11 53) RTP ?float112))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (p1 ((_ to_fp 8 24) RTN ?float87) ((_ to_fp 11 53) RTN ?float120) ?float87 ((_ to_fp 5 11) RTN ?float62) ?float71 ((_ to_fp 8 24) RNE ?float136))))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isNegative ?float65)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.isSubnormal ?float88)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isInfinite ?float102)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isInfinite ?float85)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (p7 ((_ to_fp 15 113) RTZ ?float116) ((_ to_fp 15 113) RTZ ?float137) ((_ to_fp 15 113) RTZ ?float81) ((_ to_fp 8 24) RTN ?float137) ((_ to_fp 8 24) RNE ?float125))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.geq ?float133 ((_ to_fp 11 53) RTZ ?float78))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isSubnormal ?float82)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.lt ?float112 ((_ to_fp 15 113) RTZ ?float75))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.lt ((_ to_fp 11 53) RTZ ?float83) ?float106)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p5 ((_ to_fp 8 24) RNE ?float62) ((_ to_fp 5 11) RTP ?float107) ?float115 ((_ to_fp 11 53) RNE ?float130) ((_ to_fp 8 24) RNE ?float76) ((_ to_fp 5 11) RTP ?float70) ?float73 ?float92)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNormal ?float112)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isInfinite ?float88)))
; FINAL ASSERT
(assert (or ?bool168 ?bool168 ?bool150))
(check-sat)


-- iteration 126 --
(declare-fun f0 (Float16 Float64 Float128 Float128 Float16 Float16) Float32)
(declare-fun f1 (Float32 Float32 Float16) Float128)
(declare-fun f2 (Float128 Float128 Float32 Float64 Float128 Float128 Float128 Float32 Float32 Float32) Float16)
(declare-fun f3 (Float32 Float16 Float16 Float32 Float32 Float64 Float32) Float128)
(declare-fun f4 (Float32 Float128) Float32)
(declare-fun f5 (Float16 Float128) Float128)
(declare-fun f6 (Float128 Float64 Float32 Float64) Float16)
(declare-fun f7 (Float128) Float32)
(declare-fun f8 (Float64 Float32 Float64 Float16 Float16 Float16 Float32 Float64) Float64)
(declare-fun f9 (Float32 Float64 Float16) Float32)
(declare-fun f10 (Float16 Float16 Float64) Float64)
(declare-fun f11 (Float16 Float32 Float16) Float128)
(declare-fun f12 (Float32 Float128 Float128 Float64 Float128 Float32 Float128 Float16 Float128) Float64)
(declare-fun f13 (Float16 Float32 Float64 Float16 Float32 Float128 Float16) Float64)
(declare-fun f14 (Float16 Float64) Float64)
(declare-fun f15 (Float32 Float16) Float16)
(declare-fun f16 (Float128 Float32 Float32 Float64 Float16 Float16 Float128 Float128 Float16) Float32)
(declare-fun f17 (Float16 Float16 Float64 Float128 Float16 Float64) Float16)
(declare-fun f18 (Float32 Float16) Float128)
(declare-fun f19 (Float16 Float64 Float128 Float64) Float32)
(declare-fun f20 (Float32 Float32 Float16 Float16) Float32)
(declare-fun f21 (Float16 Float128) Float128)
(declare-fun f22 (Float32 Float32 Float32 Float16) Float64)
(declare-fun f23 (Float32 Float128) Float16)
(declare-fun f24 (Float128 Float32 Float16 Float32 Float16 Float128 Float32 Float32 Float64) Float32)
(declare-fun f25 (Float64 Float64) Float32)
(declare-fun f26 (Float128 Float64 Float64 Float32) Float16)
(declare-fun f27 (Float128 Float32 Float16 Float128 Float64 Float64 Float16) Float16)
(declare-fun f28 (Float32 Float128 Float32 Float128) Float16)
(declare-fun f29 (Float32) Float32)
(declare-fun f30 (Float16 Float32 Float32 Float128 Float32 Float64) Float32)
(declare-fun f31 (Float64 Float32 Float64 Float128 Float64) Float32)
(declare-fun f32 (Float64 Float16 Float128 Float64 Float64) Float64)
(declare-fun f33 (Float64 Float16 Float128) Float64)
(declare-fun f34 (Float64 Float64 Float16 Float128 Float64 Float32 Float128 Float32 Float64) Float32)
(declare-fun f35 (Float32 Float128 Float32) Float16)
(declare-fun f36 (Float32) Float64)
(declare-fun f37 (Float32 Float16 Float32 Float128) Float16)
(declare-fun f38 (Float64 Float128 Float32 Float16 Float32 Float32 Float32 Float16 Float16 Float128) Float128)
(declare-fun f39 (Float32 Float64 Float32 Float64 Float64 Float128 Float128 Float32 Float16 Float16) Float32)
(declare-fun f40 (Float64 Float32 Float16 Float16) Float128)
(declare-fun f41 (Float32 Float64 Float16 Float32 Float16 Float128 Float128 Float32 Float128) Float64)
(declare-fun f42 (Float128) Float32)
(declare-fun f43 (Float64 Float16 Float32 Float64 Float16 Float64 Float128) Float64)
(declare-fun f44 (Float64 Float16 Float16 Float16 Float16 Float64 Float64) Float128)
(declare-fun f45 (Float16 Float32 Float32 Float128 Float128 Float32 Float64) Float64)
(declare-fun f46 (Float128 Float64 Float64 Float16 Float128 Float32 Float64 Float32) Float16)
(declare-fun f47 (Float32 Float64 Float16 Float128 Float16 Float32) Float128)
(declare-fun f48 (Float32 Float32 Float16 Float128 Float64 Float16 Float16 Float16 Float16 Float64) Float64)
(declare-fun f49 (Float64 Float32 Float16 Float32 Float16 Float64 Float32 Float16) Float64)
(declare-fun p0 (Float16 Float16 Float64 Float32) Bool)
(declare-fun p1 (Float16 Float64 Float32) Bool)
(declare-fun p2 (Float16 Float64 Float128 Float128 Float128) Bool)
(declare-fun p3 (Float64 Float128 Float16 Float16 Float128 Float32) Bool)
(declare-fun p4 (Float64) Bool)
(declare-fun p5 (Float64 Float16 Float64 Float32 Float32 Float128 Float32 Float16) Bool)
(declare-fun p6 (Float32 Float128 Float128 Float32 Float32 Float64 Float32 Float32) Bool)
(declare-fun p7 (Float128 Float16 Float64 Float128 Float128 Float64 Float128 Float16 Float32 Float32) Bool)
(declare-fun p8 (Float128 Float32) Bool)
(declare-fun p9 (Float32 Float128) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float32)
(declare-const ?float62 Float32)
(declare-const ?float63 Float64)
(declare-const ?float64 Float64)
(declare-const ?float65 Float64)
(declare-const ?float66 Float128)
(declare-const ?float67 Float16)
(declare-const ?float68 Float64)
(declare-const ?float69 Float64)
(declare-const ?float70 Float128)
(declare-const ?float71 Float32)
(declare-const ?float72 Float32)
(declare-const ?float73 Float64)
(declare-const ?float74 Float16)
(declare-const ?float75 Float64)
(declare-const ?float76 Float32)
(declare-const ?float77 Float16)
(declare-const ?float78 Float128)
(declare-const ?float79 Float128)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b0 #b01101011 #b10011010100010110101001)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float84 Float128)
(assert (= ?float84 (fp #b1 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float64)
(assert (= ?float86 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b1 #b111101010001000 #b1001100111111001110010001110001001000010011101000101010011001100010110001100110100011011000111100010111111011001)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b1 #b01100110001 #b1110000000010010001001101011010010000011100111111111)))
(declare-const ?float90 Float128)
(assert (= ?float90 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float64)
(assert (= ?float92 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float93 Float32)
(assert (= ?float93 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float98 Float64)
(assert (= ?float98 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b0 #b01010 #b1010111111)))
; DERIVE FLOATS
(declare-const ?float100 Float64)
(assert (= ?float100 (fp.div RTP ?float89 ((_ to_fp 11 53) RTN ?float67))))
(declare-const ?float101 Float16)
(assert (= ?float101 (f35 ((_ to_fp 8 24) RTZ ?float95) ((_ to_fp 15 113) RNE ?float64) ((_ to_fp 8 24) RTN ?float98))))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.sqrt RTZ ?float71)))
(declare-const ?float103 Float32)
(assert (= ?float103 (f4 ((_ to_fp 8 24) RNE ?float77) ((_ to_fp 15 113) RNE ?float71))))
(declare-const ?float104 Float128)
(assert (= ?float104 (f5 ((_ to_fp 5 11) RNE ?float65) ?float88)))
(declare-const ?float105 Float128)
(assert (= ?float105 (fp.div RTN ?float78 ?float82)))
(declare-const ?float106 Float16)
(assert (= ?float106 (fp.min ((_ to_fp 5 11) RTN ?float70) ?float74)))
(declare-const ?float107 Float16)
(assert (= ?float107 (f17 ?float77 ((_ to_fp 5 11) RTN ?float72) ((_ to_fp 11 53) RTN ?float90) ((_ to_fp 15 113) RTN ?float65) ((_ to_fp 5 11) RTP ?float64) ?float87)))
(declare-const ?float108 Float32)
(assert (= ?float108 (fp.roundToIntegral RTP ?float102)))
(declare-const ?float109 Float64)
(assert (= ?float109 (f14 ((_ to_fp 5 11) RTZ ?float68) ((_ to_fp 11 53) RNE ?float61))))
(declare-const ?float110 Float64)
(assert (= ?float110 (fp.div RTP ((_ to_fp 11 53) RTN ?float93) ?float98)))
(declare-const ?float111 Float64)
(assert (= ?float111 (fp.max ((_ to_fp 11 53) RTZ ?float101) ?float109)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.add RNE ?float110 ?float85)))
(declare-const ?float113 Float128)
(assert (= ?float113 (f21 ?float96 ((_ to_fp 15 113) RTN ?float83))))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.max ((_ to_fp 11 53) RNE ?float61) ?float65)))
(declare-const ?float115 Float64)
(assert (= ?float115 (fp.neg ?float86)))
(declare-const ?float116 Float32)
(assert (= ?float116 (fp.max ?float71 ((_ to_fp 8 24) RNE ?float114))))
(declare-const ?float117 Float16)
(assert (= ?float117 (f26 ?float90 ((_ to_fp 11 53) RTP ?float70) ?float63 ((_ to_fp 8 24) RTN ?float98))))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.abs ?float72)))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.min ?float77 ((_ to_fp 5 11) RNE ?float94))))
(declare-const ?float120 Float128)
(assert (= ?float120 (fp.abs ?float70)))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.min ?float85 ?float65)))
(declare-const ?float122 Float16)
(assert (= ?float122 (fp.div RNE ((_ to_fp 5 11) RTZ ?float98) ?float77)))
(declare-const ?float123 Float64)
(assert (= ?float123 (fp.sqrt RTP ?float85)))
(declare-const ?float124 Float32)
(assert (= ?float124 (fp.mul RTP ((_ to_fp 8 24) RTN ?float85) ?float103)))
(declare-const ?float125 Float32)
(assert (= ?float125 (fp.add RNE ?float118 ((_ to_fp 8 24) RTN ?float78))))
(declare-const ?float126 Float16)
(assert (= ?float126 (fp.add RTZ ?float77 ?float106)))
(declare-const ?float127 Float32)
(assert (= ?float127 (fp.neg ?float76)))
(declare-const ?float128 Float64)
(assert (= ?float128 (fp.abs ?float65)))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.mul RTP ((_ to_fp 5 11) RNE ?float76) ?float96)))
(declare-const ?float130 Float64)
(assert (= ?float130 (fp.mul RTZ ?float114 ?float110)))
(declare-const ?float131 Float32)
(assert (= ?float131 (fp.sub RTZ ?float125 ((_ to_fp 8 24) RTP ?float129))))
(declare-const ?float132 Float64)
(assert (= ?float132 (f33 ((_ to_fp 11 53) RTZ ?float61) ((_ to_fp 5 11) RNE ?float118) ?float120)))
(declare-const ?float133 Float64)
(assert (= ?float133 (fp.min ((_ to_fp 11 53) RNE ?float102) ?float123)))
(declare-const ?float134 Float128)
(assert (= ?float134 (f47 ((_ to_fp 8 24) RTZ ?float87) ?float69 ((_ to_fp 5 11) RTN ?float123) ((_ to_fp 15 113) RTP ?float63) ((_ to_fp 5 11) RTN ?float94) ((_ to_fp 8 24) RTP ?float109))))
(declare-const ?float135 Float16)
(assert (= ?float135 (fp.sqrt RTN ?float119)))
(declare-const ?float136 Float64)
(assert (= ?float136 (f41 ((_ to_fp 8 24) RNE ?float67) ((_ to_fp 11 53) RTZ ?float94) ((_ to_fp 5 11) RNE ?float81) ((_ to_fp 8 24) RTZ ?float79) ((_ to_fp 5 11) RTP ?float69) ((_ to_fp 15 113) RTN ?float106) ((_ to_fp 15 113) RTN ?float110) ((_ to_fp 8 24) RNE ?float101) ((_ to_fp 15 113) RTP ?float63))))
(declare-const ?float137 Float32)
(assert (= ?float137 (fp.roundToIntegral RTZ ?float125)))
(declare-const ?float138 Float64)
(assert (= ?float138 (f13 ((_ to_fp 5 11) RTP ?float71) ((_ to_fp 8 24) RNE ?float66) ((_ to_fp 11 53) RTZ ?float105) ((_ to_fp 5 11) RTN ?float116) ((_ to_fp 8 24) RTP ?float113) ((_ to_fp 15 113) RNE ?float80) ((_ to_fp 5 11) RTZ ?float121))))
(declare-const ?float139 Float32)
(assert (= ?float139 (fp.sqrt RTZ ?float72)))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.sub RTN ((_ to_fp 15 113) RTN ?float126) ?float82)))
(declare-const ?float141 Float128)
(assert (= ?float141 (fp.sqrt RTZ ?float70)))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.div RTN ?float69 ((_ to_fp 11 53) RTZ ?float108))))
(declare-const ?float143 Float32)
(assert (= ?float143 (f16 ((_ to_fp 15 113) RTP ?float99) ?float108 ((_ to_fp 8 24) RTZ ?float136) ((_ to_fp 11 53) RTZ ?float135) ((_ to_fp 5 11) RTZ ?float94) ((_ to_fp 5 11) RNE ?float140) ((_ to_fp 15 113) RTZ ?float81) ((_ to_fp 15 113) RTP ?float112) ((_ to_fp 5 11) RTZ ?float83))))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.add RTZ ?float62 ((_ to_fp 8 24) RTN ?float120))))
(declare-const ?float145 Float16)
(assert (= ?float145 (fp.sub RNE ?float67 ((_ to_fp 5 11) RNE ?float82))))
(declare-const ?float146 Float64)
(assert (= ?float146 (fp.add RTP ((_ to_fp 11 53) RNE ?float90) ?float91)))
(declare-const ?float147 Float64)
(assert (= ?float147 (fp.abs ?float63)))
(declare-const ?float148 Float32)
(assert (= ?float148 (fp.mul RTP ((_ to_fp 8 24) RTZ ?float140) ?float72)))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.abs ?float78)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.isPositive ?float61)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.gt ?float105 ((_ to_fp 15 113) RNE ?float139))))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.leq ?float125 ?float139)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isPositive ?float136)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p9 ((_ to_fp 8 24) RTZ ?float133) ((_ to_fp 15 113) RTZ ?float62))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (p8 ((_ to_fp 15 113) RTN ?float142) ((_ to_fp 8 24) RNE ?float106))))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isPositive ?float123)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isPositive ?float115)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.geq ?float85 ?float64)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (p2 ((_ to_fp 5 11) RTZ ?float70) ((_ to_fp 11 53) RTN ?float124) ((_ to_fp 15 113) RTP ?float64) ((_ to_fp 15 113) RTN ?float115) ?float70)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNegative ?float100)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isNormal ?float81)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNegative ?float141)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isPositive ?float143)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.leq ?float102 ?float131)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isZero ?float94)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNegative ?float144)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.eq ?float99 ((_ to_fp 5 11) RTP ?float111))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (p5 ((_ to_fp 11 53) RTN ?float119) ((_ to_fp 5 11) RTP ?float123) ((_ to_fp 11 53) RNE ?float140) ((_ to_fp 8 24) RTP ?float113) ?float108 ((_ to_fp 15 113) RTN ?float106) ((_ to_fp 8 24) RTZ ?float92) ((_ to_fp 5 11) RNE ?float90))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.geq ?float65 ((_ to_fp 11 53) RTZ ?float70))))
; FINAL ASSERT
(assert (or ?bool168))
(check-sat)


-- iteration 127 --
(declare-fun f0 (Float32 Float16 Float128 Float64) Float16)
(declare-fun f1 (Float64 Float32) Float64)
(declare-fun f2 (Float128 Float128 Float64 Float16 Float16 Float16 Float32 Float32 Float64 Float16) Float16)
(declare-fun f3 (Float64 Float32 Float32 Float32 Float16) Float32)
(declare-fun f4 (Float16 Float128 Float16) Float64)
(declare-fun f5 (Float32 Float64 Float128 Float64 Float64 Float16 Float16) Float16)
(declare-fun f6 (Float64 Float64 Float64 Float32) Float64)
(declare-fun f7 (Float16 Float64 Float32 Float128 Float16 Float16) Float64)
(declare-fun f8 (Float32 Float128 Float128 Float16 Float32 Float32 Float32) Float128)
(declare-fun f9 (Float128 Float32 Float64 Float32) Float64)
(declare-fun f10 (Float16 Float32 Float32 Float64 Float64 Float32 Float64) Float128)
(declare-fun f11 (Float64 Float16 Float64 Float128 Float32 Float64 Float16) Float32)
(declare-fun f12 (Float32 Float16) Float16)
(declare-fun f13 (Float16 Float64 Float64 Float32 Float16 Float32) Float32)
(declare-fun f14 (Float64 Float64 Float64 Float16 Float64 Float64 Float32 Float32 Float32) Float16)
(declare-fun f15 (Float128 Float32) Float32)
(declare-fun f16 (Float128 Float16 Float32) Float64)
(declare-fun f17 (Float32 Float16 Float64 Float64) Float128)
(declare-fun f18 (Float16 Float128 Float32 Float128 Float128 Float128 Float128 Float32 Float16 Float16) Float128)
(declare-fun f19 (Float16 Float128 Float128 Float64 Float64 Float64 Float64 Float64 Float32 Float64) Float16)
(declare-fun f20 (Float32 Float32 Float32 Float16 Float128 Float128 Float64) Float64)
(declare-fun f21 (Float64 Float128) Float64)
(declare-fun f22 (Float32 Float64 Float16 Float128 Float64 Float128 Float16 Float128 Float128) Float32)
(declare-fun f23 (Float128 Float128 Float64 Float64 Float32) Float64)
(declare-fun f24 (Float128 Float128 Float16 Float16 Float64 Float32 Float16 Float64) Float64)
(declare-fun f25 (Float16 Float16 Float128 Float128 Float32 Float32 Float16 Float32) Float128)
(declare-fun f26 (Float32) Float64)
(declare-fun f27 (Float32 Float32 Float64 Float32 Float32 Float64 Float16) Float32)
(declare-fun f28 (Float64) Float128)
(declare-fun f29 (Float32 Float32 Float64) Float16)
(declare-fun f30 (Float16 Float32 Float32 Float128 Float64 Float64 Float32 Float64 Float128 Float64) Float64)
(declare-fun f31 (Float128) Float16)
(declare-fun f32 (Float64 Float128 Float32 Float64 Float32 Float128) Float32)
(declare-fun f33 (Float32 Float16 Float32 Float64 Float128) Float128)
(declare-fun f34 (Float128 Float128 Float32 Float32 Float128 Float32 Float64) Float32)
(declare-fun f35 (Float64 Float64 Float32 Float16 Float16 Float64 Float64 Float16 Float64 Float16) Float64)
(declare-fun f36 (Float64 Float32 Float32 Float32 Float64 Float128 Float16) Float32)
(declare-fun f37 (Float128 Float32 Float16 Float32 Float128 Float64 Float32 Float128 Float128 Float32) Float128)
(declare-fun f38 (Float128 Float32 Float32 Float32 Float64 Float16) Float128)
(declare-fun f39 (Float128 Float64) Float128)
(declare-fun f40 (Float128 Float128 Float128 Float128 Float32 Float32 Float32 Float32 Float16) Float16)
(declare-fun f41 (Float16 Float32 Float64 Float32 Float32 Float32) Float128)
(declare-fun f42 (Float32 Float32 Float64 Float64 Float16 Float32 Float128) Float16)
(declare-fun f43 (Float64 Float16 Float16 Float16 Float128 Float128 Float16 Float16) Float128)
(declare-fun f44 (Float16 Float32 Float16) Float64)
(declare-fun f45 (Float64 Float16) Float128)
(declare-fun f46 (Float128 Float64) Float64)
(declare-fun f47 (Float16 Float16 Float16 Float128 Float32 Float128) Float128)
(declare-fun f48 (Float128 Float128 Float128 Float64) Float64)
(declare-fun f49 (Float64 Float32 Float128 Float128 Float64 Float128) Float128)
(declare-fun p0 (Float64 Float16 Float128 Float64 Float16) Bool)
(declare-fun p1 (Float64 Float16 Float64) Bool)
(declare-fun p2 (Float32 Float128 Float64 Float16 Float16) Bool)
(declare-fun p3 (Float128 Float16 Float32 Float128 Float64 Float16 Float128) Bool)
(declare-fun p4 (Float32 Float32 Float16 Float128 Float64) Bool)
(declare-fun p5 (Float32 Float128 Float64 Float128 Float64 Float128 Float128 Float128) Bool)
(declare-fun p6 (Float128 Float32 Float32 Float64 Float64 Float32 Float128) Bool)
(declare-fun p7 (Float16) Bool)
(declare-fun p8 (Float64 Float32 Float128 Float128 Float128 Float16 Float128 Float128 Float128 Float64) Bool)
(declare-fun p9 (Float32 Float32 Float128 Float64 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float32)
(declare-const ?float62 Float32)
(declare-const ?float63 Float16)
(declare-const ?float64 Float64)
(declare-const ?float65 Float32)
(declare-const ?float66 Float32)
(declare-const ?float67 Float16)
(declare-const ?float68 Float16)
(declare-const ?float69 Float16)
(declare-const ?float70 Float64)
(declare-const ?float71 Float16)
(declare-const ?float72 Float16)
(declare-const ?float73 Float16)
(declare-const ?float74 Float16)
(declare-const ?float75 Float64)
(declare-const ?float76 Float32)
(declare-const ?float77 Float32)
(declare-const ?float78 Float16)
(declare-const ?float79 Float32)
; GENERATING CONSTS
(declare-const ?float80 Float64)
(assert (= ?float80 (fp #b1 #b00100110011 #b0100001100111000101000101101010101101111101000010111)))
(declare-const ?float81 Float64)
(assert (= ?float81 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float82 Float32)
(assert (= ?float82 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float83 Float32)
(assert (= ?float83 (fp #b0 #b00000001 #b00000000000000000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b1 #b00000 #b0000000000)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b1 #b11110 #b1111110000)))
(declare-const ?float88 Float64)
(assert (= ?float88 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float90 Float64)
(assert (= ?float90 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float92 Float32)
(assert (= ?float92 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float128)
(assert (= ?float96 (fp #b0 #b110000001100010 #b1110001100000111110010111010011001001111001100000011001101110111010110101100101001001101011001111010001110001101)))
(declare-const ?float97 Float64)
(assert (= ?float97 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b0 #b00000 #b0000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.abs ?float71)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.sqrt RTP ?float99)))
(declare-const ?float102 Float32)
(assert (= ?float102 (fp.mul RTN ?float83 ((_ to_fp 8 24) RTP ?float87))))
(declare-const ?float103 Float32)
(assert (= ?float103 (f15 ((_ to_fp 15 113) RTZ ?float89) ((_ to_fp 8 24) RNE ?float67))))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.sub RTZ ?float100 ((_ to_fp 5 11) RTZ ?float77))))
(declare-const ?float105 Float16)
(assert (= ?float105 (f12 ((_ to_fp 8 24) RTP ?float63) ((_ to_fp 5 11) RTP ?float62))))
(declare-const ?float106 Float64)
(assert (= ?float106 (f7 ((_ to_fp 5 11) RTP ?float96) ((_ to_fp 11 53) RTN ?float101) ?float83 ((_ to_fp 15 113) RTP ?float78) ((_ to_fp 5 11) RTN ?float66) ((_ to_fp 5 11) RTP ?float77))))
(declare-const ?float107 Float64)
(assert (= ?float107 (fp.max ((_ to_fp 11 53) RTP ?float74) ?float64)))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.add RTN ((_ to_fp 11 53) RTN ?float101) ?float106)))
(declare-const ?float109 Float32)
(assert (= ?float109 (fp.max ?float66 ((_ to_fp 8 24) RTZ ?float94))))
(declare-const ?float110 Float16)
(assert (= ?float110 (fp.neg ?float71)))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.add RTN ?float89 ?float103)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.mul RTN ?float106 ?float64)))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.add RTN ?float63 ((_ to_fp 5 11) RTN ?float88))))
(declare-const ?float114 Float16)
(assert (= ?float114 (fp.min ?float113 ?float104)))
(declare-const ?float115 Float16)
(assert (= ?float115 (fp.roundToIntegral RTN ?float100)))
(declare-const ?float116 Float16)
(assert (= ?float116 (fp.sqrt RTP ?float105)))
(declare-const ?float117 Float64)
(assert (= ?float117 (fp.min ?float97 ?float85)))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.roundToIntegral RNE ?float105)))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.div RNE ?float94 ?float72)))
(declare-const ?float120 Float16)
(assert (= ?float120 (f42 ?float82 ?float83 ((_ to_fp 11 53) RNE ?float110) ((_ to_fp 11 53) RTP ?float99) ((_ to_fp 5 11) RTZ ?float75) ((_ to_fp 8 24) RTP ?float63) ((_ to_fp 15 113) RNE ?float105))))
(declare-const ?float121 Float16)
(assert (= ?float121 (fp.max ?float71 ?float63)))
(declare-const ?float122 Float128)
(assert (= ?float122 (f39 ((_ to_fp 15 113) RNE ?float62) ((_ to_fp 11 53) RTN ?float84))))
(declare-const ?float123 Float128)
(assert (= ?float123 (f41 ((_ to_fp 5 11) RNE ?float85) ((_ to_fp 8 24) RTZ ?float121) ((_ to_fp 11 53) RNE ?float72) ((_ to_fp 8 24) RNE ?float122) ((_ to_fp 8 24) RNE ?float115) ?float83)))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.sub RTP ?float85 ?float91)))
(declare-const ?float125 Float16)
(assert (= ?float125 (fp.sqrt RTP ?float121)))
(declare-const ?float126 Float64)
(assert (= ?float126 (f20 ((_ to_fp 8 24) RNE ?float78) ((_ to_fp 8 24) RTZ ?float67) ?float102 ?float67 ((_ to_fp 15 113) RTP ?float100) ?float96 ((_ to_fp 11 53) RNE ?float116))))
(declare-const ?float127 Float16)
(assert (= ?float127 (fp.mul RTN ((_ to_fp 5 11) RTN ?float124) ?float113)))
(declare-const ?float128 Float32)
(assert (= ?float128 (fp.max ?float102 ?float62)))
(declare-const ?float129 Float64)
(assert (= ?float129 (fp.sub RNE ((_ to_fp 11 53) RTN ?float84) ?float88)))
(declare-const ?float130 Float64)
(assert (= ?float130 (f6 ?float126 ((_ to_fp 11 53) RNE ?float95) ?float88 ((_ to_fp 8 24) RTZ ?float126))))
(declare-const ?float131 Float64)
(assert (= ?float131 (fp.roundToIntegral RTP ?float85)))
(declare-const ?float132 Float16)
(assert (= ?float132 (fp.neg ?float116)))
(declare-const ?float133 Float32)
(assert (= ?float133 (fp.add RTN ?float76 ((_ to_fp 8 24) RTN ?float90))))
(declare-const ?float134 Float64)
(assert (= ?float134 (fp.abs ?float90)))
(declare-const ?float135 Float32)
(assert (= ?float135 (fp.neg ?float89)))
(declare-const ?float136 Float64)
(assert (= ?float136 (fp.min ?float90 ((_ to_fp 11 53) RTZ ?float65))))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.min ?float130 ((_ to_fp 11 53) RTN ?float76))))
(declare-const ?float138 Float16)
(assert (= ?float138 (f0 ((_ to_fp 8 24) RTP ?float108) ((_ to_fp 5 11) RNE ?float61) ((_ to_fp 15 113) RTP ?float85) ((_ to_fp 11 53) RTP ?float83))))
(declare-const ?float139 Float16)
(assert (= ?float139 (fp.neg ?float78)))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.min ?float103 ?float79)))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.min ?float63 ((_ to_fp 5 11) RNE ?float131))))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.sub RTN ?float129 ((_ to_fp 11 53) RNE ?float67))))
(declare-const ?float143 Float16)
(assert (= ?float143 (fp.sub RTP ?float104 ?float105)))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.neg ?float125)))
(declare-const ?float145 Float32)
(assert (= ?float145 (fp.min ?float128 ?float140)))
(declare-const ?float146 Float32)
(assert (= ?float146 (f34 ?float96 ((_ to_fp 15 113) RTP ?float101) ((_ to_fp 8 24) RNE ?float94) ((_ to_fp 8 24) RNE ?float68) ((_ to_fp 15 113) RTP ?float92) ?float128 ?float90)))
(declare-const ?float147 Float64)
(assert (= ?float147 (fp.add RTP ?float60 ?float130)))
(declare-const ?float148 Float128)
(assert (= ?float148 (f33 ?float66 ((_ to_fp 5 11) RTZ ?float142) ((_ to_fp 8 24) RTP ?float144) ((_ to_fp 11 53) RTZ ?float101) ((_ to_fp 15 113) RNE ?float73))))
(declare-const ?float149 Float64)
(assert (= ?float149 (f7 ?float114 ?float60 ?float103 ((_ to_fp 15 113) RTN ?float141) ((_ to_fp 5 11) RTN ?float130) ?float104)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (p6 ((_ to_fp 15 113) RNE ?float93) ?float61 ((_ to_fp 8 24) RTN ?float148) ?float70 ((_ to_fp 11 53) RTN ?float92) ((_ to_fp 8 24) RTP ?float139) ((_ to_fp 15 113) RNE ?float149))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNaN ?float69)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isNaN ?float71)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.eq ?float76 ((_ to_fp 8 24) RTN ?float130))))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.isZero ?float136)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isZero ?float64)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isPositive ?float146)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isZero ?float96)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p4 ((_ to_fp 8 24) RTN ?float105) ((_ to_fp 8 24) RTZ ?float129) ((_ to_fp 5 11) RTN ?float65) ((_ to_fp 15 113) RTP ?float107) ((_ to_fp 11 53) RTZ ?float69))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.gt ((_ to_fp 11 53) RNE ?float98) ?float75)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.gt ?float96 ((_ to_fp 15 113) RNE ?float62))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.isPositive ?float114)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (p1 ((_ to_fp 11 53) RTN ?float116) ((_ to_fp 5 11) RTP ?float91) ((_ to_fp 11 53) RTP ?float63))))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.lt ?float96 ((_ to_fp 15 113) RTN ?float92))))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.geq ?float118 ((_ to_fp 5 11) RTN ?float90))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.leq ?float137 ((_ to_fp 11 53) RTZ ?float122))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.eq ((_ to_fp 11 53) RTZ ?float103) ?float81)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.leq ((_ to_fp 5 11) RTP ?float83) ?float121)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.gt ?float68 ?float114)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isZero ?float60)))
; FINAL ASSERT
(assert (and (or (or (or (or (or ?bool159 ?bool165 ?bool157) (or ?bool154)) ?bool164 (or ?bool166 (or ?bool158 ?bool152) ?bool161)) (and ?bool167 ?bool154 ?bool163) ?bool152) ?bool165)))
(check-sat)


-- iteration 128 --
(declare-fun f0 (Float128 Float16 Float16 Float16) Float32)
(declare-fun f1 (Float128 Float64 Float128 Float128 Float128 Float16 Float16) Float128)
(declare-fun f2 (Float32 Float32 Float32 Float32 Float16 Float64 Float32 Float16 Float32 Float64) Float32)
(declare-fun f3 (Float64 Float64 Float32 Float16) Float32)
(declare-fun f4 (Float32 Float64 Float128 Float16 Float128 Float128) Float16)
(declare-fun f5 (Float16 Float32 Float128) Float64)
(declare-fun f6 (Float128 Float16 Float16 Float128 Float32 Float64 Float128 Float16) Float128)
(declare-fun f7 (Float32 Float64 Float128 Float32 Float32 Float16) Float64)
(declare-fun f8 (Float32 Float128 Float64 Float64 Float64 Float128 Float128) Float16)
(declare-fun f9 (Float32 Float64) Float128)
(declare-fun f10 (Float64 Float32 Float64 Float16 Float64) Float128)
(declare-fun f11 (Float64 Float128 Float64 Float128) Float32)
(declare-fun f12 (Float16 Float32 Float16 Float64 Float64 Float64 Float16 Float16 Float16) Float32)
(declare-fun f13 (Float32) Float128)
(declare-fun f14 (Float128 Float16 Float128) Float32)
(declare-fun f15 (Float64 Float128 Float16 Float64 Float16 Float64 Float32 Float64 Float64 Float16) Float32)
(declare-fun f16 (Float32 Float128 Float64) Float128)
(declare-fun f17 (Float64 Float128 Float32 Float64 Float128 Float32 Float16 Float128) Float128)
(declare-fun f18 (Float128 Float128 Float64 Float64 Float128 Float32) Float128)
(declare-fun f19 (Float32 Float32 Float64 Float128 Float32) Float128)
(declare-fun f20 (Float16 Float128 Float32 Float64 Float16 Float128 Float16) Float64)
(declare-fun f21 (Float64 Float64) Float64)
(declare-fun f22 (Float64 Float64) Float16)
(declare-fun f23 (Float128 Float32 Float16 Float128 Float16 Float64 Float128 Float128) Float64)
(declare-fun f24 (Float128 Float32 Float128 Float16 Float16 Float32) Float64)
(declare-fun f25 (Float128 Float64) Float64)
(declare-fun f26 (Float32) Float64)
(declare-fun f27 (Float64 Float32) Float64)
(declare-fun f28 (Float64 Float128 Float64 Float16 Float64 Float32 Float16) Float128)
(declare-fun f29 (Float16 Float32 Float32 Float32 Float128 Float32 Float64 Float32 Float64 Float16) Float32)
(declare-fun f30 (Float64 Float16 Float64 Float128) Float16)
(declare-fun f31 (Float128 Float32 Float64 Float128 Float64 Float64 Float64 Float128 Float64 Float32) Float16)
(declare-fun f32 (Float16 Float16) Float64)
(declare-fun f33 (Float16 Float128 Float32 Float16 Float128) Float32)
(declare-fun f34 (Float64) Float128)
(declare-fun f35 (Float16 Float16 Float16) Float128)
(declare-fun f36 (Float16 Float16 Float16 Float16 Float128 Float16 Float32) Float64)
(declare-fun f37 (Float16 Float32 Float32) Float128)
(declare-fun f38 (Float16 Float32 Float128 Float32 Float32 Float16 Float32 Float64 Float32 Float128) Float64)
(declare-fun f39 (Float32 Float64 Float16 Float16 Float16 Float32 Float16) Float64)
(declare-fun f40 (Float128 Float64 Float16 Float128 Float64 Float128 Float128 Float128 Float128 Float32) Float128)
(declare-fun f41 (Float128 Float16 Float32 Float16 Float64 Float64) Float128)
(declare-fun f42 (Float128 Float128 Float64 Float32 Float16 Float128) Float16)
(declare-fun f43 (Float32) Float16)
(declare-fun f44 (Float16 Float16 Float128 Float64) Float64)
(declare-fun f45 (Float32 Float64 Float16 Float64 Float32 Float64 Float128 Float128 Float32) Float16)
(declare-fun f46 (Float128 Float16 Float64 Float64 Float128 Float16 Float128) Float32)
(declare-fun f47 (Float64 Float128 Float32 Float128) Float32)
(declare-fun f48 (Float32 Float64 Float32 Float128 Float128 Float128) Float64)
(declare-fun f49 (Float128 Float16) Float64)
(declare-fun p0 (Float64 Float32 Float128 Float128 Float64 Float128 Float16 Float64 Float128) Bool)
(declare-fun p1 (Float16 Float32) Bool)
(declare-fun p2 (Float128 Float16 Float32) Bool)
(declare-fun p3 (Float32 Float128 Float16 Float64 Float64 Float32 Float32) Bool)
(declare-fun p4 (Float128 Float16 Float16 Float128 Float128) Bool)
(declare-fun p5 (Float16 Float128 Float128 Float16 Float64 Float16 Float128) Bool)
(declare-fun p6 (Float64) Bool)
(declare-fun p7 (Float32 Float32 Float128 Float128 Float32) Bool)
(declare-fun p8 (Float64 Float64 Float128) Bool)
(declare-fun p9 (Float128 Float32 Float16 Float32 Float128 Float32 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float16)
(declare-const ?float62 Float64)
(declare-const ?float63 Float64)
(declare-const ?float64 Float64)
(declare-const ?float65 Float16)
(declare-const ?float66 Float64)
(declare-const ?float67 Float16)
(declare-const ?float68 Float128)
(declare-const ?float69 Float32)
(declare-const ?float70 Float16)
(declare-const ?float71 Float16)
(declare-const ?float72 Float32)
(declare-const ?float73 Float128)
(declare-const ?float74 Float128)
(declare-const ?float75 Float64)
(declare-const ?float76 Float128)
(declare-const ?float77 Float32)
(declare-const ?float78 Float16)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float32)
(assert (= ?float80 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float81 Float128)
(assert (= ?float81 (fp #b1 #b011000010110010 #b1111100000010111111000010010011111100001000001110100101110000010000001010011010110010010110100110001100101110101)))
(declare-const ?float82 Float16)
(assert (= ?float82 (fp #b1 #b01110 #b0100110011)))
(declare-const ?float83 Float128)
(assert (= ?float83 (fp #b0 #b000010000001111 #b0011011110110010100111000001010010001111001011110010101111100110101000001100010110101110110110110000100111100011)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float128)
(assert (= ?float86 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float87 Float64)
(assert (= ?float87 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float89 Float32)
(assert (= ?float89 (fp #b0 #b11101000 #b10100110101111011011010)))
(declare-const ?float90 Float16)
(assert (= ?float90 (fp #b1 #b11010 #b0101001010)))
(declare-const ?float91 Float16)
(assert (= ?float91 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float92 Float128)
(assert (= ?float92 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b1 #b101110111011100 #b0010000011000011010100001000001100000001110010011011110011110100010100001010000011001110000110001011011100001101)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float97 Float128)
(assert (= ?float97 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b0 #b00000000 #b00000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b1 #b00000 #b0000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float128)
(assert (= ?float100 (fp.sub RTZ ?float74 ((_ to_fp 15 113) RTN ?float72))))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.abs ?float100)))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.add RTZ ?float94 ((_ to_fp 15 113) RNE ?float89))))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.min ?float61 ?float67)))
(declare-const ?float104 Float16)
(assert (= ?float104 (f30 ((_ to_fp 11 53) RNE ?float97) ?float91 ((_ to_fp 11 53) RNE ?float98) ?float88)))
(declare-const ?float105 Float64)
(assert (= ?float105 (fp.min ?float64 ((_ to_fp 11 53) RTN ?float98))))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.sub RTN ?float97 ((_ to_fp 15 113) RTP ?float99))))
(declare-const ?float107 Float64)
(assert (= ?float107 (fp.sub RTN ?float105 ((_ to_fp 11 53) RNE ?float86))))
(declare-const ?float108 Float128)
(assert (= ?float108 (fp.add RTZ ?float106 ?float106)))
(declare-const ?float109 Float32)
(assert (= ?float109 (fp.abs ?float69)))
(declare-const ?float110 Float32)
(assert (= ?float110 (fp.div RNE ?float80 ((_ to_fp 8 24) RTP ?float75))))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.sqrt RTP ?float98)))
(declare-const ?float112 Float64)
(assert (= ?float112 (fp.max ?float105 ((_ to_fp 11 53) RTP ?float104))))
(declare-const ?float113 Float64)
(assert (= ?float113 (f39 ((_ to_fp 8 24) RTZ ?float103) ((_ to_fp 11 53) RTP ?float85) ((_ to_fp 5 11) RTP ?float95) ((_ to_fp 5 11) RNE ?float102) ((_ to_fp 5 11) RNE ?float100) ((_ to_fp 8 24) RTZ ?float73) ?float90)))
(declare-const ?float114 Float64)
(assert (= ?float114 (fp.div RTN ?float105 ?float107)))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.add RTN ?float98 ?float77)))
(declare-const ?float116 Float32)
(assert (= ?float116 (f12 ?float103 ((_ to_fp 8 24) RTP ?float60) ?float65 ((_ to_fp 11 53) RTP ?float78) ((_ to_fp 11 53) RTZ ?float72) ((_ to_fp 11 53) RTZ ?float67) ((_ to_fp 5 11) RTN ?float75) ((_ to_fp 5 11) RNE ?float88) ((_ to_fp 5 11) RTP ?float95))))
(declare-const ?float117 Float32)
(assert (= ?float117 (f15 ((_ to_fp 11 53) RTZ ?float70) ?float94 ((_ to_fp 5 11) RTN ?float74) ((_ to_fp 11 53) RTP ?float78) ?float103 ((_ to_fp 11 53) RNE ?float109) ((_ to_fp 8 24) RTP ?float107) ((_ to_fp 11 53) RTN ?float99) ?float112 ((_ to_fp 5 11) RTZ ?float94))))
(declare-const ?float118 Float128)
(assert (= ?float118 (f18 ((_ to_fp 15 113) RNE ?float84) ((_ to_fp 15 113) RTN ?float63) ((_ to_fp 11 53) RTP ?float86) ((_ to_fp 11 53) RTZ ?float82) ((_ to_fp 15 113) RTN ?float71) ?float77)))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.div RTP ((_ to_fp 5 11) RTP ?float64) ?float65)))
(declare-const ?float120 Float16)
(assert (= ?float120 (fp.roundToIntegral RNE ?float82)))
(declare-const ?float121 Float64)
(assert (= ?float121 (f25 ?float94 ?float63)))
(declare-const ?float122 Float128)
(assert (= ?float122 (f6 ((_ to_fp 15 113) RTZ ?float103) ((_ to_fp 5 11) RTN ?float64) ((_ to_fp 5 11) RTN ?float111) ((_ to_fp 15 113) RTN ?float117) ((_ to_fp 8 24) RTN ?float99) ((_ to_fp 11 53) RTP ?float96) ?float106 ((_ to_fp 5 11) RNE ?float89))))
(declare-const ?float123 Float32)
(assert (= ?float123 (f14 ((_ to_fp 15 113) RTP ?float66) ?float71 ?float68)))
(declare-const ?float124 Float64)
(assert (= ?float124 (fp.div RNE ((_ to_fp 11 53) RNE ?float119) ?float105)))
(declare-const ?float125 Float64)
(assert (= ?float125 (f32 ((_ to_fp 5 11) RTP ?float100) ((_ to_fp 5 11) RTP ?float72))))
(declare-const ?float126 Float64)
(assert (= ?float126 (fp.max ((_ to_fp 11 53) RTZ ?float108) ?float79)))
(declare-const ?float127 Float64)
(assert (= ?float127 (fp.sub RTZ ?float63 ((_ to_fp 11 53) RNE ?float91))))
(declare-const ?float128 Float16)
(assert (= ?float128 (fp.div RTN ?float65 ?float104)))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.min ?float116 ((_ to_fp 8 24) RTZ ?float86))))
(declare-const ?float130 Float16)
(assert (= ?float130 (fp.add RTZ ?float128 ?float91)))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.abs ?float91)))
(declare-const ?float132 Float64)
(assert (= ?float132 (fp.sqrt RTP ?float64)))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.mul RTZ ?float91 ((_ to_fp 5 11) RNE ?float92))))
(declare-const ?float134 Float64)
(assert (= ?float134 (fp.max ?float75 ((_ to_fp 11 53) RNE ?float131))))
(declare-const ?float135 Float16)
(assert (= ?float135 (f42 ((_ to_fp 15 113) RNE ?float65) ((_ to_fp 15 113) RTZ ?float67) ((_ to_fp 11 53) RTZ ?float106) ?float69 ((_ to_fp 5 11) RTZ ?float95) ((_ to_fp 15 113) RTP ?float126))))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.abs ?float86)))
(declare-const ?float137 Float32)
(assert (= ?float137 (f2 ((_ to_fp 8 24) RTZ ?float71) ((_ to_fp 8 24) RTP ?float122) ((_ to_fp 8 24) RNE ?float133) ?float123 ((_ to_fp 5 11) RNE ?float75) ((_ to_fp 11 53) RNE ?float130) ?float129 ((_ to_fp 5 11) RNE ?float77) ?float72 ((_ to_fp 11 53) RTZ ?float99))))
(declare-const ?float138 Float64)
(assert (= ?float138 (fp.max ((_ to_fp 11 53) RTZ ?float97) ?float112)))
(declare-const ?float139 Float64)
(assert (= ?float139 (f49 ((_ to_fp 15 113) RTZ ?float79) ((_ to_fp 5 11) RNE ?float80))))
(declare-const ?float140 Float32)
(assert (= ?float140 (fp.div RTN ((_ to_fp 8 24) RTZ ?float84) ?float115)))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.add RTN ?float139 ((_ to_fp 11 53) RTN ?float91))))
(declare-const ?float142 Float64)
(assert (= ?float142 (f20 ((_ to_fp 5 11) RTN ?float64) ((_ to_fp 15 113) RTZ ?float61) ?float117 ?float126 ((_ to_fp 5 11) RNE ?float123) ((_ to_fp 15 113) RTP ?float139) ?float84)))
(declare-const ?float143 Float16)
(assert (= ?float143 (f31 ?float95 ((_ to_fp 8 24) RTZ ?float101) ?float121 ((_ to_fp 15 113) RTP ?float93) ?float75 ((_ to_fp 11 53) RTN ?float80) ((_ to_fp 11 53) RTN ?float122) ?float97 ((_ to_fp 11 53) RTP ?float103) ((_ to_fp 8 24) RTN ?float119))))
(declare-const ?float144 Float16)
(assert (= ?float144 (fp.max ?float91 ?float67)))
(declare-const ?float145 Float16)
(assert (= ?float145 (fp.add RTZ ((_ to_fp 5 11) RNE ?float110) ?float96)))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.neg ?float145)))
(declare-const ?float147 Float16)
(assert (= ?float147 (fp.min ?float135 ?float135)))
(declare-const ?float148 Float32)
(assert (= ?float148 (fp.abs ?float89)))
(declare-const ?float149 Float16)
(assert (= ?float149 (fp.add RTP ?float99 ((_ to_fp 5 11) RTP ?float136))))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.lt ?float110 ((_ to_fp 8 24) RNE ?float61))))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (p5 ((_ to_fp 5 11) RTP ?float64) ?float92 ((_ to_fp 15 113) RTP ?float107) ?float144 ((_ to_fp 11 53) RTP ?float65) ((_ to_fp 5 11) RNE ?float139) ?float95)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.isInfinite ?float130)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isNaN ?float117)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.lt ?float83 ?float76)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.isZero ?float79)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.eq ?float109 ((_ to_fp 8 24) RTZ ?float136))))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isSubnormal ?float81)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p7 ((_ to_fp 8 24) RTZ ?float81) ((_ to_fp 8 24) RTP ?float65) ((_ to_fp 15 113) RTP ?float77) ((_ to_fp 15 113) RNE ?float64) ((_ to_fp 8 24) RTP ?float141))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.lt ?float100 ((_ to_fp 15 113) RTZ ?float139))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (p3 ((_ to_fp 8 24) RTP ?float135) ((_ to_fp 15 113) RTN ?float145) ((_ to_fp 5 11) RTP ?float126) ((_ to_fp 11 53) RTN ?float96) ((_ to_fp 11 53) RTZ ?float84) ((_ to_fp 8 24) RNE ?float108) ((_ to_fp 8 24) RNE ?float133))))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (p9 ((_ to_fp 15 113) RTN ?float71) ((_ to_fp 8 24) RTN ?float105) ?float103 ((_ to_fp 8 24) RTN ?float144) ((_ to_fp 15 113) RTP ?float80) ((_ to_fp 8 24) RTN ?float86) ((_ to_fp 11 53) RTZ ?float86))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.geq ((_ to_fp 11 53) RTN ?float106) ?float138)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.gt ((_ to_fp 5 11) RTZ ?float123) ?float145)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.geq ?float77 ?float117)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (p3 ((_ to_fp 8 24) RNE ?float147) ((_ to_fp 15 113) RTP ?float146) ?float144 ((_ to_fp 11 53) RTZ ?float74) ((_ to_fp 11 53) RTN ?float83) ((_ to_fp 8 24) RTZ ?float104) ?float98)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNegative ?float126)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (p0 ?float141 ((_ to_fp 8 24) RTN ?float93) ((_ to_fp 15 113) RTN ?float67) ((_ to_fp 15 113) RTZ ?float90) ((_ to_fp 11 53) RTP ?float65) ((_ to_fp 15 113) RTN ?float141) ((_ to_fp 5 11) RTN ?float124) ((_ to_fp 11 53) RTZ ?float100) ((_ to_fp 15 113) RTZ ?float140))))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.eq ?float62 ((_ to_fp 11 53) RTZ ?float89))))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (p5 ((_ to_fp 5 11) RTZ ?float122) ((_ to_fp 15 113) RNE ?float149) ((_ to_fp 15 113) RNE ?float78) ((_ to_fp 5 11) RTP ?float87) ((_ to_fp 11 53) RNE ?float80) ((_ to_fp 5 11) RTZ ?float94) ((_ to_fp 15 113) RTP ?float131))))
; FINAL ASSERT
(assert (or (and ?bool152)))
(check-sat)


-- iteration 129 --
(declare-fun f0 (Float64 Float64 Float128 Float128 Float128 Float32 Float16 Float128) Float16)
(declare-fun f1 (Float64 Float16 Float64) Float64)
(declare-fun f2 (Float32) Float16)
(declare-fun f3 (Float32 Float128 Float64 Float32 Float32 Float128 Float32 Float32 Float128) Float32)
(declare-fun f4 (Float32 Float64 Float128 Float32 Float64) Float16)
(declare-fun f5 (Float64 Float16 Float32 Float128 Float128 Float128 Float128 Float16 Float16 Float16) Float16)
(declare-fun f6 (Float32 Float32 Float32 Float32 Float128) Float128)
(declare-fun f7 (Float128 Float64 Float128) Float32)
(declare-fun f8 (Float128) Float32)
(declare-fun f9 (Float64 Float16 Float32 Float128 Float16 Float16 Float128 Float64 Float64) Float32)
(declare-fun f10 (Float128) Float16)
(declare-fun f11 (Float128 Float128 Float16 Float16 Float128) Float16)
(declare-fun f12 (Float16 Float128 Float64 Float32 Float32 Float16) Float128)
(declare-fun f13 (Float64 Float128 Float128 Float128 Float16 Float32 Float64) Float128)
(declare-fun f14 (Float128 Float128 Float32 Float64 Float16 Float128 Float64 Float16 Float128 Float64) Float64)
(declare-fun f15 (Float16 Float64 Float32 Float16 Float32) Float128)
(declare-fun f16 (Float128 Float32 Float32 Float16 Float32 Float16 Float128) Float128)
(declare-fun f17 (Float64) Float128)
(declare-fun f18 (Float16 Float128 Float128 Float16 Float64 Float128 Float32) Float128)
(declare-fun f19 (Float128 Float64 Float32 Float16 Float16) Float64)
(declare-fun f20 (Float64 Float16 Float32 Float128 Float16 Float64 Float128 Float64) Float128)
(declare-fun f21 (Float16 Float64 Float128) Float16)
(declare-fun f22 (Float128 Float32 Float32 Float16 Float32 Float16 Float64 Float128) Float64)
(declare-fun f23 (Float128 Float128 Float32 Float16 Float128 Float32) Float32)
(declare-fun f24 (Float128 Float32) Float16)
(declare-fun f25 (Float64 Float64) Float64)
(declare-fun f26 (Float16 Float16 Float64 Float128 Float16 Float32) Float128)
(declare-fun f27 (Float128 Float16 Float16) Float64)
(declare-fun f28 (Float16 Float128 Float16 Float128 Float128 Float16 Float64 Float32 Float64 Float64) Float64)
(declare-fun f29 (Float128 Float64 Float32 Float64 Float128 Float64 Float32 Float32) Float64)
(declare-fun f30 (Float64 Float64 Float64 Float16 Float64 Float64 Float16 Float128 Float128) Float32)
(declare-fun f31 (Float64 Float32 Float128 Float128 Float32) Float32)
(declare-fun f32 (Float16) Float32)
(declare-fun f33 (Float32 Float16 Float64 Float16 Float16) Float64)
(declare-fun f34 (Float16 Float32 Float128 Float64 Float32 Float16 Float128) Float128)
(declare-fun f35 (Float64 Float128) Float32)
(declare-fun f36 (Float32 Float32 Float32 Float64 Float32 Float16 Float16 Float128) Float64)
(declare-fun f37 (Float64 Float64 Float64 Float32 Float16 Float128) Float128)
(declare-fun f38 (Float32 Float128 Float64 Float16 Float64 Float16) Float16)
(declare-fun f39 (Float64 Float16 Float64) Float64)
(declare-fun f40 (Float128 Float16 Float128 Float64) Float16)
(declare-fun f41 (Float64 Float16 Float16 Float16 Float128 Float32 Float32 Float64 Float128) Float16)
(declare-fun f42 (Float16) Float128)
(declare-fun f43 (Float32 Float32 Float64 Float16 Float32 Float16 Float32 Float16 Float128 Float32) Float16)
(declare-fun f44 (Float32 Float128 Float16 Float32 Float16) Float128)
(declare-fun f45 (Float16 Float64 Float128 Float64 Float16) Float128)
(declare-fun f46 (Float64 Float32 Float128 Float16 Float32 Float64 Float64 Float16) Float128)
(declare-fun f47 (Float64 Float64 Float16) Float16)
(declare-fun f48 (Float16 Float64 Float128 Float16 Float128 Float16 Float32 Float32) Float128)
(declare-fun f49 (Float16) Float128)
(declare-fun p0 (Float128 Float128 Float32 Float16 Float32 Float64 Float32) Bool)
(declare-fun p1 (Float16 Float32 Float32 Float32 Float128 Float32) Bool)
(declare-fun p2 (Float32 Float32 Float64 Float64 Float64 Float16 Float128) Bool)
(declare-fun p3 (Float64 Float32 Float16) Bool)
(declare-fun p4 (Float64 Float64 Float128 Float64 Float32 Float16 Float32 Float16 Float16) Bool)
(declare-fun p5 (Float32 Float32 Float128 Float16 Float16) Bool)
(declare-fun p6 (Float64 Float128 Float16 Float16 Float32) Bool)
(declare-fun p7 (Float16) Bool)
(declare-fun p8 (Float32) Bool)
(declare-fun p9 (Float128 Float32 Float16 Float64 Float64 Float128 Float128 Float64 Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float32)
(declare-const ?float62 Float64)
(declare-const ?float63 Float16)
(declare-const ?float64 Float64)
(declare-const ?float65 Float128)
(declare-const ?float66 Float128)
(declare-const ?float67 Float128)
(declare-const ?float68 Float16)
(declare-const ?float69 Float128)
(declare-const ?float70 Float64)
(declare-const ?float71 Float128)
(declare-const ?float72 Float16)
(declare-const ?float73 Float16)
(declare-const ?float74 Float64)
(declare-const ?float75 Float16)
(declare-const ?float76 Float16)
(declare-const ?float77 Float128)
(declare-const ?float78 Float64)
(declare-const ?float79 Float16)
; GENERATING CONSTS
(declare-const ?float80 Float128)
(assert (= ?float80 (fp #b1 #b000100000100001 #b0001100101011100010000101100111011111101011001111000101011101011110010101011010101101010011001001001100101100111)))
(declare-const ?float81 Float16)
(assert (= ?float81 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float82 Float64)
(assert (= ?float82 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float83 Float16)
(assert (= ?float83 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float84 Float16)
(assert (= ?float84 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float85 Float64)
(assert (= ?float85 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float86 Float16)
(assert (= ?float86 (fp #b0 #b00011 #b1110101010)))
(declare-const ?float87 Float16)
(assert (= ?float87 (fp #b0 #b00000 #b0000000000)))
(declare-const ?float88 Float128)
(assert (= ?float88 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float89 Float16)
(assert (= ?float89 (fp #b0 #b00001 #b0000000000)))
(declare-const ?float90 Float128)
(assert (= ?float90 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float91 Float32)
(assert (= ?float91 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float92 Float64)
(assert (= ?float92 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float93 Float64)
(assert (= ?float93 (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float94 Float16)
(assert (= ?float94 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float95 Float64)
(assert (= ?float95 (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float64)
(assert (= ?float96 (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000001)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float98 Float32)
(assert (= ?float98 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float99 Float32)
(assert (= ?float99 (fp #b1 #b00000001 #b00000000000000000000001)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.abs ?float84)))
(declare-const ?float101 Float16)
(assert (= ?float101 (fp.roundToIntegral RTN ?float87)))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.min ?float71 ((_ to_fp 15 113) RTN ?float91))))
(declare-const ?float103 Float16)
(assert (= ?float103 (f43 ((_ to_fp 8 24) RTP ?float87) ((_ to_fp 8 24) RTZ ?float76) ?float78 ((_ to_fp 5 11) RNE ?float102) ?float61 ?float68 ((_ to_fp 8 24) RTP ?float96) ?float68 ?float102 ((_ to_fp 8 24) RTP ?float64))))
(declare-const ?float104 Float16)
(assert (= ?float104 (fp.roundToIntegral RTZ ?float84)))
(declare-const ?float105 Float32)
(assert (= ?float105 (f31 ?float64 ((_ to_fp 8 24) RTP ?float80) ((_ to_fp 15 113) RTP ?float76) ((_ to_fp 15 113) RTN ?float70) ((_ to_fp 8 24) RTP ?float60))))
(declare-const ?float106 Float128)
(assert (= ?float106 (fp.add RNE ?float71 ((_ to_fp 15 113) RNE ?float93))))
(declare-const ?float107 Float16)
(assert (= ?float107 (fp.abs ?float73)))
(declare-const ?float108 Float128)
(assert (= ?float108 (f15 ((_ to_fp 5 11) RNE ?float78) ((_ to_fp 11 53) RTN ?float88) ((_ to_fp 8 24) RNE ?float92) ((_ to_fp 5 11) RTP ?float65) ((_ to_fp 8 24) RTZ ?float71))))
(declare-const ?float109 Float128)
(assert (= ?float109 (fp.roundToIntegral RTZ ?float66)))
(declare-const ?float110 Float32)
(assert (= ?float110 (fp.roundToIntegral RNE ?float105)))
(declare-const ?float111 Float32)
(assert (= ?float111 (fp.roundToIntegral RTZ ?float98)))
(declare-const ?float112 Float16)
(assert (= ?float112 (f10 ?float106)))
(declare-const ?float113 Float128)
(assert (= ?float113 (fp.neg ?float80)))
(declare-const ?float114 Float128)
(assert (= ?float114 (fp.sub RTZ ?float88 ((_ to_fp 15 113) RTN ?float75))))
(declare-const ?float115 Float128)
(assert (= ?float115 (fp.div RTN ?float109 ?float69)))
(declare-const ?float116 Float128)
(assert (= ?float116 (fp.sub RTP ?float90 ?float69)))
(declare-const ?float117 Float16)
(assert (= ?float117 (fp.max ((_ to_fp 5 11) RTN ?float85) ?float72)))
(declare-const ?float118 Float32)
(assert (= ?float118 (fp.mul RTP ?float91 ((_ to_fp 8 24) RTZ ?float76))))
(declare-const ?float119 Float16)
(assert (= ?float119 (fp.mul RTP ?float79 ((_ to_fp 5 11) RNE ?float66))))
(declare-const ?float120 Float16)
(assert (= ?float120 (f2 ((_ to_fp 8 24) RNE ?float78))))
(declare-const ?float121 Float16)
(assert (= ?float121 (f4 ?float105 ((_ to_fp 11 53) RTZ ?float117) ?float80 ((_ to_fp 8 24) RNE ?float72) ((_ to_fp 11 53) RTP ?float83))))
(declare-const ?float122 Float128)
(assert (= ?float122 (fp.mul RNE ?float113 ?float67)))
(declare-const ?float123 Float128)
(assert (= ?float123 (fp.sqrt RTZ ?float88)))
(declare-const ?float124 Float128)
(assert (= ?float124 (f6 ((_ to_fp 8 24) RTZ ?float97) ((_ to_fp 8 24) RTP ?float77) ((_ to_fp 8 24) RTN ?float95) ((_ to_fp 8 24) RNE ?float73) ((_ to_fp 15 113) RTN ?float121))))
(declare-const ?float125 Float16)
(assert (= ?float125 (f2 ((_ to_fp 8 24) RTN ?float85))))
(declare-const ?float126 Float16)
(assert (= ?float126 (fp.roundToIntegral RNE ?float73)))
(declare-const ?float127 Float128)
(assert (= ?float127 (fp.roundToIntegral RNE ?float65)))
(declare-const ?float128 Float16)
(assert (= ?float128 (f4 ((_ to_fp 8 24) RNE ?float90) ((_ to_fp 11 53) RTN ?float94) ((_ to_fp 15 113) RNE ?float105) ?float61 ((_ to_fp 11 53) RTZ ?float67))))
(declare-const ?float129 Float16)
(assert (= ?float129 (fp.neg ?float112)))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.neg ?float69)))
(declare-const ?float131 Float16)
(assert (= ?float131 (fp.min ?float89 ?float103)))
(declare-const ?float132 Float128)
(assert (= ?float132 (fp.abs ?float90)))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.add RTZ ?float104 ((_ to_fp 5 11) RTN ?float105))))
(declare-const ?float134 Float64)
(assert (= ?float134 (fp.min ?float64 ?float62)))
(declare-const ?float135 Float128)
(assert (= ?float135 (fp.max ?float130 ?float80)))
(declare-const ?float136 Float16)
(assert (= ?float136 (fp.abs ?float86)))
(declare-const ?float137 Float64)
(assert (= ?float137 (fp.sqrt RTN ?float78)))
(declare-const ?float138 Float16)
(assert (= ?float138 (fp.min ((_ to_fp 5 11) RTP ?float124) ?float133)))
(declare-const ?float139 Float128)
(assert (= ?float139 (f42 ?float73)))
(declare-const ?float140 Float128)
(assert (= ?float140 (fp.roundToIntegral RTP ?float106)))
(declare-const ?float141 Float16)
(assert (= ?float141 (fp.sqrt RTN ?float121)))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.min ?float60 ((_ to_fp 11 53) RTZ ?float67))))
(declare-const ?float143 Float128)
(assert (= ?float143 (fp.roundToIntegral RTN ?float106)))
(declare-const ?float144 Float32)
(assert (= ?float144 (f9 ((_ to_fp 11 53) RNE ?float128) ?float84 ?float110 ((_ to_fp 15 113) RTZ ?float82) ((_ to_fp 5 11) RTP ?float98) ((_ to_fp 5 11) RTP ?float143) ?float69 ((_ to_fp 11 53) RTZ ?float89) ?float74)))
(declare-const ?float145 Float64)
(assert (= ?float145 (fp.neg ?float62)))
(declare-const ?float146 Float16)
(assert (= ?float146 (fp.abs ?float100)))
(declare-const ?float147 Float16)
(assert (= ?float147 (f11 ((_ to_fp 15 113) RTZ ?float93) ((_ to_fp 15 113) RTP ?float128) ?float84 ((_ to_fp 5 11) RNE ?float64) ((_ to_fp 15 113) RTZ ?float63))))
(declare-const ?float148 Float16)
(assert (= ?float148 (fp.mul RTZ ?float68 ?float141)))
(declare-const ?float149 Float128)
(assert (= ?float149 (fp.sub RTZ ((_ to_fp 15 113) RTP ?float91) ?float123)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.gt ?float103 ?float86)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.isNormal ?float137)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (fp.eq ?float85 ?float62)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (p2 ((_ to_fp 8 24) RNE ?float95) ((_ to_fp 8 24) RNE ?float109) ((_ to_fp 11 53) RTP ?float132) ((_ to_fp 11 53) RTZ ?float114) ?float85 ((_ to_fp 5 11) RTP ?float113) ?float143)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (fp.eq ((_ to_fp 11 53) RTN ?float111) ?float137)))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.gt ?float79 ?float86)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isInfinite ?float74)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isInfinite ?float118)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (p5 ((_ to_fp 8 24) RTZ ?float106) ((_ to_fp 8 24) RTN ?float97) ((_ to_fp 15 113) RTP ?float103) ?float76 ((_ to_fp 5 11) RTZ ?float111))))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.eq ((_ to_fp 15 113) RTP ?float91) ?float108)))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.leq ?float142 ?float137)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.eq ((_ to_fp 5 11) RNE ?float77) ?float126)))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isInfinite ?float133)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.isSubnormal ?float108)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.leq ?float83 ((_ to_fp 5 11) RTP ?float74))))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.isInfinite ?float137)))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isZero ?float137)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.leq ((_ to_fp 8 24) RTP ?float126) ?float91)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isZero ?float126)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isZero ?float79)))
; FINAL ASSERT
(assert (and ?bool159 ?bool160))
(check-sat)


-- iteration 130 --
(declare-fun f0 (Float16 Float64 Float32 Float32 Float16 Float128) Float32)
(declare-fun f1 (Float128 Float64 Float64 Float64 Float64 Float128 Float64 Float16) Float128)
(declare-fun f2 (Float16 Float128 Float64 Float64 Float32 Float32 Float16 Float16 Float128) Float128)
(declare-fun f3 (Float16 Float64 Float128 Float32 Float16 Float16 Float32 Float32) Float16)
(declare-fun f4 (Float64 Float64 Float32 Float128) Float16)
(declare-fun f5 (Float128 Float32 Float32 Float64) Float128)
(declare-fun f6 (Float16 Float16 Float16) Float32)
(declare-fun f7 (Float64 Float32 Float128 Float128 Float16) Float32)
(declare-fun f8 (Float64 Float32 Float32 Float128 Float16) Float16)
(declare-fun f9 (Float32 Float16) Float64)
(declare-fun f10 (Float32 Float32) Float128)
(declare-fun f11 (Float128) Float32)
(declare-fun f12 (Float128 Float128 Float128 Float32 Float32 Float128 Float16 Float32 Float64) Float128)
(declare-fun f13 (Float64 Float32) Float16)
(declare-fun f14 (Float16) Float32)
(declare-fun f15 (Float32 Float16) Float64)
(declare-fun f16 (Float16 Float32 Float32) Float16)
(declare-fun f17 (Float128 Float16 Float32 Float16 Float16 Float16 Float16 Float16 Float128) Float32)
(declare-fun f18 (Float16 Float16) Float32)
(declare-fun f19 (Float128 Float128 Float32 Float128 Float16 Float16 Float128 Float128 Float32 Float16) Float64)
(declare-fun f20 (Float32 Float16 Float32) Float32)
(declare-fun f21 (Float16 Float32 Float64 Float32 Float32 Float64) Float16)
(declare-fun f22 (Float128 Float64 Float128 Float16 Float16) Float16)
(declare-fun f23 (Float64 Float64) Float32)
(declare-fun f24 (Float32 Float64 Float32) Float128)
(declare-fun f25 (Float32 Float64 Float32 Float64 Float128) Float16)
(declare-fun f26 (Float16 Float16 Float16 Float128 Float128 Float16 Float16) Float16)
(declare-fun f27 (Float128 Float32 Float16 Float128 Float128 Float16 Float16 Float32 Float32 Float64) Float32)
(declare-fun f28 (Float32 Float16 Float64 Float128 Float16 Float64 Float64 Float16 Float32 Float64) Float128)
(declare-fun f29 (Float16 Float128 Float32 Float32 Float128 Float128 Float64) Float32)
(declare-fun f30 (Float32) Float64)
(declare-fun f31 (Float16 Float16 Float64 Float64 Float64 Float128 Float32) Float16)
(declare-fun f32 (Float16 Float128 Float16 Float64 Float128) Float32)
(declare-fun f33 (Float32 Float16 Float128 Float16 Float128 Float16 Float16 Float64) Float16)
(declare-fun f34 (Float64 Float32 Float128 Float32 Float16 Float128 Float32 Float64 Float32 Float64) Float64)
(declare-fun f35 (Float32) Float16)
(declare-fun f36 (Float32 Float128 Float32 Float128 Float64 Float32 Float16 Float128) Float16)
(declare-fun f37 (Float16 Float64 Float64 Float128 Float128) Float64)
(declare-fun f38 (Float64) Float128)
(declare-fun f39 (Float32 Float64 Float128 Float128) Float128)
(declare-fun f40 (Float64) Float128)
(declare-fun f41 (Float16 Float16 Float32 Float128 Float64 Float16 Float128 Float64 Float64 Float32) Float16)
(declare-fun f42 (Float128 Float32 Float16 Float128 Float32 Float64 Float16 Float128) Float32)
(declare-fun f43 (Float16 Float16 Float32 Float128 Float64 Float128 Float64 Float32) Float16)
(declare-fun f44 (Float16 Float128 Float64 Float128) Float128)
(declare-fun f45 (Float64 Float128 Float16 Float128 Float16 Float64 Float32 Float16 Float128 Float64) Float64)
(declare-fun f46 (Float128 Float16 Float32 Float32 Float16 Float16 Float64) Float64)
(declare-fun f47 (Float128 Float16 Float16 Float128 Float64) Float16)
(declare-fun f48 (Float32 Float16 Float64) Float64)
(declare-fun f49 (Float32 Float32 Float64 Float16 Float64 Float32 Float16) Float64)
(declare-fun p0 (Float32 Float64 Float32 Float16 Float128 Float32 Float128 Float128 Float128 Float32) Bool)
(declare-fun p1 (Float64 Float64 Float32 Float64 Float32) Bool)
(declare-fun p2 (Float32 Float128 Float32 Float32 Float64 Float16 Float16 Float32 Float64) Bool)
(declare-fun p3 (Float32 Float16 Float64 Float32) Bool)
(declare-fun p4 (Float64 Float128 Float16 Float32 Float128 Float16 Float16 Float64 Float16 Float32) Bool)
(declare-fun p5 (Float16 Float128 Float32 Float16 Float16) Bool)
(declare-fun p6 (Float64 Float16 Float64 Float64 Float128 Float16 Float64 Float16 Float64 Float32) Bool)
(declare-fun p7 (Float16 Float32 Float16 Float32 Float16 Float16 Float128 Float32 Float16 Float64) Bool)
(declare-fun p8 (Float32 Float32 Float32 Float128 Float32 Float128 Float32 Float32 Float16) Bool)
(declare-fun p9 (Float64) Bool)
; GENERATING VARIABLES
(declare-const ?float60 Float64)
(declare-const ?float61 Float64)
(declare-const ?float62 Float64)
(declare-const ?float63 Float128)
(declare-const ?float64 Float64)
(declare-const ?float65 Float64)
(declare-const ?float66 Float32)
(declare-const ?float67 Float128)
(declare-const ?float68 Float32)
(declare-const ?float69 Float16)
(declare-const ?float70 Float128)
(declare-const ?float71 Float32)
(declare-const ?float72 Float16)
(declare-const ?float73 Float32)
(declare-const ?float74 Float128)
(declare-const ?float75 Float16)
(declare-const ?float76 Float32)
(declare-const ?float77 Float32)
(declare-const ?float78 Float32)
(declare-const ?float79 Float64)
; GENERATING CONSTS
(declare-const ?float80 Float16)
(assert (= ?float80 (fp #b1 #b00010 #b1010010011)))
(declare-const ?float81 Float32)
(assert (= ?float81 (fp #b1 #b11011100 #b10101111010101000000010)))
(declare-const ?float82 Float128)
(assert (= ?float82 (fp #b0 #b111110000001011 #b1111101001001110000101010111001010010010101001111001111101010110110001111110001000011000110001011011010001000111)))
(declare-const ?float83 Float128)
(assert (= ?float83 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float84 Float32)
(assert (= ?float84 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float85 Float128)
(assert (= ?float85 (fp #b1 #b101110011101100 #b1011000001010001101110111001001011011110010000001000101010111101011100101001001101010111111111011100111001001111)))
(declare-const ?float86 Float32)
(assert (= ?float86 (fp #b1 #b00000001 #b00000000000000000000000)))
(declare-const ?float87 Float128)
(assert (= ?float87 (fp #b0 #b110111100010010 #b0001110101100001010010111101001100100110010010100111000111011111100001110011100101100000001000101110100100000111)))
(declare-const ?float88 Float32)
(assert (= ?float88 (fp #b1 #b00000000 #b00000000000000000000000)))
(declare-const ?float89 Float64)
(assert (= ?float89 (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(declare-const ?float90 Float32)
(assert (= ?float90 (fp #b1 #b00000001 #b00000000000000000000001)))
(declare-const ?float91 Float64)
(assert (= ?float91 (fp #b0 #b01010111000 #b0101011101100001111010111100110000001111001011101100)))
(declare-const ?float92 Float16)
(assert (= ?float92 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float93 Float128)
(assert (= ?float93 (fp #b1 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)))
(declare-const ?float94 Float128)
(assert (= ?float94 (fp #b1 #b100101110010110 #b1101001100010010111100000111111110111110010010011101001110001000010110000100100110011010011001011011010101111100)))
(declare-const ?float95 Float128)
(assert (= ?float95 (fp #b0 #b000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float96 Float16)
(assert (= ?float96 (fp #b1 #b00001 #b0000000001)))
(declare-const ?float97 Float16)
(assert (= ?float97 (fp #b1 #b00001 #b0000000000)))
(declare-const ?float98 Float128)
(assert (= ?float98 (fp #b0 #b000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(declare-const ?float99 Float16)
(assert (= ?float99 (fp #b1 #b00001 #b0000000000)))
; DERIVE FLOATS
(declare-const ?float100 Float16)
(assert (= ?float100 (fp.mul RTN ((_ to_fp 5 11) RTP ?float78) ?float75)))
(declare-const ?float101 Float128)
(assert (= ?float101 (fp.roundToIntegral RNE ?float87)))
(declare-const ?float102 Float128)
(assert (= ?float102 (fp.roundToIntegral RNE ?float82)))
(declare-const ?float103 Float16)
(assert (= ?float103 (fp.add RTN ?float97 ((_ to_fp 5 11) RTN ?float63))))
(declare-const ?float104 Float64)
(assert (= ?float104 (f46 ((_ to_fp 15 113) RNE ?float81) ((_ to_fp 5 11) RTN ?float86) ?float66 ?float77 ?float99 ((_ to_fp 5 11) RTN ?float68) ((_ to_fp 11 53) RTP ?float102))))
(declare-const ?float105 Float128)
(assert (= ?float105 (f40 ((_ to_fp 11 53) RTN ?float87))))
(declare-const ?float106 Float16)
(assert (= ?float106 (fp.min ((_ to_fp 5 11) RTZ ?float70) ?float96)))
(declare-const ?float107 Float64)
(assert (= ?float107 (f30 ((_ to_fp 8 24) RTP ?float98))))
(declare-const ?float108 Float64)
(assert (= ?float108 (fp.mul RNE ((_ to_fp 11 53) RTP ?float94) ?float89)))
(declare-const ?float109 Float32)
(assert (= ?float109 (fp.max ?float68 ((_ to_fp 8 24) RTZ ?float107))))
(declare-const ?float110 Float32)
(assert (= ?float110 (f23 ?float61 ?float60)))
(declare-const ?float111 Float16)
(assert (= ?float111 (fp.min ?float96 ((_ to_fp 5 11) RTP ?float63))))
(declare-const ?float112 Float32)
(assert (= ?float112 (fp.add RNE ?float76 ?float73)))
(declare-const ?float113 Float16)
(assert (= ?float113 (fp.min ?float111 ((_ to_fp 5 11) RTP ?float83))))
(declare-const ?float114 Float128)
(assert (= ?float114 (f44 ((_ to_fp 5 11) RTZ ?float94) ?float87 ?float64 ((_ to_fp 15 113) RTP ?float69))))
(declare-const ?float115 Float32)
(assert (= ?float115 (fp.sub RTP ((_ to_fp 8 24) RTP ?float105) ?float112)))
(declare-const ?float116 Float64)
(assert (= ?float116 (f9 ((_ to_fp 8 24) RTZ ?float85) ((_ to_fp 5 11) RTN ?float83))))
(declare-const ?float117 Float64)
(assert (= ?float117 (f45 ((_ to_fp 11 53) RTZ ?float81) ((_ to_fp 15 113) RTN ?float84) ((_ to_fp 5 11) RNE ?float68) ((_ to_fp 15 113) RNE ?float71) ((_ to_fp 5 11) RTP ?float71) ((_ to_fp 11 53) RTP ?float105) ?float88 ((_ to_fp 5 11) RNE ?float88) ((_ to_fp 15 113) RTP ?float77) ((_ to_fp 11 53) RTP ?float96))))
(declare-const ?float118 Float16)
(assert (= ?float118 (fp.min ((_ to_fp 5 11) RTZ ?float76) ?float97)))
(declare-const ?float119 Float64)
(assert (= ?float119 (fp.mul RTZ ((_ to_fp 11 53) RTP ?float80) ?float117)))
(declare-const ?float120 Float128)
(assert (= ?float120 (f1 ((_ to_fp 15 113) RTP ?float79) ((_ to_fp 11 53) RTZ ?float105) ((_ to_fp 11 53) RTN ?float111) ((_ to_fp 11 53) RTP ?float83) ?float65 ((_ to_fp 15 113) RNE ?float91) ((_ to_fp 11 53) RNE ?float98) ?float113)))
(declare-const ?float121 Float64)
(assert (= ?float121 (fp.div RNE ?float64 ((_ to_fp 11 53) RTP ?float109))))
(declare-const ?float122 Float32)
(assert (= ?float122 (fp.max ((_ to_fp 8 24) RTN ?float79) ?float109)))
(declare-const ?float123 Float128)
(assert (= ?float123 (f39 ?float109 ((_ to_fp 11 53) RTZ ?float75) ((_ to_fp 15 113) RTN ?float64) ((_ to_fp 15 113) RTP ?float96))))
(declare-const ?float124 Float16)
(assert (= ?float124 (fp.sqrt RTZ ?float69)))
(declare-const ?float125 Float128)
(assert (= ?float125 (fp.add RTZ ?float94 ?float114)))
(declare-const ?float126 Float16)
(assert (= ?float126 (fp.roundToIntegral RTP ?float92)))
(declare-const ?float127 Float64)
(assert (= ?float127 (f34 ((_ to_fp 11 53) RTP ?float67) ((_ to_fp 8 24) RTP ?float80) ((_ to_fp 15 113) RTN ?float124) ((_ to_fp 8 24) RTN ?float85) ((_ to_fp 5 11) RTP ?float98) ?float82 ((_ to_fp 8 24) RTP ?float104) ((_ to_fp 11 53) RNE ?float97) ((_ to_fp 8 24) RTN ?float79) ?float79)))
(declare-const ?float128 Float16)
(assert (= ?float128 (fp.min ?float80 ?float100)))
(declare-const ?float129 Float32)
(assert (= ?float129 (fp.add RTZ ?float115 ((_ to_fp 8 24) RTZ ?float114))))
(declare-const ?float130 Float128)
(assert (= ?float130 (fp.roundToIntegral RTZ ?float74)))
(declare-const ?float131 Float32)
(assert (= ?float131 (f11 ?float105)))
(declare-const ?float132 Float32)
(assert (= ?float132 (fp.roundToIntegral RTN ?float90)))
(declare-const ?float133 Float16)
(assert (= ?float133 (fp.max ?float128 ?float97)))
(declare-const ?float134 Float128)
(assert (= ?float134 (fp.max ?float83 ?float85)))
(declare-const ?float135 Float64)
(assert (= ?float135 (fp.max ?float62 ((_ to_fp 11 53) RTZ ?float82))))
(declare-const ?float136 Float128)
(assert (= ?float136 (fp.min ((_ to_fp 15 113) RNE ?float124) ?float63)))
(declare-const ?float137 Float64)
(assert (= ?float137 (f45 ((_ to_fp 11 53) RTN ?float133) ((_ to_fp 15 113) RTN ?float80) ((_ to_fp 5 11) RTP ?float135) ((_ to_fp 15 113) RTP ?float106) ((_ to_fp 5 11) RTP ?float68) ((_ to_fp 11 53) RNE ?float133) ((_ to_fp 8 24) RTZ ?float72) ((_ to_fp 5 11) RTP ?float82) ((_ to_fp 15 113) RTN ?float66) ((_ to_fp 11 53) RTP ?float85))))
(declare-const ?float138 Float32)
(assert (= ?float138 (fp.max ((_ to_fp 8 24) RNE ?float64) ?float68)))
(declare-const ?float139 Float64)
(assert (= ?float139 (f46 ((_ to_fp 15 113) RTP ?float109) ((_ to_fp 5 11) RTN ?float60) ((_ to_fp 8 24) RTN ?float116) ?float131 ((_ to_fp 5 11) RTP ?float85) ((_ to_fp 5 11) RTZ ?float87) ((_ to_fp 11 53) RTZ ?float72))))
(declare-const ?float140 Float16)
(assert (= ?float140 (fp.roundToIntegral RNE ?float124)))
(declare-const ?float141 Float64)
(assert (= ?float141 (fp.sqrt RTP ?float91)))
(declare-const ?float142 Float64)
(assert (= ?float142 (fp.div RTP ((_ to_fp 11 53) RNE ?float112) ?float62)))
(declare-const ?float143 Float32)
(assert (= ?float143 (fp.add RNE ?float131 ((_ to_fp 8 24) RNE ?float91))))
(declare-const ?float144 Float32)
(assert (= ?float144 (fp.min ((_ to_fp 8 24) RTZ ?float111) ?float138)))
(declare-const ?float145 Float128)
(assert (= ?float145 (fp.min ?float95 ?float93)))
(declare-const ?float146 Float32)
(assert (= ?float146 (fp.add RTZ ((_ to_fp 8 24) RTN ?float145) ?float78)))
(declare-const ?float147 Float128)
(assert (= ?float147 (fp.mul RNE ((_ to_fp 15 113) RTP ?float141) ?float82)))
(declare-const ?float148 Float32)
(assert (= ?float148 (fp.neg ?float144)))
(declare-const ?float149 Float64)
(assert (= ?float149 (fp.sub RTP ?float62 ?float135)))
; DERIVE BOOLS
(declare-const ?bool150 Bool)
(assert (= ?bool150 (fp.leq ((_ to_fp 5 11) RTN ?float61) ?float128)))
(declare-const ?bool151 Bool)
(assert (= ?bool151 (fp.gt ?float103 ?float75)))
(declare-const ?bool152 Bool)
(assert (= ?bool152 (p7 ((_ to_fp 5 11) RTN ?float115) ((_ to_fp 8 24) RTP ?float60) ((_ to_fp 5 11) RTZ ?float67) ((_ to_fp 8 24) RTN ?float141) ((_ to_fp 5 11) RNE ?float144) ((_ to_fp 5 11) RNE ?float63) ?float134 ((_ to_fp 8 24) RTN ?float136) ((_ to_fp 5 11) RTP ?float67) ?float139)))
(declare-const ?bool153 Bool)
(assert (= ?bool153 (fp.isInfinite ?float83)))
(declare-const ?bool154 Bool)
(assert (= ?bool154 (p7 ((_ to_fp 5 11) RTZ ?float87) ((_ to_fp 8 24) RTN ?float134) ?float118 ((_ to_fp 8 24) RTP ?float97) ((_ to_fp 5 11) RNE ?float91) ((_ to_fp 5 11) RTZ ?float108) ?float67 ?float78 ?float103 ((_ to_fp 11 53) RTZ ?float134))))
(declare-const ?bool155 Bool)
(assert (= ?bool155 (fp.geq ((_ to_fp 11 53) RTP ?float123) ?float119)))
(declare-const ?bool156 Bool)
(assert (= ?bool156 (fp.isZero ?float103)))
(declare-const ?bool157 Bool)
(assert (= ?bool157 (fp.isNormal ?float88)))
(declare-const ?bool158 Bool)
(assert (= ?bool158 (fp.isPositive ?float143)))
(declare-const ?bool159 Bool)
(assert (= ?bool159 (fp.lt ?float149 ((_ to_fp 11 53) RNE ?float88))))
(declare-const ?bool160 Bool)
(assert (= ?bool160 (fp.isNegative ?float108)))
(declare-const ?bool161 Bool)
(assert (= ?bool161 (fp.eq ?float141 ((_ to_fp 11 53) RTP ?float133))))
(declare-const ?bool162 Bool)
(assert (= ?bool162 (fp.isNaN ?float89)))
(declare-const ?bool163 Bool)
(assert (= ?bool163 (fp.geq ((_ to_fp 15 113) RTZ ?float142) ?float130)))
(declare-const ?bool164 Bool)
(assert (= ?bool164 (fp.isNaN ?float69)))
(declare-const ?bool165 Bool)
(assert (= ?bool165 (fp.geq ?float140 ((_ to_fp 5 11) RTZ ?float67))))
(declare-const ?bool166 Bool)
(assert (= ?bool166 (fp.isNormal ?float141)))
(declare-const ?bool167 Bool)
(assert (= ?bool167 (fp.gt ((_ to_fp 8 24) RTP ?float114) ?float71)))
(declare-const ?bool168 Bool)
(assert (= ?bool168 (fp.isNormal ?float125)))
(declare-const ?bool169 Bool)
(assert (= ?bool169 (fp.isNegative ?float123)))
; FINAL ASSERT
(assert (or ?bool165))
(check-sat)
